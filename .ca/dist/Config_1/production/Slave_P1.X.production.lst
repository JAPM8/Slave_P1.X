

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Fri Sep 23 22:26:12 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     7                           	psect	strings,global,class=STRING,delta=2,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    14                           	psect	inittext,global,class=CODE,delta=2
    15                           	psect	clrtext,global,class=CODE,delta=2
    16                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	maintext,global,class=CODE,split=1,delta=2
    21                           	psect	text1,local,class=CODE,merge=1,delta=2
    22                           	psect	text2,local,class=CODE,merge=1,delta=2
    23                           	psect	text3,local,class=CODE,merge=1,delta=2
    24                           	psect	text4,local,class=CODE,merge=1,delta=2
    25                           	psect	text5,local,class=CODE,merge=1,delta=2
    26                           	psect	text6,local,class=CODE,merge=1,delta=2
    27                           	psect	text7,local,class=CODE,merge=1,delta=2
    28                           	psect	text8,local,class=CODE,merge=1,delta=2
    29                           	psect	text9,local,class=CODE,merge=1,delta=2
    30                           	psect	text10,local,class=CODE,merge=1,delta=2
    31                           	psect	text11,local,class=CODE,merge=1,delta=2
    32                           	psect	text12,local,class=CODE,merge=1,delta=2
    33                           	psect	text13,local,class=CODE,merge=1,delta=2
    34                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    35                           	psect	text15,local,class=CODE,merge=1,delta=2
    36                           	psect	text16,local,class=CODE,merge=1,delta=2
    37                           	psect	text17,local,class=CODE,merge=1,delta=2
    38                           	psect	text18,local,class=CODE,merge=1,delta=2
    39                           	psect	text19,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    42                           	psect	text22,local,class=CODE,merge=1,delta=2
    43                           	psect	text23,local,class=CODE,merge=1,delta=2
    44                           	psect	text24,local,class=CODE,merge=1,delta=2
    45                           	psect	text25,local,class=CODE,merge=1,delta=2
    46                           	psect	text26,local,class=CODE,merge=1,delta=2
    47                           	psect	text27,local,class=CODE,merge=1,delta=2
    48                           	psect	text28,local,class=CODE,merge=1,delta=2
    49                           	psect	text29,local,class=CODE,merge=1,delta=2
    50                           	psect	text30,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	text31,local,class=CODE,merge=1,delta=2
    53                           	psect	text32,local,class=CODE,merge=1,delta=2
    54                           	psect	text33,local,class=CODE,merge=1,delta=2
    55                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    56                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    57                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    63                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text43,local,class=CODE,merge=1,delta=2
    65                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    70                           	dabs	1,0x7E,2
    71  0000                     
    72                           ; Version 2.40
    73                           ; Generated 17/11/2021 GMT
    74                           ; 
    75                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    76                           ; All rights reserved.
    77                           ; 
    78                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    79                           ; 
    80                           ; Redistribution and use in source and binary forms, with or without modification, are
    81                           ; permitted provided that the following conditions are met:
    82                           ; 
    83                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    84                           ;        conditions and the following disclaimer.
    85                           ; 
    86                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    87                           ;        of conditions and the following disclaimer in the documentation and/or other
    88                           ;        materials provided with the distribution. Publication is not required when
    89                           ;        this file is used in an embedded application.
    90                           ; 
    91                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    92                           ;        software without specific prior written permission.
    93                           ; 
    94                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    95                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    96                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    97                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    98                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    99                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   100                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   101                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   102                           ; 
   103                           ; 
   104                           ; Code-generator required, PIC16F887 Definitions
   105                           ; 
   106                           ; SFR Addresses
   107  0000                     	;# 
   108  0001                     	;# 
   109  0002                     	;# 
   110  0003                     	;# 
   111  0004                     	;# 
   112  0005                     	;# 
   113  0006                     	;# 
   114  0007                     	;# 
   115  0008                     	;# 
   116  0009                     	;# 
   117  000A                     	;# 
   118  000B                     	;# 
   119  000C                     	;# 
   120  000D                     	;# 
   121  000E                     	;# 
   122  000E                     	;# 
   123  000F                     	;# 
   124  0010                     	;# 
   125  0011                     	;# 
   126  0012                     	;# 
   127  0013                     	;# 
   128  0014                     	;# 
   129  0015                     	;# 
   130  0015                     	;# 
   131  0016                     	;# 
   132  0017                     	;# 
   133  0018                     	;# 
   134  0019                     	;# 
   135  001A                     	;# 
   136  001B                     	;# 
   137  001B                     	;# 
   138  001C                     	;# 
   139  001D                     	;# 
   140  001E                     	;# 
   141  001F                     	;# 
   142  0081                     	;# 
   143  0085                     	;# 
   144  0086                     	;# 
   145  0087                     	;# 
   146  0088                     	;# 
   147  0089                     	;# 
   148  008C                     	;# 
   149  008D                     	;# 
   150  008E                     	;# 
   151  008F                     	;# 
   152  0090                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0093                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0095                     	;# 
   160  0096                     	;# 
   161  0097                     	;# 
   162  0098                     	;# 
   163  0099                     	;# 
   164  009A                     	;# 
   165  009B                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  0105                     	;# 
   171  0107                     	;# 
   172  0108                     	;# 
   173  0109                     	;# 
   174  010C                     	;# 
   175  010C                     	;# 
   176  010D                     	;# 
   177  010E                     	;# 
   178  010F                     	;# 
   179  0185                     	;# 
   180  0187                     	;# 
   181  0188                     	;# 
   182  0189                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0008                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  001D                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  0081                     	;# 
   221  0085                     	;# 
   222  0086                     	;# 
   223  0087                     	;# 
   224  0088                     	;# 
   225  0089                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  008F                     	;# 
   230  0090                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0093                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0095                     	;# 
   238  0096                     	;# 
   239  0097                     	;# 
   240  0098                     	;# 
   241  0099                     	;# 
   242  009A                     	;# 
   243  009B                     	;# 
   244  009C                     	;# 
   245  009D                     	;# 
   246  009E                     	;# 
   247  009F                     	;# 
   248  0105                     	;# 
   249  0107                     	;# 
   250  0108                     	;# 
   251  0109                     	;# 
   252  010C                     	;# 
   253  010C                     	;# 
   254  010D                     	;# 
   255  010E                     	;# 
   256  010F                     	;# 
   257  0185                     	;# 
   258  0187                     	;# 
   259  0188                     	;# 
   260  0189                     	;# 
   261  018C                     	;# 
   262  018D                     	;# 
   263  0000                     	;# 
   264  0001                     	;# 
   265  0002                     	;# 
   266  0003                     	;# 
   267  0004                     	;# 
   268  0005                     	;# 
   269  0006                     	;# 
   270  0007                     	;# 
   271  0008                     	;# 
   272  0009                     	;# 
   273  000A                     	;# 
   274  000B                     	;# 
   275  000C                     	;# 
   276  000D                     	;# 
   277  000E                     	;# 
   278  000E                     	;# 
   279  000F                     	;# 
   280  0010                     	;# 
   281  0011                     	;# 
   282  0012                     	;# 
   283  0013                     	;# 
   284  0014                     	;# 
   285  0015                     	;# 
   286  0015                     	;# 
   287  0016                     	;# 
   288  0017                     	;# 
   289  0018                     	;# 
   290  0019                     	;# 
   291  001A                     	;# 
   292  001B                     	;# 
   293  001B                     	;# 
   294  001C                     	;# 
   295  001D                     	;# 
   296  001E                     	;# 
   297  001F                     	;# 
   298  0081                     	;# 
   299  0085                     	;# 
   300  0086                     	;# 
   301  0087                     	;# 
   302  0088                     	;# 
   303  0089                     	;# 
   304  008C                     	;# 
   305  008D                     	;# 
   306  008E                     	;# 
   307  008F                     	;# 
   308  0090                     	;# 
   309  0091                     	;# 
   310  0092                     	;# 
   311  0093                     	;# 
   312  0093                     	;# 
   313  0093                     	;# 
   314  0094                     	;# 
   315  0095                     	;# 
   316  0096                     	;# 
   317  0097                     	;# 
   318  0098                     	;# 
   319  0099                     	;# 
   320  009A                     	;# 
   321  009B                     	;# 
   322  009C                     	;# 
   323  009D                     	;# 
   324  009E                     	;# 
   325  009F                     	;# 
   326  0105                     	;# 
   327  0107                     	;# 
   328  0108                     	;# 
   329  0109                     	;# 
   330  010C                     	;# 
   331  010C                     	;# 
   332  010D                     	;# 
   333  010E                     	;# 
   334  010F                     	;# 
   335  0185                     	;# 
   336  0187                     	;# 
   337  0188                     	;# 
   338  0189                     	;# 
   339  018C                     	;# 
   340  018D                     	;# 
   341  0000                     	;# 
   342  0001                     	;# 
   343  0002                     	;# 
   344  0003                     	;# 
   345  0004                     	;# 
   346  0005                     	;# 
   347  0006                     	;# 
   348  0007                     	;# 
   349  0008                     	;# 
   350  0009                     	;# 
   351  000A                     	;# 
   352  000B                     	;# 
   353  000C                     	;# 
   354  000D                     	;# 
   355  000E                     	;# 
   356  000E                     	;# 
   357  000F                     	;# 
   358  0010                     	;# 
   359  0011                     	;# 
   360  0012                     	;# 
   361  0013                     	;# 
   362  0014                     	;# 
   363  0015                     	;# 
   364  0015                     	;# 
   365  0016                     	;# 
   366  0017                     	;# 
   367  0018                     	;# 
   368  0019                     	;# 
   369  001A                     	;# 
   370  001B                     	;# 
   371  001B                     	;# 
   372  001C                     	;# 
   373  001D                     	;# 
   374  001E                     	;# 
   375  001F                     	;# 
   376  0081                     	;# 
   377  0085                     	;# 
   378  0086                     	;# 
   379  0087                     	;# 
   380  0088                     	;# 
   381  0089                     	;# 
   382  008C                     	;# 
   383  008D                     	;# 
   384  008E                     	;# 
   385  008F                     	;# 
   386  0090                     	;# 
   387  0091                     	;# 
   388  0092                     	;# 
   389  0093                     	;# 
   390  0093                     	;# 
   391  0093                     	;# 
   392  0094                     	;# 
   393  0095                     	;# 
   394  0096                     	;# 
   395  0097                     	;# 
   396  0098                     	;# 
   397  0099                     	;# 
   398  009A                     	;# 
   399  009B                     	;# 
   400  009C                     	;# 
   401  009D                     	;# 
   402  009E                     	;# 
   403  009F                     	;# 
   404  0105                     	;# 
   405  0107                     	;# 
   406  0108                     	;# 
   407  0109                     	;# 
   408  010C                     	;# 
   409  010C                     	;# 
   410  010D                     	;# 
   411  010E                     	;# 
   412  010F                     	;# 
   413  0185                     	;# 
   414  0187                     	;# 
   415  0188                     	;# 
   416  0189                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0008                     	;# 
   428  0009                     	;# 
   429  000A                     	;# 
   430  000B                     	;# 
   431  000C                     	;# 
   432  000D                     	;# 
   433  000E                     	;# 
   434  000E                     	;# 
   435  000F                     	;# 
   436  0010                     	;# 
   437  0011                     	;# 
   438  0012                     	;# 
   439  0013                     	;# 
   440  0014                     	;# 
   441  0015                     	;# 
   442  0015                     	;# 
   443  0016                     	;# 
   444  0017                     	;# 
   445  0018                     	;# 
   446  0019                     	;# 
   447  001A                     	;# 
   448  001B                     	;# 
   449  001B                     	;# 
   450  001C                     	;# 
   451  001D                     	;# 
   452  001E                     	;# 
   453  001F                     	;# 
   454  0081                     	;# 
   455  0085                     	;# 
   456  0086                     	;# 
   457  0087                     	;# 
   458  0088                     	;# 
   459  0089                     	;# 
   460  008C                     	;# 
   461  008D                     	;# 
   462  008E                     	;# 
   463  008F                     	;# 
   464  0090                     	;# 
   465  0091                     	;# 
   466  0092                     	;# 
   467  0093                     	;# 
   468  0093                     	;# 
   469  0093                     	;# 
   470  0094                     	;# 
   471  0095                     	;# 
   472  0096                     	;# 
   473  0097                     	;# 
   474  0098                     	;# 
   475  0099                     	;# 
   476  009A                     	;# 
   477  009B                     	;# 
   478  009C                     	;# 
   479  009D                     	;# 
   480  009E                     	;# 
   481  009F                     	;# 
   482  0105                     	;# 
   483  0107                     	;# 
   484  0108                     	;# 
   485  0109                     	;# 
   486  010C                     	;# 
   487  010C                     	;# 
   488  010D                     	;# 
   489  010E                     	;# 
   490  010F                     	;# 
   491  0185                     	;# 
   492  0187                     	;# 
   493  0188                     	;# 
   494  0189                     	;# 
   495  018C                     	;# 
   496  018D                     	;# 
   497  0000                     	;# 
   498  0001                     	;# 
   499  0002                     	;# 
   500  0003                     	;# 
   501  0004                     	;# 
   502  0005                     	;# 
   503  0006                     	;# 
   504  0007                     	;# 
   505  0008                     	;# 
   506  0009                     	;# 
   507  000A                     	;# 
   508  000B                     	;# 
   509  000C                     	;# 
   510  000D                     	;# 
   511  000E                     	;# 
   512  000E                     	;# 
   513  000F                     	;# 
   514  0010                     	;# 
   515  0011                     	;# 
   516  0012                     	;# 
   517  0013                     	;# 
   518  0014                     	;# 
   519  0015                     	;# 
   520  0015                     	;# 
   521  0016                     	;# 
   522  0017                     	;# 
   523  0018                     	;# 
   524  0019                     	;# 
   525  001A                     	;# 
   526  001B                     	;# 
   527  001B                     	;# 
   528  001C                     	;# 
   529  001D                     	;# 
   530  001E                     	;# 
   531  001F                     	;# 
   532  0081                     	;# 
   533  0085                     	;# 
   534  0086                     	;# 
   535  0087                     	;# 
   536  0088                     	;# 
   537  0089                     	;# 
   538  008C                     	;# 
   539  008D                     	;# 
   540  008E                     	;# 
   541  008F                     	;# 
   542  0090                     	;# 
   543  0091                     	;# 
   544  0092                     	;# 
   545  0093                     	;# 
   546  0093                     	;# 
   547  0093                     	;# 
   548  0094                     	;# 
   549  0095                     	;# 
   550  0096                     	;# 
   551  0097                     	;# 
   552  0098                     	;# 
   553  0099                     	;# 
   554  009A                     	;# 
   555  009B                     	;# 
   556  009C                     	;# 
   557  009D                     	;# 
   558  009E                     	;# 
   559  009F                     	;# 
   560  0105                     	;# 
   561  0107                     	;# 
   562  0108                     	;# 
   563  0109                     	;# 
   564  010C                     	;# 
   565  010C                     	;# 
   566  010D                     	;# 
   567  010E                     	;# 
   568  010F                     	;# 
   569  0185                     	;# 
   570  0187                     	;# 
   571  0188                     	;# 
   572  0189                     	;# 
   573  018C                     	;# 
   574  018D                     	;# 
   575  0000                     	;# 
   576  0001                     	;# 
   577  0002                     	;# 
   578  0003                     	;# 
   579  0004                     	;# 
   580  0005                     	;# 
   581  0006                     	;# 
   582  0007                     	;# 
   583  0008                     	;# 
   584  0009                     	;# 
   585  000A                     	;# 
   586  000B                     	;# 
   587  000C                     	;# 
   588  000D                     	;# 
   589  000E                     	;# 
   590  000E                     	;# 
   591  000F                     	;# 
   592  0010                     	;# 
   593  0011                     	;# 
   594  0012                     	;# 
   595  0013                     	;# 
   596  0014                     	;# 
   597  0015                     	;# 
   598  0015                     	;# 
   599  0016                     	;# 
   600  0017                     	;# 
   601  0018                     	;# 
   602  0019                     	;# 
   603  001A                     	;# 
   604  001B                     	;# 
   605  001B                     	;# 
   606  001C                     	;# 
   607  001D                     	;# 
   608  001E                     	;# 
   609  001F                     	;# 
   610  0081                     	;# 
   611  0085                     	;# 
   612  0086                     	;# 
   613  0087                     	;# 
   614  0088                     	;# 
   615  0089                     	;# 
   616  008C                     	;# 
   617  008D                     	;# 
   618  008E                     	;# 
   619  008F                     	;# 
   620  0090                     	;# 
   621  0091                     	;# 
   622  0092                     	;# 
   623  0093                     	;# 
   624  0093                     	;# 
   625  0093                     	;# 
   626  0094                     	;# 
   627  0095                     	;# 
   628  0096                     	;# 
   629  0097                     	;# 
   630  0098                     	;# 
   631  0099                     	;# 
   632  009A                     	;# 
   633  009B                     	;# 
   634  009C                     	;# 
   635  009D                     	;# 
   636  009E                     	;# 
   637  009F                     	;# 
   638  0105                     	;# 
   639  0107                     	;# 
   640  0108                     	;# 
   641  0109                     	;# 
   642  010C                     	;# 
   643  010C                     	;# 
   644  010D                     	;# 
   645  010E                     	;# 
   646  010F                     	;# 
   647  0185                     	;# 
   648  0187                     	;# 
   649  0188                     	;# 
   650  0189                     	;# 
   651  018C                     	;# 
   652  018D                     	;# 
   653  0000                     	;# 
   654  0001                     	;# 
   655  0002                     	;# 
   656  0003                     	;# 
   657  0004                     	;# 
   658  0005                     	;# 
   659  0006                     	;# 
   660  0007                     	;# 
   661  0008                     	;# 
   662  0009                     	;# 
   663  000A                     	;# 
   664  000B                     	;# 
   665  000C                     	;# 
   666  000D                     	;# 
   667  000E                     	;# 
   668  000E                     	;# 
   669  000F                     	;# 
   670  0010                     	;# 
   671  0011                     	;# 
   672  0012                     	;# 
   673  0013                     	;# 
   674  0014                     	;# 
   675  0015                     	;# 
   676  0015                     	;# 
   677  0016                     	;# 
   678  0017                     	;# 
   679  0018                     	;# 
   680  0019                     	;# 
   681  001A                     	;# 
   682  001B                     	;# 
   683  001B                     	;# 
   684  001C                     	;# 
   685  001D                     	;# 
   686  001E                     	;# 
   687  001F                     	;# 
   688  0081                     	;# 
   689  0085                     	;# 
   690  0086                     	;# 
   691  0087                     	;# 
   692  0088                     	;# 
   693  0089                     	;# 
   694  008C                     	;# 
   695  008D                     	;# 
   696  008E                     	;# 
   697  008F                     	;# 
   698  0090                     	;# 
   699  0091                     	;# 
   700  0092                     	;# 
   701  0093                     	;# 
   702  0093                     	;# 
   703  0093                     	;# 
   704  0094                     	;# 
   705  0095                     	;# 
   706  0096                     	;# 
   707  0097                     	;# 
   708  0098                     	;# 
   709  0099                     	;# 
   710  009A                     	;# 
   711  009B                     	;# 
   712  009C                     	;# 
   713  009D                     	;# 
   714  009E                     	;# 
   715  009F                     	;# 
   716  0105                     	;# 
   717  0107                     	;# 
   718  0108                     	;# 
   719  0109                     	;# 
   720  010C                     	;# 
   721  010C                     	;# 
   722  010D                     	;# 
   723  010E                     	;# 
   724  010F                     	;# 
   725  0185                     	;# 
   726  0187                     	;# 
   727  0188                     	;# 
   728  0189                     	;# 
   729  018C                     	;# 
   730  018D                     	;# 
   731                           
   732                           	psect	idataBANK1
   733  1D85                     __pidataBANK1:
   734                           
   735                           ;initializer for _A
   736  1D85  34EB               	retlw	235
   737  1D86  34FF               	retlw	255
   738  1D87  3493               	retlw	147
   739  1D88  343A               	retlw	58
   740                           
   741                           ;initializer for _R1
   742  1D89  3400               	retlw	0
   743  1D8A  3440               	retlw	64
   744  1D8B  341C               	retlw	28
   745  1D8C  3446               	retlw	70
   746                           
   747                           ;initializer for _B
   748  1D8D  3473               	retlw	115
   749  1D8E  347F               	retlw	127
   750  1D8F  3475               	retlw	117
   751  1D90  3439               	retlw	57
   752                           
   753                           	psect	idataBANK2
   754  1D32                     __pidataBANK2:	
   755                           ;initializer for _C
   756                           
   757  1D32  3459               	retlw	89
   758  1D33  3447               	retlw	71
   759  1D34  34BC               	retlw	188
   760  1D35  3433               	retlw	51
   761                           
   762                           	psect	idataBANK3
   763  1D68                     __pidataBANK3:
   764                           
   765                           ;initializer for _OLD_TEMP
   766  1D68  3496               	retlw	150
   767  1D69  3400               	retlw	0
   768                           
   769                           ;initializer for _last_mov
   770  1D6A  3405               	retlw	5
   771  1D6B  3400               	retlw	0
   772                           
   773                           ;initializer for _last_LUX
   774  1D6C  3408               	retlw	8
   775                           
   776                           ;initializer for _dir
   777  1D6D  3405               	retlw	5
   778                           
   779                           ;initializer for _pulso
   780  1D6E  3401               	retlw	1
   781                           
   782                           ;initializer for _last_hrs
   783  1D6F  341E               	retlw	30
   784                           
   785                           ;initializer for _last_min
   786  1D70  343D               	retlw	61
   787                           
   788                           	psect	strings
   789  1800                     __pstrings:
   790  1800                     stringtab:
   791  1800                     __stringtab:
   792  1800                     stringcode:	
   793                           ;	String table - string pointers are 1 byte each
   794                           
   795  1800                     stringdir:
   796  1800  3018               	movlw	high stringdir
   797  1801  008A               	movwf	10
   798  1802  0804               	movf	4,w
   799  1803  0A84               	incf	4,f
   800  1804  0782               	addwf	2,f
   801  1805                     __stringbase:
   802  1805  3400               	retlw	0
   803  1806                     __end_of__stringtab:
   804  1806                     log@coeff:
   805  1806  3400               	retlw	0
   806  1807  3400               	retlw	0
   807  1808  3400               	retlw	0
   808  1809  3400               	retlw	0
   809  180A  34C4               	retlw	196
   810  180B  34FF               	retlw	255
   811  180C  347F               	retlw	127
   812  180D  343F               	retlw	63
   813  180E  3480               	retlw	128
   814  180F  34EF               	retlw	239
   815  1810  34FF               	retlw	255
   816  1811  34BE               	retlw	190
   817  1812  3490               	retlw	144
   818  1813  34E1               	retlw	225
   819  1814  34A9               	retlw	169
   820  1815  343E               	retlw	62
   821  1816  34EC               	retlw	236
   822  1817  3482               	retlw	130
   823  1818  3476               	retlw	118
   824  1819  34BE               	retlw	190
   825  181A  3482               	retlw	130
   826  181B  34AD               	retlw	173
   827  181C  342B               	retlw	43
   828  181D  343E               	retlw	62
   829  181E  340E               	retlw	14
   830  181F  343C               	retlw	60
   831  1820  34C3               	retlw	195
   832  1821  34BD               	retlw	189
   833  1822  3487               	retlw	135
   834  1823  34D1               	retlw	209
   835  1824  3413               	retlw	19
   836  1825  343D               	retlw	61
   837  1826  3441               	retlw	65
   838  1827  3478               	retlw	120
   839  1828  34D3               	retlw	211
   840  1829  34BB               	retlw	187
   841  182A                     __end_oflog@coeff:
   842  0001                     _TMR0	set	1
   843  0013                     _SSPBUF	set	19
   844  0014                     _SSPCON	set	20
   845  0015                     _CCPR1L	set	21
   846  0012                     _T2CONbits	set	18
   847  001D                     _CCP2CONbits	set	29
   848  001D                     _CCP2CON	set	29
   849  0017                     _CCP1CONbits	set	23
   850  0017                     _CCP1CON	set	23
   851  001E                     _ADRESH	set	30
   852  0019                     _TXREG	set	25
   853  0018                     _RCSTAbits	set	24
   854  0005                     _PORTAbits	set	5
   855  001F                     _ADCON0bits	set	31
   856  000C                     _PIR1bits	set	12
   857  0006                     _PORTBbits	set	6
   858  0008                     _PORTDbits	set	8
   859  000B                     _INTCONbits	set	11
   860  0091                     _SSPCON2bits	set	145
   861  0094                     _SSPSTAT	set	148
   862  0093                     _SSPADD	set	147
   863  0091                     _SSPCON2	set	145
   864  0092                     _PR2	set	146
   865  0087                     _TRISCbits	set	135
   866  009E                     _ADRESL	set	158
   867  008C                     _PIE1bits	set	140
   868  009F                     _ADCON1bits	set	159
   869  0099                     _SPBRG	set	153
   870  009A                     _SPBRGH	set	154
   871  0098                     _TXSTAbits	set	152
   872  008F                     _OSCCONbits	set	143
   873  0096                     _IOCBbits	set	150
   874  0088                     _TRISDbits	set	136
   875  0095                     _WPUBbits	set	149
   876  0081                     _OPTION_REGbits	set	129
   877  0086                     _TRISBbits	set	134
   878  0085                     _TRISAbits	set	133
   879  0187                     _BAUDCTLbits	set	391
   880  0189                     _ANSELH	set	393
   881  0188                     _ANSEL	set	392
   882                           
   883                           	psect	cinit
   884  0015                     start_initialization:	
   885                           ; #config settings
   886                           
   887  0015                     __initialization:
   888                           
   889                           ; Initialize objects allocated to BANK3
   890  0015  1783               	bsf	3,7	;select IRP bank2
   891  0016  30EF               	movlw	low (__pdataBANK3+9)
   892  0017  00FD               	movwf	btemp+-1
   893  0018  301D               	movlw	high __pidataBANK3
   894  0019  00FE               	movwf	btemp
   895  001A  3068               	movlw	low __pidataBANK3
   896  001B  00FF               	movwf	btemp+1
   897  001C  30E6               	movlw	low __pdataBANK3
   898  001D  0084               	movwf	4
   899  001E  160A  158A  25A2  120A  118A  	fcall	init_ram0
   900                           
   901                           ; Initialize objects allocated to BANK2
   902  0023  3014               	movlw	low (__pdataBANK2+4)
   903  0024  00FD               	movwf	btemp+-1
   904  0025  301D               	movlw	high __pidataBANK2
   905  0026  00FE               	movwf	btemp
   906  0027  3032               	movlw	low __pidataBANK2
   907  0028  00FF               	movwf	btemp+1
   908  0029  3010               	movlw	low __pdataBANK2
   909  002A  0084               	movwf	4
   910  002B  160A  158A  25A2  120A  118A  	fcall	init_ram0
   911                           
   912                           ; Initialize objects allocated to BANK1
   913  0030  1383               	bcf	3,7	;select IRP bank0
   914  0031  30F0               	movlw	low (__pdataBANK1+12)
   915  0032  00FD               	movwf	btemp+-1
   916  0033  301D               	movlw	high __pidataBANK1
   917  0034  00FE               	movwf	btemp
   918  0035  3085               	movlw	low __pidataBANK1
   919  0036  00FF               	movwf	btemp+1
   920  0037  30E4               	movlw	low __pdataBANK1
   921  0038  0084               	movwf	4
   922  0039  160A  158A  25A2  120A  118A  	fcall	init_ram0
   923                           
   924                           ; Clear objects allocated to BANK3
   925  003E  1783               	bsf	3,7	;select IRP bank2
   926  003F  30D4               	movlw	low __pbssBANK3
   927  0040  0084               	movwf	4
   928  0041  30E6               	movlw	low (__pbssBANK3+18)
   929  0042  160A  158A  2557  120A  118A  	fcall	clear_ram0
   930                           
   931                           ; Clear objects allocated to BANK1
   932  0047  1383               	bcf	3,7	;select IRP bank0
   933  0048  30D8               	movlw	low __pbssBANK1
   934  0049  0084               	movwf	4
   935  004A  30E4               	movlw	low (__pbssBANK1+12)
   936  004B  160A  158A  2557   	fcall	clear_ram0
   937  004E                     end_of_initialization:	
   938                           ;End of C runtime variable initialization code
   939                           
   940  004E                     __end_of__initialization:
   941  004E  0183               	clrf	3
   942  004F  160A  118A  28F1   	ljmp	_main	;jump to C main() function
   943                           
   944                           	psect	bssBANK1
   945  00D8                     __pbssBANK1:
   946  00D8                     _R2:
   947  00D8                     	ds	4
   948  00DC                     _logR2:
   949  00DC                     	ds	4
   950  00E0                     _errno:
   951  00E0                     	ds	2
   952  00E2                     _TEMP_POT:
   953  00E2                     	ds	2
   954                           
   955                           	psect	dataBANK1
   956  00E4                     __pdataBANK1:
   957  00E4                     _A:
   958  00E4                     	ds	4
   959  00E8                     _R1:
   960  00E8                     	ds	4
   961  00EC                     _B:
   962  00EC                     	ds	4
   963                           
   964                           	psect	bssBANK3
   965  01D4                     __pbssBANK3:
   966  01D4                     _TC:
   967  01D4                     	ds	4
   968  01D8                     _CH1:
   969  01D8                     	ds	2
   970  01DA                     _CH0:
   971  01DA                     	ds	2
   972  01DC                     _switch_servo:
   973  01DC                     	ds	2
   974  01DE                     _LUX:
   975  01DE                     	ds	1
   976  01DF                     _highCH1:
   977  01DF                     	ds	1
   978  01E0                     _lowCH1:
   979  01E0                     	ds	1
   980  01E1                     _highCH0:
   981  01E1                     	ds	1
   982  01E2                     _lowCH0:
   983  01E2                     	ds	1
   984  01E3                     _hrs:
   985  01E3                     	ds	1
   986  01E4                     _min:
   987  01E4                     	ds	1
   988  01E5                     _p:
   989  01E5                     	ds	1
   990                           
   991                           	psect	dataBANK3
   992  01E6                     __pdataBANK3:
   993  01E6                     _OLD_TEMP:
   994  01E6                     	ds	2
   995  01E8                     _last_mov:
   996  01E8                     	ds	2
   997  01EA                     _last_LUX:
   998  01EA                     	ds	1
   999  01EB                     _dir:
  1000  01EB                     	ds	1
  1001  01EC                     _pulso:
  1002  01EC                     	ds	1
  1003  01ED                     _last_hrs:
  1004  01ED                     	ds	1
  1005  01EE                     _last_min:
  1006  01EE                     	ds	1
  1007                           
  1008                           	psect	dataBANK2
  1009  0110                     __pdataBANK2:
  1010  0110                     _C:
  1011  0110                     	ds	4
  1012                           
  1013                           	psect	inittext
  1014  1D9E                     init_fetch0:	
  1015                           ;	Called with low address in FSR and high address in W
  1016                           
  1017  1D9E  087E               	movf	126,w
  1018  1D9F  008A               	movwf	10
  1019  1DA0  087F               	movf	127,w
  1020  1DA1  0082               	movwf	2
  1021  1DA2                     init_ram0:	
  1022                           ;Called with:
  1023                           ;	high address of idata address in btemp 
  1024                           ;	low address of idata address in btemp+1 
  1025                           ;	low address of data in FSR
  1026                           ;	high address + 1 of data in btemp-1
  1027                           
  1028  1DA2  259E  160A  158A   	fcall	init_fetch0
  1029  1DA5  0080               	movwf	0
  1030  1DA6  0A84               	incf	4,f
  1031  1DA7  0804               	movf	4,w
  1032  1DA8  067D               	xorwf	125,w
  1033  1DA9  1903               	btfsc	3,2
  1034  1DAA  3400               	retlw	0
  1035  1DAB  0AFF               	incf	127,f
  1036  1DAC  1903               	btfsc	3,2
  1037  1DAD  0AFE               	incf	126,f
  1038  1DAE  2DA2               	goto	init_ram0
  1039                           
  1040                           	psect	clrtext
  1041  1D57                     clear_ram0:	
  1042                           ;	Called with FSR containing the base address, and
  1043                           ;	W with the last address+1
  1044                           
  1045  1D57  0064               	clrwdt	;clear the watchdog before getting into this loop
  1046  1D58                     clrloop0:
  1047  1D58  0180               	clrf	0	;clear RAM location pointed to by FSR
  1048  1D59  0A84               	incf	4,f	;increment pointer
  1049  1D5A  0604               	xorwf	4,w	;XOR with final address
  1050  1D5B  1903               	btfsc	3,2	;have we reached the end yet?
  1051  1D5C  3400               	retlw	0	;all done for this memory range, return
  1052  1D5D  0604               	xorwf	4,w	;XOR again to restore value
  1053  1D5E  2D58               	goto	clrloop0	;do the next byte
  1054                           
  1055                           	psect	cstackBANK3
  1056  0190                     __pcstackBANK3:
  1057  0190                     ??_tmr0_reload:
  1058  0190                     ?_pulse_step:	
  1059                           ; 1 bytes @ 0x0
  1060                           
  1061  0190                     ??_adc_ch_switch:	
  1062                           ; 1 bytes @ 0x0
  1063                           
  1064  0190                     ??_USART_send:	
  1065                           ; 1 bytes @ 0x0
  1066                           
  1067  0190                     ?_pwm_duty_cycle:	
  1068                           ; 1 bytes @ 0x0
  1069                           
  1070  0190                     ??_I2C_Master_Start:	
  1071                           ; 1 bytes @ 0x0
  1072                           
  1073  0190                     ?_I2C_Master_Write:	
  1074                           ; 1 bytes @ 0x0
  1075                           
  1076  0190                     ??_I2C_Master_RepeatedStart:	
  1077                           ; 1 bytes @ 0x0
  1078                           
  1079  0190                     ??_I2C_Master_Stop:	
  1080                           ; 1 bytes @ 0x0
  1081                           
  1082  0190                     ??_int_osc_MHz:	
  1083                           ; 1 bytes @ 0x0
  1084                           
  1085  0190                     ??_pwm_init:	
  1086                           ; 1 bytes @ 0x0
  1087                           
  1088  0190                     ?_adc_init:	
  1089                           ; 1 bytes @ 0x0
  1090                           
  1091  0190                     ??_tmr0_init:	
  1092                           ; 1 bytes @ 0x0
  1093                           
  1094  0190                     ??_I2C_Master_Wait:	
  1095                           ; 1 bytes @ 0x0
  1096                           
  1097  0190                     ?_I2C_Master_Read:	
  1098                           ; 1 bytes @ 0x0
  1099                           
  1100  0190                     ?___lmul:	
  1101                           ; 2 bytes @ 0x0
  1102                           
  1103  0190                     ?___lldiv:	
  1104                           ; 4 bytes @ 0x0
  1105                           
  1106  0190                     ?___fltol:	
  1107                           ; 4 bytes @ 0x0
  1108                           
  1109  0190                     USART_send@data:	
  1110                           ; 4 bytes @ 0x0
  1111                           
  1112  0190                     adc_init@vref_plus:	
  1113                           ; 1 bytes @ 0x0
  1114                           
  1115  0190                     pulse_step@bt:	
  1116                           ; 1 bytes @ 0x0
  1117                           
  1118  0190                     pwm_duty_cycle@duty_cycle:	
  1119                           ; 2 bytes @ 0x0
  1120                           
  1121  0190                     I2C_Master_Write@d:	
  1122                           ; 2 bytes @ 0x0
  1123                           
  1124  0190                     I2C_Master_Read@a:	
  1125                           ; 2 bytes @ 0x0
  1126                           
  1127  0190                     ___lmul@multiplier:	
  1128                           ; 2 bytes @ 0x0
  1129                           
  1130  0190                     ___lldiv@divisor:	
  1131                           ; 4 bytes @ 0x0
  1132                           
  1133  0190                     ___fltol@f1:	
  1134                           ; 4 bytes @ 0x0
  1135                           
  1136                           
  1137                           ; 4 bytes @ 0x0
  1138  0190                     	ds	1
  1139  0191                     adc_init@vref_minus:
  1140                           
  1141                           ; 1 bytes @ 0x1
  1142  0191                     	ds	1
  1143  0192                     ??_LUX_config:
  1144  0192                     ??_pwm_duty_cycle:	
  1145                           ; 1 bytes @ 0x2
  1146                           
  1147  0192                     ??_I2C_Master_Write:	
  1148                           ; 1 bytes @ 0x2
  1149                           
  1150  0192                     ??_I2C_Master_Read:	
  1151                           ; 1 bytes @ 0x2
  1152                           
  1153  0192                     ??_adc_init:	
  1154                           ; 1 bytes @ 0x2
  1155                           
  1156  0192                     int_osc_MHz@freq:	
  1157                           ; 1 bytes @ 0x2
  1158                           
  1159  0192                     adc_ch_switch@channels:	
  1160                           ; 1 bytes @ 0x2
  1161                           
  1162  0192                     pwm_init@channel:	
  1163                           ; 1 bytes @ 0x2
  1164                           
  1165  0192                     tmr0_init@prescaler:	
  1166                           ; 1 bytes @ 0x2
  1167                           
  1168  0192                     pulse_step@signal:	
  1169                           ; 1 bytes @ 0x2
  1170                           
  1171                           
  1172                           ; 2 bytes @ 0x2
  1173  0192                     	ds	2
  1174  0194                     ??_pulse_step:
  1175  0194                     ?_servo:	
  1176                           ; 1 bytes @ 0x4
  1177                           
  1178  0194                     ??___fltol:	
  1179                           ; 1 bytes @ 0x4
  1180                           
  1181  0194                     adc_init@adc_cs:	
  1182                           ; 1 bytes @ 0x4
  1183                           
  1184  0194                     servo@mov:	
  1185                           ; 1 bytes @ 0x4
  1186                           
  1187  0194                     I2C_Master_Read@temp:	
  1188                           ; 2 bytes @ 0x4
  1189                           
  1190  0194                     ___lmul@multiplicand:	
  1191                           ; 2 bytes @ 0x4
  1192                           
  1193  0194                     ___lldiv@dividend:	
  1194                           ; 4 bytes @ 0x4
  1195                           
  1196                           
  1197                           ; 4 bytes @ 0x4
  1198  0194                     	ds	2
  1199  0196                     ??_servo:
  1200                           
  1201                           ; 1 bytes @ 0x6
  1202  0196                     	ds	2
  1203  0198                     ??___lmul:
  1204  0198                     ??___lldiv:	
  1205                           ; 1 bytes @ 0x8
  1206                           
  1207                           
  1208                           ; 1 bytes @ 0x8
  1209  0198                     	ds	1
  1210  0199                     ___fltol@sign1:
  1211  0199                     ___lmul@product:	
  1212                           ; 1 bytes @ 0x9
  1213                           
  1214  0199                     ___lldiv@quotient:	
  1215                           ; 4 bytes @ 0x9
  1216                           
  1217                           
  1218                           ; 4 bytes @ 0x9
  1219  0199                     	ds	1
  1220  019A                     ___fltol@exp1:
  1221                           
  1222                           ; 1 bytes @ 0xA
  1223  019A                     	ds	1
  1224  019B                     ?_motor_dc:
  1225  019B                     motor_dc@temp:	
  1226                           ; 1 bytes @ 0xB
  1227                           
  1228                           
  1229                           ; 2 bytes @ 0xB
  1230  019B                     	ds	2
  1231  019D                     ??_motor_dc:
  1232  019D                     ___lldiv@counter:	
  1233                           ; 1 bytes @ 0xD
  1234                           
  1235                           
  1236                           ; 1 bytes @ 0xD
  1237  019D                     	ds	1
  1238  019E                     ?_USART_set:
  1239  019E                     ?_I2C_Master_Init:	
  1240                           ; 1 bytes @ 0xE
  1241                           
  1242  019E                     ?_calculateLux:	
  1243                           ; 1 bytes @ 0xE
  1244                           
  1245  019E                     calculateLux@broadband:	
  1246                           ; 4 bytes @ 0xE
  1247                           
  1248  019E                     USART_set@baudrate:	
  1249                           ; 2 bytes @ 0xE
  1250                           
  1251  019E                     I2C_Master_Init@c:	
  1252                           ; 4 bytes @ 0xE
  1253                           
  1254                           
  1255                           ; 4 bytes @ 0xE
  1256  019E                     	ds	2
  1257  01A0                     calculateLux@ir:
  1258                           
  1259                           ; 2 bytes @ 0x10
  1260  01A0                     	ds	2
  1261  01A2                     ??_calculateLux:
  1262  01A2                     ??_USART_set:	
  1263                           ; 1 bytes @ 0x12
  1264                           
  1265  01A2                     ??_I2C_Master_Init:	
  1266                           ; 1 bytes @ 0x12
  1267                           
  1268                           
  1269                           ; 1 bytes @ 0x12
  1270  01A2                     	ds	4
  1271  01A6                     calculateLux@lux:
  1272                           
  1273                           ; 4 bytes @ 0x16
  1274  01A6                     	ds	4
  1275  01AA                     calculateLux@ratio1:
  1276                           
  1277                           ; 4 bytes @ 0x1A
  1278  01AA                     	ds	4
  1279  01AE                     ??_setup:
  1280  01AE                     calculateLux@temp:	
  1281                           ; 1 bytes @ 0x1E
  1282                           
  1283                           
  1284                           ; 4 bytes @ 0x1E
  1285  01AE                     	ds	4
  1286  01B2                     calculateLux@b:
  1287                           
  1288                           ; 2 bytes @ 0x22
  1289  01B2                     	ds	2
  1290  01B4                     calculateLux@m:
  1291                           
  1292                           ; 2 bytes @ 0x24
  1293  01B4                     	ds	2
  1294  01B6                     calculateLux@chScale:
  1295                           
  1296                           ; 4 bytes @ 0x26
  1297  01B6                     	ds	4
  1298  01BA                     calculateLux@channel1:
  1299                           
  1300                           ; 4 bytes @ 0x2A
  1301  01BA                     	ds	4
  1302  01BE                     calculateLux@channel0:
  1303                           
  1304                           ; 4 bytes @ 0x2E
  1305  01BE                     	ds	4
  1306  01C2                     calculateLux@ratio:
  1307                           
  1308                           ; 4 bytes @ 0x32
  1309  01C2                     	ds	4
  1310  01C6                     ?___bmul:
  1311  01C6                     ___bmul@multiplicand:	
  1312                           ; 1 bytes @ 0x36
  1313                           
  1314                           
  1315                           ; 1 bytes @ 0x36
  1316  01C6                     	ds	1
  1317  01C7                     ??___bmul:
  1318                           
  1319                           ; 1 bytes @ 0x37
  1320  01C7                     	ds	1
  1321  01C8                     ___bmul@product:
  1322                           
  1323                           ; 1 bytes @ 0x38
  1324  01C8                     	ds	1
  1325  01C9                     ___bmul@multiplier:
  1326                           
  1327                           ; 1 bytes @ 0x39
  1328  01C9                     	ds	1
  1329  01CA                     ??_LUX_read:
  1330  01CA                     ??_bcd_dec:	
  1331                           ; 1 bytes @ 0x3A
  1332                           
  1333                           
  1334                           ; 1 bytes @ 0x3A
  1335  01CA                     	ds	3
  1336  01CD                     bcd_dec@no:
  1337                           
  1338                           ; 1 bytes @ 0x3D
  1339  01CD                     	ds	1
  1340  01CE                     ??_RTC_read:
  1341                           
  1342                           ; 1 bytes @ 0x3E
  1343  01CE                     	ds	2
  1344  01D0                     ??_main:
  1345                           
  1346                           ; 1 bytes @ 0x40
  1347  01D0                     	ds	4
  1348                           
  1349                           	psect	cstackBANK1
  1350  00A0                     __pcstackBANK1:
  1351  00A0                     ___fldiv@rem:
  1352                           
  1353                           ; 4 bytes @ 0x0
  1354  00A0                     	ds	4
  1355  00A4                     ___fldiv@sign:
  1356                           
  1357                           ; 1 bytes @ 0x4
  1358  00A4                     	ds	1
  1359  00A5                     ___fldiv@new_exp:
  1360                           
  1361                           ; 2 bytes @ 0x5
  1362  00A5                     	ds	2
  1363  00A7                     ___fldiv@grs:
  1364                           
  1365                           ; 4 bytes @ 0x7
  1366  00A7                     	ds	4
  1367  00AB                     ___fldiv@bexp:
  1368                           
  1369                           ; 1 bytes @ 0xB
  1370  00AB                     	ds	1
  1371  00AC                     ___fldiv@aexp:
  1372                           
  1373                           ; 1 bytes @ 0xC
  1374  00AC                     	ds	1
  1375  00AD                     ?i1___fltol:
  1376  00AD                     i1___fltol@f1:	
  1377                           ; 4 bytes @ 0xD
  1378                           
  1379                           
  1380                           ; 4 bytes @ 0xD
  1381  00AD                     	ds	4
  1382  00B1                     ??i1___fltol:
  1383                           
  1384                           ; 1 bytes @ 0x11
  1385  00B1                     	ds	5
  1386  00B6                     ?_map:
  1387  00B6                     map@x:	
  1388                           ; 2 bytes @ 0x16
  1389                           
  1390                           
  1391                           ; 2 bytes @ 0x16
  1392  00B6                     	ds	2
  1393  00B8                     map@x0:
  1394                           
  1395                           ; 2 bytes @ 0x18
  1396  00B8                     	ds	2
  1397  00BA                     map@x1:
  1398                           
  1399                           ; 2 bytes @ 0x1A
  1400  00BA                     	ds	2
  1401  00BC                     map@y0:
  1402                           
  1403                           ; 2 bytes @ 0x1C
  1404  00BC                     	ds	2
  1405  00BE                     map@y1:
  1406                           
  1407                           ; 2 bytes @ 0x1E
  1408  00BE                     	ds	2
  1409  00C0                     ??_slave:
  1410                           
  1411                           ; 1 bytes @ 0x20
  1412  00C0                     	ds	8
  1413  00C8                     _slave$1780:
  1414                           
  1415                           ; 4 bytes @ 0x28
  1416  00C8                     	ds	4
  1417  00CC                     _slave$1781:
  1418                           
  1419                           ; 4 bytes @ 0x2C
  1420  00CC                     	ds	4
  1421  00D0                     _slave$1782:
  1422                           
  1423                           ; 4 bytes @ 0x30
  1424  00D0                     	ds	4
  1425  00D4                     _slave$1783:
  1426                           
  1427                           ; 4 bytes @ 0x34
  1428  00D4                     	ds	4
  1429                           
  1430                           	psect	cstackCOMMON
  1431  0070                     __pcstackCOMMON:
  1432  0070                     ?___fleq:
  1433  0070                     ?___flge:	
  1434                           ; 1 bit 
  1435                           
  1436  0070                     ?_tmr0_reload:	
  1437                           ; 1 bit 
  1438                           
  1439  0070                     ?_setup:	
  1440                           ; 1 bytes @ 0x0
  1441                           
  1442  0070                     ?_LUX_config:	
  1443                           ; 1 bytes @ 0x0
  1444                           
  1445  0070                     ?_adc_ch_switch:	
  1446                           ; 1 bytes @ 0x0
  1447                           
  1448  0070                     ?_RTC_read:	
  1449                           ; 1 bytes @ 0x0
  1450                           
  1451  0070                     ?_LUX_read:	
  1452                           ; 1 bytes @ 0x0
  1453                           
  1454  0070                     ?_USART_send:	
  1455                           ; 1 bytes @ 0x0
  1456                           
  1457  0070                     ?_I2C_Master_Start:	
  1458                           ; 1 bytes @ 0x0
  1459                           
  1460  0070                     ?_I2C_Master_RepeatedStart:	
  1461                           ; 1 bytes @ 0x0
  1462                           
  1463  0070                     ?_bcd_dec:	
  1464                           ; 1 bytes @ 0x0
  1465                           
  1466  0070                     ?_I2C_Master_Stop:	
  1467                           ; 1 bytes @ 0x0
  1468                           
  1469  0070                     ?_int_osc_MHz:	
  1470                           ; 1 bytes @ 0x0
  1471                           
  1472  0070                     ?_pwm_init:	
  1473                           ; 1 bytes @ 0x0
  1474                           
  1475  0070                     ?_tmr0_init:	
  1476                           ; 1 bytes @ 0x0
  1477                           
  1478  0070                     ?_slave:	
  1479                           ; 1 bytes @ 0x0
  1480                           
  1481  0070                     ?_main:	
  1482                           ; 1 bytes @ 0x0
  1483                           
  1484  0070                     ?_I2C_Master_Wait:	
  1485                           ; 1 bytes @ 0x0
  1486                           
  1487  0070                     ?i1_tmr0_reload:	
  1488                           ; 1 bytes @ 0x0
  1489                           
  1490  0070                     ??i1_tmr0_reload:	
  1491                           ; 1 bytes @ 0x0
  1492                           
  1493  0070                     ?_adc_read:	
  1494                           ; 1 bytes @ 0x0
  1495                           
  1496  0070                     ?__Umul8_16:	
  1497                           ; 2 bytes @ 0x0
  1498                           
  1499  0070                     ?___lwdiv:	
  1500                           ; 2 bytes @ 0x0
  1501                           
  1502  0070                     __Umul8_16@multiplicand:	
  1503                           ; 2 bytes @ 0x0
  1504                           
  1505  0070                     ___lwdiv@divisor:	
  1506                           ; 1 bytes @ 0x0
  1507                           
  1508  0070                     ___fleq@ff1:	
  1509                           ; 2 bytes @ 0x0
  1510                           
  1511  0070                     ___flge@ff1:	
  1512                           ; 4 bytes @ 0x0
  1513                           
  1514                           
  1515                           ; 4 bytes @ 0x0
  1516  0070                     	ds	2
  1517  0072                     ??_adc_read:
  1518  0072                     ??__Umul8_16:	
  1519                           ; 1 bytes @ 0x2
  1520                           
  1521  0072                     ___lwdiv@dividend:	
  1522                           ; 1 bytes @ 0x2
  1523                           
  1524                           
  1525                           ; 2 bytes @ 0x2
  1526  0072                     	ds	2
  1527  0074                     ??___lwdiv:
  1528  0074                     __Umul8_16@product:	
  1529                           ; 1 bytes @ 0x4
  1530                           
  1531  0074                     ___fleq@ff2:	
  1532                           ; 2 bytes @ 0x4
  1533                           
  1534  0074                     ___flge@ff2:	
  1535                           ; 4 bytes @ 0x4
  1536                           
  1537                           
  1538                           ; 4 bytes @ 0x4
  1539  0074                     	ds	1
  1540  0075                     ___lwdiv@quotient:
  1541                           
  1542                           ; 2 bytes @ 0x5
  1543  0075                     	ds	1
  1544  0076                     __Umul8_16@word_mpld:
  1545                           
  1546                           ; 2 bytes @ 0x6
  1547  0076                     	ds	1
  1548  0077                     ___lwdiv@counter:
  1549                           
  1550                           ; 1 bytes @ 0x7
  1551  0077                     	ds	1
  1552  0078                     ??___fleq:
  1553  0078                     ??___flge:	
  1554                           ; 1 bytes @ 0x8
  1555                           
  1556  0078                     __Umul8_16@multiplier:	
  1557                           ; 1 bytes @ 0x8
  1558                           
  1559                           
  1560                           ; 1 bytes @ 0x8
  1561  0078                     	ds	1
  1562  0079                     ?___xxtofl:
  1563  0079                     ___xxtofl@val:	
  1564                           ; 4 bytes @ 0x9
  1565                           
  1566                           
  1567                           ; 4 bytes @ 0x9
  1568  0079                     	ds	3
  1569  007C                     ??_frexp:
  1570                           
  1571                           ; 1 bytes @ 0xC
  1572  007C                     	ds	2
  1573  007E                     ??_map:
  1574  007E                     ??___flsub:	
  1575                           ; 1 bytes @ 0xE
  1576                           
  1577                           
  1578                           	psect	cstackBANK0
  1579  0020                     __pcstackBANK0:	
  1580                           ; 1 bytes @ 0xE
  1581                           
  1582  0020                     ??___xxtofl:
  1583  0020                     ?_frexp:	
  1584                           ; 1 bytes @ 0x0
  1585                           
  1586  0020                     frexp@value:	
  1587                           ; 4 bytes @ 0x0
  1588                           
  1589                           
  1590                           ; 4 bytes @ 0x0
  1591  0020                     	ds	4
  1592  0024                     ___xxtofl@sign:
  1593  0024                     frexp@eptr:	
  1594                           ; 1 bytes @ 0x4
  1595                           
  1596                           
  1597                           ; 1 bytes @ 0x4
  1598  0024                     	ds	1
  1599  0025                     ___xxtofl@exp:
  1600                           
  1601                           ; 1 bytes @ 0x5
  1602  0025                     	ds	1
  1603  0026                     ___xxtofl@arg:
  1604                           
  1605                           ; 4 bytes @ 0x6
  1606  0026                     	ds	4
  1607  002A                     ?___fladd:
  1608  002A                     ___fladd@b:	
  1609                           ; 4 bytes @ 0xA
  1610                           
  1611                           
  1612                           ; 4 bytes @ 0xA
  1613  002A                     	ds	4
  1614  002E                     ___fladd@a:
  1615                           
  1616                           ; 4 bytes @ 0xE
  1617  002E                     	ds	4
  1618  0032                     ??___fladd:
  1619                           
  1620                           ; 1 bytes @ 0x12
  1621  0032                     	ds	8
  1622  003A                     ___fladd@signs:
  1623                           
  1624                           ; 1 bytes @ 0x1A
  1625  003A                     	ds	1
  1626  003B                     ___fladd@aexp:
  1627                           
  1628                           ; 1 bytes @ 0x1B
  1629  003B                     	ds	1
  1630  003C                     ___fladd@bexp:
  1631                           
  1632                           ; 1 bytes @ 0x1C
  1633  003C                     	ds	1
  1634  003D                     ___fladd@grs:
  1635                           
  1636                           ; 1 bytes @ 0x1D
  1637  003D                     	ds	1
  1638  003E                     ?___flmul:
  1639  003E                     ___flmul@b:	
  1640                           ; 4 bytes @ 0x1E
  1641                           
  1642                           
  1643                           ; 4 bytes @ 0x1E
  1644  003E                     	ds	4
  1645  0042                     ___flmul@a:
  1646                           
  1647                           ; 4 bytes @ 0x22
  1648  0042                     	ds	4
  1649  0046                     ??___flmul:
  1650                           
  1651                           ; 1 bytes @ 0x26
  1652  0046                     	ds	5
  1653  004B                     ___flmul@sign:
  1654                           
  1655                           ; 1 bytes @ 0x2B
  1656  004B                     	ds	1
  1657  004C                     ___flmul@grs:
  1658                           
  1659                           ; 4 bytes @ 0x2C
  1660  004C                     	ds	4
  1661  0050                     ___flmul@aexp:
  1662                           
  1663                           ; 1 bytes @ 0x30
  1664  0050                     	ds	1
  1665  0051                     ___flmul@bexp:
  1666                           
  1667                           ; 1 bytes @ 0x31
  1668  0051                     	ds	1
  1669  0052                     ___flmul@prod:
  1670                           
  1671                           ; 4 bytes @ 0x32
  1672  0052                     	ds	4
  1673  0056                     ___flmul@temp:
  1674                           
  1675                           ; 2 bytes @ 0x36
  1676  0056                     	ds	2
  1677  0058                     ?_eval_poly:
  1678  0058                     ?___fldiv:	
  1679                           ; 4 bytes @ 0x38
  1680                           
  1681  0058                     ___fldiv@a:	
  1682                           ; 4 bytes @ 0x38
  1683                           
  1684  0058                     eval_poly@x:	
  1685                           ; 4 bytes @ 0x38
  1686                           
  1687                           
  1688                           ; 4 bytes @ 0x38
  1689  0058                     	ds	4
  1690  005C                     eval_poly@d:
  1691  005C                     ___fldiv@b:	
  1692                           ; 1 bytes @ 0x3C
  1693                           
  1694                           
  1695                           ; 4 bytes @ 0x3C
  1696  005C                     	ds	1
  1697  005D                     eval_poly@n:
  1698                           
  1699                           ; 2 bytes @ 0x3D
  1700  005D                     	ds	2
  1701  005F                     ??_eval_poly:
  1702                           
  1703                           ; 1 bytes @ 0x3F
  1704  005F                     	ds	1
  1705  0060                     ??___fldiv:
  1706                           
  1707                           ; 1 bytes @ 0x40
  1708  0060                     	ds	4
  1709  0064                     eval_poly@res:
  1710                           
  1711                           ; 4 bytes @ 0x44
  1712  0064                     	ds	1
  1713  0065                     ?___flsub:
  1714  0065                     ___flsub@a:	
  1715                           ; 4 bytes @ 0x45
  1716                           
  1717                           
  1718                           ; 4 bytes @ 0x45
  1719  0065                     	ds	3
  1720  0068                     ?_log:
  1721  0068                     log@x:	
  1722                           ; 4 bytes @ 0x48
  1723                           
  1724                           
  1725                           ; 4 bytes @ 0x48
  1726  0068                     	ds	1
  1727  0069                     ___flsub@b:
  1728                           
  1729                           ; 4 bytes @ 0x49
  1730  0069                     	ds	3
  1731  006C                     ??_log:
  1732                           
  1733                           ; 1 bytes @ 0x4C
  1734  006C                     	ds	1
  1735  006D                     i1___fltol@sign1:
  1736  006D                     log@exponent:	
  1737                           ; 1 bytes @ 0x4D
  1738                           
  1739                           
  1740                           ; 2 bytes @ 0x4D
  1741  006D                     	ds	1
  1742  006E                     i1___fltol@exp1:
  1743                           
  1744                           ; 1 bytes @ 0x4E
  1745  006E                     	ds	1
  1746                           
  1747                           	psect	maintext
  1748  10F1                     __pmaintext:	
  1749 ;;
  1750 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1751 ;;
  1752 ;; *************** function _main *****************
  1753 ;; Defined at:
  1754 ;;		line 126 in file "main_slave_p1.c"
  1755 ;; Parameters:    Size  Location     Type
  1756 ;;		None
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;		None
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : B00/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1768 ;;      Params:         0       0       0       0       0
  1769 ;;      Locals:         0       0       0       0       0
  1770 ;;      Temps:          0       0       0       4       0
  1771 ;;      Totals:         0       0       0       4       0
  1772 ;;Total ram usage:        4 bytes
  1773 ;; Hardware stack levels required when called: 8
  1774 ;; This function calls:
  1775 ;;		_LUX_config
  1776 ;;		_LUX_read
  1777 ;;		_RTC_read
  1778 ;;		___fltol
  1779 ;;		_adc_ch_switch
  1780 ;;		_motor_dc
  1781 ;;		_pulse_step
  1782 ;;		_servo
  1783 ;;		_setup
  1784 ;; This function is called by:
  1785 ;;		Startup code after reset
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789  10F1                     _main:	
  1790                           ;psect for function _main
  1791                           
  1792                           
  1793                           ;main_slave_p1.c: 127:     setup();
  1794                           
  1795                           ;incstack = 0
  1796                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1797  10F1  160A  118A  2313  160A  118A  	fcall	_setup
  1798                           
  1799                           ;main_slave_p1.c: 128:     LUX_config();
  1800  10F6  120A  118A  279D  160A  118A  	fcall	_LUX_config
  1801  10FB                     l3989:
  1802                           
  1803                           ;main_slave_p1.c: 130:         PORTDbits.RD2 = dir & 0x01;
  1804  10FB  1683               	bsf	3,5	;RP0=1, select bank3
  1805  10FC  1703               	bsf	3,6	;RP1=1, select bank3
  1806  10FD  086B               	movf	_dir^(0+384),w
  1807  10FE  3901               	andlw	1
  1808  10FF  00D0               	movwf	??_main^(0+384)
  1809  1100  0DD0               	rlf	??_main^(0+384),f
  1810  1101  0DD0               	rlf	??_main^(0+384),f
  1811  1102  1283               	bcf	3,5	;RP0=0, select bank0
  1812  1103  1303               	bcf	3,6	;RP1=0, select bank0
  1813  1104  0808               	movf	8,w	;volatile
  1814  1105  1683               	bsf	3,5	;RP0=1, select bank3
  1815  1106  1703               	bsf	3,6	;RP1=1, select bank3
  1816  1107  0650               	xorwf	??_main^(0+384),w
  1817  1108  39FB               	andlw	-5
  1818  1109  0650               	xorwf	??_main^(0+384),w
  1819  110A  1283               	bcf	3,5	;RP0=0, select bank0
  1820  110B  1303               	bcf	3,6	;RP1=0, select bank0
  1821  110C  0088               	movwf	8	;volatile
  1822                           
  1823                           ;main_slave_p1.c: 131:         pulse_step(dir, pulso);
  1824  110D  1683               	bsf	3,5	;RP0=1, select bank3
  1825  110E  1703               	bsf	3,6	;RP1=1, select bank3
  1826  110F  086B               	movf	_dir^(0+384),w
  1827  1110  00D0               	movwf	??_main^(0+384)
  1828  1111  01D1               	clrf	(??_main^(0+384)+1)
  1829  1112  0850               	movf	??_main^(0+384),w
  1830  1113  0090               	movwf	pulse_step@bt^(0+384)
  1831  1114  0851               	movf	(??_main+1)^(0+384),w
  1832  1115  0091               	movwf	(pulse_step@bt+1)^(0+384)
  1833  1116  086C               	movf	_pulso^(0+384),w
  1834  1117  00D2               	movwf	(??_main+2)^(0+384)
  1835  1118  01D3               	clrf	((??_main+2)^(0+384)+1)
  1836  1119  0852               	movf	(??_main+2)^(0+384),w
  1837  111A  0092               	movwf	pulse_step@signal^(0+384)
  1838  111B  0853               	movf	(??_main+3)^(0+384),w
  1839  111C  0093               	movwf	(pulse_step@signal+1)^(0+384)
  1840  111D  160A  158A  25DC  160A  118A  	fcall	_pulse_step
  1841                           
  1842                           ;main_slave_p1.c: 132:         adc_ch_switch(1);
  1843  1122  3001               	movlw	1
  1844  1123  160A  118A  2544  160A  118A  	fcall	_adc_ch_switch
  1845                           
  1846                           ;main_slave_p1.c: 133:         motor_dc(TC);
  1847  1128  1683               	bsf	3,5	;RP0=1, select bank3
  1848  1129  1703               	bsf	3,6	;RP1=1, select bank3
  1849  112A  0857               	movf	(_TC+3)^(0+384),w
  1850  112B  0093               	movwf	(___fltol@f1+3)^(0+384)
  1851  112C  0856               	movf	(_TC+2)^(0+384),w
  1852  112D  0092               	movwf	(___fltol@f1+2)^(0+384)
  1853  112E  0855               	movf	(_TC+1)^(0+384),w
  1854  112F  0091               	movwf	(___fltol@f1+1)^(0+384)
  1855  1130  0854               	movf	_TC^(0+384),w
  1856  1131  0090               	movwf	___fltol@f1^(0+384)
  1857  1132  160A  118A  21C3  160A  118A  	fcall	___fltol
  1858  1137  1683               	bsf	3,5	;RP0=1, select bank3
  1859  1138  1703               	bsf	3,6	;RP1=1, select bank3
  1860  1139  0811               	movf	(?___fltol+1)^(0+384),w
  1861  113A  009C               	movwf	(motor_dc@temp+1)^(0+384)
  1862  113B  0810               	movf	?___fltol^(0+384),w
  1863  113C  009B               	movwf	motor_dc@temp^(0+384)
  1864  113D  160A  158A  263E  160A  118A  	fcall	_motor_dc
  1865                           
  1866                           ;main_slave_p1.c: 134:         servo(switch_servo);
  1867  1142  1683               	bsf	3,5	;RP0=1, select bank3
  1868  1143  1703               	bsf	3,6	;RP1=1, select bank3
  1869  1144  085D               	movf	(_switch_servo+1)^(0+384),w
  1870  1145  0095               	movwf	(servo@mov+1)^(0+384)
  1871  1146  085C               	movf	_switch_servo^(0+384),w
  1872  1147  0094               	movwf	servo@mov^(0+384)
  1873  1148  160A  158A  2667  160A  118A  	fcall	_servo
  1874                           
  1875                           ;main_slave_p1.c: 135:         RTC_read();
  1876  114D  160A  118A  2744  160A  118A  	fcall	_RTC_read
  1877                           
  1878                           ;main_slave_p1.c: 136:         LUX_read();
  1879  1152  120A  158A  2024  160A  118A  	fcall	_LUX_read
  1880  1157  28FB               	goto	l3989
  1881  1158                     __end_of_main:
  1882                           
  1883                           	psect	text1
  1884  1313                     __ptext1:	
  1885 ;; *************** function _setup *****************
  1886 ;; Defined at:
  1887 ;;		line 275 in file "main_slave_p1.c"
  1888 ;; Parameters:    Size  Location     Type
  1889 ;;		None
  1890 ;; Auto vars:     Size  Location     Type
  1891 ;;		None
  1892 ;; Return value:  Size  Location     Type
  1893 ;;                  1    wreg      void 
  1894 ;; Registers used:
  1895 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1896 ;; Tracked objects:
  1897 ;;		On entry : 0/0
  1898 ;;		On exit  : 0/0
  1899 ;;		Unchanged: 0/0
  1900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1901 ;;      Params:         0       0       0       0       0
  1902 ;;      Locals:         0       0       0       0       0
  1903 ;;      Temps:          0       0       0       0       0
  1904 ;;      Totals:         0       0       0       0       0
  1905 ;;Total ram usage:        0 bytes
  1906 ;; Hardware stack levels used: 1
  1907 ;; Hardware stack levels required when called: 7
  1908 ;; This function calls:
  1909 ;;		_I2C_Master_Init
  1910 ;;		_USART_set
  1911 ;;		_adc_init
  1912 ;;		_int_osc_MHz
  1913 ;;		_pwm_init
  1914 ;;		_tmr0_init
  1915 ;;		_tmr0_reload
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921  1313                     _setup:	
  1922                           ;psect for function _setup
  1923                           
  1924                           
  1925                           ;main_slave_p1.c: 276:     int_osc_MHz(1);
  1926                           
  1927                           ;incstack = 0
  1928                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1929  1313  3001               	movlw	1
  1930  1314  160A  118A  2002  160A  118A  	fcall	_int_osc_MHz
  1931                           
  1932                           ;main_slave_p1.c: 279:     ANSEL = 0x01;
  1933  1319  3001               	movlw	1
  1934  131A  1683               	bsf	3,5	;RP0=1, select bank3
  1935  131B  1703               	bsf	3,6	;RP1=1, select bank3
  1936  131C  0088               	movwf	8	;volatile
  1937                           
  1938                           ;main_slave_p1.c: 280:     ANSELH = 0;
  1939  131D  0189               	clrf	9	;volatile
  1940                           
  1941                           ;main_slave_p1.c: 282:     TRISAbits.TRISA0 = 1;
  1942  131E  1683               	bsf	3,5	;RP0=1, select bank1
  1943  131F  1303               	bcf	3,6	;RP1=0, select bank1
  1944  1320  1405               	bsf	5,0	;volatile
  1945                           
  1946                           ;main_slave_p1.c: 284:     TRISAbits.TRISA4 = 0;
  1947  1321  1205               	bcf	5,4	;volatile
  1948                           
  1949                           ;main_slave_p1.c: 285:     PORTAbits.RA4 = 0;
  1950  1322  1283               	bcf	3,5	;RP0=0, select bank0
  1951  1323  1303               	bcf	3,6	;RP1=0, select bank0
  1952  1324  1205               	bcf	5,4	;volatile
  1953                           
  1954                           ;main_slave_p1.c: 287:     TRISBbits.TRISB0 = 0;
  1955  1325  1683               	bsf	3,5	;RP0=1, select bank1
  1956  1326  1303               	bcf	3,6	;RP1=0, select bank1
  1957  1327  1006               	bcf	6,0	;volatile
  1958                           
  1959                           ;main_slave_p1.c: 288:     PORTBbits.RB0 = 0;
  1960  1328  1283               	bcf	3,5	;RP0=0, select bank0
  1961  1329  1303               	bcf	3,6	;RP1=0, select bank0
  1962  132A  1006               	bcf	6,0	;volatile
  1963                           
  1964                           ;main_slave_p1.c: 289:     TRISBbits.TRISB1 = 1;
  1965  132B  1683               	bsf	3,5	;RP0=1, select bank1
  1966  132C  1303               	bcf	3,6	;RP1=0, select bank1
  1967  132D  1486               	bsf	6,1	;volatile
  1968                           
  1969                           ;main_slave_p1.c: 290:     PORTBbits.RB1 = 0;
  1970  132E  1283               	bcf	3,5	;RP0=0, select bank0
  1971  132F  1303               	bcf	3,6	;RP1=0, select bank0
  1972  1330  1086               	bcf	6,1	;volatile
  1973                           
  1974                           ;main_slave_p1.c: 291:     TRISBbits.TRISB2 = 1;
  1975  1331  1683               	bsf	3,5	;RP0=1, select bank1
  1976  1332  1303               	bcf	3,6	;RP1=0, select bank1
  1977  1333  1506               	bsf	6,2	;volatile
  1978                           
  1979                           ;main_slave_p1.c: 292:     PORTBbits.RB2 = 0;
  1980  1334  1283               	bcf	3,5	;RP0=0, select bank0
  1981  1335  1303               	bcf	3,6	;RP1=0, select bank0
  1982  1336  1106               	bcf	6,2	;volatile
  1983                           
  1984                           ;main_slave_p1.c: 293:     TRISBbits.TRISB7 = 1;
  1985  1337  1683               	bsf	3,5	;RP0=1, select bank1
  1986  1338  1303               	bcf	3,6	;RP1=0, select bank1
  1987  1339  1786               	bsf	6,7	;volatile
  1988                           
  1989                           ;main_slave_p1.c: 294:     PORTBbits.RB7 = 0;
  1990  133A  1283               	bcf	3,5	;RP0=0, select bank0
  1991  133B  1303               	bcf	3,6	;RP1=0, select bank0
  1992  133C  1386               	bcf	6,7	;volatile
  1993                           
  1994                           ;main_slave_p1.c: 295:     OPTION_REGbits.nRBPU = 0;
  1995  133D  1683               	bsf	3,5	;RP0=1, select bank1
  1996  133E  1303               	bcf	3,6	;RP1=0, select bank1
  1997  133F  1381               	bcf	1,7	;volatile
  1998                           
  1999                           ;main_slave_p1.c: 296:     WPUBbits.WPUB = 0x86;
  2000  1340  3086               	movlw	134
  2001  1341  0095               	movwf	21	;volatile
  2002                           
  2003                           ;main_slave_p1.c: 298:     TRISDbits.TRISD1 = 0;
  2004  1342  1088               	bcf	8,1	;volatile
  2005                           
  2006                           ;main_slave_p1.c: 299:     PORTDbits.RD1 = 0;
  2007  1343  1283               	bcf	3,5	;RP0=0, select bank0
  2008  1344  1303               	bcf	3,6	;RP1=0, select bank0
  2009  1345  1088               	bcf	8,1	;volatile
  2010                           
  2011                           ;main_slave_p1.c: 300:     TRISDbits.TRISD2 = 0;
  2012  1346  1683               	bsf	3,5	;RP0=1, select bank1
  2013  1347  1303               	bcf	3,6	;RP1=0, select bank1
  2014  1348  1108               	bcf	8,2	;volatile
  2015                           
  2016                           ;main_slave_p1.c: 301:     PORTDbits.RD2 = 0;
  2017  1349  1283               	bcf	3,5	;RP0=0, select bank0
  2018  134A  1303               	bcf	3,6	;RP1=0, select bank0
  2019  134B  1108               	bcf	8,2	;volatile
  2020                           
  2021                           ;main_slave_p1.c: 302:     TRISDbits.TRISD6 = 0;
  2022  134C  1683               	bsf	3,5	;RP0=1, select bank1
  2023  134D  1303               	bcf	3,6	;RP1=0, select bank1
  2024  134E  1308               	bcf	8,6	;volatile
  2025                           
  2026                           ;main_slave_p1.c: 303:     PORTDbits.RD6 = 0;
  2027  134F  1283               	bcf	3,5	;RP0=0, select bank0
  2028  1350  1303               	bcf	3,6	;RP1=0, select bank0
  2029  1351  1308               	bcf	8,6	;volatile
  2030                           
  2031                           ;main_slave_p1.c: 305:     pwm_init(1);
  2032  1352  3001               	movlw	1
  2033  1353  160A  158A  2738  160A  118A  	fcall	_pwm_init
  2034                           
  2035                           ;main_slave_p1.c: 306:     USART_set(9600);
  2036  1358  3000               	movlw	0
  2037  1359  1683               	bsf	3,5	;RP0=1, select bank3
  2038  135A  1703               	bsf	3,6	;RP1=1, select bank3
  2039  135B  00A1               	movwf	(USART_set@baudrate+3)^(0+384)
  2040  135C  3000               	movlw	0
  2041  135D  00A0               	movwf	(USART_set@baudrate+2)^(0+384)
  2042  135E  3025               	movlw	37
  2043  135F  009F               	movwf	(USART_set@baudrate+1)^(0+384)
  2044  1360  3080               	movlw	128
  2045  1361  009E               	movwf	USART_set@baudrate^(0+384)
  2046  1362  160A  118A  2158  160A  118A  	fcall	_USART_set
  2047                           
  2048                           ;main_slave_p1.c: 307:     adc_init(0,0,0);
  2049  1367  1683               	bsf	3,5	;RP0=1, select bank3
  2050  1368  1703               	bsf	3,6	;RP1=1, select bank3
  2051  1369  0190               	clrf	adc_init@vref_plus^(0+384)
  2052  136A  0191               	clrf	adc_init@vref_minus^(0+384)
  2053  136B  3000               	movlw	0
  2054  136C  160A  118A  22A0  160A  118A  	fcall	_adc_init
  2055                           
  2056                           ;main_slave_p1.c: 308:     tmr0_init(16);
  2057  1371  3010               	movlw	16
  2058  1372  160A  118A  2230  160A  118A  	fcall	_tmr0_init
  2059                           
  2060                           ;main_slave_p1.c: 309:     tmr0_reload();
  2061  1377  160A  158A  253C  160A  118A  	fcall	_tmr0_reload
  2062                           
  2063                           ;main_slave_p1.c: 310:     I2C_Master_Init(400000);
  2064  137C  3000               	movlw	0
  2065  137D  1683               	bsf	3,5	;RP0=1, select bank3
  2066  137E  1703               	bsf	3,6	;RP1=1, select bank3
  2067  137F  00A1               	movwf	(I2C_Master_Init@c+3)^(0+384)
  2068  1380  3006               	movlw	6
  2069  1381  00A0               	movwf	(I2C_Master_Init@c+2)^(0+384)
  2070  1382  301A               	movlw	26
  2071  1383  009F               	movwf	(I2C_Master_Init@c+1)^(0+384)
  2072  1384  3080               	movlw	128
  2073  1385  009E               	movwf	I2C_Master_Init@c^(0+384)
  2074  1386  160A  158A  26C4   	fcall	_I2C_Master_Init
  2075                           
  2076                           ;main_slave_p1.c: 313:     INTCONbits.GIE = 1;
  2077  1389  178B               	bsf	11,7	;volatile
  2078                           
  2079                           ;main_slave_p1.c: 314:     INTCONbits.PEIE = 1;
  2080  138A  170B               	bsf	11,6	;volatile
  2081                           
  2082                           ;main_slave_p1.c: 315:     INTCONbits.RBIE = 1;
  2083  138B  158B               	bsf	11,3	;volatile
  2084                           
  2085                           ;main_slave_p1.c: 316:     IOCBbits.IOCB1 = 1;
  2086  138C  1683               	bsf	3,5	;RP0=1, select bank1
  2087  138D  1303               	bcf	3,6	;RP1=0, select bank1
  2088  138E  1496               	bsf	22,1	;volatile
  2089                           
  2090                           ;main_slave_p1.c: 317:     IOCBbits.IOCB2 = 1;
  2091  138F  1516               	bsf	22,2	;volatile
  2092                           
  2093                           ;main_slave_p1.c: 318:     IOCBbits.IOCB7 = 1;
  2094  1390  1796               	bsf	22,7	;volatile
  2095                           
  2096                           ;main_slave_p1.c: 319:     INTCONbits.RBIF = 0;
  2097  1391  100B               	bcf	11,0	;volatile
  2098  1392  0008               	return
  2099  1393                     __end_of_setup:
  2100                           
  2101                           	psect	text2
  2102  1D3C                     __ptext2:	
  2103 ;; *************** function _tmr0_reload *****************
  2104 ;; Defined at:
  2105 ;;		line 57 in file "tmr0.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;		None
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;		None
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2119 ;;      Params:         0       0       0       0       0
  2120 ;;      Locals:         0       0       0       0       0
  2121 ;;      Temps:          0       0       0       0       0
  2122 ;;      Totals:         0       0       0       0       0
  2123 ;;Total ram usage:        0 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 5
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_setup
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133  1D3C                     _tmr0_reload:	
  2134                           ;psect for function _tmr0_reload
  2135                           
  2136                           
  2137                           ;tmr0.c: 58:     TMR0 = 178;
  2138                           
  2139                           ;incstack = 0
  2140                           ; Regs used in _tmr0_reload: [wreg]
  2141  1D3C  30B2               	movlw	178
  2142  1D3D  1283               	bcf	3,5	;RP0=0, select bank0
  2143  1D3E  1303               	bcf	3,6	;RP1=0, select bank0
  2144  1D3F  0081               	movwf	1	;volatile
  2145                           
  2146                           ;tmr0.c: 59:     INTCONbits.T0IF = 0;
  2147  1D40  110B               	bcf	11,2	;volatile
  2148  1D41  0008               	return
  2149  1D42                     __end_of_tmr0_reload:
  2150                           
  2151                           	psect	text3
  2152  1230                     __ptext3:	
  2153 ;; *************** function _tmr0_init *****************
  2154 ;; Defined at:
  2155 ;;		line 13 in file "tmr0.c"
  2156 ;; Parameters:    Size  Location     Type
  2157 ;;  prescaler       1    wreg     unsigned char 
  2158 ;; Auto vars:     Size  Location     Type
  2159 ;;  prescaler       1    2[BANK3 ] unsigned char 
  2160 ;; Return value:  Size  Location     Type
  2161 ;;                  1    wreg      void 
  2162 ;; Registers used:
  2163 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2164 ;; Tracked objects:
  2165 ;;		On entry : 0/0
  2166 ;;		On exit  : 0/0
  2167 ;;		Unchanged: 0/0
  2168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2169 ;;      Params:         0       0       0       0       0
  2170 ;;      Locals:         0       0       0       1       0
  2171 ;;      Temps:          0       0       0       2       0
  2172 ;;      Totals:         0       0       0       3       0
  2173 ;;Total ram usage:        3 bytes
  2174 ;; Hardware stack levels used: 1
  2175 ;; Hardware stack levels required when called: 5
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		_setup
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183  1230                     _tmr0_init:	
  2184                           ;psect for function _tmr0_init
  2185                           
  2186                           
  2187                           ;incstack = 0
  2188                           ; Regs used in _tmr0_init: [wreg-fsr0h+status,2+status,0]
  2189                           ;tmr0_init@prescaler stored from wreg
  2190  1230  1683               	bsf	3,5	;RP0=1, select bank3
  2191  1231  1703               	bsf	3,6	;RP1=1, select bank3
  2192  1232  0092               	movwf	tmr0_init@prescaler^(0+384)
  2193                           
  2194                           ;tmr0.c: 14:     OPTION_REGbits.T0CS = 0;
  2195  1233  1683               	bsf	3,5	;RP0=1, select bank1
  2196  1234  1303               	bcf	3,6	;RP1=0, select bank1
  2197  1235  1281               	bcf	1,5	;volatile
  2198                           
  2199                           ;tmr0.c: 15:     if(prescaler != 0){
  2200  1236  1683               	bsf	3,5	;RP0=1, select bank3
  2201  1237  1703               	bsf	3,6	;RP1=1, select bank3
  2202  1238  0812               	movf	tmr0_init@prescaler^(0+384),w
  2203  1239  1903               	btfsc	3,2
  2204  123A  2A3F               	goto	l3301
  2205                           
  2206                           ;tmr0.c: 16:        OPTION_REGbits.PSA = 0;
  2207  123B  1683               	bsf	3,5	;RP0=1, select bank1
  2208  123C  1303               	bcf	3,6	;RP1=0, select bank1
  2209  123D  1181               	bcf	1,3	;volatile
  2210                           
  2211                           ;tmr0.c: 17:     }
  2212  123E  2A76               	goto	l3327
  2213  123F                     l3301:
  2214  123F  0812               	movf	tmr0_init@prescaler^(0+384),w
  2215  1240  1D03               	btfss	3,2
  2216  1241  2A76               	goto	l3327
  2217                           
  2218                           ;tmr0.c: 19:         OPTION_REGbits.PSA = 1;
  2219  1242  1683               	bsf	3,5	;RP0=1, select bank1
  2220  1243  1303               	bcf	3,6	;RP1=0, select bank1
  2221  1244  1581               	bsf	1,3	;volatile
  2222  1245  2A76               	goto	l3327
  2223  1246                     l3305:
  2224  1246                     l3307:	
  2225                           ;tmr0.c: 24:             break;
  2226                           
  2227                           ;tmr0.c: 23:             OPTION_REGbits.PS = 0b000;
  2228                           
  2229  1246  2A71               	goto	l3323
  2230  1247                     l3309:	
  2231                           ;tmr0.c: 27:             break;
  2232                           
  2233                           ;tmr0.c: 26:             OPTION_REGbits.PS = 0b000;
  2234                           
  2235                           
  2236                           ;tmr0.c: 29:             OPTION_REGbits.PS = 0b001;
  2237  1247  1683               	bsf	3,5	;RP0=1, select bank1
  2238  1248  1303               	bcf	3,6	;RP1=0, select bank1
  2239  1249  0801               	movf	1,w	;volatile
  2240  124A  39F8               	andlw	-8
  2241  124B  3801               	iorlw	1
  2242  124C  2A6A               	goto	L5
  2243  124D                     l3311:	
  2244                           ;tmr0.c: 30:             break;
  2245                           
  2246                           
  2247                           ;tmr0.c: 32:             OPTION_REGbits.PS = 0b010;
  2248  124D  1683               	bsf	3,5	;RP0=1, select bank1
  2249  124E  1303               	bcf	3,6	;RP1=0, select bank1
  2250  124F  0801               	movf	1,w	;volatile
  2251  1250  39F8               	andlw	-8
  2252  1251  3802               	iorlw	2
  2253  1252  2A6A               	goto	L5
  2254  1253                     l3313:	
  2255                           ;tmr0.c: 33:             break;
  2256                           
  2257                           
  2258                           ;tmr0.c: 35:             OPTION_REGbits.PS = 0b011;
  2259  1253  1683               	bsf	3,5	;RP0=1, select bank1
  2260  1254  1303               	bcf	3,6	;RP1=0, select bank1
  2261  1255  0801               	movf	1,w	;volatile
  2262  1256  39F8               	andlw	-8
  2263  1257  3803               	iorlw	3
  2264  1258  2A6A               	goto	L5
  2265  1259                     l3315:	
  2266                           ;tmr0.c: 36:             break;
  2267                           
  2268                           
  2269                           ;tmr0.c: 38:             OPTION_REGbits.PS = 0b100;
  2270  1259  1683               	bsf	3,5	;RP0=1, select bank1
  2271  125A  1303               	bcf	3,6	;RP1=0, select bank1
  2272  125B  0801               	movf	1,w	;volatile
  2273  125C  39F8               	andlw	-8
  2274  125D  3804               	iorlw	4
  2275  125E  2A6A               	goto	L5
  2276  125F                     l3317:	
  2277                           ;tmr0.c: 39:             break;
  2278                           
  2279                           
  2280                           ;tmr0.c: 41:             OPTION_REGbits.PS = 0b101;
  2281  125F  1683               	bsf	3,5	;RP0=1, select bank1
  2282  1260  1303               	bcf	3,6	;RP1=0, select bank1
  2283  1261  0801               	movf	1,w	;volatile
  2284  1262  39F8               	andlw	-8
  2285  1263  3805               	iorlw	5
  2286  1264  2A6A               	goto	L5
  2287  1265                     l3319:	
  2288                           ;tmr0.c: 42:             break;
  2289                           
  2290                           
  2291                           ;tmr0.c: 44:             OPTION_REGbits.PS = 0b110;
  2292  1265  1683               	bsf	3,5	;RP0=1, select bank1
  2293  1266  1303               	bcf	3,6	;RP1=0, select bank1
  2294  1267  0801               	movf	1,w	;volatile
  2295  1268  39F8               	andlw	-8
  2296  1269  3806               	iorlw	6
  2297  126A                     L5:
  2298  126A  0081               	movwf	1	;volatile
  2299                           
  2300                           ;tmr0.c: 45:             break;
  2301  126B  2A9D               	goto	l389
  2302  126C                     l3321:
  2303                           
  2304                           ;tmr0.c: 47:             OPTION_REGbits.PS = 0b111;
  2305  126C  3007               	movlw	7
  2306  126D  1683               	bsf	3,5	;RP0=1, select bank1
  2307  126E  1303               	bcf	3,6	;RP1=0, select bank1
  2308  126F  0481               	iorwf	1,f	;volatile
  2309                           
  2310                           ;tmr0.c: 48:             break;
  2311  1270  2A9D               	goto	l389
  2312  1271                     l3323:
  2313                           
  2314                           ;tmr0.c: 50:             OPTION_REGbits.PS = 0b000;
  2315  1271  30F8               	movlw	-8
  2316  1272  1683               	bsf	3,5	;RP0=1, select bank1
  2317  1273  1303               	bcf	3,6	;RP1=0, select bank1
  2318  1274  0581               	andwf	1,f	;volatile
  2319                           
  2320                           ;tmr0.c: 51:             break;
  2321  1275  2A9D               	goto	l389
  2322  1276                     l3327:
  2323  1276  1683               	bsf	3,5	;RP0=1, select bank3
  2324  1277  1703               	bsf	3,6	;RP1=1, select bank3
  2325  1278  0812               	movf	tmr0_init@prescaler^(0+384),w
  2326  1279  0090               	movwf	??_tmr0_init^(0+384)
  2327  127A  0191               	clrf	(??_tmr0_init^(0+384)+1)
  2328                           
  2329                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2330                           ; Switch size 1, requested type "simple"
  2331                           ; Number of cases is 1, Range of values is 0 to 0
  2332                           ; switch strategies available:
  2333                           ; Name         Instructions Cycles
  2334                           ; simple_byte            4     3 (average)
  2335                           ; direct_byte           11     8 (fixed)
  2336                           ; jumptable            260     6 (fixed)
  2337                           ;	Chosen strategy is simple_byte
  2338  127B  0811               	movf	(??_tmr0_init+1)^(0+384),w
  2339  127C  3A00               	xorlw	0	; case 0
  2340  127D  1903               	skipnz
  2341  127E  2A80               	goto	l4211
  2342  127F  2A71               	goto	l3323
  2343  1280                     l4211:
  2344                           
  2345                           ; Switch size 1, requested type "simple"
  2346                           ; Number of cases is 9, Range of values is 0 to 255
  2347                           ; switch strategies available:
  2348                           ; Name         Instructions Cycles
  2349                           ; simple_byte           28    15 (average)
  2350                           ; jumptable            260     6 (fixed)
  2351                           ;	Chosen strategy is simple_byte
  2352  1280  0810               	movf	??_tmr0_init^(0+384),w
  2353  1281  3A00               	xorlw	0	; case 0
  2354  1282  1903               	skipnz
  2355  1283  2A46               	goto	l3305
  2356  1284  3A02               	xorlw	2	; case 2
  2357  1285  1903               	skipnz
  2358  1286  2A46               	goto	l3307
  2359  1287  3A06               	xorlw	6	; case 4
  2360  1288  1903               	skipnz
  2361  1289  2A47               	goto	l3309
  2362  128A  3A0C               	xorlw	12	; case 8
  2363  128B  1903               	skipnz
  2364  128C  2A4D               	goto	l3311
  2365  128D  3A18               	xorlw	24	; case 16
  2366  128E  1903               	skipnz
  2367  128F  2A53               	goto	l3313
  2368  1290  3A30               	xorlw	48	; case 32
  2369  1291  1903               	skipnz
  2370  1292  2A59               	goto	l3315
  2371  1293  3A60               	xorlw	96	; case 64
  2372  1294  1903               	skipnz
  2373  1295  2A5F               	goto	l3317
  2374  1296  3AC0               	xorlw	192	; case 128
  2375  1297  1903               	skipnz
  2376  1298  2A65               	goto	l3319
  2377  1299  3A7F               	xorlw	127	; case 255
  2378  129A  1903               	skipnz
  2379  129B  2A6C               	goto	l3321
  2380  129C  2A71               	goto	l3323
  2381  129D                     l389:
  2382                           
  2383                           ;tmr0.c: 53:     INTCONbits.T0IE = 1;
  2384  129D  168B               	bsf	11,5	;volatile
  2385                           
  2386                           ;tmr0.c: 54:     INTCONbits.T0IF = 0;
  2387  129E  110B               	bcf	11,2	;volatile
  2388  129F  0008               	return
  2389  12A0                     __end_of_tmr0_init:
  2390                           
  2391                           	psect	text4
  2392  1F38                     __ptext4:	
  2393 ;; *************** function _pwm_init *****************
  2394 ;; Defined at:
  2395 ;;		line 12 in file "pwm.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  channel         1    wreg     unsigned char 
  2398 ;; Auto vars:     Size  Location     Type
  2399 ;;  channel         1    2[BANK3 ] unsigned char 
  2400 ;; Return value:  Size  Location     Type
  2401 ;;                  1    wreg      void 
  2402 ;; Registers used:
  2403 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2404 ;; Tracked objects:
  2405 ;;		On entry : 0/0
  2406 ;;		On exit  : 0/0
  2407 ;;		Unchanged: 0/0
  2408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2409 ;;      Params:         0       0       0       0       0
  2410 ;;      Locals:         0       0       0       1       0
  2411 ;;      Temps:          0       0       0       2       0
  2412 ;;      Totals:         0       0       0       3       0
  2413 ;;Total ram usage:        3 bytes
  2414 ;; Hardware stack levels used: 1
  2415 ;; Hardware stack levels required when called: 5
  2416 ;; This function calls:
  2417 ;;		Nothing
  2418 ;; This function is called by:
  2419 ;;		_setup
  2420 ;; This function uses a non-reentrant model
  2421 ;;
  2422                           
  2423  1F38                     _pwm_init:	
  2424                           ;psect for function _pwm_init
  2425                           
  2426                           
  2427                           ;incstack = 0
  2428                           ; Regs used in _pwm_init: [wreg-fsr0h+status,2+status,0]
  2429                           ;pwm_init@channel stored from wreg
  2430  1F38  1683               	bsf	3,5	;RP0=1, select bank3
  2431  1F39  1703               	bsf	3,6	;RP1=1, select bank3
  2432  1F3A  0092               	movwf	pwm_init@channel^(0+384)
  2433                           
  2434                           ;pwm.c: 13:     switch(channel) {
  2435  1F3B  2F54               	goto	l3223
  2436  1F3C                     l325:	
  2437                           ;pwm.c: 14:         case 1:
  2438                           
  2439                           
  2440                           ;pwm.c: 15:             TRISCbits.TRISC2 = 1;
  2441  1F3C  1683               	bsf	3,5	;RP0=1, select bank1
  2442  1F3D  1303               	bcf	3,6	;RP1=0, select bank1
  2443  1F3E  1507               	bsf	7,2	;volatile
  2444                           
  2445                           ;pwm.c: 16:             CCP1CON = 0;
  2446  1F3F  1283               	bcf	3,5	;RP0=0, select bank0
  2447  1F40  1303               	bcf	3,6	;RP1=0, select bank0
  2448  1F41  0197               	clrf	23	;volatile
  2449                           
  2450                           ;pwm.c: 17:             CCP1CONbits.P1M = 0;
  2451  1F42  303F               	movlw	-193
  2452  1F43  0597               	andwf	23,f	;volatile
  2453                           
  2454                           ;pwm.c: 18:             CCP1CONbits.CCP1M = 0b1100;
  2455  1F44  0817               	movf	23,w	;volatile
  2456  1F45  39F0               	andlw	-16
  2457  1F46  380C               	iorlw	12
  2458  1F47  0097               	movwf	23	;volatile
  2459                           
  2460                           ;pwm.c: 19:             break;
  2461  1F48  2F64               	goto	l3225
  2462  1F49                     l327:	
  2463                           ;pwm.c: 20:         case 2:
  2464                           
  2465                           
  2466                           ;pwm.c: 21:             TRISCbits.TRISC1 = 1;
  2467  1F49  1683               	bsf	3,5	;RP0=1, select bank1
  2468  1F4A  1303               	bcf	3,6	;RP1=0, select bank1
  2469  1F4B  1487               	bsf	7,1	;volatile
  2470                           
  2471                           ;pwm.c: 22:             CCP2CON = 0;
  2472  1F4C  1283               	bcf	3,5	;RP0=0, select bank0
  2473  1F4D  1303               	bcf	3,6	;RP1=0, select bank0
  2474  1F4E  019D               	clrf	29	;volatile
  2475                           
  2476                           ;pwm.c: 23:             CCP2CONbits.CCP2M = 0b1100;
  2477  1F4F  081D               	movf	29,w	;volatile
  2478  1F50  39F0               	andlw	-16
  2479  1F51  380C               	iorlw	12
  2480  1F52  009D               	movwf	29	;volatile
  2481                           
  2482                           ;pwm.c: 24:             break;
  2483  1F53  2F64               	goto	l3225
  2484  1F54                     l3223:
  2485  1F54  0812               	movf	pwm_init@channel^(0+384),w
  2486  1F55  0090               	movwf	??_pwm_init^(0+384)
  2487  1F56  0191               	clrf	(??_pwm_init^(0+384)+1)
  2488                           
  2489                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2490                           ; Switch size 1, requested type "simple"
  2491                           ; Number of cases is 1, Range of values is 0 to 0
  2492                           ; switch strategies available:
  2493                           ; Name         Instructions Cycles
  2494                           ; simple_byte            4     3 (average)
  2495                           ; direct_byte           11     8 (fixed)
  2496                           ; jumptable            260     6 (fixed)
  2497                           ;	Chosen strategy is simple_byte
  2498  1F57  0811               	movf	(??_pwm_init+1)^(0+384),w
  2499  1F58  3A00               	xorlw	0	; case 0
  2500  1F59  1903               	skipnz
  2501  1F5A  2F5C               	goto	l4213
  2502  1F5B  2F64               	goto	l3225
  2503  1F5C                     l4213:
  2504                           
  2505                           ; Switch size 1, requested type "simple"
  2506                           ; Number of cases is 2, Range of values is 1 to 2
  2507                           ; switch strategies available:
  2508                           ; Name         Instructions Cycles
  2509                           ; simple_byte            7     4 (average)
  2510                           ; direct_byte           17    11 (fixed)
  2511                           ; jumptable            263     9 (fixed)
  2512                           ;	Chosen strategy is simple_byte
  2513  1F5C  0810               	movf	??_pwm_init^(0+384),w
  2514  1F5D  3A01               	xorlw	1	; case 1
  2515  1F5E  1903               	skipnz
  2516  1F5F  2F3C               	goto	l325
  2517  1F60  3A03               	xorlw	3	; case 2
  2518  1F61  1903               	skipnz
  2519  1F62  2F49               	goto	l327
  2520  1F63  2F64               	goto	l3225
  2521  1F64                     l3225:
  2522                           
  2523                           ;pwm.c: 28:     T2CONbits.T2CKPS = 0b11;
  2524  1F64  3003               	movlw	3
  2525  1F65  1283               	bcf	3,5	;RP0=0, select bank0
  2526  1F66  1303               	bcf	3,6	;RP1=0, select bank0
  2527  1F67  0492               	iorwf	18,f	;volatile
  2528                           
  2529                           ;pwm.c: 29:     PR2 = 255;
  2530  1F68  30FF               	movlw	255
  2531  1F69  1683               	bsf	3,5	;RP0=1, select bank1
  2532  1F6A  1303               	bcf	3,6	;RP1=0, select bank1
  2533  1F6B  0092               	movwf	18	;volatile
  2534                           
  2535                           ;pwm.c: 32:     PIR1bits.TMR2IF = 0;
  2536  1F6C  1283               	bcf	3,5	;RP0=0, select bank0
  2537  1F6D  1303               	bcf	3,6	;RP1=0, select bank0
  2538  1F6E  108C               	bcf	12,1	;volatile
  2539                           
  2540                           ;pwm.c: 33:     T2CONbits.TMR2ON = 1;
  2541  1F6F  1512               	bsf	18,2	;volatile
  2542  1F70                     l329:	
  2543                           ;pwm.c: 34:     while(!PIR1bits.TMR2IF);
  2544                           
  2545  1F70  1C8C               	btfss	12,1	;volatile
  2546  1F71  2F70               	goto	l329
  2547                           
  2548                           ;pwm.c: 35:     PIR1bits.TMR2IF = 0;
  2549  1F72  108C               	bcf	12,1	;volatile
  2550                           
  2551                           ;pwm.c: 36:     TRISCbits.TRISC2 = 0;
  2552  1F73  1683               	bsf	3,5	;RP0=1, select bank1
  2553  1F74  1303               	bcf	3,6	;RP1=0, select bank1
  2554  1F75  1107               	bcf	7,2	;volatile
  2555  1F76  0008               	return
  2556  1F77                     __end_of_pwm_init:
  2557                           
  2558                           	psect	text5
  2559  1002                     __ptext5:	
  2560 ;; *************** function _int_osc_MHz *****************
  2561 ;; Defined at:
  2562 ;;		line 13 in file "osc.c"
  2563 ;; Parameters:    Size  Location     Type
  2564 ;;  freq            1    wreg     unsigned char 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  freq            1    2[BANK3 ] unsigned char 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2576 ;;      Params:         0       0       0       0       0
  2577 ;;      Locals:         0       0       0       1       0
  2578 ;;      Temps:          0       0       0       2       0
  2579 ;;      Totals:         0       0       0       3       0
  2580 ;;Total ram usage:        3 bytes
  2581 ;; Hardware stack levels used: 1
  2582 ;; Hardware stack levels required when called: 5
  2583 ;; This function calls:
  2584 ;;		Nothing
  2585 ;; This function is called by:
  2586 ;;		_setup
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590  1002                     _int_osc_MHz:	
  2591                           ;psect for function _int_osc_MHz
  2592                           
  2593                           
  2594                           ;incstack = 0
  2595                           ; Regs used in _int_osc_MHz: [wreg-fsr0h+status,2+status,0]
  2596                           ;int_osc_MHz@freq stored from wreg
  2597  1002  1683               	bsf	3,5	;RP0=1, select bank3
  2598  1003  1703               	bsf	3,6	;RP1=1, select bank3
  2599  1004  0092               	movwf	int_osc_MHz@freq^(0+384)
  2600                           
  2601                           ;osc.c: 14:     switch(freq){
  2602  1005  281F               	goto	l3201
  2603  1006                     l3189:
  2604                           
  2605                           ;osc.c: 16:             OSCCONbits.IRCF = 0b100;
  2606  1006  1683               	bsf	3,5	;RP0=1, select bank1
  2607  1007  1303               	bcf	3,6	;RP1=0, select bank1
  2608  1008  080F               	movf	15,w	;volatile
  2609  1009  398F               	andlw	-113
  2610  100A  3840               	iorlw	64
  2611  100B  281D               	goto	L8
  2612  100C                     l3191:	
  2613                           ;osc.c: 17:             break;
  2614                           
  2615                           
  2616                           ;osc.c: 19:             OSCCONbits.IRCF = 0b101;
  2617  100C  1683               	bsf	3,5	;RP0=1, select bank1
  2618  100D  1303               	bcf	3,6	;RP1=0, select bank1
  2619  100E  080F               	movf	15,w	;volatile
  2620  100F  398F               	andlw	-113
  2621  1010  3850               	iorlw	80
  2622  1011  281D               	goto	L8
  2623  1012                     l3193:	
  2624                           ;osc.c: 20:             break;
  2625                           
  2626  1012  2818               	goto	l3197
  2627  1013                     l3195:	
  2628                           ;osc.c: 23:             break;
  2629                           
  2630                           ;osc.c: 22:             OSCCONbits.IRCF = 0b110;
  2631                           
  2632                           
  2633                           ;osc.c: 25:             OSCCONbits.IRCF = 0b111;
  2634  1013  3070               	movlw	112
  2635  1014  1683               	bsf	3,5	;RP0=1, select bank1
  2636  1015  1303               	bcf	3,6	;RP1=0, select bank1
  2637  1016  048F               	iorwf	15,f	;volatile
  2638                           
  2639                           ;osc.c: 26:             break;
  2640  1017  2835               	goto	l210
  2641  1018                     l3197:
  2642                           
  2643                           ;osc.c: 28:             OSCCONbits.IRCF = 0b110;
  2644  1018  1683               	bsf	3,5	;RP0=1, select bank1
  2645  1019  1303               	bcf	3,6	;RP1=0, select bank1
  2646  101A  080F               	movf	15,w	;volatile
  2647  101B  398F               	andlw	-113
  2648  101C  3860               	iorlw	96
  2649  101D                     L8:
  2650  101D  008F               	movwf	15	;volatile
  2651                           
  2652                           ;osc.c: 29:             break;
  2653  101E  2835               	goto	l210
  2654  101F                     l3201:
  2655  101F  0812               	movf	int_osc_MHz@freq^(0+384),w
  2656  1020  0090               	movwf	??_int_osc_MHz^(0+384)
  2657  1021  0191               	clrf	(??_int_osc_MHz^(0+384)+1)
  2658                           
  2659                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2660                           ; Switch size 1, requested type "simple"
  2661                           ; Number of cases is 1, Range of values is 0 to 0
  2662                           ; switch strategies available:
  2663                           ; Name         Instructions Cycles
  2664                           ; simple_byte            4     3 (average)
  2665                           ; direct_byte           11     8 (fixed)
  2666                           ; jumptable            260     6 (fixed)
  2667                           ;	Chosen strategy is simple_byte
  2668  1022  0811               	movf	(??_int_osc_MHz+1)^(0+384),w
  2669  1023  3A00               	xorlw	0	; case 0
  2670  1024  1903               	skipnz
  2671  1025  2827               	goto	l4215
  2672  1026  2818               	goto	l3197
  2673  1027                     l4215:
  2674                           
  2675                           ; Switch size 1, requested type "simple"
  2676                           ; Number of cases is 4, Range of values is 1 to 8
  2677                           ; switch strategies available:
  2678                           ; Name         Instructions Cycles
  2679                           ; simple_byte           13     7 (average)
  2680                           ; direct_byte           35    11 (fixed)
  2681                           ; jumptable            263     9 (fixed)
  2682                           ;	Chosen strategy is simple_byte
  2683  1027  0810               	movf	??_int_osc_MHz^(0+384),w
  2684  1028  3A01               	xorlw	1	; case 1
  2685  1029  1903               	skipnz
  2686  102A  2806               	goto	l3189
  2687  102B  3A03               	xorlw	3	; case 2
  2688  102C  1903               	skipnz
  2689  102D  280C               	goto	l3191
  2690  102E  3A06               	xorlw	6	; case 4
  2691  102F  1903               	skipnz
  2692  1030  2812               	goto	l3193
  2693  1031  3A0C               	xorlw	12	; case 8
  2694  1032  1903               	skipnz
  2695  1033  2813               	goto	l3195
  2696  1034  2818               	goto	l3197
  2697  1035                     l210:
  2698                           
  2699                           ;osc.c: 31:     OSCCONbits.SCS = 1;
  2700  1035  140F               	bsf	15,0	;volatile
  2701  1036  0008               	return
  2702  1037                     __end_of_int_osc_MHz:
  2703                           
  2704                           	psect	text6
  2705  12A0                     __ptext6:	
  2706 ;; *************** function _adc_init *****************
  2707 ;; Defined at:
  2708 ;;		line 14 in file "adc.c"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;  adc_cs          1    wreg     unsigned char 
  2711 ;;  vref_plus       1    0[BANK3 ] unsigned char 
  2712 ;;  vref_minus      1    1[BANK3 ] unsigned char 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  adc_cs          1    4[BANK3 ] unsigned char 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2724 ;;      Params:         0       0       0       2       0
  2725 ;;      Locals:         0       0       0       1       0
  2726 ;;      Temps:          0       0       0       2       0
  2727 ;;      Totals:         0       0       0       5       0
  2728 ;;Total ram usage:        5 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; Hardware stack levels required when called: 5
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_setup
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738  12A0                     _adc_init:	
  2739                           ;psect for function _adc_init
  2740                           
  2741                           
  2742                           ;incstack = 0
  2743                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
  2744                           ;adc_init@adc_cs stored from wreg
  2745  12A0  1683               	bsf	3,5	;RP0=1, select bank3
  2746  12A1  1703               	bsf	3,6	;RP1=1, select bank3
  2747  12A2  0094               	movwf	adc_init@adc_cs^(0+384)
  2748  12A3  2ABC               	goto	l3267
  2749  12A4                     l3255:
  2750  12A4  303F               	movlw	-193
  2751  12A5  1283               	bcf	3,5	;RP0=0, select bank0
  2752  12A6  1303               	bcf	3,6	;RP1=0, select bank0
  2753  12A7  059F               	andwf	31,f	;volatile
  2754  12A8  2ADB               	goto	l3271
  2755  12A9                     l3257:
  2756  12A9  2AB5               	goto	l3263
  2757  12AA                     l3259:
  2758  12AA  1283               	bcf	3,5	;RP0=0, select bank0
  2759  12AB  1303               	bcf	3,6	;RP1=0, select bank0
  2760  12AC  081F               	movf	31,w	;volatile
  2761  12AD  393F               	andlw	-193
  2762  12AE  3880               	iorlw	128
  2763  12AF  2ABA               	goto	L10
  2764  12B0                     l3261:
  2765  12B0  30C0               	movlw	192
  2766  12B1  1283               	bcf	3,5	;RP0=0, select bank0
  2767  12B2  1303               	bcf	3,6	;RP1=0, select bank0
  2768  12B3  049F               	iorwf	31,f	;volatile
  2769  12B4  2ADB               	goto	l3271
  2770  12B5                     l3263:
  2771  12B5  1283               	bcf	3,5	;RP0=0, select bank0
  2772  12B6  1303               	bcf	3,6	;RP1=0, select bank0
  2773  12B7  081F               	movf	31,w	;volatile
  2774  12B8  393F               	andlw	-193
  2775  12B9  3840               	iorlw	64
  2776  12BA                     L10:
  2777  12BA  009F               	movwf	31	;volatile
  2778  12BB  2ADB               	goto	l3271
  2779  12BC                     l3267:
  2780  12BC  0814               	movf	adc_init@adc_cs^(0+384),w
  2781  12BD  0092               	movwf	??_adc_init^(0+384)
  2782  12BE  0193               	clrf	(??_adc_init^(0+384)+1)
  2783                           
  2784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2785                           ; Switch size 1, requested type "simple"
  2786                           ; Number of cases is 1, Range of values is 0 to 0
  2787                           ; switch strategies available:
  2788                           ; Name         Instructions Cycles
  2789                           ; simple_byte            4     3 (average)
  2790                           ; direct_byte           11     8 (fixed)
  2791                           ; jumptable            260     6 (fixed)
  2792                           ;	Chosen strategy is simple_byte
  2793  12BF  0813               	movf	(??_adc_init+1)^(0+384),w
  2794  12C0  3A00               	xorlw	0	; case 0
  2795  12C1  1903               	skipnz
  2796  12C2  2AC4               	goto	l4217
  2797  12C3  2AB5               	goto	l3263
  2798  12C4                     l4217:
  2799                           
  2800                           ; Switch size 1, requested type "simple"
  2801                           ; Number of cases is 4, Range of values is 0 to 3
  2802                           ; switch strategies available:
  2803                           ; Name         Instructions Cycles
  2804                           ; simple_byte           13     7 (average)
  2805                           ; direct_byte           20     8 (fixed)
  2806                           ; jumptable            260     6 (fixed)
  2807                           ;	Chosen strategy is simple_byte
  2808  12C4  0812               	movf	??_adc_init^(0+384),w
  2809  12C5  3A00               	xorlw	0	; case 0
  2810  12C6  1903               	skipnz
  2811  12C7  2AA4               	goto	l3255
  2812  12C8  3A01               	xorlw	1	; case 1
  2813  12C9  1903               	skipnz
  2814  12CA  2AA9               	goto	l3257
  2815  12CB  3A03               	xorlw	3	; case 2
  2816  12CC  1903               	skipnz
  2817  12CD  2AAA               	goto	l3259
  2818  12CE  3A01               	xorlw	1	; case 3
  2819  12CF  1903               	skipnz
  2820  12D0  2AB0               	goto	l3261
  2821  12D1  2AB5               	goto	l3263
  2822  12D2                     l267:
  2823  12D2  2AD7               	goto	l270
  2824  12D3                     l269:
  2825  12D3  1683               	bsf	3,5	;RP0=1, select bank1
  2826  12D4  1303               	bcf	3,6	;RP1=0, select bank1
  2827  12D5  161F               	bsf	31,4	;volatile
  2828  12D6  2AF6               	goto	l3275
  2829  12D7                     l270:
  2830  12D7  1683               	bsf	3,5	;RP0=1, select bank1
  2831  12D8  1303               	bcf	3,6	;RP1=0, select bank1
  2832  12D9  121F               	bcf	31,4	;volatile
  2833  12DA  2AF6               	goto	l3275
  2834  12DB                     l3271:
  2835  12DB  1683               	bsf	3,5	;RP0=1, select bank3
  2836  12DC  1703               	bsf	3,6	;RP1=1, select bank3
  2837  12DD  0810               	movf	adc_init@vref_plus^(0+384),w
  2838  12DE  0092               	movwf	??_adc_init^(0+384)
  2839  12DF  0193               	clrf	(??_adc_init^(0+384)+1)
  2840                           
  2841                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2842                           ; Switch size 1, requested type "simple"
  2843                           ; Number of cases is 1, Range of values is 0 to 0
  2844                           ; switch strategies available:
  2845                           ; Name         Instructions Cycles
  2846                           ; simple_byte            4     3 (average)
  2847                           ; direct_byte           11     8 (fixed)
  2848                           ; jumptable            260     6 (fixed)
  2849                           ;	Chosen strategy is simple_byte
  2850  12E0  0813               	movf	(??_adc_init+1)^(0+384),w
  2851  12E1  3A00               	xorlw	0	; case 0
  2852  12E2  1903               	skipnz
  2853  12E3  2AE5               	goto	l4219
  2854  12E4  2AD7               	goto	l270
  2855  12E5                     l4219:
  2856                           
  2857                           ; Switch size 1, requested type "simple"
  2858                           ; Number of cases is 2, Range of values is 0 to 1
  2859                           ; switch strategies available:
  2860                           ; Name         Instructions Cycles
  2861                           ; simple_byte            7     4 (average)
  2862                           ; direct_byte           14     8 (fixed)
  2863                           ; jumptable            260     6 (fixed)
  2864                           ;	Chosen strategy is simple_byte
  2865  12E5  0812               	movf	??_adc_init^(0+384),w
  2866  12E6  3A00               	xorlw	0	; case 0
  2867  12E7  1903               	skipnz
  2868  12E8  2AD2               	goto	l267
  2869  12E9  3A01               	xorlw	1	; case 1
  2870  12EA  1903               	skipnz
  2871  12EB  2AD3               	goto	l269
  2872  12EC  2AD7               	goto	l270
  2873  12ED                     l272:
  2874  12ED  2AF2               	goto	l275
  2875  12EE                     l274:
  2876  12EE  1683               	bsf	3,5	;RP0=1, select bank1
  2877  12EF  1303               	bcf	3,6	;RP1=0, select bank1
  2878  12F0  169F               	bsf	31,5	;volatile
  2879  12F1  2B08               	goto	l273
  2880  12F2                     l275:
  2881  12F2  1683               	bsf	3,5	;RP0=1, select bank1
  2882  12F3  1303               	bcf	3,6	;RP1=0, select bank1
  2883  12F4  129F               	bcf	31,5	;volatile
  2884  12F5  2B08               	goto	l273
  2885  12F6                     l3275:
  2886  12F6  1683               	bsf	3,5	;RP0=1, select bank3
  2887  12F7  1703               	bsf	3,6	;RP1=1, select bank3
  2888  12F8  0811               	movf	adc_init@vref_minus^(0+384),w
  2889  12F9  0092               	movwf	??_adc_init^(0+384)
  2890  12FA  0193               	clrf	(??_adc_init^(0+384)+1)
  2891                           
  2892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2893                           ; Switch size 1, requested type "simple"
  2894                           ; Number of cases is 1, Range of values is 0 to 0
  2895                           ; switch strategies available:
  2896                           ; Name         Instructions Cycles
  2897                           ; simple_byte            4     3 (average)
  2898                           ; direct_byte           11     8 (fixed)
  2899                           ; jumptable            260     6 (fixed)
  2900                           ;	Chosen strategy is simple_byte
  2901  12FB  0813               	movf	(??_adc_init+1)^(0+384),w
  2902  12FC  3A00               	xorlw	0	; case 0
  2903  12FD  1903               	skipnz
  2904  12FE  2B00               	goto	l4221
  2905  12FF  2AF2               	goto	l275
  2906  1300                     l4221:
  2907                           
  2908                           ; Switch size 1, requested type "simple"
  2909                           ; Number of cases is 2, Range of values is 0 to 1
  2910                           ; switch strategies available:
  2911                           ; Name         Instructions Cycles
  2912                           ; simple_byte            7     4 (average)
  2913                           ; direct_byte           14     8 (fixed)
  2914                           ; jumptable            260     6 (fixed)
  2915                           ;	Chosen strategy is simple_byte
  2916  1300  0812               	movf	??_adc_init^(0+384),w
  2917  1301  3A00               	xorlw	0	; case 0
  2918  1302  1903               	skipnz
  2919  1303  2AED               	goto	l272
  2920  1304  3A01               	xorlw	1	; case 1
  2921  1305  1903               	skipnz
  2922  1306  2AEE               	goto	l274
  2923  1307  2AF2               	goto	l275
  2924  1308                     l273:
  2925  1308  179F               	bsf	31,7	;volatile
  2926  1309  1283               	bcf	3,5	;RP0=0, select bank0
  2927  130A  1303               	bcf	3,6	;RP1=0, select bank0
  2928  130B  141F               	bsf	31,0	;volatile
  2929  130C  1683               	bsf	3,5	;RP0=1, select bank1
  2930  130D  1303               	bcf	3,6	;RP1=0, select bank1
  2931  130E  170C               	bsf	12,6	;volatile
  2932  130F  1283               	bcf	3,5	;RP0=0, select bank0
  2933  1310  1303               	bcf	3,6	;RP1=0, select bank0
  2934  1311  130C               	bcf	12,6	;volatile
  2935  1312  0008               	return
  2936  1313                     __end_of_adc_init:
  2937                           
  2938                           	psect	text7
  2939  1158                     __ptext7:	
  2940 ;; *************** function _USART_set *****************
  2941 ;; Defined at:
  2942 ;;		line 12 in file "USART.c"
  2943 ;; Parameters:    Size  Location     Type
  2944 ;;  baudrate        4   14[BANK3 ] const unsigned long 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;		None
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  1    wreg      void 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0, pclath, cstack
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2956 ;;      Params:         0       0       0       4       0
  2957 ;;      Locals:         0       0       0       0       0
  2958 ;;      Temps:          0       0       0      12       0
  2959 ;;      Totals:         0       0       0      16       0
  2960 ;;Total ram usage:       16 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; Hardware stack levels required when called: 6
  2963 ;; This function calls:
  2964 ;;		___lldiv
  2965 ;; This function is called by:
  2966 ;;		_setup
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970  1158                     _USART_set:	
  2971                           ;psect for function _USART_set
  2972                           
  2973                           
  2974                           ;USART.c: 12: void USART_set(const unsigned long int baudrate);USART.c: 13: {;USART.c: 1
      +                          4:     TXSTAbits.BRGH = 1;
  2975                           
  2976                           ;incstack = 0
  2977                           ; Regs used in _USART_set: [wreg+status,2+status,0+pclath+cstack]
  2978  1158  1683               	bsf	3,5	;RP0=1, select bank1
  2979  1159  1303               	bcf	3,6	;RP1=0, select bank1
  2980  115A  1518               	bsf	24,2	;volatile
  2981                           
  2982                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  2983  115B  1683               	bsf	3,5	;RP0=1, select bank3
  2984  115C  1703               	bsf	3,6	;RP1=1, select bank3
  2985  115D  1587               	bsf	7,3	;volatile
  2986                           
  2987                           ;USART.c: 16:     SPBRGH = 0;
  2988  115E  1683               	bsf	3,5	;RP0=1, select bank1
  2989  115F  1303               	bcf	3,6	;RP1=0, select bank1
  2990  1160  019A               	clrf	26	;volatile
  2991                           
  2992                           ;USART.c: 17:     SPBRG = (1000000 - baudrate * 4) / (baudrate * 4);
  2993  1161  1683               	bsf	3,5	;RP0=1, select bank3
  2994  1162  1703               	bsf	3,6	;RP1=1, select bank3
  2995  1163  081E               	movf	USART_set@baudrate^(0+384),w
  2996  1164  00A2               	movwf	??_USART_set^(0+384)
  2997  1165  081F               	movf	(USART_set@baudrate+1)^(0+384),w
  2998  1166  00A3               	movwf	(??_USART_set^(0+384)+1)
  2999  1167  0820               	movf	(USART_set@baudrate+2)^(0+384),w
  3000  1168  00A4               	movwf	(??_USART_set^(0+384)+2)
  3001  1169  0821               	movf	(USART_set@baudrate+3)^(0+384),w
  3002  116A  00A5               	movwf	(??_USART_set^(0+384)+3)
  3003  116B  3002               	movlw	2
  3004  116C                     u3805:
  3005  116C  1003               	clrc
  3006  116D  0DA2               	rlf	??_USART_set^(0+384),f
  3007  116E  0DA3               	rlf	(??_USART_set^(0+384)+1),f
  3008  116F  0DA4               	rlf	(??_USART_set^(0+384)+2),f
  3009  1170  0DA5               	rlf	(??_USART_set^(0+384)+3),f
  3010  1171  3EFF               	addlw	-1
  3011  1172  1D03               	skipz
  3012  1173  296C               	goto	u3805
  3013  1174  0825               	movf	(??_USART_set+3)^(0+384),w
  3014  1175  0093               	movwf	(___lldiv@divisor+3)^(0+384)
  3015  1176  0824               	movf	(??_USART_set+2)^(0+384),w
  3016  1177  0092               	movwf	(___lldiv@divisor+2)^(0+384)
  3017  1178  0823               	movf	(??_USART_set+1)^(0+384),w
  3018  1179  0091               	movwf	(___lldiv@divisor+1)^(0+384)
  3019  117A  0822               	movf	??_USART_set^(0+384),w
  3020  117B  0090               	movwf	___lldiv@divisor^(0+384)
  3021  117C  081E               	movf	USART_set@baudrate^(0+384),w
  3022  117D  00A6               	movwf	(??_USART_set+4)^(0+384)
  3023  117E  081F               	movf	(USART_set@baudrate+1)^(0+384),w
  3024  117F  00A7               	movwf	((??_USART_set+4)^(0+384)+1)
  3025  1180  0820               	movf	(USART_set@baudrate+2)^(0+384),w
  3026  1181  00A8               	movwf	((??_USART_set+4)^(0+384)+2)
  3027  1182  0821               	movf	(USART_set@baudrate+3)^(0+384),w
  3028  1183  00A9               	movwf	((??_USART_set+4)^(0+384)+3)
  3029  1184  3002               	movlw	2
  3030  1185                     u3815:
  3031  1185  1003               	clrc
  3032  1186  0DA6               	rlf	(??_USART_set+4)^(0+384),f
  3033  1187  0DA7               	rlf	((??_USART_set+4)^(0+384)+1),f
  3034  1188  0DA8               	rlf	((??_USART_set+4)^(0+384)+2),f
  3035  1189  0DA9               	rlf	((??_USART_set+4)^(0+384)+3),f
  3036  118A  3EFF               	addlw	-1
  3037  118B  1D03               	skipz
  3038  118C  2985               	goto	u3815
  3039  118D  3040               	movlw	64
  3040  118E  00AA               	movwf	(??_USART_set+8)^(0+384)
  3041  118F  3042               	movlw	66
  3042  1190  00AB               	movwf	((??_USART_set+8)^(0+384)+1)
  3043  1191  300F               	movlw	15
  3044  1192  00AC               	movwf	((??_USART_set+8)^(0+384)+2)
  3045  1193  3000               	movlw	0
  3046  1194  00AD               	movwf	((??_USART_set+8)^(0+384)+3)
  3047  1195  0826               	movf	(??_USART_set+4)^(0+384),w
  3048  1196  02AA               	subwf	(??_USART_set+8)^(0+384),f
  3049  1197  0827               	movf	(??_USART_set+5)^(0+384),w
  3050  1198  1C03               	skipc
  3051  1199  0F27               	incfsz	(??_USART_set+5)^(0+384),w
  3052  119A  299C               	goto	u3821
  3053  119B  299D               	goto	u3822
  3054  119C                     u3821:
  3055  119C  02AB               	subwf	((??_USART_set+8)^(0+384)+1),f
  3056  119D                     u3822:
  3057  119D  0828               	movf	(??_USART_set+6)^(0+384),w
  3058  119E  1C03               	skipc
  3059  119F  0F28               	incfsz	(??_USART_set+6)^(0+384),w
  3060  11A0  29A2               	goto	u3823
  3061  11A1  29A3               	goto	u3824
  3062  11A2                     u3823:
  3063  11A2  02AC               	subwf	((??_USART_set+8)^(0+384)+2),f
  3064  11A3                     u3824:
  3065  11A3  0829               	movf	(??_USART_set+7)^(0+384),w
  3066  11A4  1C03               	skipc
  3067  11A5  0F29               	incfsz	(??_USART_set+7)^(0+384),w
  3068  11A6  29A8               	goto	u3825
  3069  11A7  29A9               	goto	u3826
  3070  11A8                     u3825:
  3071  11A8  02AD               	subwf	((??_USART_set+8)^(0+384)+3),f
  3072  11A9                     u3826:
  3073  11A9  082D               	movf	(??_USART_set+11)^(0+384),w
  3074  11AA  0097               	movwf	(___lldiv@dividend+3)^(0+384)
  3075  11AB  082C               	movf	(??_USART_set+10)^(0+384),w
  3076  11AC  0096               	movwf	(___lldiv@dividend+2)^(0+384)
  3077  11AD  082B               	movf	(??_USART_set+9)^(0+384),w
  3078  11AE  0095               	movwf	(___lldiv@dividend+1)^(0+384)
  3079  11AF  082A               	movf	(??_USART_set+8)^(0+384),w
  3080  11B0  0094               	movwf	___lldiv@dividend^(0+384)
  3081  11B1  160A  118A  2091   	fcall	___lldiv
  3082  11B4  1683               	bsf	3,5	;RP0=1, select bank3
  3083  11B5  1703               	bsf	3,6	;RP1=1, select bank3
  3084  11B6  0810               	movf	?___lldiv^(0+384),w
  3085  11B7  1683               	bsf	3,5	;RP0=1, select bank1
  3086  11B8  1303               	bcf	3,6	;RP1=0, select bank1
  3087  11B9  0099               	movwf	25	;volatile
  3088                           
  3089                           ;USART.c: 18:     TXSTAbits.SYNC = 0;
  3090  11BA  1218               	bcf	24,4	;volatile
  3091                           
  3092                           ;USART.c: 19:     RCSTAbits.SPEN = 1;
  3093  11BB  1283               	bcf	3,5	;RP0=0, select bank0
  3094  11BC  1303               	bcf	3,6	;RP1=0, select bank0
  3095  11BD  1798               	bsf	24,7	;volatile
  3096                           
  3097                           ;USART.c: 22:     TXSTAbits.TX9 = 0;
  3098  11BE  1683               	bsf	3,5	;RP0=1, select bank1
  3099  11BF  1303               	bcf	3,6	;RP1=0, select bank1
  3100  11C0  1318               	bcf	24,6	;volatile
  3101                           
  3102                           ;USART.c: 24:     TXSTAbits.TXEN = 1;
  3103  11C1  1698               	bsf	24,5	;volatile
  3104  11C2  0008               	return
  3105  11C3                     __end_of_USART_set:
  3106                           
  3107                           	psect	text8
  3108  1EC4                     __ptext8:	
  3109 ;; *************** function _I2C_Master_Init *****************
  3110 ;; Defined at:
  3111 ;;		line 14 in file "I2C.c"
  3112 ;; Parameters:    Size  Location     Type
  3113 ;;  c               4   14[BANK3 ] const unsigned long 
  3114 ;; Auto vars:     Size  Location     Type
  3115 ;;		None
  3116 ;; Return value:  Size  Location     Type
  3117 ;;                  1    wreg      void 
  3118 ;; Registers used:
  3119 ;;		wreg, status,2, status,0, pclath, cstack
  3120 ;; Tracked objects:
  3121 ;;		On entry : 0/0
  3122 ;;		On exit  : 0/0
  3123 ;;		Unchanged: 0/0
  3124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3125 ;;      Params:         0       0       0       4       0
  3126 ;;      Locals:         0       0       0       0       0
  3127 ;;      Temps:          0       0       0       4       0
  3128 ;;      Totals:         0       0       0       8       0
  3129 ;;Total ram usage:        8 bytes
  3130 ;; Hardware stack levels used: 1
  3131 ;; Hardware stack levels required when called: 6
  3132 ;; This function calls:
  3133 ;;		___lldiv
  3134 ;; This function is called by:
  3135 ;;		_setup
  3136 ;; This function uses a non-reentrant model
  3137 ;;
  3138                           
  3139  1EC4                     _I2C_Master_Init:	
  3140                           ;psect for function _I2C_Master_Init
  3141                           
  3142                           
  3143                           ;I2C.c: 14: void I2C_Master_Init(const unsigned long c);I2C.c: 15: {;I2C.c: 16:     SSPC
      +                          ON = 0b00101000;
  3144                           
  3145                           ;incstack = 0
  3146                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3147  1EC4  3028               	movlw	40
  3148  1EC5  1283               	bcf	3,5	;RP0=0, select bank0
  3149  1EC6  1303               	bcf	3,6	;RP1=0, select bank0
  3150  1EC7  0094               	movwf	20	;volatile
  3151                           
  3152                           ;I2C.c: 17:     SSPCON2 = 0;
  3153  1EC8  1683               	bsf	3,5	;RP0=1, select bank1
  3154  1EC9  1303               	bcf	3,6	;RP1=0, select bank1
  3155  1ECA  0191               	clrf	17	;volatile
  3156                           
  3157                           ;I2C.c: 18:     SSPADD = (1000000/(4*c))-1;
  3158  1ECB  1683               	bsf	3,5	;RP0=1, select bank3
  3159  1ECC  1703               	bsf	3,6	;RP1=1, select bank3
  3160  1ECD  081E               	movf	I2C_Master_Init@c^(0+384),w
  3161  1ECE  00A2               	movwf	??_I2C_Master_Init^(0+384)
  3162  1ECF  081F               	movf	(I2C_Master_Init@c+1)^(0+384),w
  3163  1ED0  00A3               	movwf	(??_I2C_Master_Init^(0+384)+1)
  3164  1ED1  0820               	movf	(I2C_Master_Init@c+2)^(0+384),w
  3165  1ED2  00A4               	movwf	(??_I2C_Master_Init^(0+384)+2)
  3166  1ED3  0821               	movf	(I2C_Master_Init@c+3)^(0+384),w
  3167  1ED4  00A5               	movwf	(??_I2C_Master_Init^(0+384)+3)
  3168  1ED5  3002               	movlw	2
  3169  1ED6                     u3855:
  3170  1ED6  1003               	clrc
  3171  1ED7  0DA2               	rlf	??_I2C_Master_Init^(0+384),f
  3172  1ED8  0DA3               	rlf	(??_I2C_Master_Init^(0+384)+1),f
  3173  1ED9  0DA4               	rlf	(??_I2C_Master_Init^(0+384)+2),f
  3174  1EDA  0DA5               	rlf	(??_I2C_Master_Init^(0+384)+3),f
  3175  1EDB  3EFF               	addlw	-1
  3176  1EDC  1D03               	skipz
  3177  1EDD  2ED6               	goto	u3855
  3178  1EDE  0825               	movf	(??_I2C_Master_Init+3)^(0+384),w
  3179  1EDF  0093               	movwf	(___lldiv@divisor+3)^(0+384)
  3180  1EE0  0824               	movf	(??_I2C_Master_Init+2)^(0+384),w
  3181  1EE1  0092               	movwf	(___lldiv@divisor+2)^(0+384)
  3182  1EE2  0823               	movf	(??_I2C_Master_Init+1)^(0+384),w
  3183  1EE3  0091               	movwf	(___lldiv@divisor+1)^(0+384)
  3184  1EE4  0822               	movf	??_I2C_Master_Init^(0+384),w
  3185  1EE5  0090               	movwf	___lldiv@divisor^(0+384)
  3186  1EE6  3000               	movlw	0
  3187  1EE7  0097               	movwf	(___lldiv@dividend+3)^(0+384)
  3188  1EE8  300F               	movlw	15
  3189  1EE9  0096               	movwf	(___lldiv@dividend+2)^(0+384)
  3190  1EEA  3042               	movlw	66
  3191  1EEB  0095               	movwf	(___lldiv@dividend+1)^(0+384)
  3192  1EEC  3040               	movlw	64
  3193  1EED  0094               	movwf	___lldiv@dividend^(0+384)
  3194  1EEE  160A  118A  2091   	fcall	___lldiv
  3195  1EF1  1683               	bsf	3,5	;RP0=1, select bank3
  3196  1EF2  1703               	bsf	3,6	;RP1=1, select bank3
  3197  1EF3  0810               	movf	?___lldiv^(0+384),w
  3198  1EF4  3EFF               	addlw	255
  3199  1EF5  1683               	bsf	3,5	;RP0=1, select bank1
  3200  1EF6  1303               	bcf	3,6	;RP1=0, select bank1
  3201  1EF7  0093               	movwf	19	;volatile
  3202                           
  3203                           ;I2C.c: 19:     SSPSTAT = 0;
  3204  1EF8  0194               	clrf	20	;volatile
  3205                           
  3206                           ;I2C.c: 20:     TRISCbits.TRISC3 = 1;
  3207  1EF9  1587               	bsf	7,3	;volatile
  3208                           
  3209                           ;I2C.c: 21:     TRISCbits.TRISC4 = 1;
  3210  1EFA  1607               	bsf	7,4	;volatile
  3211  1EFB  0008               	return
  3212  1EFC                     __end_of_I2C_Master_Init:
  3213                           
  3214                           	psect	text9
  3215  1E67                     __ptext9:	
  3216 ;; *************** function _servo *****************
  3217 ;; Defined at:
  3218 ;;		line 163 in file "main_slave_p1.c"
  3219 ;; Parameters:    Size  Location     Type
  3220 ;;  mov             2    4[BANK3 ] unsigned short 
  3221 ;; Auto vars:     Size  Location     Type
  3222 ;;		None
  3223 ;; Return value:  Size  Location     Type
  3224 ;;                  1    wreg      void 
  3225 ;; Registers used:
  3226 ;;		wreg, status,2, status,0, pclath, cstack
  3227 ;; Tracked objects:
  3228 ;;		On entry : 0/0
  3229 ;;		On exit  : 0/0
  3230 ;;		Unchanged: 0/0
  3231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3232 ;;      Params:         0       0       0       2       0
  3233 ;;      Locals:         0       0       0       0       0
  3234 ;;      Temps:          0       0       0       0       0
  3235 ;;      Totals:         0       0       0       2       0
  3236 ;;Total ram usage:        2 bytes
  3237 ;; Hardware stack levels used: 1
  3238 ;; Hardware stack levels required when called: 6
  3239 ;; This function calls:
  3240 ;;		_USART_send
  3241 ;;		_pwm_duty_cycle
  3242 ;; This function is called by:
  3243 ;;		_main
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           
  3247  1E67                     _servo:	
  3248                           ;psect for function _servo
  3249                           
  3250                           
  3251                           ;main_slave_p1.c: 164:     if (mov == 1){
  3252                           
  3253                           ;incstack = 0
  3254                           ; Regs used in _servo: [wreg+status,2+status,0+pclath+cstack]
  3255  1E67  1683               	bsf	3,5	;RP0=1, select bank3
  3256  1E68  1703               	bsf	3,6	;RP1=1, select bank3
  3257  1E69  0314               	decf	servo@mov^(0+384),w
  3258  1E6A  0415               	iorwf	(servo@mov+1)^(0+384),w
  3259  1E6B  1D03               	btfss	3,2
  3260  1E6C  2E6F               	goto	l3807
  3261                           
  3262                           ;main_slave_p1.c: 165:         pwm_duty_cycle(94);
  3263  1E6D  305E               	movlw	94
  3264  1E6E  2E70               	goto	L11
  3265  1E6F                     l3807:	
  3266                           ;main_slave_p1.c: 166:     }
  3267                           
  3268                           
  3269                           ;main_slave_p1.c: 168:         pwm_duty_cycle(31);
  3270  1E6F  301F               	movlw	31
  3271  1E70                     L11:
  3272  1E70  0090               	movwf	pwm_duty_cycle@duty_cycle^(0+384)
  3273  1E71  3000               	movlw	0
  3274  1E72  0091               	movwf	(pwm_duty_cycle@duty_cycle^(0+384)+1)
  3275  1E73  160A  158A  261C  160A  158A  	fcall	_pwm_duty_cycle
  3276                           
  3277                           ;main_slave_p1.c: 171:     if (mov != last_mov){
  3278  1E78  1683               	bsf	3,5	;RP0=1, select bank3
  3279  1E79  1703               	bsf	3,6	;RP1=1, select bank3
  3280  1E7A  0869               	movf	(_last_mov+1)^(0+384),w
  3281  1E7B  0615               	xorwf	(servo@mov+1)^(0+384),w
  3282  1E7C  1D03               	skipz
  3283  1E7D  2E80               	goto	u4665
  3284  1E7E  0868               	movf	_last_mov^(0+384),w
  3285  1E7F  0614               	xorwf	servo@mov^(0+384),w
  3286  1E80                     u4665:
  3287  1E80  1903               	skipnz
  3288  1E81  0008               	return
  3289                           
  3290                           ;main_slave_p1.c: 172:         last_mov = mov;
  3291  1E82  0815               	movf	(servo@mov+1)^(0+384),w
  3292  1E83  00E9               	movwf	(_last_mov+1)^(0+384)
  3293  1E84  0814               	movf	servo@mov^(0+384),w
  3294  1E85  00E8               	movwf	_last_mov^(0+384)
  3295                           
  3296                           ;main_slave_p1.c: 173:         USART_send(!mov + 128);
  3297  1E86  0814               	movf	servo@mov^(0+384),w
  3298  1E87  0415               	iorwf	(servo@mov+1)^(0+384),w
  3299  1E88  1D03               	btfss	3,2
  3300  1E89  2E8C               	goto	u4670
  3301  1E8A  3001               	movlw	1
  3302  1E8B  2E8D               	goto	u4680
  3303  1E8C                     u4670:
  3304  1E8C  3000               	movlw	0
  3305  1E8D                     u4680:
  3306  1E8D  3E80               	addlw	128
  3307  1E8E  160A  158A  2591   	fcall	_USART_send
  3308  1E91  0008               	return
  3309  1E92                     __end_of_servo:
  3310                           
  3311                           	psect	text10
  3312  1E1C                     __ptext10:	
  3313 ;; *************** function _pwm_duty_cycle *****************
  3314 ;; Defined at:
  3315 ;;		line 40 in file "pwm.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;  duty_cycle      2    0[BANK3 ] unsigned int 
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;		None
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      void 
  3322 ;; Registers used:
  3323 ;;		wreg, status,2, status,0
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3329 ;;      Params:         0       0       0       2       0
  3330 ;;      Locals:         0       0       0       0       0
  3331 ;;      Temps:          0       0       0       2       0
  3332 ;;      Totals:         0       0       0       4       0
  3333 ;;Total ram usage:        4 bytes
  3334 ;; Hardware stack levels used: 1
  3335 ;; Hardware stack levels required when called: 5
  3336 ;; This function calls:
  3337 ;;		Nothing
  3338 ;; This function is called by:
  3339 ;;		_servo
  3340 ;; This function uses a non-reentrant model
  3341 ;;
  3342                           
  3343  1E1C                     _pwm_duty_cycle:	
  3344                           ;psect for function _pwm_duty_cycle
  3345                           
  3346                           
  3347                           ;pwm.c: 41:     CCPR1L = (uint8_t)(duty_cycle>>2);
  3348                           
  3349                           ;incstack = 0
  3350                           ; Regs used in _pwm_duty_cycle: [wreg+status,2+status,0]
  3351  1E1C  1683               	bsf	3,5	;RP0=1, select bank3
  3352  1E1D  1703               	bsf	3,6	;RP1=1, select bank3
  3353  1E1E  0811               	movf	(pwm_duty_cycle@duty_cycle+1)^(0+384),w
  3354  1E1F  0093               	movwf	(??_pwm_duty_cycle^(0+384)+1)
  3355  1E20  0810               	movf	pwm_duty_cycle@duty_cycle^(0+384),w
  3356  1E21  0092               	movwf	??_pwm_duty_cycle^(0+384)
  3357  1E22  1003               	clrc
  3358  1E23  0C93               	rrf	(??_pwm_duty_cycle^(0+384)+1),f
  3359  1E24  0C92               	rrf	??_pwm_duty_cycle^(0+384),f
  3360  1E25  1003               	clrc
  3361  1E26  0C93               	rrf	(??_pwm_duty_cycle^(0+384)+1),f
  3362  1E27  0C92               	rrf	??_pwm_duty_cycle^(0+384),f
  3363  1E28  0812               	movf	??_pwm_duty_cycle^(0+384),w
  3364  1E29  1283               	bcf	3,5	;RP0=0, select bank0
  3365  1E2A  1303               	bcf	3,6	;RP1=0, select bank0
  3366  1E2B  0095               	movwf	21	;volatile
  3367                           
  3368                           ;pwm.c: 42:     CCP1CONbits.DC1B = duty_cycle & 0b11;
  3369  1E2C  1683               	bsf	3,5	;RP0=1, select bank3
  3370  1E2D  1703               	bsf	3,6	;RP1=1, select bank3
  3371  1E2E  0810               	movf	pwm_duty_cycle@duty_cycle^(0+384),w
  3372  1E2F  3903               	andlw	3
  3373  1E30  0092               	movwf	??_pwm_duty_cycle^(0+384)
  3374  1E31  0E92               	swapf	??_pwm_duty_cycle^(0+384),f
  3375  1E32  1283               	bcf	3,5	;RP0=0, select bank0
  3376  1E33  1303               	bcf	3,6	;RP1=0, select bank0
  3377  1E34  0817               	movf	23,w	;volatile
  3378  1E35  1683               	bsf	3,5	;RP0=1, select bank3
  3379  1E36  1703               	bsf	3,6	;RP1=1, select bank3
  3380  1E37  0612               	xorwf	??_pwm_duty_cycle^(0+384),w
  3381  1E38  39CF               	andlw	-49
  3382  1E39  0612               	xorwf	??_pwm_duty_cycle^(0+384),w
  3383  1E3A  1283               	bcf	3,5	;RP0=0, select bank0
  3384  1E3B  1303               	bcf	3,6	;RP1=0, select bank0
  3385  1E3C  0097               	movwf	23	;volatile
  3386  1E3D  0008               	return
  3387  1E3E                     __end_of_pwm_duty_cycle:
  3388                           
  3389                           	psect	text11
  3390  1DDC                     __ptext11:	
  3391 ;; *************** function _pulse_step *****************
  3392 ;; Defined at:
  3393 ;;		line 177 in file "main_slave_p1.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  bt              2    0[BANK3 ] unsigned short 
  3396 ;;  signal          2    2[BANK3 ] unsigned short 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;		None
  3399 ;; Return value:  Size  Location     Type
  3400 ;;                  1    wreg      void 
  3401 ;; Registers used:
  3402 ;;		wreg, status,2, status,0
  3403 ;; Tracked objects:
  3404 ;;		On entry : 0/0
  3405 ;;		On exit  : 0/0
  3406 ;;		Unchanged: 0/0
  3407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3408 ;;      Params:         0       0       0       4       0
  3409 ;;      Locals:         0       0       0       0       0
  3410 ;;      Temps:          0       0       0       0       0
  3411 ;;      Totals:         0       0       0       4       0
  3412 ;;Total ram usage:        4 bytes
  3413 ;; Hardware stack levels used: 1
  3414 ;; Hardware stack levels required when called: 5
  3415 ;; This function calls:
  3416 ;;		Nothing
  3417 ;; This function is called by:
  3418 ;;		_main
  3419 ;; This function uses a non-reentrant model
  3420 ;;
  3421                           
  3422  1DDC                     _pulse_step:	
  3423                           ;psect for function _pulse_step
  3424                           
  3425                           
  3426                           ;main_slave_p1.c: 178:     if (bt == 1){
  3427                           
  3428                           ;incstack = 0
  3429                           ; Regs used in _pulse_step: [wreg+status,2+status,0]
  3430  1DDC  1683               	bsf	3,5	;RP0=1, select bank3
  3431  1DDD  1703               	bsf	3,6	;RP1=1, select bank3
  3432  1DDE  0310               	decf	pulse_step@bt^(0+384),w
  3433  1DDF  0411               	iorwf	(pulse_step@bt+1)^(0+384),w
  3434  1DE0  1D03               	btfss	3,2
  3435  1DE1  2DEA               	goto	l3731
  3436                           
  3437                           ;main_slave_p1.c: 179:         PORTDbits.RD1 = signal;
  3438  1DE2  0C12               	rrf	pulse_step@signal^(0+384),w
  3439  1DE3  1283               	bcf	3,5	;RP0=0, select bank0
  3440  1DE4  1303               	bcf	3,6	;RP1=0, select bank0
  3441  1DE5  1C03               	skipc
  3442  1DE6  1088               	bcf	8,1	;volatile
  3443  1DE7  1803               	skipnc
  3444  1DE8  1488               	bsf	8,1	;volatile
  3445                           
  3446                           ;main_slave_p1.c: 180:     }
  3447  1DE9  0008               	return
  3448  1DEA                     l3731:
  3449  1DEA  0810               	movf	pulse_step@bt^(0+384),w
  3450  1DEB  0411               	iorwf	(pulse_step@bt+1)^(0+384),w
  3451  1DEC  1D03               	btfss	3,2
  3452  1DED  2DF6               	goto	l179
  3453                           
  3454                           ;main_slave_p1.c: 182:         PORTDbits.RD1 = signal;
  3455  1DEE  0C12               	rrf	pulse_step@signal^(0+384),w
  3456  1DEF  1283               	bcf	3,5	;RP0=0, select bank0
  3457  1DF0  1303               	bcf	3,6	;RP1=0, select bank0
  3458  1DF1  1C03               	skipc
  3459  1DF2  1088               	bcf	8,1	;volatile
  3460  1DF3  1803               	skipnc
  3461  1DF4  1488               	bsf	8,1	;volatile
  3462                           
  3463                           ;main_slave_p1.c: 183:     }
  3464  1DF5  0008               	return
  3465  1DF6                     l179:	
  3466                           ;main_slave_p1.c: 184:     else {PORTDbits.RD1 = 0;}
  3467                           
  3468  1DF6  1283               	bcf	3,5	;RP0=0, select bank0
  3469  1DF7  1303               	bcf	3,6	;RP1=0, select bank0
  3470  1DF8  1088               	bcf	8,1	;volatile
  3471  1DF9  0008               	return
  3472  1DFA                     __end_of_pulse_step:
  3473                           
  3474                           	psect	text12
  3475  1E3E                     __ptext12:	
  3476 ;; *************** function _motor_dc *****************
  3477 ;; Defined at:
  3478 ;;		line 149 in file "main_slave_p1.c"
  3479 ;; Parameters:    Size  Location     Type
  3480 ;;  temp            2   11[BANK3 ] int 
  3481 ;; Auto vars:     Size  Location     Type
  3482 ;;		None
  3483 ;; Return value:  Size  Location     Type
  3484 ;;                  1    wreg      void 
  3485 ;; Registers used:
  3486 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3487 ;; Tracked objects:
  3488 ;;		On entry : 0/0
  3489 ;;		On exit  : 0/0
  3490 ;;		Unchanged: 0/0
  3491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3492 ;;      Params:         0       0       0       2       0
  3493 ;;      Locals:         0       0       0       0       0
  3494 ;;      Temps:          0       0       0       0       0
  3495 ;;      Totals:         0       0       0       2       0
  3496 ;;Total ram usage:        2 bytes
  3497 ;; Hardware stack levels used: 1
  3498 ;; Hardware stack levels required when called: 6
  3499 ;; This function calls:
  3500 ;;		_USART_send
  3501 ;; This function is called by:
  3502 ;;		_main
  3503 ;; This function uses a non-reentrant model
  3504 ;;
  3505                           
  3506  1E3E                     _motor_dc:	
  3507                           ;psect for function _motor_dc
  3508                           
  3509                           
  3510                           ;main_slave_p1.c: 150:     if(temp >= 22){
  3511                           
  3512                           ;incstack = 0
  3513                           ; Regs used in _motor_dc: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3514  1E3E  1683               	bsf	3,5	;RP0=1, select bank3
  3515  1E3F  1703               	bsf	3,6	;RP1=1, select bank3
  3516  1E40  081C               	movf	(motor_dc@temp+1)^(0+384),w
  3517  1E41  3A80               	xorlw	128
  3518  1E42  00FF               	movwf	127
  3519  1E43  3080               	movlw	128
  3520  1E44  027F               	subwf	127,w
  3521  1E45  1D03               	skipz
  3522  1E46  2E49               	goto	u4635
  3523  1E47  3016               	movlw	22
  3524  1E48  021B               	subwf	motor_dc@temp^(0+384),w
  3525  1E49                     u4635:
  3526  1E49  1C03               	skipc
  3527  1E4A  2E4F               	goto	l165
  3528                           
  3529                           ;main_slave_p1.c: 151:         PORTBbits.RB0 = 1;
  3530  1E4B  1283               	bcf	3,5	;RP0=0, select bank0
  3531  1E4C  1303               	bcf	3,6	;RP1=0, select bank0
  3532  1E4D  1406               	bsf	6,0	;volatile
  3533                           
  3534                           ;main_slave_p1.c: 152:     }
  3535  1E4E  2E52               	goto	l3795
  3536  1E4F                     l165:	
  3537                           ;main_slave_p1.c: 153:     else{
  3538                           
  3539                           
  3540                           ;main_slave_p1.c: 154:         PORTBbits.RB0 = 0;
  3541  1E4F  1283               	bcf	3,5	;RP0=0, select bank0
  3542  1E50  1303               	bcf	3,6	;RP1=0, select bank0
  3543  1E51  1006               	bcf	6,0	;volatile
  3544  1E52                     l3795:
  3545                           
  3546                           ;main_slave_p1.c: 157:     if (temp != OLD_TEMP){
  3547  1E52  1683               	bsf	3,5	;RP0=1, select bank3
  3548  1E53  1703               	bsf	3,6	;RP1=1, select bank3
  3549  1E54  0867               	movf	(_OLD_TEMP+1)^(0+384),w
  3550  1E55  061C               	xorwf	(motor_dc@temp+1)^(0+384),w
  3551  1E56  1D03               	skipz
  3552  1E57  2E5A               	goto	u4645
  3553  1E58  0866               	movf	_OLD_TEMP^(0+384),w
  3554  1E59  061B               	xorwf	motor_dc@temp^(0+384),w
  3555  1E5A                     u4645:
  3556  1E5A  1903               	skipnz
  3557  1E5B  0008               	return
  3558                           
  3559                           ;main_slave_p1.c: 158:         OLD_TEMP = temp;
  3560  1E5C  081C               	movf	(motor_dc@temp+1)^(0+384),w
  3561  1E5D  00E7               	movwf	(_OLD_TEMP+1)^(0+384)
  3562  1E5E  081B               	movf	motor_dc@temp^(0+384),w
  3563  1E5F  00E6               	movwf	_OLD_TEMP^(0+384)
  3564                           
  3565                           ;main_slave_p1.c: 159:         USART_send(160 + (temp & 31));
  3566  1E60  081B               	movf	motor_dc@temp^(0+384),w
  3567  1E61  391F               	andlw	31
  3568  1E62  3EA0               	addlw	160
  3569  1E63  160A  158A  2591   	fcall	_USART_send
  3570  1E66  0008               	return
  3571  1E67                     __end_of_motor_dc:
  3572                           
  3573                           	psect	text13
  3574  1544                     __ptext13:	
  3575 ;; *************** function _adc_ch_switch *****************
  3576 ;; Defined at:
  3577 ;;		line 71 in file "adc.c"
  3578 ;; Parameters:    Size  Location     Type
  3579 ;;  channels        1    wreg     unsigned char 
  3580 ;; Auto vars:     Size  Location     Type
  3581 ;;  channels        1    2[BANK3 ] unsigned char 
  3582 ;; Return value:  Size  Location     Type
  3583 ;;                  1    wreg      void 
  3584 ;; Registers used:
  3585 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3586 ;; Tracked objects:
  3587 ;;		On entry : 0/0
  3588 ;;		On exit  : 0/0
  3589 ;;		Unchanged: 0/0
  3590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3591 ;;      Params:         0       0       0       0       0
  3592 ;;      Locals:         0       0       0       1       0
  3593 ;;      Temps:          0       0       0       2       0
  3594 ;;      Totals:         0       0       0       3       0
  3595 ;;Total ram usage:        3 bytes
  3596 ;; Hardware stack levels used: 1
  3597 ;; Hardware stack levels required when called: 5
  3598 ;; This function calls:
  3599 ;;		Nothing
  3600 ;; This function is called by:
  3601 ;;		_main
  3602 ;; This function uses a non-reentrant model
  3603 ;;
  3604                           
  3605  1544                     _adc_ch_switch:	
  3606                           ;psect for function _adc_ch_switch
  3607                           
  3608                           
  3609                           ;incstack = 0
  3610                           ; Regs used in _adc_ch_switch: [wreg-fsr0h+status,2+status,0]
  3611                           ;adc_ch_switch@channels stored from wreg
  3612  1544  1683               	bsf	3,5	;RP0=1, select bank3
  3613  1545  1703               	bsf	3,6	;RP1=1, select bank3
  3614  1546  0092               	movwf	adc_ch_switch@channels^(0+384)
  3615  1547  2DD4               	goto	l3783
  3616  1548                     l287:
  3617  1548  1283               	bcf	3,5	;RP0=0, select bank0
  3618  1549  1303               	bcf	3,6	;RP1=0, select bank0
  3619  154A  189F               	btfsc	31,1	;volatile
  3620  154B  0008               	return
  3621  154C  30C3               	movlw	-61
  3622  154D  059F               	andwf	31,f	;volatile
  3623  154E  3002               	movlw	2
  3624  154F  1683               	bsf	3,5	;RP0=1, select bank3
  3625  1550  1703               	bsf	3,6	;RP1=1, select bank3
  3626  1551  0090               	movwf	??_adc_ch_switch^(0+384)
  3627  1552                     u5057:
  3628  1552  0B90               	decfsz	??_adc_ch_switch^(0+384),f
  3629  1553  2D52               	goto	u5057
  3630  1554  0000               	nop
  3631  1555  1283               	bcf	3,5	;RP0=0, select bank0
  3632  1556  1303               	bcf	3,6	;RP1=0, select bank0
  3633  1557  149F               	bsf	31,1	;volatile
  3634  1558  0008               	return
  3635  1559                     l290:
  3636  1559  1283               	bcf	3,5	;RP0=0, select bank0
  3637  155A  1303               	bcf	3,6	;RP1=0, select bank0
  3638  155B  189F               	btfsc	31,1	;volatile
  3639  155C  0008               	return
  3640  155D  0C1F               	rrf	31,w	;volatile
  3641  155E  1683               	bsf	3,5	;RP0=1, select bank3
  3642  155F  1703               	bsf	3,6	;RP1=1, select bank3
  3643  1560  0090               	movwf	??_adc_ch_switch^(0+384)
  3644  1561  0C10               	rrf	??_adc_ch_switch^(0+384),w
  3645  1562  390F               	andlw	15
  3646  1563  3A00               	xorlw	0
  3647  1564  1D03               	skipz
  3648  1565  2D6D               	goto	l3749
  3649  1566  1283               	bcf	3,5	;RP0=0, select bank0
  3650  1567  1303               	bcf	3,6	;RP1=0, select bank0
  3651  1568  081F               	movf	31,w	;volatile
  3652  1569  39C3               	andlw	-61
  3653  156A  3804               	iorlw	4
  3654  156B  009F               	movwf	31	;volatile
  3655  156C  2D7C               	goto	l3747
  3656  156D                     l3749:
  3657  156D  1283               	bcf	3,5	;RP0=0, select bank0
  3658  156E  1303               	bcf	3,6	;RP1=0, select bank0
  3659  156F  0C1F               	rrf	31,w	;volatile
  3660  1570  1683               	bsf	3,5	;RP0=1, select bank3
  3661  1571  1703               	bsf	3,6	;RP1=1, select bank3
  3662  1572  0090               	movwf	??_adc_ch_switch^(0+384)
  3663  1573  0C10               	rrf	??_adc_ch_switch^(0+384),w
  3664  1574  390F               	andlw	15
  3665  1575  3A01               	xorlw	1
  3666  1576  1D03               	skipz
  3667  1577  2D83               	goto	l3755
  3668  1578  30C3               	movlw	-61
  3669  1579  1283               	bcf	3,5	;RP0=0, select bank0
  3670  157A  1303               	bcf	3,6	;RP1=0, select bank0
  3671  157B  059F               	andwf	31,f	;volatile
  3672  157C                     l3747:
  3673  157C  3002               	movlw	2
  3674  157D  1683               	bsf	3,5	;RP0=1, select bank3
  3675  157E  1703               	bsf	3,6	;RP1=1, select bank3
  3676  157F  0090               	movwf	??_adc_ch_switch^(0+384)
  3677  1580                     u5067:
  3678  1580  0B90               	decfsz	??_adc_ch_switch^(0+384),f
  3679  1581  2D80               	goto	u5067
  3680  1582  0000               	nop
  3681  1583                     l3755:
  3682  1583  3002               	movlw	2
  3683  1584  1683               	bsf	3,5	;RP0=1, select bank3
  3684  1585  1703               	bsf	3,6	;RP1=1, select bank3
  3685  1586  0090               	movwf	??_adc_ch_switch^(0+384)
  3686  1587                     u5077:
  3687  1587  0B90               	decfsz	??_adc_ch_switch^(0+384),f
  3688  1588  2D87               	goto	u5077
  3689  1589  0000               	nop
  3690  158A  1283               	bcf	3,5	;RP0=0, select bank0
  3691  158B  1303               	bcf	3,6	;RP1=0, select bank0
  3692  158C  149F               	bsf	31,1	;volatile
  3693  158D  0008               	return
  3694  158E                     l295:
  3695  158E  1283               	bcf	3,5	;RP0=0, select bank0
  3696  158F  1303               	bcf	3,6	;RP1=0, select bank0
  3697  1590  189F               	btfsc	31,1	;volatile
  3698  1591  0008               	return
  3699  1592  0C1F               	rrf	31,w	;volatile
  3700  1593  1683               	bsf	3,5	;RP0=1, select bank3
  3701  1594  1703               	bsf	3,6	;RP1=1, select bank3
  3702  1595  0090               	movwf	??_adc_ch_switch^(0+384)
  3703  1596  0C10               	rrf	??_adc_ch_switch^(0+384),w
  3704  1597  390F               	andlw	15
  3705  1598  3A00               	xorlw	0
  3706  1599  1D03               	skipz
  3707  159A  2DA2               	goto	l3765
  3708  159B  1283               	bcf	3,5	;RP0=0, select bank0
  3709  159C  1303               	bcf	3,6	;RP1=0, select bank0
  3710  159D  081F               	movf	31,w	;volatile
  3711  159E  39C3               	andlw	-61
  3712  159F  3804               	iorlw	4
  3713  15A0                     L12:
  3714  15A0  009F               	movwf	31	;volatile
  3715  15A1  2DC2               	goto	l3763
  3716  15A2                     l3765:
  3717  15A2  1283               	bcf	3,5	;RP0=0, select bank0
  3718  15A3  1303               	bcf	3,6	;RP1=0, select bank0
  3719  15A4  0C1F               	rrf	31,w	;volatile
  3720  15A5  1683               	bsf	3,5	;RP0=1, select bank3
  3721  15A6  1703               	bsf	3,6	;RP1=1, select bank3
  3722  15A7  0090               	movwf	??_adc_ch_switch^(0+384)
  3723  15A8  0C10               	rrf	??_adc_ch_switch^(0+384),w
  3724  15A9  390F               	andlw	15
  3725  15AA  3A01               	xorlw	1
  3726  15AB  1D03               	skipz
  3727  15AC  2DB3               	goto	l3771
  3728  15AD  1283               	bcf	3,5	;RP0=0, select bank0
  3729  15AE  1303               	bcf	3,6	;RP1=0, select bank0
  3730  15AF  081F               	movf	31,w	;volatile
  3731  15B0  39C3               	andlw	-61
  3732  15B1  3808               	iorlw	8
  3733  15B2  2DA0               	goto	L12
  3734  15B3                     l3771:
  3735  15B3  1283               	bcf	3,5	;RP0=0, select bank0
  3736  15B4  1303               	bcf	3,6	;RP1=0, select bank0
  3737  15B5  0C1F               	rrf	31,w	;volatile
  3738  15B6  1683               	bsf	3,5	;RP0=1, select bank3
  3739  15B7  1703               	bsf	3,6	;RP1=1, select bank3
  3740  15B8  0090               	movwf	??_adc_ch_switch^(0+384)
  3741  15B9  0C10               	rrf	??_adc_ch_switch^(0+384),w
  3742  15BA  390F               	andlw	15
  3743  15BB  3A02               	xorlw	2
  3744  15BC  1D03               	skipz
  3745  15BD  2DC9               	goto	l3777
  3746  15BE  30C3               	movlw	-61
  3747  15BF  1283               	bcf	3,5	;RP0=0, select bank0
  3748  15C0  1303               	bcf	3,6	;RP1=0, select bank0
  3749  15C1  059F               	andwf	31,f	;volatile
  3750  15C2                     l3763:
  3751  15C2  3002               	movlw	2
  3752  15C3  1683               	bsf	3,5	;RP0=1, select bank3
  3753  15C4  1703               	bsf	3,6	;RP1=1, select bank3
  3754  15C5  0090               	movwf	??_adc_ch_switch^(0+384)
  3755  15C6                     u5087:
  3756  15C6  0B90               	decfsz	??_adc_ch_switch^(0+384),f
  3757  15C7  2DC6               	goto	u5087
  3758  15C8  0000               	nop
  3759  15C9                     l3777:
  3760  15C9  3002               	movlw	2
  3761  15CA  1683               	bsf	3,5	;RP0=1, select bank3
  3762  15CB  1703               	bsf	3,6	;RP1=1, select bank3
  3763  15CC  0090               	movwf	??_adc_ch_switch^(0+384)
  3764  15CD                     u5097:
  3765  15CD  0B90               	decfsz	??_adc_ch_switch^(0+384),f
  3766  15CE  2DCD               	goto	u5097
  3767  15CF  0000               	nop
  3768  15D0  1283               	bcf	3,5	;RP0=0, select bank0
  3769  15D1  1303               	bcf	3,6	;RP1=0, select bank0
  3770  15D2  149F               	bsf	31,1	;volatile
  3771  15D3  0008               	return
  3772  15D4                     l3783:
  3773  15D4  0812               	movf	adc_ch_switch@channels^(0+384),w
  3774  15D5  0090               	movwf	??_adc_ch_switch^(0+384)
  3775  15D6  0191               	clrf	(??_adc_ch_switch^(0+384)+1)
  3776                           
  3777                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3778                           ; Switch size 1, requested type "simple"
  3779                           ; Number of cases is 1, Range of values is 0 to 0
  3780                           ; switch strategies available:
  3781                           ; Name         Instructions Cycles
  3782                           ; simple_byte            4     3 (average)
  3783                           ; direct_byte           11     8 (fixed)
  3784                           ; jumptable            260     6 (fixed)
  3785                           ;	Chosen strategy is simple_byte
  3786  15D7  0811               	movf	(??_adc_ch_switch+1)^(0+384),w
  3787  15D8  3A00               	xorlw	0	; case 0
  3788  15D9  1903               	skipnz
  3789  15DA  2DDC               	goto	l4223
  3790  15DB  2DE7               	goto	l303
  3791  15DC                     l4223:
  3792                           
  3793                           ; Switch size 1, requested type "simple"
  3794                           ; Number of cases is 3, Range of values is 1 to 3
  3795                           ; switch strategies available:
  3796                           ; Name         Instructions Cycles
  3797                           ; simple_byte           10     6 (average)
  3798                           ; direct_byte           20    11 (fixed)
  3799                           ; jumptable            263     9 (fixed)
  3800                           ;	Chosen strategy is simple_byte
  3801  15DC  0810               	movf	??_adc_ch_switch^(0+384),w
  3802  15DD  3A01               	xorlw	1	; case 1
  3803  15DE  1903               	skipnz
  3804  15DF  2D48               	goto	l287
  3805  15E0  3A03               	xorlw	3	; case 2
  3806  15E1  1903               	skipnz
  3807  15E2  2D59               	goto	l290
  3808  15E3  3A01               	xorlw	1	; case 3
  3809  15E4  1903               	skipnz
  3810  15E5  2D8E               	goto	l295
  3811  15E6  2DE7               	goto	l303
  3812  15E7                     l303:
  3813  15E7  0008               	return
  3814  15E8                     __end_of_adc_ch_switch:
  3815                           
  3816                           	psect	text14
  3817  11C3                     __ptext14:	
  3818 ;; *************** function ___fltol *****************
  3819 ;; Defined at:
  3820 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fltol.c"
  3821 ;; Parameters:    Size  Location     Type
  3822 ;;  f1              4    0[BANK3 ] void 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  exp1            1   10[BANK3 ] unsigned char 
  3825 ;;  sign1           1    9[BANK3 ] unsigned char 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  4    0[BANK3 ] long 
  3828 ;; Registers used:
  3829 ;;		wreg, status,2, status,0
  3830 ;; Tracked objects:
  3831 ;;		On entry : 0/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3835 ;;      Params:         0       0       0       4       0
  3836 ;;      Locals:         0       0       0       2       0
  3837 ;;      Temps:          0       0       0       5       0
  3838 ;;      Totals:         0       0       0      11       0
  3839 ;;Total ram usage:       11 bytes
  3840 ;; Hardware stack levels used: 1
  3841 ;; Hardware stack levels required when called: 5
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_main
  3846 ;; This function uses a non-reentrant model
  3847 ;;
  3848                           
  3849  11C3                     ___fltol:	
  3850                           ;psect for function ___fltol
  3851                           
  3852                           
  3853                           ;incstack = 0
  3854                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3855  11C3  1003               	clrc
  3856  11C4  1683               	bsf	3,5	;RP0=1, select bank3
  3857  11C5  1703               	bsf	3,6	;RP1=1, select bank3
  3858  11C6  0D12               	rlf	(___fltol@f1+2)^(0+384),w
  3859  11C7  0D13               	rlf	(___fltol@f1+3)^(0+384),w
  3860  11C8  0094               	movwf	??___fltol^(0+384)
  3861  11C9  0814               	movf	??___fltol^(0+384),w
  3862  11CA  009A               	movwf	___fltol@exp1^(0+384)
  3863  11CB  081A               	movf	___fltol@exp1^(0+384),w
  3864  11CC  1D03               	btfss	3,2
  3865  11CD  29D7               	goto	l3867
  3866  11CE                     l3863:
  3867  11CE  3000               	movlw	0
  3868  11CF  0093               	movwf	(?___fltol+3)^(0+384)
  3869  11D0  3000               	movlw	0
  3870  11D1  0092               	movwf	(?___fltol+2)^(0+384)
  3871  11D2  3000               	movlw	0
  3872  11D3  0091               	movwf	(?___fltol+1)^(0+384)
  3873  11D4  3000               	movlw	0
  3874  11D5  0090               	movwf	?___fltol^(0+384)
  3875  11D6  0008               	return
  3876  11D7                     l3867:
  3877  11D7  0810               	movf	___fltol@f1^(0+384),w
  3878  11D8  0094               	movwf	??___fltol^(0+384)
  3879  11D9  0811               	movf	(___fltol@f1+1)^(0+384),w
  3880  11DA  0095               	movwf	(??___fltol^(0+384)+1)
  3881  11DB  0812               	movf	(___fltol@f1+2)^(0+384),w
  3882  11DC  0096               	movwf	(??___fltol^(0+384)+2)
  3883  11DD  0813               	movf	(___fltol@f1+3)^(0+384),w
  3884  11DE  0097               	movwf	(??___fltol^(0+384)+3)
  3885  11DF  301F               	movlw	31
  3886  11E0                     u4785:
  3887  11E0  1003               	clrc
  3888  11E1  0C97               	rrf	(??___fltol^(0+384)+3),f
  3889  11E2  0C96               	rrf	(??___fltol^(0+384)+2),f
  3890  11E3  0C95               	rrf	(??___fltol^(0+384)+1),f
  3891  11E4  0C94               	rrf	??___fltol^(0+384),f
  3892  11E5  3EFF               	addlw	-1
  3893  11E6  1D03               	skipz
  3894  11E7  29E0               	goto	u4785
  3895  11E8  0814               	movf	??___fltol^(0+384),w
  3896  11E9  0098               	movwf	(??___fltol+4)^(0+384)
  3897  11EA  0818               	movf	(??___fltol+4)^(0+384),w
  3898  11EB  0099               	movwf	___fltol@sign1^(0+384)
  3899  11EC  1792               	bsf	(___fltol@f1^(0+384)+2),7
  3900  11ED  30FF               	movlw	255
  3901  11EE  0590               	andwf	___fltol@f1^(0+384),f
  3902  11EF  30FF               	movlw	255
  3903  11F0  0591               	andwf	(___fltol@f1+1)^(0+384),f
  3904  11F1  30FF               	movlw	255
  3905  11F2  0592               	andwf	(___fltol@f1+2)^(0+384),f
  3906  11F3  3000               	movlw	0
  3907  11F4  0593               	andwf	(___fltol@f1+3)^(0+384),f
  3908  11F5  3096               	movlw	150
  3909  11F6  029A               	subwf	___fltol@exp1^(0+384),f
  3910  11F7  1F9A               	btfss	___fltol@exp1^(0+384),7
  3911  11F8  2A0E               	goto	l3885
  3912  11F9  081A               	movf	___fltol@exp1^(0+384),w
  3913  11FA  3A80               	xorlw	128
  3914  11FB  3E97               	addlw	151
  3915  11FC  1C03               	btfss	3,0
  3916  11FD  29CE               	goto	l3863
  3917  11FE                     l3883:
  3918  11FE  3001               	movlw	1
  3919  11FF                     u4815:
  3920  11FF  1003               	clrc
  3921  1200  0C93               	rrf	(___fltol@f1+3)^(0+384),f
  3922  1201  0C92               	rrf	(___fltol@f1+2)^(0+384),f
  3923  1202  0C91               	rrf	(___fltol@f1+1)^(0+384),f
  3924  1203  0C90               	rrf	___fltol@f1^(0+384),f
  3925  1204  3EFF               	addlw	-1
  3926  1205  1D03               	skipz
  3927  1206  29FF               	goto	u4815
  3928  1207  3001               	movlw	1
  3929  1208  0094               	movwf	??___fltol^(0+384)
  3930  1209  0814               	movf	??___fltol^(0+384),w
  3931  120A  079A               	addwf	___fltol@exp1^(0+384),f
  3932  120B  1903               	btfsc	3,2
  3933  120C  2A21               	goto	l3893
  3934  120D  29FE               	goto	l3883
  3935  120E                     l3885:
  3936  120E  3020               	movlw	32
  3937  120F  021A               	subwf	___fltol@exp1^(0+384),w
  3938  1210  1803               	btfsc	3,0
  3939  1211  29CE               	goto	l3863
  3940  1212                     l702:
  3941  1212  081A               	movf	___fltol@exp1^(0+384),w
  3942  1213  1903               	btfsc	3,2
  3943  1214  2A21               	goto	l3893
  3944  1215  3001               	movlw	1
  3945  1216  0094               	movwf	??___fltol^(0+384)
  3946  1217                     u4845:
  3947  1217  1003               	clrc
  3948  1218  0D90               	rlf	___fltol@f1^(0+384),f
  3949  1219  0D91               	rlf	(___fltol@f1+1)^(0+384),f
  3950  121A  0D92               	rlf	(___fltol@f1+2)^(0+384),f
  3951  121B  0D93               	rlf	(___fltol@f1+3)^(0+384),f
  3952  121C  0B94               	decfsz	??___fltol^(0+384),f
  3953  121D  2A17               	goto	u4845
  3954  121E  3001               	movlw	1
  3955  121F  029A               	subwf	___fltol@exp1^(0+384),f
  3956  1220  2A12               	goto	l702
  3957  1221                     l3893:
  3958  1221  0819               	movf	___fltol@sign1^(0+384),w
  3959  1222  1903               	btfsc	3,2
  3960  1223  0008               	return
  3961  1224  0990               	comf	___fltol@f1^(0+384),f
  3962  1225  0991               	comf	(___fltol@f1+1)^(0+384),f
  3963  1226  0992               	comf	(___fltol@f1+2)^(0+384),f
  3964  1227  0993               	comf	(___fltol@f1+3)^(0+384),f
  3965  1228  0A90               	incf	___fltol@f1^(0+384),f
  3966  1229  1903               	skipnz
  3967  122A  0A91               	incf	(___fltol@f1+1)^(0+384),f
  3968  122B  1903               	skipnz
  3969  122C  0A92               	incf	(___fltol@f1+2)^(0+384),f
  3970  122D  1903               	skipnz
  3971  122E  0A93               	incf	(___fltol@f1+3)^(0+384),f
  3972  122F  0008               	return
  3973  1230                     __end_of___fltol:
  3974                           
  3975                           	psect	text15
  3976  1744                     __ptext15:	
  3977 ;; *************** function _RTC_read *****************
  3978 ;; Defined at:
  3979 ;;		line 187 in file "main_slave_p1.c"
  3980 ;; Parameters:    Size  Location     Type
  3981 ;;		None
  3982 ;; Auto vars:     Size  Location     Type
  3983 ;;		None
  3984 ;; Return value:  Size  Location     Type
  3985 ;;                  1    wreg      void 
  3986 ;; Registers used:
  3987 ;;		wreg, status,2, status,0, pclath, cstack
  3988 ;; Tracked objects:
  3989 ;;		On entry : 0/0
  3990 ;;		On exit  : 0/0
  3991 ;;		Unchanged: 0/0
  3992 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3993 ;;      Params:         0       0       0       0       0
  3994 ;;      Locals:         0       0       0       0       0
  3995 ;;      Temps:          0       0       0       2       0
  3996 ;;      Totals:         0       0       0       2       0
  3997 ;;Total ram usage:        2 bytes
  3998 ;; Hardware stack levels used: 1
  3999 ;; Hardware stack levels required when called: 7
  4000 ;; This function calls:
  4001 ;;		_I2C_Master_Read
  4002 ;;		_I2C_Master_RepeatedStart
  4003 ;;		_I2C_Master_Start
  4004 ;;		_I2C_Master_Stop
  4005 ;;		_I2C_Master_Write
  4006 ;;		_USART_send
  4007 ;;		_bcd_dec
  4008 ;; This function is called by:
  4009 ;;		_main
  4010 ;; This function uses a non-reentrant model
  4011 ;;
  4012                           
  4013  1744                     _RTC_read:	
  4014                           ;psect for function _RTC_read
  4015                           
  4016                           
  4017                           ;main_slave_p1.c: 188:     I2C_Master_Start();
  4018                           
  4019                           ;incstack = 0
  4020                           ; Regs used in _RTC_read: [wreg+status,2+status,0+pclath+cstack]
  4021  1744  160A  158A  2542  160A  118A  	fcall	_I2C_Master_Start
  4022                           
  4023                           ;main_slave_p1.c: 189:     I2C_Master_Write(0xD0);
  4024  1749  30D0               	movlw	208
  4025  174A  1683               	bsf	3,5	;RP0=1, select bank3
  4026  174B  1703               	bsf	3,6	;RP1=1, select bank3
  4027  174C  0090               	movwf	I2C_Master_Write@d^(0+384)
  4028  174D  3000               	movlw	0
  4029  174E  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  4030  174F  160A  158A  257B  160A  118A  	fcall	_I2C_Master_Write
  4031                           
  4032                           ;main_slave_p1.c: 190:     I2C_Master_Write(0);
  4033  1754  3000               	movlw	0
  4034  1755  1683               	bsf	3,5	;RP0=1, select bank3
  4035  1756  1703               	bsf	3,6	;RP1=1, select bank3
  4036  1757  0090               	movwf	I2C_Master_Write@d^(0+384)
  4037  1758  0091               	movwf	(I2C_Master_Write@d+1)^(0+384)
  4038  1759  160A  158A  257B  160A  118A  	fcall	_I2C_Master_Write
  4039                           
  4040                           ;main_slave_p1.c: 191:     I2C_Master_RepeatedStart();
  4041  175E  160A  158A  2550  160A  118A  	fcall	_I2C_Master_RepeatedStart
  4042                           
  4043                           ;main_slave_p1.c: 192:     I2C_Master_Write(0xD1);
  4044  1763  30D1               	movlw	209
  4045  1764  1683               	bsf	3,5	;RP0=1, select bank3
  4046  1765  1703               	bsf	3,6	;RP1=1, select bank3
  4047  1766  0090               	movwf	I2C_Master_Write@d^(0+384)
  4048  1767  3000               	movlw	0
  4049  1768  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  4050  1769  160A  158A  257B  160A  118A  	fcall	_I2C_Master_Write
  4051                           
  4052                           ;main_slave_p1.c: 193:     I2C_Master_Read(1);
  4053  176E  3001               	movlw	1
  4054  176F  1683               	bsf	3,5	;RP0=1, select bank3
  4055  1770  1703               	bsf	3,6	;RP1=1, select bank3
  4056  1771  0090               	movwf	I2C_Master_Read@a^(0+384)
  4057  1772  3000               	movlw	0
  4058  1773  0091               	movwf	(I2C_Master_Read@a^(0+384)+1)
  4059  1774  160A  158A  2692  160A  118A  	fcall	_I2C_Master_Read
  4060                           
  4061                           ;main_slave_p1.c: 194:     min = bcd_dec(I2C_Master_Read(1));
  4062  1779  3001               	movlw	1
  4063  177A  1683               	bsf	3,5	;RP0=1, select bank3
  4064  177B  1703               	bsf	3,6	;RP1=1, select bank3
  4065  177C  0090               	movwf	I2C_Master_Read@a^(0+384)
  4066  177D  3000               	movlw	0
  4067  177E  0091               	movwf	(I2C_Master_Read@a^(0+384)+1)
  4068  177F  160A  158A  2692  160A  118A  	fcall	_I2C_Master_Read
  4069  1784  1683               	bsf	3,5	;RP0=1, select bank3
  4070  1785  1703               	bsf	3,6	;RP1=1, select bank3
  4071  1786  0810               	movf	?_I2C_Master_Read^(0+384),w
  4072  1787  160A  158A  25C2  160A  118A  	fcall	_bcd_dec
  4073  178C  1683               	bsf	3,5	;RP0=1, select bank3
  4074  178D  1703               	bsf	3,6	;RP1=1, select bank3
  4075  178E  00CE               	movwf	??_RTC_read^(0+384)
  4076  178F  084E               	movf	??_RTC_read^(0+384),w
  4077  1790  00E4               	movwf	_min^(0+384)
  4078                           
  4079                           ;main_slave_p1.c: 195:     hrs = bcd_dec(I2C_Master_Read(0));
  4080  1791  3000               	movlw	0
  4081  1792  0090               	movwf	I2C_Master_Read@a^(0+384)
  4082  1793  0091               	movwf	(I2C_Master_Read@a+1)^(0+384)
  4083  1794  160A  158A  2692  160A  118A  	fcall	_I2C_Master_Read
  4084  1799  1683               	bsf	3,5	;RP0=1, select bank3
  4085  179A  1703               	bsf	3,6	;RP1=1, select bank3
  4086  179B  0810               	movf	?_I2C_Master_Read^(0+384),w
  4087  179C  160A  158A  25C2  160A  118A  	fcall	_bcd_dec
  4088  17A1  1683               	bsf	3,5	;RP0=1, select bank3
  4089  17A2  1703               	bsf	3,6	;RP1=1, select bank3
  4090  17A3  00CE               	movwf	??_RTC_read^(0+384)
  4091  17A4  084E               	movf	??_RTC_read^(0+384),w
  4092  17A5  00E3               	movwf	_hrs^(0+384)
  4093                           
  4094                           ;main_slave_p1.c: 196:     I2C_Master_Stop();
  4095  17A6  160A  158A  2549  160A  118A  	fcall	_I2C_Master_Stop
  4096                           
  4097                           ;main_slave_p1.c: 198:     if (min != last_min){
  4098  17AB  1683               	bsf	3,5	;RP0=1, select bank3
  4099  17AC  1703               	bsf	3,6	;RP1=1, select bank3
  4100  17AD  0864               	movf	_min^(0+384),w
  4101  17AE  066E               	xorwf	_last_min^(0+384),w
  4102  17AF  1903               	skipnz
  4103  17B0  2FBB               	goto	l3825
  4104                           
  4105                           ;main_slave_p1.c: 199:         last_min = min;
  4106  17B1  0864               	movf	_min^(0+384),w
  4107  17B2  00CE               	movwf	??_RTC_read^(0+384)
  4108  17B3  084E               	movf	??_RTC_read^(0+384),w
  4109  17B4  00EE               	movwf	_last_min^(0+384)
  4110                           
  4111                           ;main_slave_p1.c: 200:         USART_send(min);
  4112  17B5  0864               	movf	_min^(0+384),w
  4113  17B6  160A  158A  2591  160A  118A  	fcall	_USART_send
  4114  17BB                     l3825:
  4115                           
  4116                           ;main_slave_p1.c: 202:     if (hrs != last_hrs){
  4117  17BB  1683               	bsf	3,5	;RP0=1, select bank3
  4118  17BC  1703               	bsf	3,6	;RP1=1, select bank3
  4119  17BD  0863               	movf	_hrs^(0+384),w
  4120  17BE  066D               	xorwf	_last_hrs^(0+384),w
  4121  17BF  1903               	skipnz
  4122  17C0  2FCC               	goto	l3831
  4123                           
  4124                           ;main_slave_p1.c: 203:         last_hrs = hrs;
  4125  17C1  0863               	movf	_hrs^(0+384),w
  4126  17C2  00CE               	movwf	??_RTC_read^(0+384)
  4127  17C3  084E               	movf	??_RTC_read^(0+384),w
  4128  17C4  00ED               	movwf	_last_hrs^(0+384)
  4129                           
  4130                           ;main_slave_p1.c: 204:         USART_send(hrs + 224);
  4131  17C5  0863               	movf	_hrs^(0+384),w
  4132  17C6  3EE0               	addlw	224
  4133  17C7  160A  158A  2591  160A  118A  	fcall	_USART_send
  4134  17CC                     l3831:
  4135                           
  4136                           ;main_slave_p1.c: 206:     if (min == 0 && p <= 8){
  4137  17CC  1683               	bsf	3,5	;RP0=1, select bank3
  4138  17CD  1703               	bsf	3,6	;RP1=1, select bank3
  4139  17CE  0864               	movf	_min^(0+384),w
  4140  17CF  1D03               	btfss	3,2
  4141  17D0  2FF2               	goto	l3841
  4142  17D1  3009               	movlw	9
  4143  17D2  0265               	subwf	_p^(0+384),w
  4144  17D3  1803               	skipnc
  4145  17D4  2FF2               	goto	l3841
  4146                           
  4147                           ;main_slave_p1.c: 207:            p++;
  4148  17D5  3001               	movlw	1
  4149  17D6  00CE               	movwf	??_RTC_read^(0+384)
  4150  17D7  084E               	movf	??_RTC_read^(0+384),w
  4151  17D8  07E5               	addwf	_p^(0+384),f
  4152                           
  4153                           ;main_slave_p1.c: 208:            PORTDbits.RD6 = !PORTDbits.RD6;
  4154  17D9  1003               	clrc
  4155  17DA  1283               	bcf	3,5	;RP0=0, select bank0
  4156  17DB  1303               	bcf	3,6	;RP1=0, select bank0
  4157  17DC  1F08               	btfss	8,6	;volatile
  4158  17DD  1403               	setc
  4159  17DE  1C03               	btfss	3,0
  4160  17DF  2FE4               	goto	u4730
  4161  17E0  1283               	bcf	3,5	;RP0=0, select bank0
  4162  17E1  1303               	bcf	3,6	;RP1=0, select bank0
  4163  17E2  1708               	bsf	8,6	;volatile
  4164  17E3  2FE7               	goto	l3839
  4165  17E4                     u4730:
  4166  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  4167  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  4168  17E6  1308               	bcf	8,6	;volatile
  4169  17E7                     l3839:
  4170                           
  4171                           ;main_slave_p1.c: 209:            _delay((unsigned long)((10)*(1000000/4000.0)));
  4172  17E7  3004               	movlw	4
  4173  17E8  1683               	bsf	3,5	;RP0=1, select bank3
  4174  17E9  1703               	bsf	3,6	;RP1=1, select bank3
  4175  17EA  00CF               	movwf	(??_RTC_read^(0+384)+1)
  4176  17EB  303D               	movlw	61
  4177  17EC  00CE               	movwf	??_RTC_read^(0+384)
  4178  17ED                     u5107:
  4179  17ED  0BCE               	decfsz	??_RTC_read^(0+384),f
  4180  17EE  2FED               	goto	u5107
  4181  17EF  0BCF               	decfsz	(??_RTC_read^(0+384)+1),f
  4182  17F0  2FED               	goto	u5107
  4183                           
  4184                           ;main_slave_p1.c: 210:     }
  4185  17F1  0008               	return
  4186  17F2                     l3841:
  4187  17F2  0864               	movf	_min^(0+384),w
  4188  17F3  1903               	btfsc	3,2
  4189  17F4  2FFC               	goto	l188
  4190                           
  4191                           ;main_slave_p1.c: 212:         PORTDbits.RD6 = 0;
  4192  17F5  1283               	bcf	3,5	;RP0=0, select bank0
  4193  17F6  1303               	bcf	3,6	;RP1=0, select bank0
  4194  17F7  1308               	bcf	8,6	;volatile
  4195                           
  4196                           ;main_slave_p1.c: 213:         p = 0;
  4197  17F8  1683               	bsf	3,5	;RP0=1, select bank3
  4198  17F9  1703               	bsf	3,6	;RP1=1, select bank3
  4199  17FA  01E5               	clrf	_p^(0+384)
  4200                           
  4201                           ;main_slave_p1.c: 214:     }
  4202  17FB  0008               	return
  4203  17FC                     l188:	
  4204                           ;main_slave_p1.c: 215:     else{
  4205                           
  4206                           
  4207                           ;main_slave_p1.c: 216:         PORTDbits.RD6 = 0;
  4208  17FC  1283               	bcf	3,5	;RP0=0, select bank0
  4209  17FD  1303               	bcf	3,6	;RP1=0, select bank0
  4210  17FE  1308               	bcf	8,6	;volatile
  4211  17FF  0008               	return
  4212  1800                     __end_of_RTC_read:
  4213                           
  4214                           	psect	text16
  4215  1DC2                     __ptext16:	
  4216 ;; *************** function _bcd_dec *****************
  4217 ;; Defined at:
  4218 ;;		line 220 in file "main_slave_p1.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  no              1    wreg     unsigned char 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  no              1   61[BANK3 ] unsigned char 
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      unsigned char 
  4225 ;; Registers used:
  4226 ;;		wreg, status,2, status,0, pclath, cstack
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4232 ;;      Params:         0       0       0       0       0
  4233 ;;      Locals:         0       0       0       1       0
  4234 ;;      Temps:          0       0       0       3       0
  4235 ;;      Totals:         0       0       0       4       0
  4236 ;;Total ram usage:        4 bytes
  4237 ;; Hardware stack levels used: 1
  4238 ;; Hardware stack levels required when called: 6
  4239 ;; This function calls:
  4240 ;;		___bmul
  4241 ;; This function is called by:
  4242 ;;		_RTC_read
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246  1DC2                     _bcd_dec:	
  4247                           ;psect for function _bcd_dec
  4248                           
  4249                           
  4250                           ;incstack = 0
  4251                           ; Regs used in _bcd_dec: [wreg+status,2+status,0+pclath+cstack]
  4252                           ;bcd_dec@no stored from wreg
  4253  1DC2  1683               	bsf	3,5	;RP0=1, select bank3
  4254  1DC3  1703               	bsf	3,6	;RP1=1, select bank3
  4255  1DC4  00CD               	movwf	bcd_dec@no^(0+384)
  4256                           
  4257                           ;main_slave_p1.c: 221:     return ((no >> 4) * 10 + (no & 0x0F));
  4258  1DC5  300F               	movlw	15
  4259  1DC6  054D               	andwf	bcd_dec@no^(0+384),w
  4260  1DC7  00CA               	movwf	??_bcd_dec^(0+384)
  4261  1DC8  300A               	movlw	10
  4262  1DC9  00CB               	movwf	(??_bcd_dec+1)^(0+384)
  4263  1DCA  084B               	movf	(??_bcd_dec+1)^(0+384),w
  4264  1DCB  00C6               	movwf	___bmul@multiplicand^(0+384)
  4265  1DCC  084D               	movf	bcd_dec@no^(0+384),w
  4266  1DCD  00CC               	movwf	(??_bcd_dec+2)^(0+384)
  4267  1DCE  3004               	movlw	4
  4268  1DCF                     u3605:
  4269  1DCF  1003               	clrc
  4270  1DD0  0CCC               	rrf	(??_bcd_dec+2)^(0+384),f
  4271  1DD1  3EFF               	addlw	-1
  4272  1DD2  1D03               	skipz
  4273  1DD3  2DCF               	goto	u3605
  4274  1DD4  084C               	movf	(??_bcd_dec+2)^(0+384),w
  4275  1DD5  160A  158A  25AF   	fcall	___bmul
  4276  1DD8  1683               	bsf	3,5	;RP0=1, select bank3
  4277  1DD9  1703               	bsf	3,6	;RP1=1, select bank3
  4278  1DDA  074A               	addwf	??_bcd_dec^(0+384),w
  4279  1DDB  0008               	return
  4280  1DDC                     __end_of_bcd_dec:
  4281                           
  4282                           	psect	text17
  4283  0824                     __ptext17:	
  4284 ;; *************** function _LUX_read *****************
  4285 ;; Defined at:
  4286 ;;		line 240 in file "main_slave_p1.c"
  4287 ;; Parameters:    Size  Location     Type
  4288 ;;		None
  4289 ;; Auto vars:     Size  Location     Type
  4290 ;;		None
  4291 ;; Return value:  Size  Location     Type
  4292 ;;                  1    wreg      void 
  4293 ;; Registers used:
  4294 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4295 ;; Tracked objects:
  4296 ;;		On entry : 0/0
  4297 ;;		On exit  : 0/0
  4298 ;;		Unchanged: 0/0
  4299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4300 ;;      Params:         0       0       0       0       0
  4301 ;;      Locals:         0       0       0       0       0
  4302 ;;      Temps:          0       0       0       2       0
  4303 ;;      Totals:         0       0       0       2       0
  4304 ;;Total ram usage:        2 bytes
  4305 ;; Hardware stack levels used: 1
  4306 ;; Hardware stack levels required when called: 7
  4307 ;; This function calls:
  4308 ;;		_I2C_Master_Read
  4309 ;;		_I2C_Master_RepeatedStart
  4310 ;;		_I2C_Master_Start
  4311 ;;		_I2C_Master_Stop
  4312 ;;		_I2C_Master_Write
  4313 ;;		_USART_send
  4314 ;;		___bmul
  4315 ;;		_calculateLux
  4316 ;; This function is called by:
  4317 ;;		_main
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321  0824                     _LUX_read:	
  4322                           ;psect for function _LUX_read
  4323                           
  4324                           
  4325                           ;main_slave_p1.c: 242:     I2C_Master_Start();
  4326                           
  4327                           ;incstack = 0
  4328                           ; Regs used in _LUX_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4329  0824  160A  158A  2542  120A  158A  	fcall	_I2C_Master_Start
  4330                           
  4331                           ;main_slave_p1.c: 243:     I2C_Master_Write(0x72);
  4332  0829  3072               	movlw	114
  4333  082A  1683               	bsf	3,5	;RP0=1, select bank3
  4334  082B  1703               	bsf	3,6	;RP1=1, select bank3
  4335  082C  0090               	movwf	I2C_Master_Write@d^(0+384)
  4336  082D  3000               	movlw	0
  4337  082E  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  4338  082F  160A  158A  257B  120A  158A  	fcall	_I2C_Master_Write
  4339                           
  4340                           ;main_slave_p1.c: 244:     I2C_Master_Write(0x8C);
  4341  0834  308C               	movlw	140
  4342  0835  1683               	bsf	3,5	;RP0=1, select bank3
  4343  0836  1703               	bsf	3,6	;RP1=1, select bank3
  4344  0837  0090               	movwf	I2C_Master_Write@d^(0+384)
  4345  0838  3000               	movlw	0
  4346  0839  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  4347  083A  160A  158A  257B  120A  158A  	fcall	_I2C_Master_Write
  4348                           
  4349                           ;main_slave_p1.c: 245:     I2C_Master_RepeatedStart();
  4350  083F  160A  158A  2550  120A  158A  	fcall	_I2C_Master_RepeatedStart
  4351                           
  4352                           ;main_slave_p1.c: 246:     I2C_Master_Write(0x73);
  4353  0844  3073               	movlw	115
  4354  0845  1683               	bsf	3,5	;RP0=1, select bank3
  4355  0846  1703               	bsf	3,6	;RP1=1, select bank3
  4356  0847  0090               	movwf	I2C_Master_Write@d^(0+384)
  4357  0848  3000               	movlw	0
  4358  0849  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  4359  084A  160A  158A  257B  120A  158A  	fcall	_I2C_Master_Write
  4360                           
  4361                           ;main_slave_p1.c: 247:     lowCH0 = I2C_Master_Read(1);
  4362  084F  3001               	movlw	1
  4363  0850  1683               	bsf	3,5	;RP0=1, select bank3
  4364  0851  1703               	bsf	3,6	;RP1=1, select bank3
  4365  0852  0090               	movwf	I2C_Master_Read@a^(0+384)
  4366  0853  3000               	movlw	0
  4367  0854  0091               	movwf	(I2C_Master_Read@a^(0+384)+1)
  4368  0855  160A  158A  2692  120A  158A  	fcall	_I2C_Master_Read
  4369  085A  1683               	bsf	3,5	;RP0=1, select bank3
  4370  085B  1703               	bsf	3,6	;RP1=1, select bank3
  4371  085C  0810               	movf	?_I2C_Master_Read^(0+384),w
  4372  085D  00CA               	movwf	??_LUX_read^(0+384)
  4373  085E  084A               	movf	??_LUX_read^(0+384),w
  4374  085F  00E2               	movwf	_lowCH0^(0+384)
  4375                           
  4376                           ;main_slave_p1.c: 248:     highCH0 = I2C_Master_Read(0);
  4377  0860  3000               	movlw	0
  4378  0861  0090               	movwf	I2C_Master_Read@a^(0+384)
  4379  0862  0091               	movwf	(I2C_Master_Read@a+1)^(0+384)
  4380  0863  160A  158A  2692  120A  158A  	fcall	_I2C_Master_Read
  4381  0868  1683               	bsf	3,5	;RP0=1, select bank3
  4382  0869  1703               	bsf	3,6	;RP1=1, select bank3
  4383  086A  0810               	movf	?_I2C_Master_Read^(0+384),w
  4384  086B  00CA               	movwf	??_LUX_read^(0+384)
  4385  086C  084A               	movf	??_LUX_read^(0+384),w
  4386  086D  00E1               	movwf	_highCH0^(0+384)
  4387                           
  4388                           ;main_slave_p1.c: 249:     I2C_Master_Stop();
  4389  086E  160A  158A  2549  120A  158A  	fcall	_I2C_Master_Stop
  4390                           
  4391                           ;main_slave_p1.c: 251:     I2C_Master_Start();
  4392  0873  160A  158A  2542  120A  158A  	fcall	_I2C_Master_Start
  4393                           
  4394                           ;main_slave_p1.c: 252:     I2C_Master_Write(0x72);
  4395  0878  3072               	movlw	114
  4396  0879  1683               	bsf	3,5	;RP0=1, select bank3
  4397  087A  1703               	bsf	3,6	;RP1=1, select bank3
  4398  087B  0090               	movwf	I2C_Master_Write@d^(0+384)
  4399  087C  3000               	movlw	0
  4400  087D  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  4401  087E  160A  158A  257B  120A  158A  	fcall	_I2C_Master_Write
  4402                           
  4403                           ;main_slave_p1.c: 253:     I2C_Master_Write(0x8E);
  4404  0883  308E               	movlw	142
  4405  0884  1683               	bsf	3,5	;RP0=1, select bank3
  4406  0885  1703               	bsf	3,6	;RP1=1, select bank3
  4407  0886  0090               	movwf	I2C_Master_Write@d^(0+384)
  4408  0887  3000               	movlw	0
  4409  0888  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  4410  0889  160A  158A  257B  120A  158A  	fcall	_I2C_Master_Write
  4411                           
  4412                           ;main_slave_p1.c: 254:     I2C_Master_RepeatedStart();
  4413  088E  160A  158A  2550  120A  158A  	fcall	_I2C_Master_RepeatedStart
  4414                           
  4415                           ;main_slave_p1.c: 255:     I2C_Master_Write(0x73);
  4416  0893  3073               	movlw	115
  4417  0894  1683               	bsf	3,5	;RP0=1, select bank3
  4418  0895  1703               	bsf	3,6	;RP1=1, select bank3
  4419  0896  0090               	movwf	I2C_Master_Write@d^(0+384)
  4420  0897  3000               	movlw	0
  4421  0898  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  4422  0899  160A  158A  257B  120A  158A  	fcall	_I2C_Master_Write
  4423                           
  4424                           ;main_slave_p1.c: 256:     lowCH1 = I2C_Master_Read(1);
  4425  089E  3001               	movlw	1
  4426  089F  1683               	bsf	3,5	;RP0=1, select bank3
  4427  08A0  1703               	bsf	3,6	;RP1=1, select bank3
  4428  08A1  0090               	movwf	I2C_Master_Read@a^(0+384)
  4429  08A2  3000               	movlw	0
  4430  08A3  0091               	movwf	(I2C_Master_Read@a^(0+384)+1)
  4431  08A4  160A  158A  2692  120A  158A  	fcall	_I2C_Master_Read
  4432  08A9  1683               	bsf	3,5	;RP0=1, select bank3
  4433  08AA  1703               	bsf	3,6	;RP1=1, select bank3
  4434  08AB  0810               	movf	?_I2C_Master_Read^(0+384),w
  4435  08AC  00CA               	movwf	??_LUX_read^(0+384)
  4436  08AD  084A               	movf	??_LUX_read^(0+384),w
  4437  08AE  00E0               	movwf	_lowCH1^(0+384)
  4438                           
  4439                           ;main_slave_p1.c: 257:     highCH1 = I2C_Master_Read(0);
  4440  08AF  3000               	movlw	0
  4441  08B0  0090               	movwf	I2C_Master_Read@a^(0+384)
  4442  08B1  0091               	movwf	(I2C_Master_Read@a+1)^(0+384)
  4443  08B2  160A  158A  2692  120A  158A  	fcall	_I2C_Master_Read
  4444  08B7  1683               	bsf	3,5	;RP0=1, select bank3
  4445  08B8  1703               	bsf	3,6	;RP1=1, select bank3
  4446  08B9  0810               	movf	?_I2C_Master_Read^(0+384),w
  4447  08BA  00CA               	movwf	??_LUX_read^(0+384)
  4448  08BB  084A               	movf	??_LUX_read^(0+384),w
  4449  08BC  00DF               	movwf	_highCH1^(0+384)
  4450                           
  4451                           ;main_slave_p1.c: 258:     I2C_Master_Stop();
  4452  08BD  160A  158A  2549  120A  158A  	fcall	_I2C_Master_Stop
  4453                           
  4454                           ;main_slave_p1.c: 260:     CH0 = (highCH0 << 8) + lowCH0;
  4455  08C2  1683               	bsf	3,5	;RP0=1, select bank3
  4456  08C3  1703               	bsf	3,6	;RP1=1, select bank3
  4457  08C4  0861               	movf	_highCH0^(0+384),w
  4458  08C5  00CA               	movwf	??_LUX_read^(0+384)
  4459  08C6  01CB               	clrf	(??_LUX_read^(0+384)+1)
  4460  08C7  084A               	movf	??_LUX_read^(0+384),w
  4461  08C8  00CB               	movwf	(??_LUX_read^(0+384)+1)
  4462  08C9  01CA               	clrf	??_LUX_read^(0+384)
  4463  08CA  0862               	movf	_lowCH0^(0+384),w
  4464  08CB  074A               	addwf	??_LUX_read^(0+384),w
  4465  08CC  00DA               	movwf	_CH0^(0+384)
  4466  08CD  3000               	movlw	0
  4467  08CE  1803               	skipnc
  4468  08CF  3001               	movlw	1
  4469  08D0  074B               	addwf	(??_LUX_read+1)^(0+384),w
  4470  08D1  00DB               	movwf	(_CH0+1)^(0+384)
  4471                           
  4472                           ;main_slave_p1.c: 261:     CH1 = (highCH1 << 8) + lowCH1;
  4473  08D2  085F               	movf	_highCH1^(0+384),w
  4474  08D3  00CA               	movwf	??_LUX_read^(0+384)
  4475  08D4  01CB               	clrf	(??_LUX_read^(0+384)+1)
  4476  08D5  084A               	movf	??_LUX_read^(0+384),w
  4477  08D6  00CB               	movwf	(??_LUX_read^(0+384)+1)
  4478  08D7  01CA               	clrf	??_LUX_read^(0+384)
  4479  08D8  0860               	movf	_lowCH1^(0+384),w
  4480  08D9  074A               	addwf	??_LUX_read^(0+384),w
  4481  08DA  00D8               	movwf	_CH1^(0+384)
  4482  08DB  3000               	movlw	0
  4483  08DC  1803               	skipnc
  4484  08DD  3001               	movlw	1
  4485  08DE  074B               	addwf	(??_LUX_read+1)^(0+384),w
  4486  08DF  00D9               	movwf	(_CH1+1)^(0+384)
  4487                           
  4488                           ;main_slave_p1.c: 263:     LUX = ((calculateLux(CH0, CH1)) * (10/40000));
  4489  08E0  01C6               	clrf	___bmul@multiplicand^(0+384)
  4490  08E1  0859               	movf	(_CH1+1)^(0+384),w
  4491  08E2  00A1               	movwf	(calculateLux@ir+1)^(0+384)
  4492  08E3  0858               	movf	_CH1^(0+384),w
  4493  08E4  00A0               	movwf	calculateLux@ir^(0+384)
  4494  08E5  085B               	movf	(_CH0+1)^(0+384),w
  4495  08E6  009F               	movwf	(calculateLux@broadband+1)^(0+384)
  4496  08E7  085A               	movf	_CH0^(0+384),w
  4497  08E8  009E               	movwf	calculateLux@broadband^(0+384)
  4498  08E9  120A  158A  2338  120A  158A  	fcall	_calculateLux
  4499  08EE  1683               	bsf	3,5	;RP0=1, select bank3
  4500  08EF  1703               	bsf	3,6	;RP1=1, select bank3
  4501  08F0  081E               	movf	?_calculateLux^(0+384),w
  4502  08F1  160A  158A  25AF  120A  158A  	fcall	___bmul
  4503  08F6  1683               	bsf	3,5	;RP0=1, select bank3
  4504  08F7  1703               	bsf	3,6	;RP1=1, select bank3
  4505  08F8  00CA               	movwf	??_LUX_read^(0+384)
  4506  08F9  084A               	movf	??_LUX_read^(0+384),w
  4507  08FA  00DE               	movwf	_LUX^(0+384)
  4508                           
  4509                           ;main_slave_p1.c: 265:     if (LUX != last_LUX){
  4510  08FB  085E               	movf	_LUX^(0+384),w
  4511  08FC  066A               	xorwf	_last_LUX^(0+384),w
  4512  08FD  1903               	skipnz
  4513  08FE  0008               	return
  4514                           
  4515                           ;main_slave_p1.c: 266:         last_LUX = LUX;
  4516  08FF  085E               	movf	_LUX^(0+384),w
  4517  0900  00CA               	movwf	??_LUX_read^(0+384)
  4518  0901  084A               	movf	??_LUX_read^(0+384),w
  4519  0902  00EA               	movwf	_last_LUX^(0+384)
  4520                           
  4521                           ;main_slave_p1.c: 267:         USART_send(192 + LUX);
  4522  0903  085E               	movf	_LUX^(0+384),w
  4523  0904  3EC0               	addlw	192
  4524  0905  160A  158A  2591   	fcall	_USART_send
  4525  0908  0008               	return
  4526  0909                     __end_of_LUX_read:
  4527                           
  4528                           	psect	text18
  4529  0B38                     __ptext18:	
  4530 ;; *************** function _calculateLux *****************
  4531 ;; Defined at:
  4532 ;;		line 10 in file "tsl2561.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  broadband       2   14[BANK3 ] unsigned int 
  4535 ;;  ir              2   16[BANK3 ] unsigned int 
  4536 ;; Auto vars:     Size  Location     Type
  4537 ;;  ratio           4   50[BANK3 ] unsigned long 
  4538 ;;  channel0        4   46[BANK3 ] unsigned long 
  4539 ;;  channel1        4   42[BANK3 ] unsigned long 
  4540 ;;  chScale         4   38[BANK3 ] unsigned long 
  4541 ;;  temp            4   30[BANK3 ] unsigned long 
  4542 ;;  ratio1          4   26[BANK3 ] unsigned long 
  4543 ;;  lux             4   22[BANK3 ] unsigned long 
  4544 ;;  m               2   36[BANK3 ] unsigned int 
  4545 ;;  b               2   34[BANK3 ] unsigned int 
  4546 ;;  clipThreshol    2    0        unsigned int 
  4547 ;; Return value:  Size  Location     Type
  4548 ;;                  4   14[BANK3 ] unsigned long 
  4549 ;; Registers used:
  4550 ;;		wreg, status,2, status,0, pclath, cstack
  4551 ;; Tracked objects:
  4552 ;;		On entry : 0/0
  4553 ;;		On exit  : 0/0
  4554 ;;		Unchanged: 0/0
  4555 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4556 ;;      Params:         0       0       0       4       0
  4557 ;;      Locals:         0       0       0      32       0
  4558 ;;      Temps:          0       0       0       4       0
  4559 ;;      Totals:         0       0       0      40       0
  4560 ;;Total ram usage:       40 bytes
  4561 ;; Hardware stack levels used: 1
  4562 ;; Hardware stack levels required when called: 6
  4563 ;; This function calls:
  4564 ;;		___lldiv
  4565 ;;		___lmul
  4566 ;; This function is called by:
  4567 ;;		_LUX_read
  4568 ;; This function uses a non-reentrant model
  4569 ;;
  4570                           
  4571  0B38                     _calculateLux:	
  4572                           ;psect for function _calculateLux
  4573                           
  4574                           
  4575                           ;tsl2561.c: 23:   chScale = (0x7517);
  4576                           
  4577                           ;tsl2561.c: 19:   if ((broadband > 0xFFFF) || (ir > 0xFFFF)) {
  4578                           
  4579                           ;incstack = 0
  4580                           ; Regs used in _calculateLux: [wreg+status,2+status,0+pclath+cstack]
  4581  0B38  3000               	movlw	0
  4582  0B39  1683               	bsf	3,5	;RP0=1, select bank3
  4583  0B3A  1703               	bsf	3,6	;RP1=1, select bank3
  4584  0B3B  00B9               	movwf	(calculateLux@chScale+3)^(0+384)
  4585  0B3C  3000               	movlw	0
  4586  0B3D  00B8               	movwf	(calculateLux@chScale+2)^(0+384)
  4587  0B3E  3075               	movlw	117
  4588  0B3F  00B7               	movwf	(calculateLux@chScale+1)^(0+384)
  4589  0B40  3017               	movlw	23
  4590  0B41  00B6               	movwf	calculateLux@chScale^(0+384)
  4591                           
  4592                           ;tsl2561.c: 24:   chScale = chScale<<4;
  4593  0B42  0836               	movf	calculateLux@chScale^(0+384),w
  4594  0B43  00A2               	movwf	??_calculateLux^(0+384)
  4595  0B44  0837               	movf	(calculateLux@chScale+1)^(0+384),w
  4596  0B45  00A3               	movwf	(??_calculateLux^(0+384)+1)
  4597  0B46  0838               	movf	(calculateLux@chScale+2)^(0+384),w
  4598  0B47  00A4               	movwf	(??_calculateLux^(0+384)+2)
  4599  0B48  0839               	movf	(calculateLux@chScale+3)^(0+384),w
  4600  0B49  00A5               	movwf	(??_calculateLux^(0+384)+3)
  4601  0B4A  3004               	movlw	4
  4602  0B4B                     u3615:
  4603  0B4B  1003               	clrc
  4604  0B4C  0DA2               	rlf	??_calculateLux^(0+384),f
  4605  0B4D  0DA3               	rlf	(??_calculateLux^(0+384)+1),f
  4606  0B4E  0DA4               	rlf	(??_calculateLux^(0+384)+2),f
  4607  0B4F  0DA5               	rlf	(??_calculateLux^(0+384)+3),f
  4608  0B50  3EFF               	addlw	-1
  4609  0B51  1D03               	skipz
  4610  0B52  2B4B               	goto	u3615
  4611  0B53  0825               	movf	(??_calculateLux+3)^(0+384),w
  4612  0B54  00B9               	movwf	(calculateLux@chScale+3)^(0+384)
  4613  0B55  0824               	movf	(??_calculateLux+2)^(0+384),w
  4614  0B56  00B8               	movwf	(calculateLux@chScale+2)^(0+384)
  4615  0B57  0823               	movf	(??_calculateLux+1)^(0+384),w
  4616  0B58  00B7               	movwf	(calculateLux@chScale+1)^(0+384)
  4617  0B59  0822               	movf	??_calculateLux^(0+384),w
  4618  0B5A  00B6               	movwf	calculateLux@chScale^(0+384)
  4619                           
  4620                           ;tsl2561.c: 26:   channel0 = (broadband * chScale) >> (10);
  4621  0B5B  081E               	movf	calculateLux@broadband^(0+384),w
  4622  0B5C  0090               	movwf	___lmul@multiplier^(0+384)
  4623  0B5D  081F               	movf	(calculateLux@broadband+1)^(0+384),w
  4624  0B5E  0091               	movwf	(___lmul@multiplier^(0+384)+1)
  4625  0B5F  0192               	clrf	(___lmul@multiplier^(0+384)+2)
  4626  0B60  0193               	clrf	(___lmul@multiplier^(0+384)+3)
  4627  0B61  0839               	movf	(calculateLux@chScale+3)^(0+384),w
  4628  0B62  0097               	movwf	(___lmul@multiplicand+3)^(0+384)
  4629  0B63  0838               	movf	(calculateLux@chScale+2)^(0+384),w
  4630  0B64  0096               	movwf	(___lmul@multiplicand+2)^(0+384)
  4631  0B65  0837               	movf	(calculateLux@chScale+1)^(0+384),w
  4632  0B66  0095               	movwf	(___lmul@multiplicand+1)^(0+384)
  4633  0B67  0836               	movf	calculateLux@chScale^(0+384),w
  4634  0B68  0094               	movwf	___lmul@multiplicand^(0+384)
  4635  0B69  160A  158A  2777  120A  158A  	fcall	___lmul
  4636  0B6E  1683               	bsf	3,5	;RP0=1, select bank3
  4637  0B6F  1703               	bsf	3,6	;RP1=1, select bank3
  4638  0B70  0810               	movf	?___lmul^(0+384),w
  4639  0B71  00A2               	movwf	??_calculateLux^(0+384)
  4640  0B72  0811               	movf	(?___lmul+1)^(0+384),w
  4641  0B73  00A3               	movwf	(??_calculateLux^(0+384)+1)
  4642  0B74  0812               	movf	(?___lmul+2)^(0+384),w
  4643  0B75  00A4               	movwf	(??_calculateLux^(0+384)+2)
  4644  0B76  0813               	movf	(?___lmul+3)^(0+384),w
  4645  0B77  00A5               	movwf	(??_calculateLux^(0+384)+3)
  4646  0B78  300A               	movlw	10
  4647  0B79                     u3625:
  4648  0B79  1003               	clrc
  4649  0B7A  0CA5               	rrf	(??_calculateLux^(0+384)+3),f
  4650  0B7B  0CA4               	rrf	(??_calculateLux^(0+384)+2),f
  4651  0B7C  0CA3               	rrf	(??_calculateLux^(0+384)+1),f
  4652  0B7D  0CA2               	rrf	??_calculateLux^(0+384),f
  4653  0B7E  3EFF               	addlw	-1
  4654  0B7F  1D03               	skipz
  4655  0B80  2B79               	goto	u3625
  4656  0B81  0825               	movf	(??_calculateLux+3)^(0+384),w
  4657  0B82  00C1               	movwf	(calculateLux@channel0+3)^(0+384)
  4658  0B83  0824               	movf	(??_calculateLux+2)^(0+384),w
  4659  0B84  00C0               	movwf	(calculateLux@channel0+2)^(0+384)
  4660  0B85  0823               	movf	(??_calculateLux+1)^(0+384),w
  4661  0B86  00BF               	movwf	(calculateLux@channel0+1)^(0+384)
  4662  0B87  0822               	movf	??_calculateLux^(0+384),w
  4663  0B88  00BE               	movwf	calculateLux@channel0^(0+384)
  4664                           
  4665                           ;tsl2561.c: 27:   channel1 = (ir * chScale) >> (10);
  4666  0B89  0820               	movf	calculateLux@ir^(0+384),w
  4667  0B8A  0090               	movwf	___lmul@multiplier^(0+384)
  4668  0B8B  0821               	movf	(calculateLux@ir+1)^(0+384),w
  4669  0B8C  0091               	movwf	(___lmul@multiplier^(0+384)+1)
  4670  0B8D  0192               	clrf	(___lmul@multiplier^(0+384)+2)
  4671  0B8E  0193               	clrf	(___lmul@multiplier^(0+384)+3)
  4672  0B8F  0839               	movf	(calculateLux@chScale+3)^(0+384),w
  4673  0B90  0097               	movwf	(___lmul@multiplicand+3)^(0+384)
  4674  0B91  0838               	movf	(calculateLux@chScale+2)^(0+384),w
  4675  0B92  0096               	movwf	(___lmul@multiplicand+2)^(0+384)
  4676  0B93  0837               	movf	(calculateLux@chScale+1)^(0+384),w
  4677  0B94  0095               	movwf	(___lmul@multiplicand+1)^(0+384)
  4678  0B95  0836               	movf	calculateLux@chScale^(0+384),w
  4679  0B96  0094               	movwf	___lmul@multiplicand^(0+384)
  4680  0B97  160A  158A  2777  120A  158A  	fcall	___lmul
  4681  0B9C  1683               	bsf	3,5	;RP0=1, select bank3
  4682  0B9D  1703               	bsf	3,6	;RP1=1, select bank3
  4683  0B9E  0810               	movf	?___lmul^(0+384),w
  4684  0B9F  00A2               	movwf	??_calculateLux^(0+384)
  4685  0BA0  0811               	movf	(?___lmul+1)^(0+384),w
  4686  0BA1  00A3               	movwf	(??_calculateLux^(0+384)+1)
  4687  0BA2  0812               	movf	(?___lmul+2)^(0+384),w
  4688  0BA3  00A4               	movwf	(??_calculateLux^(0+384)+2)
  4689  0BA4  0813               	movf	(?___lmul+3)^(0+384),w
  4690  0BA5  00A5               	movwf	(??_calculateLux^(0+384)+3)
  4691  0BA6  300A               	movlw	10
  4692  0BA7                     u3635:
  4693  0BA7  1003               	clrc
  4694  0BA8  0CA5               	rrf	(??_calculateLux^(0+384)+3),f
  4695  0BA9  0CA4               	rrf	(??_calculateLux^(0+384)+2),f
  4696  0BAA  0CA3               	rrf	(??_calculateLux^(0+384)+1),f
  4697  0BAB  0CA2               	rrf	??_calculateLux^(0+384),f
  4698  0BAC  3EFF               	addlw	-1
  4699  0BAD  1D03               	skipz
  4700  0BAE  2BA7               	goto	u3635
  4701  0BAF  0825               	movf	(??_calculateLux+3)^(0+384),w
  4702  0BB0  00BD               	movwf	(calculateLux@channel1+3)^(0+384)
  4703  0BB1  0824               	movf	(??_calculateLux+2)^(0+384),w
  4704  0BB2  00BC               	movwf	(calculateLux@channel1+2)^(0+384)
  4705  0BB3  0823               	movf	(??_calculateLux+1)^(0+384),w
  4706  0BB4  00BB               	movwf	(calculateLux@channel1+1)^(0+384)
  4707  0BB5  0822               	movf	??_calculateLux^(0+384),w
  4708  0BB6  00BA               	movwf	calculateLux@channel1^(0+384)
  4709                           
  4710                           ;tsl2561.c: 29:   unsigned long ratio1 = 0;
  4711  0BB7  3000               	movlw	0
  4712  0BB8  00AD               	movwf	(calculateLux@ratio1+3)^(0+384)
  4713  0BB9  3000               	movlw	0
  4714  0BBA  00AC               	movwf	(calculateLux@ratio1+2)^(0+384)
  4715  0BBB  3000               	movlw	0
  4716  0BBC  00AB               	movwf	(calculateLux@ratio1+1)^(0+384)
  4717  0BBD  3000               	movlw	0
  4718  0BBE  00AA               	movwf	calculateLux@ratio1^(0+384)
  4719                           
  4720                           ;tsl2561.c: 30:   if (channel0 != 0)
  4721  0BBF  0841               	movf	(calculateLux@channel0+3)^(0+384),w
  4722  0BC0  0440               	iorwf	(calculateLux@channel0+2)^(0+384),w
  4723  0BC1  043F               	iorwf	(calculateLux@channel0+1)^(0+384),w
  4724  0BC2  043E               	iorwf	calculateLux@channel0^(0+384),w
  4725  0BC3  1903               	skipnz
  4726  0BC4  2BF5               	goto	l3137
  4727                           
  4728                           ;tsl2561.c: 31:     ratio1 = (channel1 << ((9) + 1)) / channel0;
  4729  0BC5  0841               	movf	(calculateLux@channel0+3)^(0+384),w
  4730  0BC6  0093               	movwf	(___lldiv@divisor+3)^(0+384)
  4731  0BC7  0840               	movf	(calculateLux@channel0+2)^(0+384),w
  4732  0BC8  0092               	movwf	(___lldiv@divisor+2)^(0+384)
  4733  0BC9  083F               	movf	(calculateLux@channel0+1)^(0+384),w
  4734  0BCA  0091               	movwf	(___lldiv@divisor+1)^(0+384)
  4735  0BCB  083E               	movf	calculateLux@channel0^(0+384),w
  4736  0BCC  0090               	movwf	___lldiv@divisor^(0+384)
  4737  0BCD  083A               	movf	calculateLux@channel1^(0+384),w
  4738  0BCE  00A2               	movwf	??_calculateLux^(0+384)
  4739  0BCF  083B               	movf	(calculateLux@channel1+1)^(0+384),w
  4740  0BD0  00A3               	movwf	(??_calculateLux^(0+384)+1)
  4741  0BD1  083C               	movf	(calculateLux@channel1+2)^(0+384),w
  4742  0BD2  00A4               	movwf	(??_calculateLux^(0+384)+2)
  4743  0BD3  083D               	movf	(calculateLux@channel1+3)^(0+384),w
  4744  0BD4  00A5               	movwf	(??_calculateLux^(0+384)+3)
  4745  0BD5  300A               	movlw	10
  4746  0BD6                     u3655:
  4747  0BD6  1003               	clrc
  4748  0BD7  0DA2               	rlf	??_calculateLux^(0+384),f
  4749  0BD8  0DA3               	rlf	(??_calculateLux^(0+384)+1),f
  4750  0BD9  0DA4               	rlf	(??_calculateLux^(0+384)+2),f
  4751  0BDA  0DA5               	rlf	(??_calculateLux^(0+384)+3),f
  4752  0BDB  3EFF               	addlw	-1
  4753  0BDC  1D03               	skipz
  4754  0BDD  2BD6               	goto	u3655
  4755  0BDE  0825               	movf	(??_calculateLux+3)^(0+384),w
  4756  0BDF  0097               	movwf	(___lldiv@dividend+3)^(0+384)
  4757  0BE0  0824               	movf	(??_calculateLux+2)^(0+384),w
  4758  0BE1  0096               	movwf	(___lldiv@dividend+2)^(0+384)
  4759  0BE2  0823               	movf	(??_calculateLux+1)^(0+384),w
  4760  0BE3  0095               	movwf	(___lldiv@dividend+1)^(0+384)
  4761  0BE4  0822               	movf	??_calculateLux^(0+384),w
  4762  0BE5  0094               	movwf	___lldiv@dividend^(0+384)
  4763  0BE6  160A  118A  2091  120A  158A  	fcall	___lldiv
  4764  0BEB  1683               	bsf	3,5	;RP0=1, select bank3
  4765  0BEC  1703               	bsf	3,6	;RP1=1, select bank3
  4766  0BED  0813               	movf	(?___lldiv+3)^(0+384),w
  4767  0BEE  00AD               	movwf	(calculateLux@ratio1+3)^(0+384)
  4768  0BEF  0812               	movf	(?___lldiv+2)^(0+384),w
  4769  0BF0  00AC               	movwf	(calculateLux@ratio1+2)^(0+384)
  4770  0BF1  0811               	movf	(?___lldiv+1)^(0+384),w
  4771  0BF2  00AB               	movwf	(calculateLux@ratio1+1)^(0+384)
  4772  0BF3  0810               	movf	?___lldiv^(0+384),w
  4773  0BF4  00AA               	movwf	calculateLux@ratio1^(0+384)
  4774  0BF5                     l3137:
  4775                           
  4776                           ;tsl2561.c: 33:   unsigned long ratio = (ratio1 + 1) >> 1;
  4777  0BF5  3001               	movlw	1
  4778  0BF6  00A2               	movwf	??_calculateLux^(0+384)
  4779  0BF7  3000               	movlw	0
  4780  0BF8  00A3               	movwf	(??_calculateLux^(0+384)+1)
  4781  0BF9  3000               	movlw	0
  4782  0BFA  00A4               	movwf	(??_calculateLux^(0+384)+2)
  4783  0BFB  3000               	movlw	0
  4784  0BFC  00A5               	movwf	(??_calculateLux^(0+384)+3)
  4785  0BFD  082A               	movf	calculateLux@ratio1^(0+384),w
  4786  0BFE  07A2               	addwf	??_calculateLux^(0+384),f
  4787  0BFF  082B               	movf	(calculateLux@ratio1+1)^(0+384),w
  4788  0C00  1803               	skipnc
  4789  0C01  0F2B               	incfsz	(calculateLux@ratio1+1)^(0+384),w
  4790  0C02  2C04               	goto	u3660
  4791  0C03  2C05               	goto	u3661
  4792  0C04                     u3660:
  4793  0C04  07A3               	addwf	(??_calculateLux^(0+384)+1),f
  4794  0C05                     u3661:
  4795  0C05  082C               	movf	(calculateLux@ratio1+2)^(0+384),w
  4796  0C06  1803               	skipnc
  4797  0C07  0F2C               	incfsz	(calculateLux@ratio1+2)^(0+384),w
  4798  0C08  2C0A               	goto	u3662
  4799  0C09  2C0B               	goto	u3663
  4800  0C0A                     u3662:
  4801  0C0A  07A4               	addwf	(??_calculateLux^(0+384)+2),f
  4802  0C0B                     u3663:
  4803  0C0B  082D               	movf	(calculateLux@ratio1+3)^(0+384),w
  4804  0C0C  1803               	skipnc
  4805  0C0D  0A2D               	incf	(calculateLux@ratio1+3)^(0+384),w
  4806  0C0E  07A5               	addwf	(??_calculateLux^(0+384)+3),f
  4807  0C0F  3001               	movlw	1
  4808  0C10                     u3675:
  4809  0C10  1003               	clrc
  4810  0C11  0CA5               	rrf	(??_calculateLux^(0+384)+3),f
  4811  0C12  0CA4               	rrf	(??_calculateLux^(0+384)+2),f
  4812  0C13  0CA3               	rrf	(??_calculateLux^(0+384)+1),f
  4813  0C14  0CA2               	rrf	??_calculateLux^(0+384),f
  4814  0C15  3EFF               	addlw	-1
  4815  0C16  1D03               	skipz
  4816  0C17  2C10               	goto	u3675
  4817  0C18  0825               	movf	(??_calculateLux+3)^(0+384),w
  4818  0C19  00C5               	movwf	(calculateLux@ratio+3)^(0+384)
  4819  0C1A  0824               	movf	(??_calculateLux+2)^(0+384),w
  4820  0C1B  00C4               	movwf	(calculateLux@ratio+2)^(0+384)
  4821  0C1C  0823               	movf	(??_calculateLux+1)^(0+384),w
  4822  0C1D  00C3               	movwf	(calculateLux@ratio+1)^(0+384)
  4823  0C1E  0822               	movf	??_calculateLux^(0+384),w
  4824  0C1F  00C2               	movwf	calculateLux@ratio^(0+384)
  4825                           
  4826                           ;tsl2561.c: 35:   unsigned int b, m;;tsl2561.c: 37:   if ((ratio >= 0) && (ratio <= (0x0
      +                          040))) {
  4827  0C20  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  4828  0C21  1D03               	btfss	3,2
  4829  0C22  2C37               	goto	l3143
  4830  0C23  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  4831  0C24  1D03               	btfss	3,2
  4832  0C25  2C37               	goto	l3143
  4833  0C26  0843               	movf	(calculateLux@ratio+1)^(0+384),w
  4834  0C27  1D03               	btfss	3,2
  4835  0C28  2C37               	goto	l3143
  4836  0C29  3041               	movlw	65
  4837  0C2A  0242               	subwf	calculateLux@ratio^(0+384),w
  4838  0C2B  1D03               	skipz
  4839  0C2C  2C2D               	goto	u3683
  4840  0C2D                     u3683:
  4841  0C2D  1803               	btfsc	3,0
  4842  0C2E  2C37               	goto	l3143
  4843                           
  4844                           ;tsl2561.c: 38:     b = (0x01f2);
  4845  0C2F  30F2               	movlw	242
  4846  0C30  1683               	bsf	3,5	;RP0=1, select bank3
  4847  0C31  1703               	bsf	3,6	;RP1=1, select bank3
  4848  0C32  00B2               	movwf	calculateLux@b^(0+384)
  4849  0C33  3001               	movlw	1
  4850  0C34  00B3               	movwf	(calculateLux@b^(0+384)+1)
  4851                           
  4852                           ;tsl2561.c: 39:     m = (0x01be);
  4853  0C35  30BE               	movlw	190
  4854  0C36  2CA0               	goto	L21
  4855  0C37                     l3143:	
  4856                           ;tsl2561.c: 40:   } else if (ratio <= (0x0080)) {
  4857                           
  4858  0C37  1683               	bsf	3,5	;RP0=1, select bank3
  4859  0C38  1703               	bsf	3,6	;RP1=1, select bank3
  4860  0C39  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  4861  0C3A  1D03               	btfss	3,2
  4862  0C3B  2C52               	goto	l3147
  4863  0C3C  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  4864  0C3D  1D03               	btfss	3,2
  4865  0C3E  2C52               	goto	l3147
  4866  0C3F  0843               	movf	(calculateLux@ratio+1)^(0+384),w
  4867  0C40  1D03               	btfss	3,2
  4868  0C41  2C52               	goto	l3147
  4869  0C42  3081               	movlw	129
  4870  0C43  0242               	subwf	calculateLux@ratio^(0+384),w
  4871  0C44  1D03               	skipz
  4872  0C45  2C46               	goto	u3693
  4873  0C46                     u3693:
  4874  0C46  1803               	btfsc	3,0
  4875  0C47  2C52               	goto	l3147
  4876                           
  4877                           ;tsl2561.c: 41:     b = (0x0214);
  4878  0C48  3014               	movlw	20
  4879  0C49  1683               	bsf	3,5	;RP0=1, select bank3
  4880  0C4A  1703               	bsf	3,6	;RP1=1, select bank3
  4881  0C4B  00B2               	movwf	calculateLux@b^(0+384)
  4882  0C4C  3002               	movlw	2
  4883  0C4D  00B3               	movwf	(calculateLux@b^(0+384)+1)
  4884                           
  4885                           ;tsl2561.c: 42:     m = (0x02d1);
  4886  0C4E  30D1               	movlw	209
  4887  0C4F  00B4               	movwf	calculateLux@m^(0+384)
  4888  0C50  3002               	movlw	2
  4889  0C51  2CD8               	goto	L18
  4890  0C52                     l3147:	
  4891                           ;tsl2561.c: 43:   } else if (ratio <= (0x00c0)) {
  4892                           
  4893  0C52  1683               	bsf	3,5	;RP0=1, select bank3
  4894  0C53  1703               	bsf	3,6	;RP1=1, select bank3
  4895  0C54  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  4896  0C55  1D03               	btfss	3,2
  4897  0C56  2C6B               	goto	l3151
  4898  0C57  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  4899  0C58  1D03               	btfss	3,2
  4900  0C59  2C6B               	goto	l3151
  4901  0C5A  0843               	movf	(calculateLux@ratio+1)^(0+384),w
  4902  0C5B  1D03               	btfss	3,2
  4903  0C5C  2C6B               	goto	l3151
  4904  0C5D  30C1               	movlw	193
  4905  0C5E  0242               	subwf	calculateLux@ratio^(0+384),w
  4906  0C5F  1D03               	skipz
  4907  0C60  2C61               	goto	u3703
  4908  0C61                     u3703:
  4909  0C61  1803               	btfsc	3,0
  4910  0C62  2C6B               	goto	l3151
  4911                           
  4912                           ;tsl2561.c: 44:     b = (0x023f);
  4913  0C63  303F               	movlw	63
  4914  0C64  1683               	bsf	3,5	;RP0=1, select bank3
  4915  0C65  1703               	bsf	3,6	;RP1=1, select bank3
  4916  0C66  00B2               	movwf	calculateLux@b^(0+384)
  4917  0C67  3002               	movlw	2
  4918  0C68  00B3               	movwf	(calculateLux@b^(0+384)+1)
  4919                           
  4920                           ;tsl2561.c: 45:     m = (0x037b);
  4921  0C69  307B               	movlw	123
  4922  0C6A  2C84               	goto	L19
  4923  0C6B                     l3151:	
  4924                           ;tsl2561.c: 46:   } else if (ratio <= (0x0100)) {
  4925                           
  4926  0C6B  1683               	bsf	3,5	;RP0=1, select bank3
  4927  0C6C  1703               	bsf	3,6	;RP1=1, select bank3
  4928  0C6D  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  4929  0C6E  1D03               	btfss	3,2
  4930  0C6F  2C87               	goto	l3155
  4931  0C70  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  4932  0C71  1D03               	btfss	3,2
  4933  0C72  2C87               	goto	l3155
  4934  0C73  3001               	movlw	1
  4935  0C74  0243               	subwf	(calculateLux@ratio+1)^(0+384),w
  4936  0C75  1D03               	skipz
  4937  0C76  2C7B               	goto	u3713
  4938  0C77  3001               	movlw	1
  4939  0C78  0242               	subwf	calculateLux@ratio^(0+384),w
  4940  0C79  1D03               	skipz
  4941  0C7A  2C7B               	goto	u3713
  4942  0C7B                     u3713:
  4943  0C7B  1803               	btfsc	3,0
  4944  0C7C  2C87               	goto	l3155
  4945                           
  4946                           ;tsl2561.c: 47:     b = (0x0270);
  4947  0C7D  3070               	movlw	112
  4948  0C7E  1683               	bsf	3,5	;RP0=1, select bank3
  4949  0C7F  1703               	bsf	3,6	;RP1=1, select bank3
  4950  0C80  00B2               	movwf	calculateLux@b^(0+384)
  4951  0C81  3002               	movlw	2
  4952  0C82  00B3               	movwf	(calculateLux@b^(0+384)+1)
  4953                           
  4954                           ;tsl2561.c: 48:     m = (0x03fe);
  4955  0C83  30FE               	movlw	254
  4956  0C84                     L19:
  4957  0C84  00B4               	movwf	calculateLux@m^(0+384)
  4958  0C85  3003               	movlw	3
  4959  0C86  2CD8               	goto	L18
  4960  0C87                     l3155:	
  4961                           ;tsl2561.c: 49:   } else if (ratio <= (0x0138)) {
  4962                           
  4963  0C87  1683               	bsf	3,5	;RP0=1, select bank3
  4964  0C88  1703               	bsf	3,6	;RP1=1, select bank3
  4965  0C89  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  4966  0C8A  1D03               	btfss	3,2
  4967  0C8B  2CA3               	goto	l3159
  4968  0C8C  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  4969  0C8D  1D03               	btfss	3,2
  4970  0C8E  2CA3               	goto	l3159
  4971  0C8F  3001               	movlw	1
  4972  0C90  0243               	subwf	(calculateLux@ratio+1)^(0+384),w
  4973  0C91  1D03               	skipz
  4974  0C92  2C97               	goto	u3723
  4975  0C93  3039               	movlw	57
  4976  0C94  0242               	subwf	calculateLux@ratio^(0+384),w
  4977  0C95  1D03               	skipz
  4978  0C96  2C97               	goto	u3723
  4979  0C97                     u3723:
  4980  0C97  1803               	btfsc	3,0
  4981  0C98  2CA3               	goto	l3159
  4982                           
  4983                           ;tsl2561.c: 50:     b = (0x016f);
  4984  0C99  306F               	movlw	111
  4985  0C9A  1683               	bsf	3,5	;RP0=1, select bank3
  4986  0C9B  1703               	bsf	3,6	;RP1=1, select bank3
  4987  0C9C  00B2               	movwf	calculateLux@b^(0+384)
  4988  0C9D  3001               	movlw	1
  4989  0C9E  00B3               	movwf	(calculateLux@b^(0+384)+1)
  4990                           
  4991                           ;tsl2561.c: 51:     m = (0x01fc);
  4992  0C9F  30FC               	movlw	252
  4993  0CA0                     L21:
  4994  0CA0  00B4               	movwf	calculateLux@m^(0+384)
  4995  0CA1  3001               	movlw	1
  4996  0CA2  2CD8               	goto	L18
  4997  0CA3                     l3159:	
  4998                           ;tsl2561.c: 52:   } else if (ratio <= (0x019a)) {
  4999                           
  5000  0CA3  1683               	bsf	3,5	;RP0=1, select bank3
  5001  0CA4  1703               	bsf	3,6	;RP1=1, select bank3
  5002  0CA5  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  5003  0CA6  1D03               	btfss	3,2
  5004  0CA7  2CBD               	goto	l3163
  5005  0CA8  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  5006  0CA9  1D03               	btfss	3,2
  5007  0CAA  2CBD               	goto	l3163
  5008  0CAB  3001               	movlw	1
  5009  0CAC  0243               	subwf	(calculateLux@ratio+1)^(0+384),w
  5010  0CAD  1D03               	skipz
  5011  0CAE  2CB3               	goto	u3733
  5012  0CAF  309B               	movlw	155
  5013  0CB0  0242               	subwf	calculateLux@ratio^(0+384),w
  5014  0CB1  1D03               	skipz
  5015  0CB2  2CB3               	goto	u3733
  5016  0CB3                     u3733:
  5017  0CB3  1803               	btfsc	3,0
  5018  0CB4  2CBD               	goto	l3163
  5019                           
  5020                           ;tsl2561.c: 53:     b = (0x00d2);
  5021  0CB5  30D2               	movlw	210
  5022  0CB6  1683               	bsf	3,5	;RP0=1, select bank3
  5023  0CB7  1703               	bsf	3,6	;RP1=1, select bank3
  5024  0CB8  00B2               	movwf	calculateLux@b^(0+384)
  5025  0CB9  3000               	movlw	0
  5026  0CBA  00B3               	movwf	(calculateLux@b^(0+384)+1)
  5027                           
  5028                           ;tsl2561.c: 54:     m = (0x00fb);
  5029  0CBB  30FB               	movlw	251
  5030  0CBC  2CD6               	goto	L20
  5031  0CBD                     l3163:	
  5032                           ;tsl2561.c: 55:   } else if (ratio <= (0x029a)) {
  5033                           
  5034  0CBD  1683               	bsf	3,5	;RP0=1, select bank3
  5035  0CBE  1703               	bsf	3,6	;RP1=1, select bank3
  5036  0CBF  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  5037  0CC0  1D03               	btfss	3,2
  5038  0CC1  2CDA               	goto	l3167
  5039  0CC2  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  5040  0CC3  1D03               	btfss	3,2
  5041  0CC4  2CDA               	goto	l3167
  5042  0CC5  3002               	movlw	2
  5043  0CC6  0243               	subwf	(calculateLux@ratio+1)^(0+384),w
  5044  0CC7  1D03               	skipz
  5045  0CC8  2CCD               	goto	u3743
  5046  0CC9  309B               	movlw	155
  5047  0CCA  0242               	subwf	calculateLux@ratio^(0+384),w
  5048  0CCB  1D03               	skipz
  5049  0CCC  2CCD               	goto	u3743
  5050  0CCD                     u3743:
  5051  0CCD  1803               	btfsc	3,0
  5052  0CCE  2CDA               	goto	l3167
  5053                           
  5054                           ;tsl2561.c: 56:     b = (0x0018);
  5055  0CCF  3018               	movlw	24
  5056  0CD0  1683               	bsf	3,5	;RP0=1, select bank3
  5057  0CD1  1703               	bsf	3,6	;RP1=1, select bank3
  5058  0CD2  00B2               	movwf	calculateLux@b^(0+384)
  5059  0CD3  3000               	movlw	0
  5060  0CD4  00B3               	movwf	(calculateLux@b^(0+384)+1)
  5061                           
  5062                           ;tsl2561.c: 57:     m = (0x0012);
  5063  0CD5  3012               	movlw	18
  5064  0CD6                     L20:
  5065  0CD6  00B4               	movwf	calculateLux@m^(0+384)
  5066  0CD7  3000               	movlw	0
  5067  0CD8                     L18:
  5068  0CD8  00B5               	movwf	(calculateLux@m^(0+384)+1)
  5069                           
  5070                           ;tsl2561.c: 58:   } else if (ratio > (0x029a)) {
  5071  0CD9  2CF2               	goto	l3171
  5072  0CDA                     l3167:
  5073  0CDA  1683               	bsf	3,5	;RP0=1, select bank3
  5074  0CDB  1703               	bsf	3,6	;RP1=1, select bank3
  5075  0CDC  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  5076  0CDD  1D03               	btfss	3,2
  5077  0CDE  2CEC               	goto	l3169
  5078  0CDF  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  5079  0CE0  1D03               	btfss	3,2
  5080  0CE1  2CEC               	goto	l3169
  5081  0CE2  3002               	movlw	2
  5082  0CE3  0243               	subwf	(calculateLux@ratio+1)^(0+384),w
  5083  0CE4  1D03               	skipz
  5084  0CE5  2CEA               	goto	u3753
  5085  0CE6  309B               	movlw	155
  5086  0CE7  0242               	subwf	calculateLux@ratio^(0+384),w
  5087  0CE8  1D03               	skipz
  5088  0CE9  2CEA               	goto	u3753
  5089  0CEA                     u3753:
  5090  0CEA  1C03               	btfss	3,0
  5091  0CEB  2CF2               	goto	l3171
  5092  0CEC                     l3169:
  5093                           
  5094                           ;tsl2561.c: 59:     b = (0x0000);
  5095  0CEC  1683               	bsf	3,5	;RP0=1, select bank3
  5096  0CED  1703               	bsf	3,6	;RP1=1, select bank3
  5097  0CEE  01B2               	clrf	calculateLux@b^(0+384)
  5098  0CEF  01B3               	clrf	(calculateLux@b+1)^(0+384)
  5099                           
  5100                           ;tsl2561.c: 60:     m = (0x0000);
  5101  0CF0  01B4               	clrf	calculateLux@m^(0+384)
  5102  0CF1  01B5               	clrf	(calculateLux@m+1)^(0+384)
  5103  0CF2                     l3171:
  5104                           
  5105                           ;tsl2561.c: 63:   unsigned long temp;;tsl2561.c: 64:   channel0 = channel0 * b;
  5106  0CF2  1683               	bsf	3,5	;RP0=1, select bank3
  5107  0CF3  1703               	bsf	3,6	;RP1=1, select bank3
  5108  0CF4  0832               	movf	calculateLux@b^(0+384),w
  5109  0CF5  0090               	movwf	___lmul@multiplier^(0+384)
  5110  0CF6  0833               	movf	(calculateLux@b+1)^(0+384),w
  5111  0CF7  0091               	movwf	(___lmul@multiplier^(0+384)+1)
  5112  0CF8  0192               	clrf	(___lmul@multiplier^(0+384)+2)
  5113  0CF9  0193               	clrf	(___lmul@multiplier^(0+384)+3)
  5114  0CFA  0841               	movf	(calculateLux@channel0+3)^(0+384),w
  5115  0CFB  0097               	movwf	(___lmul@multiplicand+3)^(0+384)
  5116  0CFC  0840               	movf	(calculateLux@channel0+2)^(0+384),w
  5117  0CFD  0096               	movwf	(___lmul@multiplicand+2)^(0+384)
  5118  0CFE  083F               	movf	(calculateLux@channel0+1)^(0+384),w
  5119  0CFF  0095               	movwf	(___lmul@multiplicand+1)^(0+384)
  5120  0D00  083E               	movf	calculateLux@channel0^(0+384),w
  5121  0D01  0094               	movwf	___lmul@multiplicand^(0+384)
  5122  0D02  160A  158A  2777  120A  158A  	fcall	___lmul
  5123  0D07  1683               	bsf	3,5	;RP0=1, select bank3
  5124  0D08  1703               	bsf	3,6	;RP1=1, select bank3
  5125  0D09  0813               	movf	(?___lmul+3)^(0+384),w
  5126  0D0A  00C1               	movwf	(calculateLux@channel0+3)^(0+384)
  5127  0D0B  0812               	movf	(?___lmul+2)^(0+384),w
  5128  0D0C  00C0               	movwf	(calculateLux@channel0+2)^(0+384)
  5129  0D0D  0811               	movf	(?___lmul+1)^(0+384),w
  5130  0D0E  00BF               	movwf	(calculateLux@channel0+1)^(0+384)
  5131  0D0F  0810               	movf	?___lmul^(0+384),w
  5132  0D10  00BE               	movwf	calculateLux@channel0^(0+384)
  5133                           
  5134                           ;tsl2561.c: 65:   channel1 = channel1 * m;
  5135  0D11  0834               	movf	calculateLux@m^(0+384),w
  5136  0D12  0090               	movwf	___lmul@multiplier^(0+384)
  5137  0D13  0835               	movf	(calculateLux@m+1)^(0+384),w
  5138  0D14  0091               	movwf	(___lmul@multiplier^(0+384)+1)
  5139  0D15  0192               	clrf	(___lmul@multiplier^(0+384)+2)
  5140  0D16  0193               	clrf	(___lmul@multiplier^(0+384)+3)
  5141  0D17  083D               	movf	(calculateLux@channel1+3)^(0+384),w
  5142  0D18  0097               	movwf	(___lmul@multiplicand+3)^(0+384)
  5143  0D19  083C               	movf	(calculateLux@channel1+2)^(0+384),w
  5144  0D1A  0096               	movwf	(___lmul@multiplicand+2)^(0+384)
  5145  0D1B  083B               	movf	(calculateLux@channel1+1)^(0+384),w
  5146  0D1C  0095               	movwf	(___lmul@multiplicand+1)^(0+384)
  5147  0D1D  083A               	movf	calculateLux@channel1^(0+384),w
  5148  0D1E  0094               	movwf	___lmul@multiplicand^(0+384)
  5149  0D1F  160A  158A  2777  120A  158A  	fcall	___lmul
  5150  0D24  1683               	bsf	3,5	;RP0=1, select bank3
  5151  0D25  1703               	bsf	3,6	;RP1=1, select bank3
  5152  0D26  0813               	movf	(?___lmul+3)^(0+384),w
  5153  0D27  00BD               	movwf	(calculateLux@channel1+3)^(0+384)
  5154  0D28  0812               	movf	(?___lmul+2)^(0+384),w
  5155  0D29  00BC               	movwf	(calculateLux@channel1+2)^(0+384)
  5156  0D2A  0811               	movf	(?___lmul+1)^(0+384),w
  5157  0D2B  00BB               	movwf	(calculateLux@channel1+1)^(0+384)
  5158  0D2C  0810               	movf	?___lmul^(0+384),w
  5159  0D2D  00BA               	movwf	calculateLux@channel1^(0+384)
  5160                           
  5161                           ;tsl2561.c: 67:   temp = 0;
  5162  0D2E  3000               	movlw	0
  5163  0D2F  00B1               	movwf	(calculateLux@temp+3)^(0+384)
  5164  0D30  3000               	movlw	0
  5165  0D31  00B0               	movwf	(calculateLux@temp+2)^(0+384)
  5166  0D32  3000               	movlw	0
  5167  0D33  00AF               	movwf	(calculateLux@temp+1)^(0+384)
  5168  0D34  3000               	movlw	0
  5169  0D35  00AE               	movwf	calculateLux@temp^(0+384)
  5170                           
  5171                           ;tsl2561.c: 69:   if (channel0 > channel1)
  5172  0D36  0841               	movf	(calculateLux@channel0+3)^(0+384),w
  5173  0D37  023D               	subwf	(calculateLux@channel1+3)^(0+384),w
  5174  0D38  1D03               	skipz
  5175  0D39  2D44               	goto	u3765
  5176  0D3A  0840               	movf	(calculateLux@channel0+2)^(0+384),w
  5177  0D3B  023C               	subwf	(calculateLux@channel1+2)^(0+384),w
  5178  0D3C  1D03               	skipz
  5179  0D3D  2D44               	goto	u3765
  5180  0D3E  083F               	movf	(calculateLux@channel0+1)^(0+384),w
  5181  0D3F  023B               	subwf	(calculateLux@channel1+1)^(0+384),w
  5182  0D40  1D03               	skipz
  5183  0D41  2D44               	goto	u3765
  5184  0D42  083E               	movf	calculateLux@channel0^(0+384),w
  5185  0D43  023A               	subwf	calculateLux@channel1^(0+384),w
  5186  0D44                     u3765:
  5187  0D44  1803               	skipnc
  5188  0D45  2D6A               	goto	l423
  5189                           
  5190                           ;tsl2561.c: 70:     temp = channel0 - channel1;
  5191  0D46  083E               	movf	calculateLux@channel0^(0+384),w
  5192  0D47  00A2               	movwf	??_calculateLux^(0+384)
  5193  0D48  083F               	movf	(calculateLux@channel0+1)^(0+384),w
  5194  0D49  00A3               	movwf	(??_calculateLux^(0+384)+1)
  5195  0D4A  0840               	movf	(calculateLux@channel0+2)^(0+384),w
  5196  0D4B  00A4               	movwf	(??_calculateLux^(0+384)+2)
  5197  0D4C  0841               	movf	(calculateLux@channel0+3)^(0+384),w
  5198  0D4D  00A5               	movwf	(??_calculateLux^(0+384)+3)
  5199  0D4E  083A               	movf	calculateLux@channel1^(0+384),w
  5200  0D4F  02A2               	subwf	??_calculateLux^(0+384),f
  5201  0D50  083B               	movf	(calculateLux@channel1+1)^(0+384),w
  5202  0D51  1C03               	skipc
  5203  0D52  0F3B               	incfsz	(calculateLux@channel1+1)^(0+384),w
  5204  0D53  2D55               	goto	u3771
  5205  0D54  2D56               	goto	u3772
  5206  0D55                     u3771:
  5207  0D55  02A3               	subwf	(??_calculateLux^(0+384)+1),f
  5208  0D56                     u3772:
  5209  0D56  083C               	movf	(calculateLux@channel1+2)^(0+384),w
  5210  0D57  1C03               	skipc
  5211  0D58  0F3C               	incfsz	(calculateLux@channel1+2)^(0+384),w
  5212  0D59  2D5B               	goto	u3773
  5213  0D5A  2D5C               	goto	u3774
  5214  0D5B                     u3773:
  5215  0D5B  02A4               	subwf	(??_calculateLux^(0+384)+2),f
  5216  0D5C                     u3774:
  5217  0D5C  083D               	movf	(calculateLux@channel1+3)^(0+384),w
  5218  0D5D  1C03               	skipc
  5219  0D5E  0F3D               	incfsz	(calculateLux@channel1+3)^(0+384),w
  5220  0D5F  2D61               	goto	u3775
  5221  0D60  2D62               	goto	u3776
  5222  0D61                     u3775:
  5223  0D61  02A5               	subwf	(??_calculateLux^(0+384)+3),f
  5224  0D62                     u3776:
  5225  0D62  0825               	movf	(??_calculateLux+3)^(0+384),w
  5226  0D63  00B1               	movwf	(calculateLux@temp+3)^(0+384)
  5227  0D64  0824               	movf	(??_calculateLux+2)^(0+384),w
  5228  0D65  00B0               	movwf	(calculateLux@temp+2)^(0+384)
  5229  0D66  0823               	movf	(??_calculateLux+1)^(0+384),w
  5230  0D67  00AF               	movwf	(calculateLux@temp+1)^(0+384)
  5231  0D68  0822               	movf	??_calculateLux^(0+384),w
  5232  0D69  00AE               	movwf	calculateLux@temp^(0+384)
  5233  0D6A                     l423:
  5234                           
  5235                           ;tsl2561.c: 73:   temp += (1 << ((14) - 1));
  5236  0D6A  3000               	movlw	0
  5237  0D6B  07AE               	addwf	calculateLux@temp^(0+384),f
  5238  0D6C  3020               	movlw	32
  5239  0D6D  1803               	skipnc
  5240  0D6E  3021               	movlw	33
  5241  0D6F  07AF               	addwf	(calculateLux@temp+1)^(0+384),f
  5242  0D70  3000               	movlw	0
  5243  0D71  1803               	skipnc
  5244  0D72  3001               	movlw	1
  5245  0D73  07B0               	addwf	(calculateLux@temp+2)^(0+384),f
  5246  0D74  3000               	movlw	0
  5247  0D75  1803               	skipnc
  5248  0D76  3001               	movlw	1
  5249  0D77  07B1               	addwf	(calculateLux@temp+3)^(0+384),f
  5250                           
  5251                           ;tsl2561.c: 76:   uint32_t lux = temp >> (14);
  5252  0D78  082E               	movf	calculateLux@temp^(0+384),w
  5253  0D79  00A2               	movwf	??_calculateLux^(0+384)
  5254  0D7A  082F               	movf	(calculateLux@temp+1)^(0+384),w
  5255  0D7B  00A3               	movwf	(??_calculateLux^(0+384)+1)
  5256  0D7C  0830               	movf	(calculateLux@temp+2)^(0+384),w
  5257  0D7D  00A4               	movwf	(??_calculateLux^(0+384)+2)
  5258  0D7E  0831               	movf	(calculateLux@temp+3)^(0+384),w
  5259  0D7F  00A5               	movwf	(??_calculateLux^(0+384)+3)
  5260  0D80  300E               	movlw	14
  5261  0D81                     u3785:
  5262  0D81  1003               	clrc
  5263  0D82  0CA5               	rrf	(??_calculateLux^(0+384)+3),f
  5264  0D83  0CA4               	rrf	(??_calculateLux^(0+384)+2),f
  5265  0D84  0CA3               	rrf	(??_calculateLux^(0+384)+1),f
  5266  0D85  0CA2               	rrf	??_calculateLux^(0+384),f
  5267  0D86  3EFF               	addlw	-1
  5268  0D87  1D03               	skipz
  5269  0D88  2D81               	goto	u3785
  5270  0D89  0825               	movf	(??_calculateLux+3)^(0+384),w
  5271  0D8A  00A9               	movwf	(calculateLux@lux+3)^(0+384)
  5272  0D8B  0824               	movf	(??_calculateLux+2)^(0+384),w
  5273  0D8C  00A8               	movwf	(calculateLux@lux+2)^(0+384)
  5274  0D8D  0823               	movf	(??_calculateLux+1)^(0+384),w
  5275  0D8E  00A7               	movwf	(calculateLux@lux+1)^(0+384)
  5276  0D8F  0822               	movf	??_calculateLux^(0+384),w
  5277  0D90  00A6               	movwf	calculateLux@lux^(0+384)
  5278                           
  5279                           ;tsl2561.c: 79:   return lux;
  5280  0D91  0829               	movf	(calculateLux@lux+3)^(0+384),w
  5281  0D92  00A1               	movwf	(?_calculateLux+3)^(0+384)
  5282  0D93  0828               	movf	(calculateLux@lux+2)^(0+384),w
  5283  0D94  00A0               	movwf	(?_calculateLux+2)^(0+384)
  5284  0D95  0827               	movf	(calculateLux@lux+1)^(0+384),w
  5285  0D96  009F               	movwf	(?_calculateLux+1)^(0+384)
  5286  0D97  0826               	movf	calculateLux@lux^(0+384),w
  5287  0D98  009E               	movwf	?_calculateLux^(0+384)
  5288  0D99  0008               	return
  5289  0D9A                     __end_of_calculateLux:
  5290                           
  5291                           	psect	text19
  5292  1F77                     __ptext19:	
  5293 ;; *************** function ___lmul *****************
  5294 ;; Defined at:
  5295 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul32.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  multiplier      4    0[BANK3 ] unsigned long 
  5298 ;;  multiplicand    4    4[BANK3 ] unsigned long 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  product         4    9[BANK3 ] unsigned long 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  4    0[BANK3 ] unsigned long 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5310 ;;      Params:         0       0       0       8       0
  5311 ;;      Locals:         0       0       0       4       0
  5312 ;;      Temps:          0       0       0       1       0
  5313 ;;      Totals:         0       0       0      13       0
  5314 ;;Total ram usage:       13 bytes
  5315 ;; Hardware stack levels used: 1
  5316 ;; Hardware stack levels required when called: 5
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_calculateLux
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324  1F77                     ___lmul:	
  5325                           ;psect for function ___lmul
  5326                           
  5327                           
  5328                           ;incstack = 0
  5329                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  5330  1F77  3000               	movlw	0
  5331  1F78  1683               	bsf	3,5	;RP0=1, select bank3
  5332  1F79  1703               	bsf	3,6	;RP1=1, select bank3
  5333  1F7A  009C               	movwf	(___lmul@product+3)^(0+384)
  5334  1F7B  3000               	movlw	0
  5335  1F7C  009B               	movwf	(___lmul@product+2)^(0+384)
  5336  1F7D  3000               	movlw	0
  5337  1F7E  009A               	movwf	(___lmul@product+1)^(0+384)
  5338  1F7F  3000               	movlw	0
  5339  1F80  0099               	movwf	___lmul@product^(0+384)
  5340  1F81                     l2675:
  5341  1F81  1C10               	btfss	___lmul@multiplier^(0+384),0
  5342  1F82  2F97               	goto	l2679
  5343  1F83  0814               	movf	___lmul@multiplicand^(0+384),w
  5344  1F84  0799               	addwf	___lmul@product^(0+384),f
  5345  1F85  0815               	movf	(___lmul@multiplicand+1)^(0+384),w
  5346  1F86  1103               	clrz
  5347  1F87  1803               	skipnc
  5348  1F88  3E01               	addlw	1
  5349  1F89  1D03               	btfss	3,2
  5350  1F8A  079A               	addwf	(___lmul@product+1)^(0+384),f
  5351  1F8B  0816               	movf	(___lmul@multiplicand+2)^(0+384),w
  5352  1F8C  1103               	clrz
  5353  1F8D  1803               	skipnc
  5354  1F8E  3E01               	addlw	1
  5355  1F8F  1D03               	btfss	3,2
  5356  1F90  079B               	addwf	(___lmul@product+2)^(0+384),f
  5357  1F91  0817               	movf	(___lmul@multiplicand+3)^(0+384),w
  5358  1F92  1103               	clrz
  5359  1F93  1803               	skipnc
  5360  1F94  3E01               	addlw	1
  5361  1F95  1D03               	btfss	3,2
  5362  1F96  079C               	addwf	(___lmul@product+3)^(0+384),f
  5363  1F97                     l2679:
  5364  1F97  3001               	movlw	1
  5365  1F98  0098               	movwf	??___lmul^(0+384)
  5366  1F99                     u2605:
  5367  1F99  1003               	clrc
  5368  1F9A  0D94               	rlf	___lmul@multiplicand^(0+384),f
  5369  1F9B  0D95               	rlf	(___lmul@multiplicand+1)^(0+384),f
  5370  1F9C  0D96               	rlf	(___lmul@multiplicand+2)^(0+384),f
  5371  1F9D  0D97               	rlf	(___lmul@multiplicand+3)^(0+384),f
  5372  1F9E  0B98               	decfsz	??___lmul^(0+384),f
  5373  1F9F  2F99               	goto	u2605
  5374  1FA0  3001               	movlw	1
  5375  1FA1                     u2615:
  5376  1FA1  1003               	clrc
  5377  1FA2  0C93               	rrf	(___lmul@multiplier+3)^(0+384),f
  5378  1FA3  0C92               	rrf	(___lmul@multiplier+2)^(0+384),f
  5379  1FA4  0C91               	rrf	(___lmul@multiplier+1)^(0+384),f
  5380  1FA5  0C90               	rrf	___lmul@multiplier^(0+384),f
  5381  1FA6  3EFF               	addlw	-1
  5382  1FA7  1D03               	skipz
  5383  1FA8  2FA1               	goto	u2615
  5384  1FA9  0813               	movf	(___lmul@multiplier+3)^(0+384),w
  5385  1FAA  0412               	iorwf	(___lmul@multiplier+2)^(0+384),w
  5386  1FAB  0411               	iorwf	(___lmul@multiplier+1)^(0+384),w
  5387  1FAC  0410               	iorwf	___lmul@multiplier^(0+384),w
  5388  1FAD  1D03               	skipz
  5389  1FAE  2F81               	goto	l2675
  5390  1FAF  081C               	movf	(___lmul@product+3)^(0+384),w
  5391  1FB0  0093               	movwf	(?___lmul+3)^(0+384)
  5392  1FB1  081B               	movf	(___lmul@product+2)^(0+384),w
  5393  1FB2  0092               	movwf	(?___lmul+2)^(0+384)
  5394  1FB3  081A               	movf	(___lmul@product+1)^(0+384),w
  5395  1FB4  0091               	movwf	(?___lmul+1)^(0+384)
  5396  1FB5  0819               	movf	___lmul@product^(0+384),w
  5397  1FB6  0090               	movwf	?___lmul^(0+384)
  5398  1FB7  0008               	return
  5399  1FB8                     __end_of___lmul:
  5400                           
  5401                           	psect	text20
  5402  1091                     __ptext20:	
  5403 ;; *************** function ___lldiv *****************
  5404 ;; Defined at:
  5405 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\__lldiv.c"
  5406 ;; Parameters:    Size  Location     Type
  5407 ;;  divisor         4    0[BANK3 ] unsigned long 
  5408 ;;  dividend        4    4[BANK3 ] unsigned long 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;  quotient        4    9[BANK3 ] unsigned long 
  5411 ;;  counter         1   13[BANK3 ] unsigned char 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  4    0[BANK3 ] unsigned long 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5421 ;;      Params:         0       0       0       8       0
  5422 ;;      Locals:         0       0       0       5       0
  5423 ;;      Temps:          0       0       0       1       0
  5424 ;;      Totals:         0       0       0      14       0
  5425 ;;Total ram usage:       14 bytes
  5426 ;; Hardware stack levels used: 1
  5427 ;; Hardware stack levels required when called: 5
  5428 ;; This function calls:
  5429 ;;		Nothing
  5430 ;; This function is called by:
  5431 ;;		_USART_set
  5432 ;;		_I2C_Master_Init
  5433 ;;		_calculateLux
  5434 ;; This function uses a non-reentrant model
  5435 ;;
  5436                           
  5437  1091                     ___lldiv:	
  5438                           ;psect for function ___lldiv
  5439                           
  5440                           
  5441                           ;incstack = 0
  5442                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5443  1091  3000               	movlw	0
  5444  1092  1683               	bsf	3,5	;RP0=1, select bank3
  5445  1093  1703               	bsf	3,6	;RP1=1, select bank3
  5446  1094  009C               	movwf	(___lldiv@quotient+3)^(0+384)
  5447  1095  3000               	movlw	0
  5448  1096  009B               	movwf	(___lldiv@quotient+2)^(0+384)
  5449  1097  3000               	movlw	0
  5450  1098  009A               	movwf	(___lldiv@quotient+1)^(0+384)
  5451  1099  3000               	movlw	0
  5452  109A  0099               	movwf	___lldiv@quotient^(0+384)
  5453  109B  0813               	movf	(___lldiv@divisor+3)^(0+384),w
  5454  109C  0412               	iorwf	(___lldiv@divisor+2)^(0+384),w
  5455  109D  0411               	iorwf	(___lldiv@divisor+1)^(0+384),w
  5456  109E  0410               	iorwf	___lldiv@divisor^(0+384),w
  5457  109F  1903               	skipnz
  5458  10A0  28E8               	goto	l2721
  5459  10A1  019D               	clrf	___lldiv@counter^(0+384)
  5460  10A2  0A9D               	incf	___lldiv@counter^(0+384),f
  5461  10A3                     l2707:
  5462  10A3  1B93               	btfsc	(___lldiv@divisor+3)^(0+384),7
  5463  10A4  28B3               	goto	l2709
  5464  10A5  3001               	movlw	1
  5465  10A6  0098               	movwf	??___lldiv^(0+384)
  5466  10A7                     u2665:
  5467  10A7  1003               	clrc
  5468  10A8  0D90               	rlf	___lldiv@divisor^(0+384),f
  5469  10A9  0D91               	rlf	(___lldiv@divisor+1)^(0+384),f
  5470  10AA  0D92               	rlf	(___lldiv@divisor+2)^(0+384),f
  5471  10AB  0D93               	rlf	(___lldiv@divisor+3)^(0+384),f
  5472  10AC  0B98               	decfsz	??___lldiv^(0+384),f
  5473  10AD  28A7               	goto	u2665
  5474  10AE  3001               	movlw	1
  5475  10AF  0098               	movwf	??___lldiv^(0+384)
  5476  10B0  0818               	movf	??___lldiv^(0+384),w
  5477  10B1  079D               	addwf	___lldiv@counter^(0+384),f
  5478  10B2  28A3               	goto	l2707
  5479  10B3                     l2709:
  5480  10B3  3001               	movlw	1
  5481  10B4  0098               	movwf	??___lldiv^(0+384)
  5482  10B5                     u2685:
  5483  10B5  1003               	clrc
  5484  10B6  0D99               	rlf	___lldiv@quotient^(0+384),f
  5485  10B7  0D9A               	rlf	(___lldiv@quotient+1)^(0+384),f
  5486  10B8  0D9B               	rlf	(___lldiv@quotient+2)^(0+384),f
  5487  10B9  0D9C               	rlf	(___lldiv@quotient+3)^(0+384),f
  5488  10BA  0B98               	decfsz	??___lldiv^(0+384),f
  5489  10BB  28B5               	goto	u2685
  5490  10BC  0813               	movf	(___lldiv@divisor+3)^(0+384),w
  5491  10BD  0217               	subwf	(___lldiv@dividend+3)^(0+384),w
  5492  10BE  1D03               	skipz
  5493  10BF  28CA               	goto	u2695
  5494  10C0  0812               	movf	(___lldiv@divisor+2)^(0+384),w
  5495  10C1  0216               	subwf	(___lldiv@dividend+2)^(0+384),w
  5496  10C2  1D03               	skipz
  5497  10C3  28CA               	goto	u2695
  5498  10C4  0811               	movf	(___lldiv@divisor+1)^(0+384),w
  5499  10C5  0215               	subwf	(___lldiv@dividend+1)^(0+384),w
  5500  10C6  1D03               	skipz
  5501  10C7  28CA               	goto	u2695
  5502  10C8  0810               	movf	___lldiv@divisor^(0+384),w
  5503  10C9  0214               	subwf	___lldiv@dividend^(0+384),w
  5504  10CA                     u2695:
  5505  10CA  1C03               	skipc
  5506  10CB  28DB               	goto	l2717
  5507  10CC  0810               	movf	___lldiv@divisor^(0+384),w
  5508  10CD  0294               	subwf	___lldiv@dividend^(0+384),f
  5509  10CE  0811               	movf	(___lldiv@divisor+1)^(0+384),w
  5510  10CF  1C03               	skipc
  5511  10D0  0F11               	incfsz	(___lldiv@divisor+1)^(0+384),w
  5512  10D1  0295               	subwf	(___lldiv@dividend+1)^(0+384),f
  5513  10D2  0812               	movf	(___lldiv@divisor+2)^(0+384),w
  5514  10D3  1C03               	skipc
  5515  10D4  0F12               	incfsz	(___lldiv@divisor+2)^(0+384),w
  5516  10D5  0296               	subwf	(___lldiv@dividend+2)^(0+384),f
  5517  10D6  0813               	movf	(___lldiv@divisor+3)^(0+384),w
  5518  10D7  1C03               	skipc
  5519  10D8  0F13               	incfsz	(___lldiv@divisor+3)^(0+384),w
  5520  10D9  0297               	subwf	(___lldiv@dividend+3)^(0+384),f
  5521  10DA  1419               	bsf	___lldiv@quotient^(0+384),0
  5522  10DB                     l2717:
  5523  10DB  3001               	movlw	1
  5524  10DC                     u2705:
  5525  10DC  1003               	clrc
  5526  10DD  0C93               	rrf	(___lldiv@divisor+3)^(0+384),f
  5527  10DE  0C92               	rrf	(___lldiv@divisor+2)^(0+384),f
  5528  10DF  0C91               	rrf	(___lldiv@divisor+1)^(0+384),f
  5529  10E0  0C90               	rrf	___lldiv@divisor^(0+384),f
  5530  10E1  3EFF               	addlw	-1
  5531  10E2  1D03               	skipz
  5532  10E3  28DC               	goto	u2705
  5533  10E4  3001               	movlw	1
  5534  10E5  029D               	subwf	___lldiv@counter^(0+384),f
  5535  10E6  1D03               	btfss	3,2
  5536  10E7  28B3               	goto	l2709
  5537  10E8                     l2721:
  5538  10E8  081C               	movf	(___lldiv@quotient+3)^(0+384),w
  5539  10E9  0093               	movwf	(?___lldiv+3)^(0+384)
  5540  10EA  081B               	movf	(___lldiv@quotient+2)^(0+384),w
  5541  10EB  0092               	movwf	(?___lldiv+2)^(0+384)
  5542  10EC  081A               	movf	(___lldiv@quotient+1)^(0+384),w
  5543  10ED  0091               	movwf	(?___lldiv+1)^(0+384)
  5544  10EE  0819               	movf	___lldiv@quotient^(0+384),w
  5545  10EF  0090               	movwf	?___lldiv^(0+384)
  5546  10F0  0008               	return
  5547  10F1                     __end_of___lldiv:
  5548                           
  5549                           	psect	text21
  5550  1DAF                     __ptext21:	
  5551 ;; *************** function ___bmul *****************
  5552 ;; Defined at:
  5553 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;  multiplier      1    wreg     unsigned char 
  5556 ;;  multiplicand    1   54[BANK3 ] unsigned char 
  5557 ;; Auto vars:     Size  Location     Type
  5558 ;;  multiplier      1   57[BANK3 ] unsigned char 
  5559 ;;  product         1   56[BANK3 ] unsigned char 
  5560 ;; Return value:  Size  Location     Type
  5561 ;;                  1    wreg      unsigned char 
  5562 ;; Registers used:
  5563 ;;		wreg, status,2, status,0
  5564 ;; Tracked objects:
  5565 ;;		On entry : 0/0
  5566 ;;		On exit  : 0/0
  5567 ;;		Unchanged: 0/0
  5568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5569 ;;      Params:         0       0       0       1       0
  5570 ;;      Locals:         0       0       0       2       0
  5571 ;;      Temps:          0       0       0       1       0
  5572 ;;      Totals:         0       0       0       4       0
  5573 ;;Total ram usage:        4 bytes
  5574 ;; Hardware stack levels used: 1
  5575 ;; Hardware stack levels required when called: 5
  5576 ;; This function calls:
  5577 ;;		Nothing
  5578 ;; This function is called by:
  5579 ;;		_bcd_dec
  5580 ;;		_LUX_read
  5581 ;; This function uses a non-reentrant model
  5582 ;;
  5583                           
  5584  1DAF                     ___bmul:	
  5585                           ;psect for function ___bmul
  5586                           
  5587                           
  5588                           ;incstack = 0
  5589                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  5590                           ;___bmul@multiplier stored from wreg
  5591  1DAF  1683               	bsf	3,5	;RP0=1, select bank3
  5592  1DB0  1703               	bsf	3,6	;RP1=1, select bank3
  5593  1DB1  00C9               	movwf	___bmul@multiplier^(0+384)
  5594  1DB2  01C8               	clrf	___bmul@product^(0+384)
  5595  1DB3                     l2689:
  5596  1DB3  1C49               	btfss	___bmul@multiplier^(0+384),0
  5597  1DB4  2DB9               	goto	l2693
  5598  1DB5  0846               	movf	___bmul@multiplicand^(0+384),w
  5599  1DB6  00C7               	movwf	??___bmul^(0+384)
  5600  1DB7  0847               	movf	??___bmul^(0+384),w
  5601  1DB8  07C8               	addwf	___bmul@product^(0+384),f
  5602  1DB9                     l2693:
  5603  1DB9  1003               	clrc
  5604  1DBA  0DC6               	rlf	___bmul@multiplicand^(0+384),f
  5605  1DBB  1003               	clrc
  5606  1DBC  0CC9               	rrf	___bmul@multiplier^(0+384),f
  5607  1DBD  0849               	movf	___bmul@multiplier^(0+384),w
  5608  1DBE  1D03               	btfss	3,2
  5609  1DBF  2DB3               	goto	l2689
  5610  1DC0  0848               	movf	___bmul@product^(0+384),w
  5611  1DC1  0008               	return
  5612  1DC2                     __end_of___bmul:
  5613                           
  5614                           	psect	text22
  5615  1D91                     __ptext22:	
  5616 ;; *************** function _USART_send *****************
  5617 ;; Defined at:
  5618 ;;		line 27 in file "USART.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;  data            1    wreg     const unsigned char 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;  data            1    0[BANK3 ] const unsigned char 
  5623 ;; Return value:  Size  Location     Type
  5624 ;;                  1    wreg      void 
  5625 ;; Registers used:
  5626 ;;		wreg
  5627 ;; Tracked objects:
  5628 ;;		On entry : 0/0
  5629 ;;		On exit  : 0/0
  5630 ;;		Unchanged: 0/0
  5631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5632 ;;      Params:         0       0       0       0       0
  5633 ;;      Locals:         0       0       0       1       0
  5634 ;;      Temps:          0       0       0       0       0
  5635 ;;      Totals:         0       0       0       1       0
  5636 ;;Total ram usage:        1 bytes
  5637 ;; Hardware stack levels used: 1
  5638 ;; Hardware stack levels required when called: 5
  5639 ;; This function calls:
  5640 ;;		Nothing
  5641 ;; This function is called by:
  5642 ;;		_motor_dc
  5643 ;;		_servo
  5644 ;;		_RTC_read
  5645 ;;		_LUX_read
  5646 ;;		_USART_print
  5647 ;; This function uses a non-reentrant model
  5648 ;;
  5649                           
  5650  1D91                     _USART_send:	
  5651                           ;psect for function _USART_send
  5652                           
  5653                           
  5654                           ;incstack = 0
  5655                           ; Regs used in _USART_send: [wreg]
  5656                           ;USART_send@data stored from wreg
  5657  1D91  1683               	bsf	3,5	;RP0=1, select bank3
  5658  1D92  1703               	bsf	3,6	;RP1=1, select bank3
  5659  1D93  0090               	movwf	USART_send@data^(0+384)
  5660  1D94                     l233:	
  5661                           ;USART.c: 27: void USART_send(const char data);USART.c: 28: {;USART.c: 29:     while(!TX
      +                          STAbits.TRMT);
  5662                           
  5663  1D94  1303               	bcf	3,6	;RP1=0, select bank1
  5664  1D95  1C98               	btfss	24,1	;volatile
  5665  1D96  2D94               	goto	l233
  5666                           
  5667                           ;USART.c: 30:     TXREG = data;
  5668  1D97  1683               	bsf	3,5	;RP0=1, select bank3
  5669  1D98  1703               	bsf	3,6	;RP1=1, select bank3
  5670  1D99  0810               	movf	USART_send@data^(0+384),w
  5671  1D9A  1283               	bcf	3,5	;RP0=0, select bank0
  5672  1D9B  1303               	bcf	3,6	;RP1=0, select bank0
  5673  1D9C  0099               	movwf	25	;volatile
  5674  1D9D  0008               	return
  5675  1D9E                     __end_of_USART_send:
  5676                           
  5677                           	psect	text23
  5678  1D50                     __ptext23:	
  5679 ;; *************** function _I2C_Master_RepeatedStart *****************
  5680 ;; Defined at:
  5681 ;;		line 35 in file "I2C.c"
  5682 ;; Parameters:    Size  Location     Type
  5683 ;;		None
  5684 ;; Auto vars:     Size  Location     Type
  5685 ;;		None
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  1    wreg      void 
  5688 ;; Registers used:
  5689 ;;		wreg, status,2, status,0, pclath, cstack
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5695 ;;      Params:         0       0       0       0       0
  5696 ;;      Locals:         0       0       0       0       0
  5697 ;;      Temps:          0       0       0       0       0
  5698 ;;      Totals:         0       0       0       0       0
  5699 ;;Total ram usage:        0 bytes
  5700 ;; Hardware stack levels used: 1
  5701 ;; Hardware stack levels required when called: 6
  5702 ;; This function calls:
  5703 ;;		_I2C_Master_Wait
  5704 ;; This function is called by:
  5705 ;;		_RTC_read
  5706 ;;		_LUX_read
  5707 ;; This function uses a non-reentrant model
  5708 ;;
  5709                           
  5710  1D50                     _I2C_Master_RepeatedStart:	
  5711                           ;psect for function _I2C_Master_RepeatedStart
  5712                           
  5713                           
  5714                           ;I2C.c: 37:     I2C_Master_Wait();
  5715                           
  5716                           ;incstack = 0
  5717                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  5718  1D50  160A  158A  255F   	fcall	_I2C_Master_Wait
  5719                           
  5720                           ;I2C.c: 38:     SSPCON2bits.RSEN = 1;
  5721  1D53  1683               	bsf	3,5	;RP0=1, select bank1
  5722  1D54  1303               	bcf	3,6	;RP1=0, select bank1
  5723  1D55  1491               	bsf	17,1	;volatile
  5724  1D56  0008               	return
  5725  1D57                     __end_of_I2C_Master_RepeatedStart:
  5726                           
  5727                           	psect	text24
  5728  1E92                     __ptext24:	
  5729 ;; *************** function _I2C_Master_Read *****************
  5730 ;; Defined at:
  5731 ;;		line 53 in file "I2C.c"
  5732 ;; Parameters:    Size  Location     Type
  5733 ;;  a               2    0[BANK3 ] unsigned short 
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;  temp            2    4[BANK3 ] unsigned short 
  5736 ;; Return value:  Size  Location     Type
  5737 ;;                  2    0[BANK3 ] unsigned short 
  5738 ;; Registers used:
  5739 ;;		wreg, status,2, status,0, pclath, cstack
  5740 ;; Tracked objects:
  5741 ;;		On entry : 0/0
  5742 ;;		On exit  : 0/0
  5743 ;;		Unchanged: 0/0
  5744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5745 ;;      Params:         0       0       0       2       0
  5746 ;;      Locals:         0       0       0       2       0
  5747 ;;      Temps:          0       0       0       2       0
  5748 ;;      Totals:         0       0       0       6       0
  5749 ;;Total ram usage:        6 bytes
  5750 ;; Hardware stack levels used: 1
  5751 ;; Hardware stack levels required when called: 6
  5752 ;; This function calls:
  5753 ;;		_I2C_Master_Wait
  5754 ;; This function is called by:
  5755 ;;		_RTC_read
  5756 ;;		_LUX_read
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760  1E92                     _I2C_Master_Read:	
  5761                           ;psect for function _I2C_Master_Read
  5762                           
  5763                           
  5764                           ;I2C.c: 53: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 54: {;I2C.c: 55:    
      +                           unsigned short temp;;I2C.c: 56:     I2C_Master_Wait();
  5765                           
  5766                           ;incstack = 0
  5767                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  5768  1E92  160A  158A  255F  160A  158A  	fcall	_I2C_Master_Wait
  5769                           
  5770                           ;I2C.c: 57:     SSPCON2bits.RCEN = 1;
  5771  1E97  1683               	bsf	3,5	;RP0=1, select bank1
  5772  1E98  1303               	bcf	3,6	;RP1=0, select bank1
  5773  1E99  1591               	bsf	17,3	;volatile
  5774                           
  5775                           ;I2C.c: 58:     I2C_Master_Wait();
  5776  1E9A  160A  158A  255F  160A  158A  	fcall	_I2C_Master_Wait
  5777                           
  5778                           ;I2C.c: 59:     temp = SSPBUF;
  5779  1E9F  1283               	bcf	3,5	;RP0=0, select bank0
  5780  1EA0  1303               	bcf	3,6	;RP1=0, select bank0
  5781  1EA1  0813               	movf	19,w	;volatile
  5782  1EA2  1683               	bsf	3,5	;RP0=1, select bank3
  5783  1EA3  1703               	bsf	3,6	;RP1=1, select bank3
  5784  1EA4  0092               	movwf	??_I2C_Master_Read^(0+384)
  5785  1EA5  0193               	clrf	(??_I2C_Master_Read^(0+384)+1)
  5786  1EA6  0812               	movf	??_I2C_Master_Read^(0+384),w
  5787  1EA7  0094               	movwf	I2C_Master_Read@temp^(0+384)
  5788  1EA8  0813               	movf	(??_I2C_Master_Read+1)^(0+384),w
  5789  1EA9  0095               	movwf	(I2C_Master_Read@temp+1)^(0+384)
  5790                           
  5791                           ;I2C.c: 60:     I2C_Master_Wait();
  5792  1EAA  160A  158A  255F  160A  158A  	fcall	_I2C_Master_Wait
  5793                           
  5794                           ;I2C.c: 61:     if(a == 1){
  5795  1EAF  1683               	bsf	3,5	;RP0=1, select bank3
  5796  1EB0  1703               	bsf	3,6	;RP1=1, select bank3
  5797  1EB1  0310               	decf	I2C_Master_Read@a^(0+384),w
  5798  1EB2  0411               	iorwf	(I2C_Master_Read@a+1)^(0+384),w
  5799  1EB3  1D03               	btfss	3,2
  5800  1EB4  2EB9               	goto	l373
  5801                           
  5802                           ;I2C.c: 62:         SSPCON2bits.ACKDT = 0;
  5803  1EB5  1683               	bsf	3,5	;RP0=1, select bank1
  5804  1EB6  1303               	bcf	3,6	;RP1=0, select bank1
  5805  1EB7  1291               	bcf	17,5	;volatile
  5806                           
  5807                           ;I2C.c: 63:     }else{
  5808  1EB8  2EBC               	goto	l374
  5809  1EB9                     l373:
  5810                           
  5811                           ;I2C.c: 64:         SSPCON2bits.ACKDT = 1;
  5812  1EB9  1683               	bsf	3,5	;RP0=1, select bank1
  5813  1EBA  1303               	bcf	3,6	;RP1=0, select bank1
  5814  1EBB  1691               	bsf	17,5	;volatile
  5815  1EBC                     l374:	
  5816                           ;I2C.c: 65:     }
  5817                           
  5818                           
  5819                           ;I2C.c: 66:     SSPCON2bits.ACKEN = 1;
  5820  1EBC  1611               	bsf	17,4	;volatile
  5821                           
  5822                           ;I2C.c: 67:     return temp;
  5823  1EBD  1683               	bsf	3,5	;RP0=1, select bank3
  5824  1EBE  1703               	bsf	3,6	;RP1=1, select bank3
  5825  1EBF  0815               	movf	(I2C_Master_Read@temp+1)^(0+384),w
  5826  1EC0  0091               	movwf	(?_I2C_Master_Read+1)^(0+384)
  5827  1EC1  0814               	movf	I2C_Master_Read@temp^(0+384),w
  5828  1EC2  0090               	movwf	?_I2C_Master_Read^(0+384)
  5829  1EC3  0008               	return
  5830  1EC4                     __end_of_I2C_Master_Read:
  5831                           
  5832                           	psect	text25
  5833  079D                     __ptext25:	
  5834 ;; *************** function _LUX_config *****************
  5835 ;; Defined at:
  5836 ;;		line 223 in file "main_slave_p1.c"
  5837 ;; Parameters:    Size  Location     Type
  5838 ;;		None
  5839 ;; Auto vars:     Size  Location     Type
  5840 ;;		None
  5841 ;; Return value:  Size  Location     Type
  5842 ;;                  1    wreg      void 
  5843 ;; Registers used:
  5844 ;;		wreg, status,2, status,0, pclath, cstack
  5845 ;; Tracked objects:
  5846 ;;		On entry : 0/0
  5847 ;;		On exit  : 0/0
  5848 ;;		Unchanged: 0/0
  5849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5850 ;;      Params:         0       0       0       0       0
  5851 ;;      Locals:         0       0       0       0       0
  5852 ;;      Temps:          0       0       0       2       0
  5853 ;;      Totals:         0       0       0       2       0
  5854 ;;Total ram usage:        2 bytes
  5855 ;; Hardware stack levels used: 1
  5856 ;; Hardware stack levels required when called: 7
  5857 ;; This function calls:
  5858 ;;		_I2C_Master_Start
  5859 ;;		_I2C_Master_Stop
  5860 ;;		_I2C_Master_Write
  5861 ;; This function is called by:
  5862 ;;		_main
  5863 ;; This function uses a non-reentrant model
  5864 ;;
  5865                           
  5866  079D                     _LUX_config:	
  5867                           ;psect for function _LUX_config
  5868                           
  5869                           
  5870                           ;main_slave_p1.c: 225:     I2C_Master_Start();
  5871                           
  5872                           ;incstack = 0
  5873                           ; Regs used in _LUX_config: [wreg+status,2+status,0+pclath+cstack]
  5874  079D  160A  158A  2542  120A  118A  	fcall	_I2C_Master_Start
  5875                           
  5876                           ;main_slave_p1.c: 226:     I2C_Master_Write(0x72);
  5877  07A2  3072               	movlw	114
  5878  07A3  1683               	bsf	3,5	;RP0=1, select bank3
  5879  07A4  1703               	bsf	3,6	;RP1=1, select bank3
  5880  07A5  0090               	movwf	I2C_Master_Write@d^(0+384)
  5881  07A6  3000               	movlw	0
  5882  07A7  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  5883  07A8  160A  158A  257B  120A  118A  	fcall	_I2C_Master_Write
  5884                           
  5885                           ;main_slave_p1.c: 227:     I2C_Master_Write(0x80);
  5886  07AD  3080               	movlw	128
  5887  07AE  1683               	bsf	3,5	;RP0=1, select bank3
  5888  07AF  1703               	bsf	3,6	;RP1=1, select bank3
  5889  07B0  0090               	movwf	I2C_Master_Write@d^(0+384)
  5890  07B1  3000               	movlw	0
  5891  07B2  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  5892  07B3  160A  158A  257B  120A  118A  	fcall	_I2C_Master_Write
  5893                           
  5894                           ;main_slave_p1.c: 228:     I2C_Master_Write(0x03);
  5895  07B8  3003               	movlw	3
  5896  07B9  1683               	bsf	3,5	;RP0=1, select bank3
  5897  07BA  1703               	bsf	3,6	;RP1=1, select bank3
  5898  07BB  0090               	movwf	I2C_Master_Write@d^(0+384)
  5899  07BC  3000               	movlw	0
  5900  07BD  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  5901  07BE  160A  158A  257B  120A  118A  	fcall	_I2C_Master_Write
  5902                           
  5903                           ;main_slave_p1.c: 229:     I2C_Master_Stop();
  5904  07C3  160A  158A  2549  120A  118A  	fcall	_I2C_Master_Stop
  5905                           
  5906                           ;main_slave_p1.c: 231:     I2C_Master_Start();
  5907  07C8  160A  158A  2542  120A  118A  	fcall	_I2C_Master_Start
  5908                           
  5909                           ;main_slave_p1.c: 232:     I2C_Master_Write(0x72);
  5910  07CD  3072               	movlw	114
  5911  07CE  1683               	bsf	3,5	;RP0=1, select bank3
  5912  07CF  1703               	bsf	3,6	;RP1=1, select bank3
  5913  07D0  0090               	movwf	I2C_Master_Write@d^(0+384)
  5914  07D1  3000               	movlw	0
  5915  07D2  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  5916  07D3  160A  158A  257B  120A  118A  	fcall	_I2C_Master_Write
  5917                           
  5918                           ;main_slave_p1.c: 233:     I2C_Master_Write(0x81);
  5919  07D8  3081               	movlw	129
  5920  07D9  1683               	bsf	3,5	;RP0=1, select bank3
  5921  07DA  1703               	bsf	3,6	;RP1=1, select bank3
  5922  07DB  0090               	movwf	I2C_Master_Write@d^(0+384)
  5923  07DC  3000               	movlw	0
  5924  07DD  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  5925  07DE  160A  158A  257B  120A  118A  	fcall	_I2C_Master_Write
  5926                           
  5927                           ;main_slave_p1.c: 234:     I2C_Master_Write(0x00);
  5928  07E3  3000               	movlw	0
  5929  07E4  1683               	bsf	3,5	;RP0=1, select bank3
  5930  07E5  1703               	bsf	3,6	;RP1=1, select bank3
  5931  07E6  0090               	movwf	I2C_Master_Write@d^(0+384)
  5932  07E7  0091               	movwf	(I2C_Master_Write@d+1)^(0+384)
  5933  07E8  160A  158A  257B  120A  118A  	fcall	_I2C_Master_Write
  5934                           
  5935                           ;main_slave_p1.c: 235:     I2C_Master_Stop();
  5936  07ED  160A  158A  2549  120A  118A  	fcall	_I2C_Master_Stop
  5937                           
  5938                           ;main_slave_p1.c: 237:     _delay((unsigned long)((14)*(1000000/4000.0)));
  5939  07F2  3005               	movlw	5
  5940  07F3  1683               	bsf	3,5	;RP0=1, select bank3
  5941  07F4  1703               	bsf	3,6	;RP1=1, select bank3
  5942  07F5  0093               	movwf	(??_LUX_config^(0+384)+1)
  5943  07F6  3089               	movlw	137
  5944  07F7  0092               	movwf	??_LUX_config^(0+384)
  5945  07F8                     u5117:
  5946  07F8  0B92               	decfsz	??_LUX_config^(0+384),f
  5947  07F9  2FF8               	goto	u5117
  5948  07FA  0B93               	decfsz	(??_LUX_config^(0+384)+1),f
  5949  07FB  2FF8               	goto	u5117
  5950  07FC  2FFD               	nop2
  5951  07FD  0008               	return
  5952  07FE                     __end_of_LUX_config:
  5953                           
  5954                           	psect	text26
  5955  1D7B                     __ptext26:	
  5956 ;; *************** function _I2C_Master_Write *****************
  5957 ;; Defined at:
  5958 ;;		line 47 in file "I2C.c"
  5959 ;; Parameters:    Size  Location     Type
  5960 ;;  d               2    0[BANK3 ] unsigned int 
  5961 ;; Auto vars:     Size  Location     Type
  5962 ;;		None
  5963 ;; Return value:  Size  Location     Type
  5964 ;;                  1    wreg      void 
  5965 ;; Registers used:
  5966 ;;		wreg, status,2, status,0, pclath, cstack
  5967 ;; Tracked objects:
  5968 ;;		On entry : 0/0
  5969 ;;		On exit  : 0/0
  5970 ;;		Unchanged: 0/0
  5971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5972 ;;      Params:         0       0       0       2       0
  5973 ;;      Locals:         0       0       0       0       0
  5974 ;;      Temps:          0       0       0       0       0
  5975 ;;      Totals:         0       0       0       2       0
  5976 ;;Total ram usage:        2 bytes
  5977 ;; Hardware stack levels used: 1
  5978 ;; Hardware stack levels required when called: 6
  5979 ;; This function calls:
  5980 ;;		_I2C_Master_Wait
  5981 ;; This function is called by:
  5982 ;;		_RTC_read
  5983 ;;		_LUX_config
  5984 ;;		_LUX_read
  5985 ;; This function uses a non-reentrant model
  5986 ;;
  5987                           
  5988  1D7B                     _I2C_Master_Write:	
  5989                           ;psect for function _I2C_Master_Write
  5990                           
  5991                           
  5992                           ;I2C.c: 47: void I2C_Master_Write(unsigned d);I2C.c: 48: {;I2C.c: 49:     I2C_Master_Wai
      +                          t();
  5993                           
  5994                           ;incstack = 0
  5995                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  5996  1D7B  160A  158A  255F   	fcall	_I2C_Master_Wait
  5997                           
  5998                           ;I2C.c: 50:     SSPBUF = d;
  5999  1D7E  1683               	bsf	3,5	;RP0=1, select bank3
  6000  1D7F  1703               	bsf	3,6	;RP1=1, select bank3
  6001  1D80  0810               	movf	I2C_Master_Write@d^(0+384),w
  6002  1D81  1283               	bcf	3,5	;RP0=0, select bank0
  6003  1D82  1303               	bcf	3,6	;RP1=0, select bank0
  6004  1D83  0093               	movwf	19	;volatile
  6005  1D84  0008               	return
  6006  1D85                     __end_of_I2C_Master_Write:
  6007                           
  6008                           	psect	text27
  6009  1D49                     __ptext27:	
  6010 ;; *************** function _I2C_Master_Stop *****************
  6011 ;; Defined at:
  6012 ;;		line 41 in file "I2C.c"
  6013 ;; Parameters:    Size  Location     Type
  6014 ;;		None
  6015 ;; Auto vars:     Size  Location     Type
  6016 ;;		None
  6017 ;; Return value:  Size  Location     Type
  6018 ;;                  1    wreg      void 
  6019 ;; Registers used:
  6020 ;;		wreg, status,2, status,0, pclath, cstack
  6021 ;; Tracked objects:
  6022 ;;		On entry : 0/0
  6023 ;;		On exit  : 0/0
  6024 ;;		Unchanged: 0/0
  6025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6026 ;;      Params:         0       0       0       0       0
  6027 ;;      Locals:         0       0       0       0       0
  6028 ;;      Temps:          0       0       0       0       0
  6029 ;;      Totals:         0       0       0       0       0
  6030 ;;Total ram usage:        0 bytes
  6031 ;; Hardware stack levels used: 1
  6032 ;; Hardware stack levels required when called: 6
  6033 ;; This function calls:
  6034 ;;		_I2C_Master_Wait
  6035 ;; This function is called by:
  6036 ;;		_RTC_read
  6037 ;;		_LUX_config
  6038 ;;		_LUX_read
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042  1D49                     _I2C_Master_Stop:	
  6043                           ;psect for function _I2C_Master_Stop
  6044                           
  6045                           
  6046                           ;I2C.c: 43:     I2C_Master_Wait();
  6047                           
  6048                           ;incstack = 0
  6049                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  6050  1D49  160A  158A  255F   	fcall	_I2C_Master_Wait
  6051                           
  6052                           ;I2C.c: 44:     SSPCON2bits.PEN = 1;
  6053  1D4C  1683               	bsf	3,5	;RP0=1, select bank1
  6054  1D4D  1303               	bcf	3,6	;RP1=0, select bank1
  6055  1D4E  1511               	bsf	17,2	;volatile
  6056  1D4F  0008               	return
  6057  1D50                     __end_of_I2C_Master_Stop:
  6058                           
  6059                           	psect	text28
  6060  1D42                     __ptext28:	
  6061 ;; *************** function _I2C_Master_Start *****************
  6062 ;; Defined at:
  6063 ;;		line 29 in file "I2C.c"
  6064 ;; Parameters:    Size  Location     Type
  6065 ;;		None
  6066 ;; Auto vars:     Size  Location     Type
  6067 ;;		None
  6068 ;; Return value:  Size  Location     Type
  6069 ;;                  1    wreg      void 
  6070 ;; Registers used:
  6071 ;;		wreg, status,2, status,0, pclath, cstack
  6072 ;; Tracked objects:
  6073 ;;		On entry : 0/0
  6074 ;;		On exit  : 0/0
  6075 ;;		Unchanged: 0/0
  6076 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6077 ;;      Params:         0       0       0       0       0
  6078 ;;      Locals:         0       0       0       0       0
  6079 ;;      Temps:          0       0       0       0       0
  6080 ;;      Totals:         0       0       0       0       0
  6081 ;;Total ram usage:        0 bytes
  6082 ;; Hardware stack levels used: 1
  6083 ;; Hardware stack levels required when called: 6
  6084 ;; This function calls:
  6085 ;;		_I2C_Master_Wait
  6086 ;; This function is called by:
  6087 ;;		_RTC_read
  6088 ;;		_LUX_config
  6089 ;;		_LUX_read
  6090 ;; This function uses a non-reentrant model
  6091 ;;
  6092                           
  6093  1D42                     _I2C_Master_Start:	
  6094                           ;psect for function _I2C_Master_Start
  6095                           
  6096                           
  6097                           ;I2C.c: 31:     I2C_Master_Wait();
  6098                           
  6099                           ;incstack = 0
  6100                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6101  1D42  160A  158A  255F   	fcall	_I2C_Master_Wait
  6102                           
  6103                           ;I2C.c: 32:     SSPCON2bits.SEN = 1;
  6104  1D45  1683               	bsf	3,5	;RP0=1, select bank1
  6105  1D46  1303               	bcf	3,6	;RP1=0, select bank1
  6106  1D47  1411               	bsf	17,0	;volatile
  6107  1D48  0008               	return
  6108  1D49                     __end_of_I2C_Master_Start:
  6109                           
  6110                           	psect	text29
  6111  1D5F                     __ptext29:	
  6112 ;; *************** function _I2C_Master_Wait *****************
  6113 ;; Defined at:
  6114 ;;		line 24 in file "I2C.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;		None
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;		None
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1    wreg      void 
  6121 ;; Registers used:
  6122 ;;		wreg, status,2
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6128 ;;      Params:         0       0       0       0       0
  6129 ;;      Locals:         0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0
  6131 ;;      Totals:         0       0       0       0       0
  6132 ;;Total ram usage:        0 bytes
  6133 ;; Hardware stack levels used: 1
  6134 ;; Hardware stack levels required when called: 5
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		_I2C_Master_Start
  6139 ;;		_I2C_Master_RepeatedStart
  6140 ;;		_I2C_Master_Stop
  6141 ;;		_I2C_Master_Write
  6142 ;;		_I2C_Master_Read
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146  1D5F                     _I2C_Master_Wait:	
  6147                           ;psect for function _I2C_Master_Wait
  6148                           
  6149  1D5F                     l355:	
  6150                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6151                           
  6152                           ;incstack = 0
  6153                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  6154                           
  6155  1D5F  1683               	bsf	3,5	;RP0=1, select bank1
  6156  1D60  1303               	bcf	3,6	;RP1=0, select bank1
  6157  1D61  1914               	btfsc	20,2	;volatile
  6158  1D62  2D5F               	goto	l355
  6159  1D63  0811               	movf	17,w	;volatile
  6160  1D64  391F               	andlw	31
  6161  1D65  1903               	btfsc	3,2
  6162  1D66  0008               	return
  6163  1D67  2D5F               	goto	l355
  6164  1D68                     __end_of_I2C_Master_Wait:
  6165                           
  6166                           	psect	text30
  6167  0052                     __ptext30:	
  6168 ;; *************** function _slave *****************
  6169 ;; Defined at:
  6170 ;;		line 78 in file "main_slave_p1.c"
  6171 ;; Parameters:    Size  Location     Type
  6172 ;;		None
  6173 ;; Auto vars:     Size  Location     Type
  6174 ;;		None
  6175 ;; Return value:  Size  Location     Type
  6176 ;;                  1    wreg      void 
  6177 ;; Registers used:
  6178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6179 ;; Tracked objects:
  6180 ;;		On entry : 0/0
  6181 ;;		On exit  : 0/0
  6182 ;;		Unchanged: 0/0
  6183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6184 ;;      Params:         0       0       0       0       0
  6185 ;;      Locals:         0       0      16       0       0
  6186 ;;      Temps:          0       0       8       0       0
  6187 ;;      Totals:         0       0      24       0       0
  6188 ;;Total ram usage:       24 bytes
  6189 ;; Hardware stack levels used: 1
  6190 ;; Hardware stack levels required when called: 4
  6191 ;; This function calls:
  6192 ;;		___fladd
  6193 ;;		___fldiv
  6194 ;;		___flmul
  6195 ;;		___flsub
  6196 ;;		___lwdiv
  6197 ;;		___xxtofl
  6198 ;;		_adc_read
  6199 ;;		_log
  6200 ;;		_map
  6201 ;;		i1___fltol
  6202 ;;		i1_tmr0_reload
  6203 ;; This function is called by:
  6204 ;;		Interrupt level 1
  6205 ;; This function uses a non-reentrant model
  6206 ;;
  6207                           
  6208  0052                     _slave:	
  6209                           ;psect for function _slave
  6210                           
  6211                           
  6212                           ;main_slave_p1.c: 79:     if(INTCONbits.T0IF){
  6213  0052  1D0B               	btfss	11,2	;volatile
  6214  0053  2864               	goto	i1l3939
  6215                           
  6216                           ;main_slave_p1.c: 80:         pulso = !PORTDbits.RD1;
  6217  0054  1003               	clrc
  6218  0055  1283               	bcf	3,5	;RP0=0, select bank0
  6219  0056  1303               	bcf	3,6	;RP1=0, select bank0
  6220  0057  1C88               	btfss	8,1	;volatile
  6221  0058  1403               	setc
  6222  0059  3000               	movlw	0
  6223  005A  1803               	btfsc	3,0
  6224  005B  3001               	movlw	1
  6225  005C  1683               	bsf	3,5	;RP0=1, select bank3
  6226  005D  1703               	bsf	3,6	;RP1=1, select bank3
  6227  005E  00EC               	movwf	_pulso^(0+384)
  6228                           
  6229                           ;main_slave_p1.c: 81:         tmr0_reload();
  6230  005F  160A  158A  2536  120A  118A  	fcall	i1_tmr0_reload
  6231  0064                     i1l3939:
  6232                           
  6233                           ;main_slave_p1.c: 84:     if(INTCONbits.RBIF){
  6234  0064  1C0B               	btfss	11,0	;volatile
  6235  0065  2896               	goto	i1l3963
  6236                           
  6237                           ;main_slave_p1.c: 85:         if(!PORTBbits.RB1){
  6238  0066  1283               	bcf	3,5	;RP0=0, select bank0
  6239  0067  1303               	bcf	3,6	;RP1=0, select bank0
  6240  0068  1886               	btfsc	6,1	;volatile
  6241  0069  2871               	goto	i1l143
  6242                           
  6243                           ;main_slave_p1.c: 86:             switch_servo = 1;
  6244  006A  3001               	movlw	1
  6245  006B  1683               	bsf	3,5	;RP0=1, select bank3
  6246  006C  1703               	bsf	3,6	;RP1=1, select bank3
  6247  006D  00DC               	movwf	_switch_servo^(0+384)
  6248  006E  3000               	movlw	0
  6249  006F  00DD               	movwf	(_switch_servo^(0+384)+1)
  6250                           
  6251                           ;main_slave_p1.c: 87:         }
  6252  0070  2877               	goto	i1l3947
  6253  0071                     i1l143:	
  6254                           ;main_slave_p1.c: 88:         else if(PORTBbits.RB1){
  6255                           
  6256  0071  1C86               	btfss	6,1	;volatile
  6257  0072  2877               	goto	i1l3947
  6258                           
  6259                           ;main_slave_p1.c: 89:             switch_servo = 0;
  6260  0073  1683               	bsf	3,5	;RP0=1, select bank3
  6261  0074  1703               	bsf	3,6	;RP1=1, select bank3
  6262  0075  01DC               	clrf	_switch_servo^(0+384)
  6263  0076  01DD               	clrf	(_switch_servo+1)^(0+384)
  6264  0077                     i1l3947:
  6265                           
  6266                           ;main_slave_p1.c: 92:         if(!PORTBbits.RB2){
  6267  0077  1283               	bcf	3,5	;RP0=0, select bank0
  6268  0078  1303               	bcf	3,6	;RP1=0, select bank0
  6269  0079  1906               	btfsc	6,2	;volatile
  6270  007A  2882               	goto	i1l146
  6271                           
  6272                           ;main_slave_p1.c: 93:             dir = 1;
  6273  007B  1683               	bsf	3,5	;RP0=1, select bank3
  6274  007C  1703               	bsf	3,6	;RP1=1, select bank3
  6275  007D  01EB               	clrf	_dir^(0+384)
  6276  007E  0AEB               	incf	_dir^(0+384),f
  6277                           
  6278                           ;main_slave_p1.c: 94:             PORTDbits.RD2 = 1;
  6279  007F  1283               	bcf	3,5	;RP0=0, select bank0
  6280  0080  1303               	bcf	3,6	;RP1=0, select bank0
  6281  0081  1508               	bsf	8,2	;volatile
  6282  0082                     i1l146:	
  6283                           ;main_slave_p1.c: 96:         }
  6284                           
  6285                           
  6286                           ;main_slave_p1.c: 98:         if(!PORTBbits.RB7){
  6287  0082  1B86               	btfsc	6,7	;volatile
  6288  0083  288A               	goto	i1l3955
  6289                           
  6290                           ;main_slave_p1.c: 99:             dir = 0;
  6291  0084  1683               	bsf	3,5	;RP0=1, select bank3
  6292  0085  1703               	bsf	3,6	;RP1=1, select bank3
  6293  0086  01EB               	clrf	_dir^(0+384)
  6294                           
  6295                           ;main_slave_p1.c: 100:             PORTDbits.RD2 = 0;
  6296  0087  1283               	bcf	3,5	;RP0=0, select bank0
  6297  0088  1303               	bcf	3,6	;RP1=0, select bank0
  6298  0089  1108               	bcf	8,2	;volatile
  6299  008A                     i1l3955:
  6300                           
  6301                           ;main_slave_p1.c: 102:         if(PORTBbits.RB2 && PORTBbits.RB7){
  6302  008A  1906               	btfsc	6,2	;volatile
  6303  008B  1F86               	btfss	6,7	;volatile
  6304  008C  2895               	goto	i1l3961
  6305                           
  6306                           ;main_slave_p1.c: 103:             dir = 5;
  6307  008D  3005               	movlw	5
  6308  008E  1683               	bsf	3,5	;RP0=1, select bank1
  6309  008F  1303               	bcf	3,6	;RP1=0, select bank1
  6310  0090  00C0               	movwf	??_slave^(0+128)
  6311  0091  0840               	movf	??_slave^(0+128),w
  6312  0092  1683               	bsf	3,5	;RP0=1, select bank3
  6313  0093  1703               	bsf	3,6	;RP1=1, select bank3
  6314  0094  00EB               	movwf	_dir^(0+384)
  6315  0095                     i1l3961:
  6316                           
  6317                           ;main_slave_p1.c: 105:         INTCONbits.RBIF = 0;
  6318  0095  100B               	bcf	11,0	;volatile
  6319  0096                     i1l3963:
  6320                           
  6321                           ;main_slave_p1.c: 108:     if(PIR1bits.ADIF){
  6322  0096  1283               	bcf	3,5	;RP0=0, select bank0
  6323  0097  1303               	bcf	3,6	;RP1=0, select bank0
  6324  0098  1F0C               	btfss	12,6	;volatile
  6325  0099  2B71               	goto	i1l151
  6326                           
  6327                           ;main_slave_p1.c: 109:         if(ADCON0bits.CHS == 0){
  6328  009A  0C1F               	rrf	31,w	;volatile
  6329  009B  1683               	bsf	3,5	;RP0=1, select bank1
  6330  009C  1303               	bcf	3,6	;RP1=0, select bank1
  6331  009D  00C0               	movwf	??_slave^(0+128)
  6332  009E  0C40               	rrf	??_slave^(0+128),w
  6333  009F  390F               	andlw	15
  6334  00A0  3A00               	xorlw	0
  6335  00A1  1D03               	skipz
  6336  00A2  2B6E               	goto	i1l3981
  6337                           
  6338                           ;main_slave_p1.c: 110:             TEMP_POT = map(adc_read(), 0, 650, -55, 125);
  6339  00A3  160A  158A  2571  120A  118A  	fcall	_adc_read
  6340  00A8  0871               	movf	?_adc_read+1,w
  6341  00A9  1683               	bsf	3,5	;RP0=1, select bank1
  6342  00AA  1303               	bcf	3,6	;RP1=0, select bank1
  6343  00AB  00B7               	movwf	(map@x+1)^(0+128)
  6344  00AC  0870               	movf	?_adc_read,w
  6345  00AD  00B6               	movwf	map@x^(0+128)
  6346  00AE  3000               	movlw	0
  6347  00AF  00B8               	movwf	map@x0^(0+128)
  6348  00B0  00B9               	movwf	(map@x0+1)^(0+128)
  6349  00B1  308A               	movlw	138
  6350  00B2  00BA               	movwf	map@x1^(0+128)
  6351  00B3  3002               	movlw	2
  6352  00B4  00BB               	movwf	(map@x1^(0+128)+1)
  6353  00B5  30C9               	movlw	201
  6354  00B6  00BC               	movwf	map@y0^(0+128)
  6355  00B7  30FF               	movlw	255
  6356  00B8  00BD               	movwf	(map@y0^(0+128)+1)
  6357  00B9  307D               	movlw	125
  6358  00BA  00BE               	movwf	map@y1^(0+128)
  6359  00BB  3000               	movlw	0
  6360  00BC  00BF               	movwf	(map@y1^(0+128)+1)
  6361  00BD  160A  118A  268D  120A  118A  	fcall	_map
  6362  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  6363  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  6364  00C4  0837               	movf	(?_map+1)^(0+128),w
  6365  00C5  00E3               	movwf	(_TEMP_POT+1)^(0+128)
  6366  00C6  0836               	movf	?_map^(0+128),w
  6367  00C7  00E2               	movwf	_TEMP_POT^(0+128)
  6368                           
  6369                           ;main_slave_p1.c: 113:             R2 = R1 * ((float)(1023/TEMP_POT)-1);
  6370  00C8  086B               	movf	(_R1+3)^(0+128),w
  6371  00C9  1283               	bcf	3,5	;RP0=0, select bank0
  6372  00CA  1303               	bcf	3,6	;RP1=0, select bank0
  6373  00CB  00C1               	movwf	___flmul@b+3
  6374  00CC  1683               	bsf	3,5	;RP0=1, select bank1
  6375  00CD  1303               	bcf	3,6	;RP1=0, select bank1
  6376  00CE  086A               	movf	(_R1+2)^(0+128),w
  6377  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  6378  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  6379  00D1  00C0               	movwf	___flmul@b+2
  6380  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  6381  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  6382  00D4  0869               	movf	(_R1+1)^(0+128),w
  6383  00D5  1283               	bcf	3,5	;RP0=0, select bank0
  6384  00D6  1303               	bcf	3,6	;RP1=0, select bank0
  6385  00D7  00BF               	movwf	___flmul@b+1
  6386  00D8  1683               	bsf	3,5	;RP0=1, select bank1
  6387  00D9  1303               	bcf	3,6	;RP1=0, select bank1
  6388  00DA  0868               	movf	_R1^(0+128),w
  6389  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  6390  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  6391  00DD  00BE               	movwf	___flmul@b
  6392  00DE  30BF               	movlw	191
  6393  00DF  00AD               	movwf	___fladd@b+3
  6394  00E0  3080               	movlw	128
  6395  00E1  00AC               	movwf	___fladd@b+2
  6396  00E2  3000               	movlw	0
  6397  00E3  00AB               	movwf	___fladd@b+1
  6398  00E4  3000               	movlw	0
  6399  00E5  00AA               	movwf	___fladd@b
  6400  00E6  30FF               	movlw	255
  6401  00E7  00F2               	movwf	___lwdiv@dividend
  6402  00E8  3003               	movlw	3
  6403  00E9  00F3               	movwf	___lwdiv@dividend+1
  6404  00EA  1683               	bsf	3,5	;RP0=1, select bank1
  6405  00EB  1303               	bcf	3,6	;RP1=0, select bank1
  6406  00EC  0863               	movf	(_TEMP_POT+1)^(0+128),w
  6407  00ED  00F1               	movwf	___lwdiv@divisor+1
  6408  00EE  0862               	movf	_TEMP_POT^(0+128),w
  6409  00EF  00F0               	movwf	___lwdiv@divisor
  6410  00F0  160A  158A  26FC  120A  118A  	fcall	___lwdiv
  6411  00F5  0870               	movf	?___lwdiv,w
  6412  00F6  1683               	bsf	3,5	;RP0=1, select bank1
  6413  00F7  1303               	bcf	3,6	;RP1=0, select bank1
  6414  00F8  00C0               	movwf	??_slave^(0+128)
  6415  00F9  0871               	movf	?___lwdiv+1,w
  6416  00FA  00C1               	movwf	(??_slave^(0+128)+1)
  6417  00FB  01C2               	clrf	(??_slave^(0+128)+2)
  6418  00FC  01C3               	clrf	(??_slave^(0+128)+3)
  6419  00FD  0843               	movf	(??_slave+3)^(0+128),w
  6420  00FE  00FC               	movwf	___xxtofl@val+3
  6421  00FF  0842               	movf	(??_slave+2)^(0+128),w
  6422  0100  00FB               	movwf	___xxtofl@val+2
  6423  0101  0841               	movf	(??_slave+1)^(0+128),w
  6424  0102  00FA               	movwf	___xxtofl@val+1
  6425  0103  0840               	movf	??_slave^(0+128),w
  6426  0104  00F9               	movwf	___xxtofl@val
  6427  0105  3000               	movlw	0
  6428  0106  160A  118A  25E8  120A  118A  	fcall	___xxtofl
  6429  010B  087C               	movf	?___xxtofl+3,w
  6430  010C  1283               	bcf	3,5	;RP0=0, select bank0
  6431  010D  1303               	bcf	3,6	;RP1=0, select bank0
  6432  010E  00B1               	movwf	___fladd@a+3
  6433  010F  087B               	movf	?___xxtofl+2,w
  6434  0110  00B0               	movwf	___fladd@a+2
  6435  0111  087A               	movf	?___xxtofl+1,w
  6436  0112  00AF               	movwf	___fladd@a+1
  6437  0113  0879               	movf	?___xxtofl,w
  6438  0114  00AE               	movwf	___fladd@a
  6439  0115  120A  158A  2109  120A  118A  	fcall	___fladd
  6440  011A  1283               	bcf	3,5	;RP0=0, select bank0
  6441  011B  1303               	bcf	3,6	;RP1=0, select bank0
  6442  011C  082D               	movf	?___fladd+3,w
  6443  011D  00C5               	movwf	___flmul@a+3
  6444  011E  082C               	movf	?___fladd+2,w
  6445  011F  00C4               	movwf	___flmul@a+2
  6446  0120  082B               	movf	?___fladd+1,w
  6447  0121  00C3               	movwf	___flmul@a+1
  6448  0122  082A               	movf	?___fladd,w
  6449  0123  00C2               	movwf	___flmul@a
  6450  0124  120A  118A  237E  120A  118A  	fcall	___flmul
  6451  0129  1283               	bcf	3,5	;RP0=0, select bank0
  6452  012A  1303               	bcf	3,6	;RP1=0, select bank0
  6453  012B  0841               	movf	?___flmul+3,w
  6454  012C  1683               	bsf	3,5	;RP0=1, select bank1
  6455  012D  1303               	bcf	3,6	;RP1=0, select bank1
  6456  012E  00DB               	movwf	(_R2+3)^(0+128)
  6457  012F  1283               	bcf	3,5	;RP0=0, select bank0
  6458  0130  1303               	bcf	3,6	;RP1=0, select bank0
  6459  0131  0840               	movf	?___flmul+2,w
  6460  0132  1683               	bsf	3,5	;RP0=1, select bank1
  6461  0133  1303               	bcf	3,6	;RP1=0, select bank1
  6462  0134  00DA               	movwf	(_R2+2)^(0+128)
  6463  0135  1283               	bcf	3,5	;RP0=0, select bank0
  6464  0136  1303               	bcf	3,6	;RP1=0, select bank0
  6465  0137  083F               	movf	?___flmul+1,w
  6466  0138  1683               	bsf	3,5	;RP0=1, select bank1
  6467  0139  1303               	bcf	3,6	;RP1=0, select bank1
  6468  013A  00D9               	movwf	(_R2+1)^(0+128)
  6469  013B  1283               	bcf	3,5	;RP0=0, select bank0
  6470  013C  1303               	bcf	3,6	;RP1=0, select bank0
  6471  013D  083E               	movf	?___flmul,w
  6472  013E  1683               	bsf	3,5	;RP0=1, select bank1
  6473  013F  1303               	bcf	3,6	;RP1=0, select bank1
  6474  0140  00D8               	movwf	_R2^(0+128)
  6475                           
  6476                           ;main_slave_p1.c: 114:             logR2 = log(R2);
  6477  0141  085B               	movf	(_R2+3)^(0+128),w
  6478  0142  1283               	bcf	3,5	;RP0=0, select bank0
  6479  0143  1303               	bcf	3,6	;RP1=0, select bank0
  6480  0144  00EB               	movwf	log@x+3
  6481  0145  1683               	bsf	3,5	;RP0=1, select bank1
  6482  0146  1303               	bcf	3,6	;RP1=0, select bank1
  6483  0147  085A               	movf	(_R2+2)^(0+128),w
  6484  0148  1283               	bcf	3,5	;RP0=0, select bank0
  6485  0149  1303               	bcf	3,6	;RP1=0, select bank0
  6486  014A  00EA               	movwf	log@x+2
  6487  014B  1683               	bsf	3,5	;RP0=1, select bank1
  6488  014C  1303               	bcf	3,6	;RP1=0, select bank1
  6489  014D  0859               	movf	(_R2+1)^(0+128),w
  6490  014E  1283               	bcf	3,5	;RP0=0, select bank0
  6491  014F  1303               	bcf	3,6	;RP1=0, select bank0
  6492  0150  00E9               	movwf	log@x+1
  6493  0151  1683               	bsf	3,5	;RP0=1, select bank1
  6494  0152  1303               	bcf	3,6	;RP1=0, select bank1
  6495  0153  0858               	movf	_R2^(0+128),w
  6496  0154  1283               	bcf	3,5	;RP0=0, select bank0
  6497  0155  1303               	bcf	3,6	;RP1=0, select bank0
  6498  0156  00E8               	movwf	log@x
  6499  0157  120A  118A  2693  120A  118A  	fcall	_log
  6500  015C  1283               	bcf	3,5	;RP0=0, select bank0
  6501  015D  1303               	bcf	3,6	;RP1=0, select bank0
  6502  015E  086B               	movf	?_log+3,w
  6503  015F  1683               	bsf	3,5	;RP0=1, select bank1
  6504  0160  1303               	bcf	3,6	;RP1=0, select bank1
  6505  0161  00DF               	movwf	(_logR2+3)^(0+128)
  6506  0162  1283               	bcf	3,5	;RP0=0, select bank0
  6507  0163  1303               	bcf	3,6	;RP1=0, select bank0
  6508  0164  086A               	movf	?_log+2,w
  6509  0165  1683               	bsf	3,5	;RP0=1, select bank1
  6510  0166  1303               	bcf	3,6	;RP1=0, select bank1
  6511  0167  00DE               	movwf	(_logR2+2)^(0+128)
  6512  0168  1283               	bcf	3,5	;RP0=0, select bank0
  6513  0169  1303               	bcf	3,6	;RP1=0, select bank0
  6514  016A  0869               	movf	?_log+1,w
  6515  016B  1683               	bsf	3,5	;RP0=1, select bank1
  6516  016C  1303               	bcf	3,6	;RP1=0, select bank1
  6517  016D  00DD               	movwf	(_logR2+1)^(0+128)
  6518  016E  1283               	bcf	3,5	;RP0=0, select bank0
  6519  016F  1303               	bcf	3,6	;RP1=0, select bank0
  6520  0170  0868               	movf	?_log,w
  6521  0171  1683               	bsf	3,5	;RP0=1, select bank1
  6522  0172  1303               	bcf	3,6	;RP1=0, select bank1
  6523  0173  00DC               	movwf	_logR2^(0+128)
  6524                           
  6525                           ;main_slave_p1.c: 115:             TC = (uint8_t)(273.15 - (1 / (A + B * logR2 + C * log
      +                          R2 * logR2 * logR2)));
  6526  0174  1283               	bcf	3,5	;RP0=0, select bank2
  6527  0175  1703               	bsf	3,6	;RP1=1, select bank2
  6528  0176  0813               	movf	(_C+3)^(0+256),w
  6529  0177  1283               	bcf	3,5	;RP0=0, select bank0
  6530  0178  1303               	bcf	3,6	;RP1=0, select bank0
  6531  0179  00C5               	movwf	___flmul@a+3
  6532  017A  1283               	bcf	3,5	;RP0=0, select bank2
  6533  017B  1703               	bsf	3,6	;RP1=1, select bank2
  6534  017C  0812               	movf	(_C+2)^(0+256),w
  6535  017D  1283               	bcf	3,5	;RP0=0, select bank0
  6536  017E  1303               	bcf	3,6	;RP1=0, select bank0
  6537  017F  00C4               	movwf	___flmul@a+2
  6538  0180  1283               	bcf	3,5	;RP0=0, select bank2
  6539  0181  1703               	bsf	3,6	;RP1=1, select bank2
  6540  0182  0811               	movf	(_C+1)^(0+256),w
  6541  0183  1283               	bcf	3,5	;RP0=0, select bank0
  6542  0184  1303               	bcf	3,6	;RP1=0, select bank0
  6543  0185  00C3               	movwf	___flmul@a+1
  6544  0186  1283               	bcf	3,5	;RP0=0, select bank2
  6545  0187  1703               	bsf	3,6	;RP1=1, select bank2
  6546  0188  0810               	movf	_C^(0+256),w
  6547  0189  1283               	bcf	3,5	;RP0=0, select bank0
  6548  018A  1303               	bcf	3,6	;RP1=0, select bank0
  6549  018B  00C2               	movwf	___flmul@a
  6550  018C  1683               	bsf	3,5	;RP0=1, select bank1
  6551  018D  1303               	bcf	3,6	;RP1=0, select bank1
  6552  018E  085F               	movf	(_logR2+3)^(0+128),w
  6553  018F  1283               	bcf	3,5	;RP0=0, select bank0
  6554  0190  1303               	bcf	3,6	;RP1=0, select bank0
  6555  0191  00C1               	movwf	___flmul@b+3
  6556  0192  1683               	bsf	3,5	;RP0=1, select bank1
  6557  0193  1303               	bcf	3,6	;RP1=0, select bank1
  6558  0194  085E               	movf	(_logR2+2)^(0+128),w
  6559  0195  1283               	bcf	3,5	;RP0=0, select bank0
  6560  0196  1303               	bcf	3,6	;RP1=0, select bank0
  6561  0197  00C0               	movwf	___flmul@b+2
  6562  0198  1683               	bsf	3,5	;RP0=1, select bank1
  6563  0199  1303               	bcf	3,6	;RP1=0, select bank1
  6564  019A  085D               	movf	(_logR2+1)^(0+128),w
  6565  019B  1283               	bcf	3,5	;RP0=0, select bank0
  6566  019C  1303               	bcf	3,6	;RP1=0, select bank0
  6567  019D  00BF               	movwf	___flmul@b+1
  6568  019E  1683               	bsf	3,5	;RP0=1, select bank1
  6569  019F  1303               	bcf	3,6	;RP1=0, select bank1
  6570  01A0  085C               	movf	_logR2^(0+128),w
  6571  01A1  1283               	bcf	3,5	;RP0=0, select bank0
  6572  01A2  1303               	bcf	3,6	;RP1=0, select bank0
  6573  01A3  00BE               	movwf	___flmul@b
  6574  01A4  120A  118A  237E  120A  118A  	fcall	___flmul
  6575  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  6576  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  6577  01AB  0841               	movf	?___flmul+3,w
  6578  01AC  1683               	bsf	3,5	;RP0=1, select bank1
  6579  01AD  1303               	bcf	3,6	;RP1=0, select bank1
  6580  01AE  00CB               	movwf	(_slave$1780+3)^(0+128)
  6581  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  6582  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  6583  01B1  0840               	movf	?___flmul+2,w
  6584  01B2  1683               	bsf	3,5	;RP0=1, select bank1
  6585  01B3  1303               	bcf	3,6	;RP1=0, select bank1
  6586  01B4  00CA               	movwf	(_slave$1780+2)^(0+128)
  6587  01B5  1283               	bcf	3,5	;RP0=0, select bank0
  6588  01B6  1303               	bcf	3,6	;RP1=0, select bank0
  6589  01B7  083F               	movf	?___flmul+1,w
  6590  01B8  1683               	bsf	3,5	;RP0=1, select bank1
  6591  01B9  1303               	bcf	3,6	;RP1=0, select bank1
  6592  01BA  00C9               	movwf	(_slave$1780+1)^(0+128)
  6593  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  6594  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  6595  01BD  083E               	movf	?___flmul,w
  6596  01BE  1683               	bsf	3,5	;RP0=1, select bank1
  6597  01BF  1303               	bcf	3,6	;RP1=0, select bank1
  6598  01C0  00C8               	movwf	_slave$1780^(0+128)
  6599                           
  6600                           ;main_slave_p1.c: 115:             TC = (uint8_t)(273.15 - (1 / (A + B * logR2 + C * log
      +                          R2 * logR2 * logR2)));
  6601  01C1  084B               	movf	(_slave$1780+3)^(0+128),w
  6602  01C2  1283               	bcf	3,5	;RP0=0, select bank0
  6603  01C3  1303               	bcf	3,6	;RP1=0, select bank0
  6604  01C4  00C5               	movwf	___flmul@a+3
  6605  01C5  1683               	bsf	3,5	;RP0=1, select bank1
  6606  01C6  1303               	bcf	3,6	;RP1=0, select bank1
  6607  01C7  084A               	movf	(_slave$1780+2)^(0+128),w
  6608  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  6609  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  6610  01CA  00C4               	movwf	___flmul@a+2
  6611  01CB  1683               	bsf	3,5	;RP0=1, select bank1
  6612  01CC  1303               	bcf	3,6	;RP1=0, select bank1
  6613  01CD  0849               	movf	(_slave$1780+1)^(0+128),w
  6614  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  6615  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  6616  01D0  00C3               	movwf	___flmul@a+1
  6617  01D1  1683               	bsf	3,5	;RP0=1, select bank1
  6618  01D2  1303               	bcf	3,6	;RP1=0, select bank1
  6619  01D3  0848               	movf	_slave$1780^(0+128),w
  6620  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  6621  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  6622  01D6  00C2               	movwf	___flmul@a
  6623  01D7  1683               	bsf	3,5	;RP0=1, select bank1
  6624  01D8  1303               	bcf	3,6	;RP1=0, select bank1
  6625  01D9  085F               	movf	(_logR2+3)^(0+128),w
  6626  01DA  1283               	bcf	3,5	;RP0=0, select bank0
  6627  01DB  1303               	bcf	3,6	;RP1=0, select bank0
  6628  01DC  00C1               	movwf	___flmul@b+3
  6629  01DD  1683               	bsf	3,5	;RP0=1, select bank1
  6630  01DE  1303               	bcf	3,6	;RP1=0, select bank1
  6631  01DF  085E               	movf	(_logR2+2)^(0+128),w
  6632  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  6633  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  6634  01E2  00C0               	movwf	___flmul@b+2
  6635  01E3  1683               	bsf	3,5	;RP0=1, select bank1
  6636  01E4  1303               	bcf	3,6	;RP1=0, select bank1
  6637  01E5  085D               	movf	(_logR2+1)^(0+128),w
  6638  01E6  1283               	bcf	3,5	;RP0=0, select bank0
  6639  01E7  1303               	bcf	3,6	;RP1=0, select bank0
  6640  01E8  00BF               	movwf	___flmul@b+1
  6641  01E9  1683               	bsf	3,5	;RP0=1, select bank1
  6642  01EA  1303               	bcf	3,6	;RP1=0, select bank1
  6643  01EB  085C               	movf	_logR2^(0+128),w
  6644  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  6645  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  6646  01EE  00BE               	movwf	___flmul@b
  6647  01EF  120A  118A  237E  120A  118A  	fcall	___flmul
  6648  01F4  1283               	bcf	3,5	;RP0=0, select bank0
  6649  01F5  1303               	bcf	3,6	;RP1=0, select bank0
  6650  01F6  0841               	movf	?___flmul+3,w
  6651  01F7  1683               	bsf	3,5	;RP0=1, select bank1
  6652  01F8  1303               	bcf	3,6	;RP1=0, select bank1
  6653  01F9  00CF               	movwf	(_slave$1781+3)^(0+128)
  6654  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  6655  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  6656  01FC  0840               	movf	?___flmul+2,w
  6657  01FD  1683               	bsf	3,5	;RP0=1, select bank1
  6658  01FE  1303               	bcf	3,6	;RP1=0, select bank1
  6659  01FF  00CE               	movwf	(_slave$1781+2)^(0+128)
  6660  0200  1283               	bcf	3,5	;RP0=0, select bank0
  6661  0201  1303               	bcf	3,6	;RP1=0, select bank0
  6662  0202  083F               	movf	?___flmul+1,w
  6663  0203  1683               	bsf	3,5	;RP0=1, select bank1
  6664  0204  1303               	bcf	3,6	;RP1=0, select bank1
  6665  0205  00CD               	movwf	(_slave$1781+1)^(0+128)
  6666  0206  1283               	bcf	3,5	;RP0=0, select bank0
  6667  0207  1303               	bcf	3,6	;RP1=0, select bank0
  6668  0208  083E               	movf	?___flmul,w
  6669  0209  1683               	bsf	3,5	;RP0=1, select bank1
  6670  020A  1303               	bcf	3,6	;RP1=0, select bank1
  6671  020B  00CC               	movwf	_slave$1781^(0+128)
  6672                           
  6673                           ;main_slave_p1.c: 115:             TC = (uint8_t)(273.15 - (1 / (A + B * logR2 + C * log
      +                          R2 * logR2 * logR2)));
  6674  020C  086F               	movf	(_B+3)^(0+128),w
  6675  020D  1283               	bcf	3,5	;RP0=0, select bank0
  6676  020E  1303               	bcf	3,6	;RP1=0, select bank0
  6677  020F  00C5               	movwf	___flmul@a+3
  6678  0210  1683               	bsf	3,5	;RP0=1, select bank1
  6679  0211  1303               	bcf	3,6	;RP1=0, select bank1
  6680  0212  086E               	movf	(_B+2)^(0+128),w
  6681  0213  1283               	bcf	3,5	;RP0=0, select bank0
  6682  0214  1303               	bcf	3,6	;RP1=0, select bank0
  6683  0215  00C4               	movwf	___flmul@a+2
  6684  0216  1683               	bsf	3,5	;RP0=1, select bank1
  6685  0217  1303               	bcf	3,6	;RP1=0, select bank1
  6686  0218  086D               	movf	(_B+1)^(0+128),w
  6687  0219  1283               	bcf	3,5	;RP0=0, select bank0
  6688  021A  1303               	bcf	3,6	;RP1=0, select bank0
  6689  021B  00C3               	movwf	___flmul@a+1
  6690  021C  1683               	bsf	3,5	;RP0=1, select bank1
  6691  021D  1303               	bcf	3,6	;RP1=0, select bank1
  6692  021E  086C               	movf	_B^(0+128),w
  6693  021F  1283               	bcf	3,5	;RP0=0, select bank0
  6694  0220  1303               	bcf	3,6	;RP1=0, select bank0
  6695  0221  00C2               	movwf	___flmul@a
  6696  0222  1683               	bsf	3,5	;RP0=1, select bank1
  6697  0223  1303               	bcf	3,6	;RP1=0, select bank1
  6698  0224  085F               	movf	(_logR2+3)^(0+128),w
  6699  0225  1283               	bcf	3,5	;RP0=0, select bank0
  6700  0226  1303               	bcf	3,6	;RP1=0, select bank0
  6701  0227  00C1               	movwf	___flmul@b+3
  6702  0228  1683               	bsf	3,5	;RP0=1, select bank1
  6703  0229  1303               	bcf	3,6	;RP1=0, select bank1
  6704  022A  085E               	movf	(_logR2+2)^(0+128),w
  6705  022B  1283               	bcf	3,5	;RP0=0, select bank0
  6706  022C  1303               	bcf	3,6	;RP1=0, select bank0
  6707  022D  00C0               	movwf	___flmul@b+2
  6708  022E  1683               	bsf	3,5	;RP0=1, select bank1
  6709  022F  1303               	bcf	3,6	;RP1=0, select bank1
  6710  0230  085D               	movf	(_logR2+1)^(0+128),w
  6711  0231  1283               	bcf	3,5	;RP0=0, select bank0
  6712  0232  1303               	bcf	3,6	;RP1=0, select bank0
  6713  0233  00BF               	movwf	___flmul@b+1
  6714  0234  1683               	bsf	3,5	;RP0=1, select bank1
  6715  0235  1303               	bcf	3,6	;RP1=0, select bank1
  6716  0236  085C               	movf	_logR2^(0+128),w
  6717  0237  1283               	bcf	3,5	;RP0=0, select bank0
  6718  0238  1303               	bcf	3,6	;RP1=0, select bank0
  6719  0239  00BE               	movwf	___flmul@b
  6720  023A  120A  118A  237E  120A  118A  	fcall	___flmul
  6721  023F  1283               	bcf	3,5	;RP0=0, select bank0
  6722  0240  1303               	bcf	3,6	;RP1=0, select bank0
  6723  0241  0841               	movf	?___flmul+3,w
  6724  0242  00B1               	movwf	___fladd@a+3
  6725  0243  0840               	movf	?___flmul+2,w
  6726  0244  00B0               	movwf	___fladd@a+2
  6727  0245  083F               	movf	?___flmul+1,w
  6728  0246  00AF               	movwf	___fladd@a+1
  6729  0247  083E               	movf	?___flmul,w
  6730  0248  00AE               	movwf	___fladd@a
  6731  0249  1683               	bsf	3,5	;RP0=1, select bank1
  6732  024A  1303               	bcf	3,6	;RP1=0, select bank1
  6733  024B  0867               	movf	(_A+3)^(0+128),w
  6734  024C  1283               	bcf	3,5	;RP0=0, select bank0
  6735  024D  1303               	bcf	3,6	;RP1=0, select bank0
  6736  024E  00AD               	movwf	___fladd@b+3
  6737  024F  1683               	bsf	3,5	;RP0=1, select bank1
  6738  0250  1303               	bcf	3,6	;RP1=0, select bank1
  6739  0251  0866               	movf	(_A+2)^(0+128),w
  6740  0252  1283               	bcf	3,5	;RP0=0, select bank0
  6741  0253  1303               	bcf	3,6	;RP1=0, select bank0
  6742  0254  00AC               	movwf	___fladd@b+2
  6743  0255  1683               	bsf	3,5	;RP0=1, select bank1
  6744  0256  1303               	bcf	3,6	;RP1=0, select bank1
  6745  0257  0865               	movf	(_A+1)^(0+128),w
  6746  0258  1283               	bcf	3,5	;RP0=0, select bank0
  6747  0259  1303               	bcf	3,6	;RP1=0, select bank0
  6748  025A  00AB               	movwf	___fladd@b+1
  6749  025B  1683               	bsf	3,5	;RP0=1, select bank1
  6750  025C  1303               	bcf	3,6	;RP1=0, select bank1
  6751  025D  0864               	movf	_A^(0+128),w
  6752  025E  1283               	bcf	3,5	;RP0=0, select bank0
  6753  025F  1303               	bcf	3,6	;RP1=0, select bank0
  6754  0260  00AA               	movwf	___fladd@b
  6755  0261  120A  158A  2109  120A  118A  	fcall	___fladd
  6756  0266  1283               	bcf	3,5	;RP0=0, select bank0
  6757  0267  1303               	bcf	3,6	;RP1=0, select bank0
  6758  0268  082D               	movf	?___fladd+3,w
  6759  0269  1683               	bsf	3,5	;RP0=1, select bank1
  6760  026A  1303               	bcf	3,6	;RP1=0, select bank1
  6761  026B  00D3               	movwf	(_slave$1782+3)^(0+128)
  6762  026C  1283               	bcf	3,5	;RP0=0, select bank0
  6763  026D  1303               	bcf	3,6	;RP1=0, select bank0
  6764  026E  082C               	movf	?___fladd+2,w
  6765  026F  1683               	bsf	3,5	;RP0=1, select bank1
  6766  0270  1303               	bcf	3,6	;RP1=0, select bank1
  6767  0271  00D2               	movwf	(_slave$1782+2)^(0+128)
  6768  0272  1283               	bcf	3,5	;RP0=0, select bank0
  6769  0273  1303               	bcf	3,6	;RP1=0, select bank0
  6770  0274  082B               	movf	?___fladd+1,w
  6771  0275  1683               	bsf	3,5	;RP0=1, select bank1
  6772  0276  1303               	bcf	3,6	;RP1=0, select bank1
  6773  0277  00D1               	movwf	(_slave$1782+1)^(0+128)
  6774  0278  1283               	bcf	3,5	;RP0=0, select bank0
  6775  0279  1303               	bcf	3,6	;RP1=0, select bank0
  6776  027A  082A               	movf	?___fladd,w
  6777  027B  1683               	bsf	3,5	;RP0=1, select bank1
  6778  027C  1303               	bcf	3,6	;RP1=0, select bank1
  6779  027D  00D0               	movwf	_slave$1782^(0+128)
  6780                           
  6781                           ;main_slave_p1.c: 115:             TC = (uint8_t)(273.15 - (1 / (A + B * logR2 + C * log
      +                          R2 * logR2 * logR2)));
  6782  027E  303F               	movlw	63
  6783  027F  1283               	bcf	3,5	;RP0=0, select bank0
  6784  0280  1303               	bcf	3,6	;RP1=0, select bank0
  6785  0281  00DF               	movwf	___fldiv@b+3
  6786  0282  3080               	movlw	128
  6787  0283  00DE               	movwf	___fldiv@b+2
  6788  0284  3000               	movlw	0
  6789  0285  00DD               	movwf	___fldiv@b+1
  6790  0286  3000               	movlw	0
  6791  0287  00DC               	movwf	___fldiv@b
  6792  0288  1683               	bsf	3,5	;RP0=1, select bank1
  6793  0289  1303               	bcf	3,6	;RP1=0, select bank1
  6794  028A  0853               	movf	(_slave$1782+3)^(0+128),w
  6795  028B  1283               	bcf	3,5	;RP0=0, select bank0
  6796  028C  1303               	bcf	3,6	;RP1=0, select bank0
  6797  028D  00B1               	movwf	___fladd@a+3
  6798  028E  1683               	bsf	3,5	;RP0=1, select bank1
  6799  028F  1303               	bcf	3,6	;RP1=0, select bank1
  6800  0290  0852               	movf	(_slave$1782+2)^(0+128),w
  6801  0291  1283               	bcf	3,5	;RP0=0, select bank0
  6802  0292  1303               	bcf	3,6	;RP1=0, select bank0
  6803  0293  00B0               	movwf	___fladd@a+2
  6804  0294  1683               	bsf	3,5	;RP0=1, select bank1
  6805  0295  1303               	bcf	3,6	;RP1=0, select bank1
  6806  0296  0851               	movf	(_slave$1782+1)^(0+128),w
  6807  0297  1283               	bcf	3,5	;RP0=0, select bank0
  6808  0298  1303               	bcf	3,6	;RP1=0, select bank0
  6809  0299  00AF               	movwf	___fladd@a+1
  6810  029A  1683               	bsf	3,5	;RP0=1, select bank1
  6811  029B  1303               	bcf	3,6	;RP1=0, select bank1
  6812  029C  0850               	movf	_slave$1782^(0+128),w
  6813  029D  1283               	bcf	3,5	;RP0=0, select bank0
  6814  029E  1303               	bcf	3,6	;RP1=0, select bank0
  6815  029F  00AE               	movwf	___fladd@a
  6816  02A0  1683               	bsf	3,5	;RP0=1, select bank1
  6817  02A1  1303               	bcf	3,6	;RP1=0, select bank1
  6818  02A2  084F               	movf	(_slave$1781+3)^(0+128),w
  6819  02A3  1283               	bcf	3,5	;RP0=0, select bank0
  6820  02A4  1303               	bcf	3,6	;RP1=0, select bank0
  6821  02A5  00C5               	movwf	___flmul@a+3
  6822  02A6  1683               	bsf	3,5	;RP0=1, select bank1
  6823  02A7  1303               	bcf	3,6	;RP1=0, select bank1
  6824  02A8  084E               	movf	(_slave$1781+2)^(0+128),w
  6825  02A9  1283               	bcf	3,5	;RP0=0, select bank0
  6826  02AA  1303               	bcf	3,6	;RP1=0, select bank0
  6827  02AB  00C4               	movwf	___flmul@a+2
  6828  02AC  1683               	bsf	3,5	;RP0=1, select bank1
  6829  02AD  1303               	bcf	3,6	;RP1=0, select bank1
  6830  02AE  084D               	movf	(_slave$1781+1)^(0+128),w
  6831  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  6832  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  6833  02B1  00C3               	movwf	___flmul@a+1
  6834  02B2  1683               	bsf	3,5	;RP0=1, select bank1
  6835  02B3  1303               	bcf	3,6	;RP1=0, select bank1
  6836  02B4  084C               	movf	_slave$1781^(0+128),w
  6837  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  6838  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  6839  02B7  00C2               	movwf	___flmul@a
  6840  02B8  1683               	bsf	3,5	;RP0=1, select bank1
  6841  02B9  1303               	bcf	3,6	;RP1=0, select bank1
  6842  02BA  085F               	movf	(_logR2+3)^(0+128),w
  6843  02BB  1283               	bcf	3,5	;RP0=0, select bank0
  6844  02BC  1303               	bcf	3,6	;RP1=0, select bank0
  6845  02BD  00C1               	movwf	___flmul@b+3
  6846  02BE  1683               	bsf	3,5	;RP0=1, select bank1
  6847  02BF  1303               	bcf	3,6	;RP1=0, select bank1
  6848  02C0  085E               	movf	(_logR2+2)^(0+128),w
  6849  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  6850  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  6851  02C3  00C0               	movwf	___flmul@b+2
  6852  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  6853  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  6854  02C6  085D               	movf	(_logR2+1)^(0+128),w
  6855  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  6856  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  6857  02C9  00BF               	movwf	___flmul@b+1
  6858  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  6859  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  6860  02CC  085C               	movf	_logR2^(0+128),w
  6861  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  6862  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  6863  02CF  00BE               	movwf	___flmul@b
  6864  02D0  120A  118A  237E  120A  118A  	fcall	___flmul
  6865  02D5  1283               	bcf	3,5	;RP0=0, select bank0
  6866  02D6  1303               	bcf	3,6	;RP1=0, select bank0
  6867  02D7  0841               	movf	?___flmul+3,w
  6868  02D8  00AD               	movwf	___fladd@b+3
  6869  02D9  0840               	movf	?___flmul+2,w
  6870  02DA  00AC               	movwf	___fladd@b+2
  6871  02DB  083F               	movf	?___flmul+1,w
  6872  02DC  00AB               	movwf	___fladd@b+1
  6873  02DD  083E               	movf	?___flmul,w
  6874  02DE  00AA               	movwf	___fladd@b
  6875  02DF  120A  158A  2109  120A  118A  	fcall	___fladd
  6876  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  6877  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  6878  02E6  082D               	movf	?___fladd+3,w
  6879  02E7  00DB               	movwf	___fldiv@a+3
  6880  02E8  082C               	movf	?___fladd+2,w
  6881  02E9  00DA               	movwf	___fldiv@a+2
  6882  02EA  082B               	movf	?___fladd+1,w
  6883  02EB  00D9               	movwf	___fldiv@a+1
  6884  02EC  082A               	movf	?___fladd,w
  6885  02ED  00D8               	movwf	___fldiv@a
  6886  02EE  120A  158A  259A  120A  118A  	fcall	___fldiv
  6887  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  6888  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  6889  02F5  085B               	movf	?___fldiv+3,w
  6890  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  6891  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  6892  02F8  00D7               	movwf	(_slave$1783+3)^(0+128)
  6893  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  6894  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  6895  02FB  085A               	movf	?___fldiv+2,w
  6896  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  6897  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  6898  02FE  00D6               	movwf	(_slave$1783+2)^(0+128)
  6899  02FF  1283               	bcf	3,5	;RP0=0, select bank0
  6900  0300  1303               	bcf	3,6	;RP1=0, select bank0
  6901  0301  0859               	movf	?___fldiv+1,w
  6902  0302  1683               	bsf	3,5	;RP0=1, select bank1
  6903  0303  1303               	bcf	3,6	;RP1=0, select bank1
  6904  0304  00D5               	movwf	(_slave$1783+1)^(0+128)
  6905  0305  1283               	bcf	3,5	;RP0=0, select bank0
  6906  0306  1303               	bcf	3,6	;RP1=0, select bank0
  6907  0307  0858               	movf	?___fldiv,w
  6908  0308  1683               	bsf	3,5	;RP0=1, select bank1
  6909  0309  1303               	bcf	3,6	;RP1=0, select bank1
  6910  030A  00D4               	movwf	_slave$1783^(0+128)
  6911                           
  6912                           ;main_slave_p1.c: 115:             TC = (uint8_t)(273.15 - (1 / (A + B * logR2 + C * log
      +                          R2 * logR2 * logR2)));
  6913  030B  3043               	movlw	67
  6914  030C  1283               	bcf	3,5	;RP0=0, select bank0
  6915  030D  1303               	bcf	3,6	;RP1=0, select bank0
  6916  030E  00EC               	movwf	___flsub@b+3
  6917  030F  3088               	movlw	136
  6918  0310  00EB               	movwf	___flsub@b+2
  6919  0311  3093               	movlw	147
  6920  0312  00EA               	movwf	___flsub@b+1
  6921  0313  3033               	movlw	51
  6922  0314  00E9               	movwf	___flsub@b
  6923  0315  1683               	bsf	3,5	;RP0=1, select bank1
  6924  0316  1303               	bcf	3,6	;RP1=0, select bank1
  6925  0317  0857               	movf	(_slave$1783+3)^(0+128),w
  6926  0318  1283               	bcf	3,5	;RP0=0, select bank0
  6927  0319  1303               	bcf	3,6	;RP1=0, select bank0
  6928  031A  00E8               	movwf	___flsub@a+3
  6929  031B  1683               	bsf	3,5	;RP0=1, select bank1
  6930  031C  1303               	bcf	3,6	;RP1=0, select bank1
  6931  031D  0856               	movf	(_slave$1783+2)^(0+128),w
  6932  031E  1283               	bcf	3,5	;RP0=0, select bank0
  6933  031F  1303               	bcf	3,6	;RP1=0, select bank0
  6934  0320  00E7               	movwf	___flsub@a+2
  6935  0321  1683               	bsf	3,5	;RP0=1, select bank1
  6936  0322  1303               	bcf	3,6	;RP1=0, select bank1
  6937  0323  0855               	movf	(_slave$1783+1)^(0+128),w
  6938  0324  1283               	bcf	3,5	;RP0=0, select bank0
  6939  0325  1303               	bcf	3,6	;RP1=0, select bank0
  6940  0326  00E6               	movwf	___flsub@a+1
  6941  0327  1683               	bsf	3,5	;RP0=1, select bank1
  6942  0328  1303               	bcf	3,6	;RP1=0, select bank1
  6943  0329  0854               	movf	_slave$1783^(0+128),w
  6944  032A  1283               	bcf	3,5	;RP0=0, select bank0
  6945  032B  1303               	bcf	3,6	;RP1=0, select bank0
  6946  032C  00E5               	movwf	___flsub@a
  6947  032D  160A  158A  25FA  120A  118A  	fcall	___flsub
  6948  0332  1283               	bcf	3,5	;RP0=0, select bank0
  6949  0333  1303               	bcf	3,6	;RP1=0, select bank0
  6950  0334  0868               	movf	?___flsub+3,w
  6951  0335  1683               	bsf	3,5	;RP0=1, select bank1
  6952  0336  1303               	bcf	3,6	;RP1=0, select bank1
  6953  0337  00B0               	movwf	(i1___fltol@f1+3)^(0+128)
  6954  0338  1283               	bcf	3,5	;RP0=0, select bank0
  6955  0339  1303               	bcf	3,6	;RP1=0, select bank0
  6956  033A  0867               	movf	?___flsub+2,w
  6957  033B  1683               	bsf	3,5	;RP0=1, select bank1
  6958  033C  1303               	bcf	3,6	;RP1=0, select bank1
  6959  033D  00AF               	movwf	(i1___fltol@f1+2)^(0+128)
  6960  033E  1283               	bcf	3,5	;RP0=0, select bank0
  6961  033F  1303               	bcf	3,6	;RP1=0, select bank0
  6962  0340  0866               	movf	?___flsub+1,w
  6963  0341  1683               	bsf	3,5	;RP0=1, select bank1
  6964  0342  1303               	bcf	3,6	;RP1=0, select bank1
  6965  0343  00AE               	movwf	(i1___fltol@f1+1)^(0+128)
  6966  0344  1283               	bcf	3,5	;RP0=0, select bank0
  6967  0345  1303               	bcf	3,6	;RP1=0, select bank0
  6968  0346  0865               	movf	?___flsub,w
  6969  0347  1683               	bsf	3,5	;RP0=1, select bank1
  6970  0348  1303               	bcf	3,6	;RP1=0, select bank1
  6971  0349  00AD               	movwf	i1___fltol@f1^(0+128)
  6972  034A  160A  118A  2393  120A  118A  	fcall	i1___fltol
  6973  034F  1683               	bsf	3,5	;RP0=1, select bank1
  6974  0350  1303               	bcf	3,6	;RP1=0, select bank1
  6975  0351  082D               	movf	?i1___fltol^(0+128),w
  6976  0352  00C0               	movwf	??_slave^(0+128)
  6977  0353  01C1               	clrf	(??_slave^(0+128)+1)
  6978  0354  01C2               	clrf	(??_slave^(0+128)+2)
  6979  0355  01C3               	clrf	(??_slave^(0+128)+3)
  6980  0356  0843               	movf	(??_slave+3)^(0+128),w
  6981  0357  00FC               	movwf	___xxtofl@val+3
  6982  0358  0842               	movf	(??_slave+2)^(0+128),w
  6983  0359  00FB               	movwf	___xxtofl@val+2
  6984  035A  0841               	movf	(??_slave+1)^(0+128),w
  6985  035B  00FA               	movwf	___xxtofl@val+1
  6986  035C  0840               	movf	??_slave^(0+128),w
  6987  035D  00F9               	movwf	___xxtofl@val
  6988  035E  3000               	movlw	0
  6989  035F  160A  118A  25E8  120A  118A  	fcall	___xxtofl
  6990  0364  087C               	movf	?___xxtofl+3,w
  6991  0365  1683               	bsf	3,5	;RP0=1, select bank3
  6992  0366  1703               	bsf	3,6	;RP1=1, select bank3
  6993  0367  00D7               	movwf	(_TC+3)^(0+384)
  6994  0368  087B               	movf	?___xxtofl+2,w
  6995  0369  00D6               	movwf	(_TC+2)^(0+384)
  6996  036A  087A               	movf	?___xxtofl+1,w
  6997  036B  00D5               	movwf	(_TC+1)^(0+384)
  6998  036C  0879               	movf	?___xxtofl,w
  6999  036D  00D4               	movwf	_TC^(0+384)
  7000  036E                     i1l3981:
  7001                           
  7002                           ;main_slave_p1.c: 117:         PIR1bits.ADIF = 0;
  7003  036E  1283               	bcf	3,5	;RP0=0, select bank0
  7004  036F  1303               	bcf	3,6	;RP1=0, select bank0
  7005  0370  130C               	bcf	12,6	;volatile
  7006  0371                     i1l151:
  7007  0371  1683               	bsf	3,5	;RP0=1, select bank1
  7008  0372  1303               	bcf	3,6	;RP1=0, select bank1
  7009  0373  0847               	movf	(??_slave+7)^(0+128),w
  7010  0374  00FF               	movwf	127
  7011  0375  0846               	movf	(??_slave+6)^(0+128),w
  7012  0376  008A               	movwf	10
  7013  0377  0845               	movf	(??_slave+5)^(0+128),w
  7014  0378  0084               	movwf	4
  7015  0379  0E44               	swapf	(??_slave+4)^(0+128),w
  7016  037A  0083               	movwf	3
  7017  037B  0EFE               	swapf	126,f
  7018  037C  0E7E               	swapf	126,w
  7019  037D  0009               	retfie
  7020  037E                     __end_of_slave:
  7021                           
  7022                           	psect	intentry
  7023  0004                     __pintentry:	
  7024                           ;incstack = 0
  7025                           ; Regs used in _slave: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7026                           
  7027  0004                     interrupt_function:
  7028  007E                     saved_w	set	btemp
  7029  0004  00FE               	movwf	btemp
  7030  0005  0E03               	swapf	3,w
  7031  0006  1683               	bsf	3,5	;RP0=1, select bank1
  7032  0007  1303               	bcf	3,6	;RP1=0, select bank1
  7033  0008  00C4               	movwf	(??_slave+4)^(0+128)
  7034  0009  0804               	movf	4,w
  7035  000A  00C5               	movwf	(??_slave+5)^(0+128)
  7036  000B  080A               	movf	10,w
  7037  000C  00C6               	movwf	(??_slave+6)^(0+128)
  7038  000D  087F               	movf	btemp+1,w
  7039  000E  00C7               	movwf	(??_slave+7)^(0+128)
  7040  000F  120A  118A  2852   	ljmp	_slave
  7041                           
  7042                           	psect	text31
  7043  1D36                     __ptext31:	
  7044 ;; *************** function i1_tmr0_reload *****************
  7045 ;; Defined at:
  7046 ;;		line 57 in file "tmr0.c"
  7047 ;; Parameters:    Size  Location     Type
  7048 ;;		None
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;		None
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  1    wreg      void 
  7053 ;; Registers used:
  7054 ;;		wreg
  7055 ;; Tracked objects:
  7056 ;;		On entry : 0/0
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7060 ;;      Params:         0       0       0       0       0
  7061 ;;      Locals:         0       0       0       0       0
  7062 ;;      Temps:          0       0       0       0       0
  7063 ;;      Totals:         0       0       0       0       0
  7064 ;;Total ram usage:        0 bytes
  7065 ;; Hardware stack levels used: 1
  7066 ;; This function calls:
  7067 ;;		Nothing
  7068 ;; This function is called by:
  7069 ;;		_slave
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073  1D36                     i1_tmr0_reload:	
  7074                           ;psect for function i1_tmr0_reload
  7075                           
  7076                           
  7077                           ;tmr0.c: 58:     TMR0 = 178;
  7078                           
  7079                           ;incstack = 0
  7080                           ; Regs used in i1_tmr0_reload: [wreg]
  7081  1D36  30B2               	movlw	178
  7082  1D37  1283               	bcf	3,5	;RP0=0, select bank0
  7083  1D38  1303               	bcf	3,6	;RP1=0, select bank0
  7084  1D39  0081               	movwf	1	;volatile
  7085                           
  7086                           ;tmr0.c: 59:     INTCONbits.T0IF = 0;
  7087  1D3A  110B               	bcf	11,2	;volatile
  7088  1D3B  0008               	return
  7089  1D3C                     __end_ofi1_tmr0_reload:
  7090                           
  7091                           	psect	text32
  7092  168D                     __ptext32:	
  7093 ;; *************** function _map *****************
  7094 ;; Defined at:
  7095 ;;		line 145 in file "main_slave_p1.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  x               2   22[BANK1 ] unsigned int 
  7098 ;;  x0              2   24[BANK1 ] unsigned int 
  7099 ;;  x1              2   26[BANK1 ] unsigned int 
  7100 ;;  y0              2   28[BANK1 ] short 
  7101 ;;  y1              2   30[BANK1 ] short 
  7102 ;; Auto vars:     Size  Location     Type
  7103 ;;		None
  7104 ;; Return value:  Size  Location     Type
  7105 ;;                  2   22[BANK1 ] short 
  7106 ;; Registers used:
  7107 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7108 ;; Tracked objects:
  7109 ;;		On entry : 0/0
  7110 ;;		On exit  : 0/0
  7111 ;;		Unchanged: 0/0
  7112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7113 ;;      Params:         0       0      10       0       0
  7114 ;;      Locals:         0       0       0       0       0
  7115 ;;      Temps:          0       0       0       0       0
  7116 ;;      Totals:         0       0      10       0       0
  7117 ;;Total ram usage:       10 bytes
  7118 ;; Hardware stack levels used: 1
  7119 ;; Hardware stack levels required when called: 2
  7120 ;; This function calls:
  7121 ;;		___fladd
  7122 ;;		___fldiv
  7123 ;;		___flmul
  7124 ;;		___xxtofl
  7125 ;;		i1___fltol
  7126 ;; This function is called by:
  7127 ;;		_slave
  7128 ;; This function uses a non-reentrant model
  7129 ;;
  7130                           
  7131  168D                     _map:	
  7132                           ;psect for function _map
  7133                           
  7134                           
  7135                           ;main_slave_p1.c: 145: short map(uint16_t x, uint16_t x0, uint16_t x1,;main_slave_p1.c: 
      +                          146:           short y0, short y1){;main_slave_p1.c: 147:     return (short)(y0+((float)
      +                          (y1-y0)/(x1-x0))*(x-x0));
  7136                           
  7137                           ;incstack = 0
  7138                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7139  168D  1683               	bsf	3,5	;RP0=1, select bank1
  7140  168E  1303               	bcf	3,6	;RP1=0, select bank1
  7141  168F  083C               	movf	map@y0^(0+128),w
  7142  1690  00F9               	movwf	___xxtofl@val
  7143  1691  083D               	movf	(map@y0+1)^(0+128),w
  7144  1692  00FA               	movwf	___xxtofl@val+1
  7145  1693  3000               	movlw	0
  7146  1694  1BFA               	btfsc	___xxtofl@val+1,7
  7147  1695  30FF               	movlw	255
  7148  1696  00FB               	movwf	___xxtofl@val+2
  7149  1697  00FC               	movwf	___xxtofl@val+3
  7150  1698  3001               	movlw	1
  7151  1699  160A  118A  25E8  160A  118A  	fcall	___xxtofl
  7152  169E  087C               	movf	?___xxtofl+3,w
  7153  169F  1283               	bcf	3,5	;RP0=0, select bank0
  7154  16A0  1303               	bcf	3,6	;RP1=0, select bank0
  7155  16A1  00B1               	movwf	___fladd@a+3
  7156  16A2  087B               	movf	?___xxtofl+2,w
  7157  16A3  00B0               	movwf	___fladd@a+2
  7158  16A4  087A               	movf	?___xxtofl+1,w
  7159  16A5  00AF               	movwf	___fladd@a+1
  7160  16A6  0879               	movf	?___xxtofl,w
  7161  16A7  00AE               	movwf	___fladd@a
  7162  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  7163  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  7164  16AA  083C               	movf	map@y0^(0+128),w
  7165  16AB  023E               	subwf	map@y1^(0+128),w
  7166  16AC  00F9               	movwf	___xxtofl@val
  7167  16AD  083D               	movf	(map@y0+1)^(0+128),w
  7168  16AE  1C03               	skipc
  7169  16AF  0A3D               	incf	(map@y0+1)^(0+128),w
  7170  16B0  023F               	subwf	(map@y1+1)^(0+128),w
  7171  16B1  00FA               	movwf	___xxtofl@val+1
  7172  16B2  01FB               	clrf	___xxtofl@val+2
  7173  16B3  1BFA               	btfsc	___xxtofl@val+1,7
  7174  16B4  03FB               	decf	___xxtofl@val+2,f
  7175  16B5  087B               	movf	___xxtofl@val+2,w
  7176  16B6  00FC               	movwf	___xxtofl@val+3
  7177  16B7  3001               	movlw	1
  7178  16B8  160A  118A  25E8  160A  118A  	fcall	___xxtofl
  7179  16BD  087C               	movf	?___xxtofl+3,w
  7180  16BE  1283               	bcf	3,5	;RP0=0, select bank0
  7181  16BF  1303               	bcf	3,6	;RP1=0, select bank0
  7182  16C0  00DF               	movwf	___fldiv@b+3
  7183  16C1  087B               	movf	?___xxtofl+2,w
  7184  16C2  00DE               	movwf	___fldiv@b+2
  7185  16C3  087A               	movf	?___xxtofl+1,w
  7186  16C4  00DD               	movwf	___fldiv@b+1
  7187  16C5  0879               	movf	?___xxtofl,w
  7188  16C6  00DC               	movwf	___fldiv@b
  7189  16C7  1683               	bsf	3,5	;RP0=1, select bank1
  7190  16C8  1303               	bcf	3,6	;RP1=0, select bank1
  7191  16C9  0838               	movf	map@x0^(0+128),w
  7192  16CA  023A               	subwf	map@x1^(0+128),w
  7193  16CB  00F9               	movwf	___xxtofl@val
  7194  16CC  0839               	movf	(map@x0+1)^(0+128),w
  7195  16CD  1C03               	skipc
  7196  16CE  0A39               	incf	(map@x0+1)^(0+128),w
  7197  16CF  023B               	subwf	(map@x1+1)^(0+128),w
  7198  16D0  00FA               	movwf	___xxtofl@val+1
  7199  16D1  01FB               	clrf	___xxtofl@val+2
  7200  16D2  01FC               	clrf	___xxtofl@val+3
  7201  16D3  3000               	movlw	0
  7202  16D4  160A  118A  25E8  160A  118A  	fcall	___xxtofl
  7203  16D9  087C               	movf	?___xxtofl+3,w
  7204  16DA  1283               	bcf	3,5	;RP0=0, select bank0
  7205  16DB  1303               	bcf	3,6	;RP1=0, select bank0
  7206  16DC  00DB               	movwf	___fldiv@a+3
  7207  16DD  087B               	movf	?___xxtofl+2,w
  7208  16DE  00DA               	movwf	___fldiv@a+2
  7209  16DF  087A               	movf	?___xxtofl+1,w
  7210  16E0  00D9               	movwf	___fldiv@a+1
  7211  16E1  0879               	movf	?___xxtofl,w
  7212  16E2  00D8               	movwf	___fldiv@a
  7213  16E3  120A  158A  259A  160A  118A  	fcall	___fldiv
  7214  16E8  1283               	bcf	3,5	;RP0=0, select bank0
  7215  16E9  1303               	bcf	3,6	;RP1=0, select bank0
  7216  16EA  085B               	movf	?___fldiv+3,w
  7217  16EB  00C5               	movwf	___flmul@a+3
  7218  16EC  085A               	movf	?___fldiv+2,w
  7219  16ED  00C4               	movwf	___flmul@a+2
  7220  16EE  0859               	movf	?___fldiv+1,w
  7221  16EF  00C3               	movwf	___flmul@a+1
  7222  16F0  0858               	movf	?___fldiv,w
  7223  16F1  00C2               	movwf	___flmul@a
  7224  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  7225  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  7226  16F4  0838               	movf	map@x0^(0+128),w
  7227  16F5  0236               	subwf	map@x^(0+128),w
  7228  16F6  00F9               	movwf	___xxtofl@val
  7229  16F7  0839               	movf	(map@x0+1)^(0+128),w
  7230  16F8  1C03               	skipc
  7231  16F9  0A39               	incf	(map@x0+1)^(0+128),w
  7232  16FA  0237               	subwf	(map@x+1)^(0+128),w
  7233  16FB  00FA               	movwf	___xxtofl@val+1
  7234  16FC  01FB               	clrf	___xxtofl@val+2
  7235  16FD  01FC               	clrf	___xxtofl@val+3
  7236  16FE  3000               	movlw	0
  7237  16FF  160A  118A  25E8  160A  118A  	fcall	___xxtofl
  7238  1704  087C               	movf	?___xxtofl+3,w
  7239  1705  1283               	bcf	3,5	;RP0=0, select bank0
  7240  1706  1303               	bcf	3,6	;RP1=0, select bank0
  7241  1707  00C1               	movwf	___flmul@b+3
  7242  1708  087B               	movf	?___xxtofl+2,w
  7243  1709  00C0               	movwf	___flmul@b+2
  7244  170A  087A               	movf	?___xxtofl+1,w
  7245  170B  00BF               	movwf	___flmul@b+1
  7246  170C  0879               	movf	?___xxtofl,w
  7247  170D  00BE               	movwf	___flmul@b
  7248  170E  120A  118A  237E  160A  118A  	fcall	___flmul
  7249  1713  1283               	bcf	3,5	;RP0=0, select bank0
  7250  1714  1303               	bcf	3,6	;RP1=0, select bank0
  7251  1715  0841               	movf	?___flmul+3,w
  7252  1716  00AD               	movwf	___fladd@b+3
  7253  1717  0840               	movf	?___flmul+2,w
  7254  1718  00AC               	movwf	___fladd@b+2
  7255  1719  083F               	movf	?___flmul+1,w
  7256  171A  00AB               	movwf	___fladd@b+1
  7257  171B  083E               	movf	?___flmul,w
  7258  171C  00AA               	movwf	___fladd@b
  7259  171D  120A  158A  2109  160A  118A  	fcall	___fladd
  7260  1722  1283               	bcf	3,5	;RP0=0, select bank0
  7261  1723  1303               	bcf	3,6	;RP1=0, select bank0
  7262  1724  082D               	movf	?___fladd+3,w
  7263  1725  1683               	bsf	3,5	;RP0=1, select bank1
  7264  1726  1303               	bcf	3,6	;RP1=0, select bank1
  7265  1727  00B0               	movwf	(i1___fltol@f1+3)^(0+128)
  7266  1728  1283               	bcf	3,5	;RP0=0, select bank0
  7267  1729  1303               	bcf	3,6	;RP1=0, select bank0
  7268  172A  082C               	movf	?___fladd+2,w
  7269  172B  1683               	bsf	3,5	;RP0=1, select bank1
  7270  172C  1303               	bcf	3,6	;RP1=0, select bank1
  7271  172D  00AF               	movwf	(i1___fltol@f1+2)^(0+128)
  7272  172E  1283               	bcf	3,5	;RP0=0, select bank0
  7273  172F  1303               	bcf	3,6	;RP1=0, select bank0
  7274  1730  082B               	movf	?___fladd+1,w
  7275  1731  1683               	bsf	3,5	;RP0=1, select bank1
  7276  1732  1303               	bcf	3,6	;RP1=0, select bank1
  7277  1733  00AE               	movwf	(i1___fltol@f1+1)^(0+128)
  7278  1734  1283               	bcf	3,5	;RP0=0, select bank0
  7279  1735  1303               	bcf	3,6	;RP1=0, select bank0
  7280  1736  082A               	movf	?___fladd,w
  7281  1737  1683               	bsf	3,5	;RP0=1, select bank1
  7282  1738  1303               	bcf	3,6	;RP1=0, select bank1
  7283  1739  00AD               	movwf	i1___fltol@f1^(0+128)
  7284  173A  160A  118A  2393   	fcall	i1___fltol
  7285  173D  1683               	bsf	3,5	;RP0=1, select bank1
  7286  173E  1303               	bcf	3,6	;RP1=0, select bank1
  7287  173F  082E               	movf	(?i1___fltol+1)^(0+128),w
  7288  1740  00B7               	movwf	(?_map+1)^(0+128)
  7289  1741  082D               	movf	?i1___fltol^(0+128),w
  7290  1742  00B6               	movwf	?_map^(0+128)
  7291  1743  0008               	return
  7292  1744                     __end_of_map:
  7293                           
  7294                           	psect	text33
  7295  1393                     __ptext33:	
  7296 ;; *************** function i1___fltol *****************
  7297 ;; Defined at:
  7298 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fltol.c"
  7299 ;; Parameters:    Size  Location     Type
  7300 ;;  f1              4   13[BANK1 ] short 
  7301 ;; Auto vars:     Size  Location     Type
  7302 ;;  exp1            1   78[BANK0 ] unsigned char 
  7303 ;;  sign1           1   77[BANK0 ] unsigned char 
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  4   13[BANK1 ] long 
  7306 ;; Registers used:
  7307 ;;		wreg, status,2, status,0
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7313 ;;      Params:         0       0       4       0       0
  7314 ;;      Locals:         0       2       0       0       0
  7315 ;;      Temps:          0       0       5       0       0
  7316 ;;      Totals:         0       2       9       0       0
  7317 ;;Total ram usage:       11 bytes
  7318 ;; Hardware stack levels used: 1
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_slave
  7323 ;;		_map
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327  1393                     i1___fltol:	
  7328                           ;psect for function i1___fltol
  7329                           
  7330                           
  7331                           ;incstack = 0
  7332                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
  7333  1393  1003               	clrc
  7334  1394  1683               	bsf	3,5	;RP0=1, select bank1
  7335  1395  1303               	bcf	3,6	;RP1=0, select bank1
  7336  1396  0D2F               	rlf	(i1___fltol@f1+2)^(0+128),w
  7337  1397  0D30               	rlf	(i1___fltol@f1+3)^(0+128),w
  7338  1398  00B1               	movwf	??i1___fltol^(0+128)
  7339  1399  0831               	movf	??i1___fltol^(0+128),w
  7340  139A  1283               	bcf	3,5	;RP0=0, select bank0
  7341  139B  1303               	bcf	3,6	;RP1=0, select bank0
  7342  139C  00EE               	movwf	i1___fltol@exp1
  7343  139D  086E               	movf	i1___fltol@exp1,w
  7344  139E  1D03               	btfss	3,2
  7345  139F  2BAB               	goto	i1l3587
  7346  13A0                     i1l3583:
  7347  13A0  3000               	movlw	0
  7348  13A1  1683               	bsf	3,5	;RP0=1, select bank1
  7349  13A2  1303               	bcf	3,6	;RP1=0, select bank1
  7350  13A3  00B0               	movwf	(?i1___fltol+3)^(0+128)
  7351  13A4  3000               	movlw	0
  7352  13A5  00AF               	movwf	(?i1___fltol+2)^(0+128)
  7353  13A6  3000               	movlw	0
  7354  13A7  00AE               	movwf	(?i1___fltol+1)^(0+128)
  7355  13A8  3000               	movlw	0
  7356  13A9  00AD               	movwf	?i1___fltol^(0+128)
  7357  13AA  0008               	return
  7358  13AB                     i1l3587:
  7359  13AB  1683               	bsf	3,5	;RP0=1, select bank1
  7360  13AC  1303               	bcf	3,6	;RP1=0, select bank1
  7361  13AD  082D               	movf	i1___fltol@f1^(0+128),w
  7362  13AE  00B1               	movwf	??i1___fltol^(0+128)
  7363  13AF  082E               	movf	(i1___fltol@f1+1)^(0+128),w
  7364  13B0  00B2               	movwf	(??i1___fltol^(0+128)+1)
  7365  13B1  082F               	movf	(i1___fltol@f1+2)^(0+128),w
  7366  13B2  00B3               	movwf	(??i1___fltol^(0+128)+2)
  7367  13B3  0830               	movf	(i1___fltol@f1+3)^(0+128),w
  7368  13B4  00B4               	movwf	(??i1___fltol^(0+128)+3)
  7369  13B5  301F               	movlw	31
  7370  13B6                     u442_25:
  7371  13B6  1003               	clrc
  7372  13B7  0CB4               	rrf	(??i1___fltol^(0+128)+3),f
  7373  13B8  0CB3               	rrf	(??i1___fltol^(0+128)+2),f
  7374  13B9  0CB2               	rrf	(??i1___fltol^(0+128)+1),f
  7375  13BA  0CB1               	rrf	??i1___fltol^(0+128),f
  7376  13BB  3EFF               	addlw	-1
  7377  13BC  1D03               	skipz
  7378  13BD  2BB6               	goto	u442_25
  7379  13BE  0831               	movf	??i1___fltol^(0+128),w
  7380  13BF  00B5               	movwf	(??i1___fltol+4)^(0+128)
  7381  13C0  0835               	movf	(??i1___fltol+4)^(0+128),w
  7382  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  7383  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  7384  13C3  00ED               	movwf	i1___fltol@sign1
  7385  13C4  1683               	bsf	3,5	;RP0=1, select bank1
  7386  13C5  1303               	bcf	3,6	;RP1=0, select bank1
  7387  13C6  17AF               	bsf	(i1___fltol@f1^(0+128)+2),7
  7388  13C7  30FF               	movlw	255
  7389  13C8  05AD               	andwf	i1___fltol@f1^(0+128),f
  7390  13C9  30FF               	movlw	255
  7391  13CA  05AE               	andwf	(i1___fltol@f1+1)^(0+128),f
  7392  13CB  30FF               	movlw	255
  7393  13CC  05AF               	andwf	(i1___fltol@f1+2)^(0+128),f
  7394  13CD  3000               	movlw	0
  7395  13CE  05B0               	andwf	(i1___fltol@f1+3)^(0+128),f
  7396  13CF  3096               	movlw	150
  7397  13D0  1283               	bcf	3,5	;RP0=0, select bank0
  7398  13D1  1303               	bcf	3,6	;RP1=0, select bank0
  7399  13D2  02EE               	subwf	i1___fltol@exp1,f
  7400  13D3  1FEE               	btfss	i1___fltol@exp1,7
  7401  13D4  2BEE               	goto	i1l3605
  7402  13D5  086E               	movf	i1___fltol@exp1,w
  7403  13D6  3A80               	xorlw	128
  7404  13D7  3E97               	addlw	151
  7405  13D8  1C03               	btfss	3,0
  7406  13D9  2BA0               	goto	i1l3583
  7407  13DA                     i1l3603:
  7408  13DA  3001               	movlw	1
  7409  13DB                     u445_25:
  7410  13DB  1003               	clrc
  7411  13DC  1683               	bsf	3,5	;RP0=1, select bank1
  7412  13DD  1303               	bcf	3,6	;RP1=0, select bank1
  7413  13DE  0CB0               	rrf	(i1___fltol@f1+3)^(0+128),f
  7414  13DF  0CAF               	rrf	(i1___fltol@f1+2)^(0+128),f
  7415  13E0  0CAE               	rrf	(i1___fltol@f1+1)^(0+128),f
  7416  13E1  0CAD               	rrf	i1___fltol@f1^(0+128),f
  7417  13E2  3EFF               	addlw	-1
  7418  13E3  1D03               	skipz
  7419  13E4  2BDB               	goto	u445_25
  7420  13E5  3001               	movlw	1
  7421  13E6  00B1               	movwf	??i1___fltol^(0+128)
  7422  13E7  0831               	movf	??i1___fltol^(0+128),w
  7423  13E8  1283               	bcf	3,5	;RP0=0, select bank0
  7424  13E9  1303               	bcf	3,6	;RP1=0, select bank0
  7425  13EA  07EE               	addwf	i1___fltol@exp1,f
  7426  13EB  1903               	btfsc	3,2
  7427  13EC  2C05               	goto	i1l3613
  7428  13ED  2BDA               	goto	i1l3603
  7429  13EE                     i1l3605:
  7430  13EE  3020               	movlw	32
  7431  13EF  026E               	subwf	i1___fltol@exp1,w
  7432  13F0  1803               	btfsc	3,0
  7433  13F1  2BA0               	goto	i1l3583
  7434  13F2                     i1l702:
  7435  13F2  086E               	movf	i1___fltol@exp1,w
  7436  13F3  1903               	btfsc	3,2
  7437  13F4  2C05               	goto	i1l3613
  7438  13F5  3001               	movlw	1
  7439  13F6  1683               	bsf	3,5	;RP0=1, select bank1
  7440  13F7  1303               	bcf	3,6	;RP1=0, select bank1
  7441  13F8  00B1               	movwf	??i1___fltol^(0+128)
  7442  13F9                     u448_25:
  7443  13F9  1003               	clrc
  7444  13FA  0DAD               	rlf	i1___fltol@f1^(0+128),f
  7445  13FB  0DAE               	rlf	(i1___fltol@f1+1)^(0+128),f
  7446  13FC  0DAF               	rlf	(i1___fltol@f1+2)^(0+128),f
  7447  13FD  0DB0               	rlf	(i1___fltol@f1+3)^(0+128),f
  7448  13FE  0BB1               	decfsz	??i1___fltol^(0+128),f
  7449  13FF  2BF9               	goto	u448_25
  7450  1400  3001               	movlw	1
  7451  1401  1283               	bcf	3,5	;RP0=0, select bank0
  7452  1402  1303               	bcf	3,6	;RP1=0, select bank0
  7453  1403  02EE               	subwf	i1___fltol@exp1,f
  7454  1404  2BF2               	goto	i1l702
  7455  1405                     i1l3613:
  7456  1405  086D               	movf	i1___fltol@sign1,w
  7457  1406  1903               	btfsc	3,2
  7458  1407  0008               	return
  7459  1408  1683               	bsf	3,5	;RP0=1, select bank1
  7460  1409  1303               	bcf	3,6	;RP1=0, select bank1
  7461  140A  09AD               	comf	i1___fltol@f1^(0+128),f
  7462  140B  09AE               	comf	(i1___fltol@f1+1)^(0+128),f
  7463  140C  09AF               	comf	(i1___fltol@f1+2)^(0+128),f
  7464  140D  09B0               	comf	(i1___fltol@f1+3)^(0+128),f
  7465  140E  0AAD               	incf	i1___fltol@f1^(0+128),f
  7466  140F  1903               	skipnz
  7467  1410  0AAE               	incf	(i1___fltol@f1+1)^(0+128),f
  7468  1411  1903               	skipnz
  7469  1412  0AAF               	incf	(i1___fltol@f1+2)^(0+128),f
  7470  1413  1903               	skipnz
  7471  1414  0AB0               	incf	(i1___fltol@f1+3)^(0+128),f
  7472  1415  0008               	return
  7473  1416                     __end_ofi1___fltol:
  7474                           
  7475                           	psect	text34
  7476  0D9A                     __ptext34:	
  7477 ;; *************** function ___fldiv *****************
  7478 ;; Defined at:
  7479 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcdiv.c"
  7480 ;; Parameters:    Size  Location     Type
  7481 ;;  a               4   56[BANK0 ] long 
  7482 ;;  b               4   60[BANK0 ] long 
  7483 ;; Auto vars:     Size  Location     Type
  7484 ;;  grs             4    7[BANK1 ] unsigned long 
  7485 ;;  rem             4    0[BANK1 ] unsigned long 
  7486 ;;  new_exp         2    5[BANK1 ] int 
  7487 ;;  aexp            1   12[BANK1 ] unsigned char 
  7488 ;;  bexp            1   11[BANK1 ] unsigned char 
  7489 ;;  sign            1    4[BANK1 ] unsigned char 
  7490 ;; Return value:  Size  Location     Type
  7491 ;;                  4   56[BANK0 ] unsigned char 
  7492 ;; Registers used:
  7493 ;;		wreg, status,2, status,0, btemp+1
  7494 ;; Tracked objects:
  7495 ;;		On entry : 0/0
  7496 ;;		On exit  : 0/0
  7497 ;;		Unchanged: 0/0
  7498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7499 ;;      Params:         0       8       0       0       0
  7500 ;;      Locals:         0       0      13       0       0
  7501 ;;      Temps:          0       5       0       0       0
  7502 ;;      Totals:         0      13      13       0       0
  7503 ;;Total ram usage:       26 bytes
  7504 ;; Hardware stack levels used: 1
  7505 ;; This function calls:
  7506 ;;		Nothing
  7507 ;; This function is called by:
  7508 ;;		_slave
  7509 ;;		_map
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513  0D9A                     ___fldiv:	
  7514                           ;psect for function ___fldiv
  7515                           
  7516                           
  7517                           ;incstack = 0
  7518                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7519  0D9A  1283               	bcf	3,5	;RP0=0, select bank0
  7520  0D9B  1303               	bcf	3,6	;RP1=0, select bank0
  7521  0D9C  085F               	movf	___fldiv@b+3,w
  7522  0D9D  3980               	andlw	128
  7523  0D9E  00E0               	movwf	??___fldiv
  7524  0D9F  0860               	movf	??___fldiv,w
  7525  0DA0  1683               	bsf	3,5	;RP0=1, select bank1
  7526  0DA1  1303               	bcf	3,6	;RP1=0, select bank1
  7527  0DA2  00A4               	movwf	___fldiv@sign^(0+128)
  7528  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  7529  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  7530  0DA5  085F               	movf	___fldiv@b+3,w
  7531  0DA6  00E0               	movwf	??___fldiv
  7532  0DA7  0760               	addwf	??___fldiv,w
  7533  0DA8  00E1               	movwf	??___fldiv+1
  7534  0DA9  0861               	movf	??___fldiv+1,w
  7535  0DAA  1683               	bsf	3,5	;RP0=1, select bank1
  7536  0DAB  1303               	bcf	3,6	;RP1=0, select bank1
  7537  0DAC  00AB               	movwf	___fldiv@bexp^(0+128)
  7538  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  7539  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  7540  0DAF  1FDE               	btfss	___fldiv@b+2,7
  7541  0DB0  2DB4               	goto	i1l3373
  7542  0DB1  1683               	bsf	3,5	;RP0=1, select bank1
  7543  0DB2  1303               	bcf	3,6	;RP1=0, select bank1
  7544  0DB3  142B               	bsf	___fldiv@bexp^(0+128),0
  7545  0DB4                     i1l3373:
  7546  0DB4  1683               	bsf	3,5	;RP0=1, select bank1
  7547  0DB5  1303               	bcf	3,6	;RP1=0, select bank1
  7548  0DB6  082B               	movf	___fldiv@bexp^(0+128),w
  7549  0DB7  1903               	btfsc	3,2
  7550  0DB8  2DCA               	goto	i1l3383
  7551  0DB9  0A2B               	incf	___fldiv@bexp^(0+128),w
  7552  0DBA  1D03               	btfss	3,2
  7553  0DBB  2DC6               	goto	i1l3379
  7554  0DBC  3000               	movlw	0
  7555  0DBD  1283               	bcf	3,5	;RP0=0, select bank0
  7556  0DBE  1303               	bcf	3,6	;RP1=0, select bank0
  7557  0DBF  00DF               	movwf	___fldiv@b+3
  7558  0DC0  3000               	movlw	0
  7559  0DC1  00DE               	movwf	___fldiv@b+2
  7560  0DC2  3000               	movlw	0
  7561  0DC3  00DD               	movwf	___fldiv@b+1
  7562  0DC4  3000               	movlw	0
  7563  0DC5  00DC               	movwf	___fldiv@b
  7564  0DC6                     i1l3379:
  7565  0DC6  1283               	bcf	3,5	;RP0=0, select bank0
  7566  0DC7  17DE               	bsf	___fldiv@b+2,7
  7567  0DC8  01DF               	clrf	___fldiv@b+3
  7568  0DC9  2DD4               	goto	i1l3385
  7569  0DCA                     i1l3383:
  7570  0DCA  3000               	movlw	0
  7571  0DCB  1283               	bcf	3,5	;RP0=0, select bank0
  7572  0DCC  1303               	bcf	3,6	;RP1=0, select bank0
  7573  0DCD  00DF               	movwf	___fldiv@b+3
  7574  0DCE  3000               	movlw	0
  7575  0DCF  00DE               	movwf	___fldiv@b+2
  7576  0DD0  3000               	movlw	0
  7577  0DD1  00DD               	movwf	___fldiv@b+1
  7578  0DD2  3000               	movlw	0
  7579  0DD3  00DC               	movwf	___fldiv@b
  7580  0DD4                     i1l3385:
  7581  0DD4  085B               	movf	___fldiv@a+3,w
  7582  0DD5  3980               	andlw	128
  7583  0DD6  00E0               	movwf	??___fldiv
  7584  0DD7  0860               	movf	??___fldiv,w
  7585  0DD8  1683               	bsf	3,5	;RP0=1, select bank1
  7586  0DD9  1303               	bcf	3,6	;RP1=0, select bank1
  7587  0DDA  06A4               	xorwf	___fldiv@sign^(0+128),f
  7588  0DDB  1283               	bcf	3,5	;RP0=0, select bank0
  7589  0DDC  1303               	bcf	3,6	;RP1=0, select bank0
  7590  0DDD  085B               	movf	___fldiv@a+3,w
  7591  0DDE  00E0               	movwf	??___fldiv
  7592  0DDF  0760               	addwf	??___fldiv,w
  7593  0DE0  00E1               	movwf	??___fldiv+1
  7594  0DE1  0861               	movf	??___fldiv+1,w
  7595  0DE2  1683               	bsf	3,5	;RP0=1, select bank1
  7596  0DE3  1303               	bcf	3,6	;RP1=0, select bank1
  7597  0DE4  00AC               	movwf	___fldiv@aexp^(0+128)
  7598  0DE5  1283               	bcf	3,5	;RP0=0, select bank0
  7599  0DE6  1303               	bcf	3,6	;RP1=0, select bank0
  7600  0DE7  1FDA               	btfss	___fldiv@a+2,7
  7601  0DE8  2DEC               	goto	i1l3393
  7602  0DE9  1683               	bsf	3,5	;RP0=1, select bank1
  7603  0DEA  1303               	bcf	3,6	;RP1=0, select bank1
  7604  0DEB  142C               	bsf	___fldiv@aexp^(0+128),0
  7605  0DEC                     i1l3393:
  7606  0DEC  1683               	bsf	3,5	;RP0=1, select bank1
  7607  0DED  1303               	bcf	3,6	;RP1=0, select bank1
  7608  0DEE  082C               	movf	___fldiv@aexp^(0+128),w
  7609  0DEF  1903               	btfsc	3,2
  7610  0DF0  2E02               	goto	i1l3403
  7611  0DF1  0A2C               	incf	___fldiv@aexp^(0+128),w
  7612  0DF2  1D03               	btfss	3,2
  7613  0DF3  2DFE               	goto	i1l3399
  7614  0DF4  3000               	movlw	0
  7615  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  7616  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  7617  0DF7  00DB               	movwf	___fldiv@a+3
  7618  0DF8  3000               	movlw	0
  7619  0DF9  00DA               	movwf	___fldiv@a+2
  7620  0DFA  3000               	movlw	0
  7621  0DFB  00D9               	movwf	___fldiv@a+1
  7622  0DFC  3000               	movlw	0
  7623  0DFD  00D8               	movwf	___fldiv@a
  7624  0DFE                     i1l3399:
  7625  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  7626  0DFF  17DA               	bsf	___fldiv@a+2,7
  7627  0E00  01DB               	clrf	___fldiv@a+3
  7628  0E01  2E0C               	goto	i1l858
  7629  0E02                     i1l3403:
  7630  0E02  3000               	movlw	0
  7631  0E03  1283               	bcf	3,5	;RP0=0, select bank0
  7632  0E04  1303               	bcf	3,6	;RP1=0, select bank0
  7633  0E05  00DB               	movwf	___fldiv@a+3
  7634  0E06  3000               	movlw	0
  7635  0E07  00DA               	movwf	___fldiv@a+2
  7636  0E08  3000               	movlw	0
  7637  0E09  00D9               	movwf	___fldiv@a+1
  7638  0E0A  3000               	movlw	0
  7639  0E0B  00D8               	movwf	___fldiv@a
  7640  0E0C                     i1l858:
  7641  0E0C  085B               	movf	___fldiv@a+3,w
  7642  0E0D  045A               	iorwf	___fldiv@a+2,w
  7643  0E0E  0459               	iorwf	___fldiv@a+1,w
  7644  0E0F  0458               	iorwf	___fldiv@a,w
  7645  0E10  1D03               	skipz
  7646  0E11  2E2F               	goto	i1l3413
  7647  0E12  3000               	movlw	0
  7648  0E13  00DF               	movwf	___fldiv@b+3
  7649  0E14  3000               	movlw	0
  7650  0E15  00DE               	movwf	___fldiv@b+2
  7651  0E16  3000               	movlw	0
  7652  0E17  00DD               	movwf	___fldiv@b+1
  7653  0E18  3000               	movlw	0
  7654  0E19  00DC               	movwf	___fldiv@b
  7655  0E1A  3080               	movlw	128
  7656  0E1B  04DE               	iorwf	___fldiv@b+2,f
  7657  0E1C  307F               	movlw	127
  7658  0E1D  04DF               	iorwf	___fldiv@b+3,f
  7659  0E1E                     L22:
  7660  0E1E  1683               	bsf	3,5	;RP0=1, select bank1
  7661  0E1F  1303               	bcf	3,6	;RP1=0, select bank1
  7662  0E20  0824               	movf	___fldiv@sign^(0+128),w
  7663  0E21  1283               	bcf	3,5	;RP0=0, select bank0
  7664  0E22  1303               	bcf	3,6	;RP1=0, select bank0
  7665  0E23  00E0               	movwf	??___fldiv
  7666  0E24  0860               	movf	??___fldiv,w
  7667  0E25  04DF               	iorwf	___fldiv@b+3,f
  7668  0E26  085F               	movf	___fldiv@b+3,w
  7669  0E27  00DB               	movwf	?___fldiv+3
  7670  0E28  085E               	movf	___fldiv@b+2,w
  7671  0E29  00DA               	movwf	?___fldiv+2
  7672  0E2A  085D               	movf	___fldiv@b+1,w
  7673  0E2B  00D9               	movwf	?___fldiv+1
  7674  0E2C  085C               	movf	___fldiv@b,w
  7675  0E2D  00D8               	movwf	?___fldiv
  7676  0E2E  0008               	return
  7677  0E2F                     i1l3413:
  7678  0E2F  1683               	bsf	3,5	;RP0=1, select bank1
  7679  0E30  1303               	bcf	3,6	;RP1=0, select bank1
  7680  0E31  082B               	movf	___fldiv@bexp^(0+128),w
  7681  0E32  1D03               	btfss	3,2
  7682  0E33  2E3F               	goto	i1l3419
  7683  0E34  3000               	movlw	0
  7684  0E35  1283               	bcf	3,5	;RP0=0, select bank0
  7685  0E36  1303               	bcf	3,6	;RP1=0, select bank0
  7686  0E37  00DB               	movwf	?___fldiv+3
  7687  0E38  3000               	movlw	0
  7688  0E39  00DA               	movwf	?___fldiv+2
  7689  0E3A  3000               	movlw	0
  7690  0E3B  00D9               	movwf	?___fldiv+1
  7691  0E3C  3000               	movlw	0
  7692  0E3D  00D8               	movwf	?___fldiv
  7693  0E3E  0008               	return
  7694  0E3F                     i1l3419:
  7695  0E3F  082B               	movf	___fldiv@bexp^(0+128),w
  7696  0E40  1283               	bcf	3,5	;RP0=0, select bank0
  7697  0E41  1303               	bcf	3,6	;RP1=0, select bank0
  7698  0E42  00E0               	movwf	??___fldiv
  7699  0E43  01E1               	clrf	??___fldiv+1
  7700  0E44  0861               	movf	??___fldiv+1,w
  7701  0E45  00E3               	movwf	??___fldiv+3
  7702  0E46  1683               	bsf	3,5	;RP0=1, select bank1
  7703  0E47  1303               	bcf	3,6	;RP1=0, select bank1
  7704  0E48  082C               	movf	___fldiv@aexp^(0+128),w
  7705  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  7706  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  7707  0E4B  0260               	subwf	??___fldiv,w
  7708  0E4C  00E2               	movwf	??___fldiv+2
  7709  0E4D  1C03               	skipc
  7710  0E4E  03E3               	decf	??___fldiv+3,f
  7711  0E4F  0862               	movf	??___fldiv+2,w
  7712  0E50  3E7F               	addlw	127
  7713  0E51  1683               	bsf	3,5	;RP0=1, select bank1
  7714  0E52  1303               	bcf	3,6	;RP1=0, select bank1
  7715  0E53  00A5               	movwf	___fldiv@new_exp^(0+128)
  7716  0E54  1283               	bcf	3,5	;RP0=0, select bank0
  7717  0E55  1303               	bcf	3,6	;RP1=0, select bank0
  7718  0E56  0863               	movf	??___fldiv+3,w
  7719  0E57  1803               	skipnc
  7720  0E58  3E01               	addlw	1
  7721  0E59  3E00               	addlw	0
  7722  0E5A  1683               	bsf	3,5	;RP0=1, select bank1
  7723  0E5B  1303               	bcf	3,6	;RP1=0, select bank1
  7724  0E5C  00A6               	movwf	(___fldiv@new_exp+1)^(0+128)
  7725  0E5D  1283               	bcf	3,5	;RP0=0, select bank0
  7726  0E5E  1303               	bcf	3,6	;RP1=0, select bank0
  7727  0E5F  085F               	movf	___fldiv@b+3,w
  7728  0E60  1683               	bsf	3,5	;RP0=1, select bank1
  7729  0E61  1303               	bcf	3,6	;RP1=0, select bank1
  7730  0E62  00A3               	movwf	(___fldiv@rem+3)^(0+128)
  7731  0E63  1283               	bcf	3,5	;RP0=0, select bank0
  7732  0E64  1303               	bcf	3,6	;RP1=0, select bank0
  7733  0E65  085E               	movf	___fldiv@b+2,w
  7734  0E66  1683               	bsf	3,5	;RP0=1, select bank1
  7735  0E67  1303               	bcf	3,6	;RP1=0, select bank1
  7736  0E68  00A2               	movwf	(___fldiv@rem+2)^(0+128)
  7737  0E69  1283               	bcf	3,5	;RP0=0, select bank0
  7738  0E6A  1303               	bcf	3,6	;RP1=0, select bank0
  7739  0E6B  085D               	movf	___fldiv@b+1,w
  7740  0E6C  1683               	bsf	3,5	;RP0=1, select bank1
  7741  0E6D  1303               	bcf	3,6	;RP1=0, select bank1
  7742  0E6E  00A1               	movwf	(___fldiv@rem+1)^(0+128)
  7743  0E6F  1283               	bcf	3,5	;RP0=0, select bank0
  7744  0E70  1303               	bcf	3,6	;RP1=0, select bank0
  7745  0E71  085C               	movf	___fldiv@b,w
  7746  0E72  1683               	bsf	3,5	;RP0=1, select bank1
  7747  0E73  1303               	bcf	3,6	;RP1=0, select bank1
  7748  0E74  00A0               	movwf	___fldiv@rem^(0+128)
  7749  0E75  3000               	movlw	0
  7750  0E76  1283               	bcf	3,5	;RP0=0, select bank0
  7751  0E77  1303               	bcf	3,6	;RP1=0, select bank0
  7752  0E78  00DF               	movwf	___fldiv@b+3
  7753  0E79  3000               	movlw	0
  7754  0E7A  00DE               	movwf	___fldiv@b+2
  7755  0E7B  3000               	movlw	0
  7756  0E7C  00DD               	movwf	___fldiv@b+1
  7757  0E7D  3000               	movlw	0
  7758  0E7E  00DC               	movwf	___fldiv@b
  7759  0E7F  3000               	movlw	0
  7760  0E80  1683               	bsf	3,5	;RP0=1, select bank1
  7761  0E81  1303               	bcf	3,6	;RP1=0, select bank1
  7762  0E82  00AA               	movwf	(___fldiv@grs+3)^(0+128)
  7763  0E83  3000               	movlw	0
  7764  0E84  00A9               	movwf	(___fldiv@grs+2)^(0+128)
  7765  0E85  3000               	movlw	0
  7766  0E86  00A8               	movwf	(___fldiv@grs+1)^(0+128)
  7767  0E87  3000               	movlw	0
  7768  0E88  00A7               	movwf	___fldiv@grs^(0+128)
  7769  0E89  01AC               	clrf	___fldiv@aexp^(0+128)
  7770  0E8A                     i1l3447:
  7771  0E8A  301A               	movlw	26
  7772  0E8B  022C               	subwf	___fldiv@aexp^(0+128),w
  7773  0E8C  1803               	btfsc	3,0
  7774  0E8D  2F0F               	goto	i1l3449
  7775  0E8E  082C               	movf	___fldiv@aexp^(0+128),w
  7776  0E8F  1903               	btfsc	3,2
  7777  0E90  2EBE               	goto	i1l3439
  7778  0E91  3001               	movlw	1
  7779  0E92  1283               	bcf	3,5	;RP0=0, select bank0
  7780  0E93  1303               	bcf	3,6	;RP1=0, select bank0
  7781  0E94  00E0               	movwf	??___fldiv
  7782  0E95                     u402_25:
  7783  0E95  1003               	clrc
  7784  0E96  1683               	bsf	3,5	;RP0=1, select bank1
  7785  0E97  1303               	bcf	3,6	;RP1=0, select bank1
  7786  0E98  0DA0               	rlf	___fldiv@rem^(0+128),f
  7787  0E99  0DA1               	rlf	(___fldiv@rem+1)^(0+128),f
  7788  0E9A  0DA2               	rlf	(___fldiv@rem+2)^(0+128),f
  7789  0E9B  0DA3               	rlf	(___fldiv@rem+3)^(0+128),f
  7790  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  7791  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  7792  0E9E  0BE0               	decfsz	??___fldiv,f
  7793  0E9F  2E95               	goto	u402_25
  7794  0EA0  3001               	movlw	1
  7795  0EA1  00E0               	movwf	??___fldiv
  7796  0EA2                     u403_25:
  7797  0EA2  1003               	clrc
  7798  0EA3  0DDC               	rlf	___fldiv@b,f
  7799  0EA4  0DDD               	rlf	___fldiv@b+1,f
  7800  0EA5  0DDE               	rlf	___fldiv@b+2,f
  7801  0EA6  0DDF               	rlf	___fldiv@b+3,f
  7802  0EA7  0BE0               	decfsz	??___fldiv,f
  7803  0EA8  2EA2               	goto	u403_25
  7804  0EA9  1683               	bsf	3,5	;RP0=1, select bank1
  7805  0EAA  1303               	bcf	3,6	;RP1=0, select bank1
  7806  0EAB  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  7807  0EAC  2EB0               	goto	i1l3437
  7808  0EAD  1283               	bcf	3,5	;RP0=0, select bank0
  7809  0EAE  1303               	bcf	3,6	;RP1=0, select bank0
  7810  0EAF  145C               	bsf	___fldiv@b,0
  7811  0EB0                     i1l3437:
  7812  0EB0  3001               	movlw	1
  7813  0EB1  1283               	bcf	3,5	;RP0=0, select bank0
  7814  0EB2  00E0               	movwf	??___fldiv
  7815  0EB3                     u405_25:
  7816  0EB3  1003               	clrc
  7817  0EB4  1683               	bsf	3,5	;RP0=1, select bank1
  7818  0EB5  1303               	bcf	3,6	;RP1=0, select bank1
  7819  0EB6  0DA7               	rlf	___fldiv@grs^(0+128),f
  7820  0EB7  0DA8               	rlf	(___fldiv@grs+1)^(0+128),f
  7821  0EB8  0DA9               	rlf	(___fldiv@grs+2)^(0+128),f
  7822  0EB9  0DAA               	rlf	(___fldiv@grs+3)^(0+128),f
  7823  0EBA  1283               	bcf	3,5	;RP0=0, select bank0
  7824  0EBB  1303               	bcf	3,6	;RP1=0, select bank0
  7825  0EBC  0BE0               	decfsz	??___fldiv,f
  7826  0EBD  2EB3               	goto	u405_25
  7827  0EBE                     i1l3439:
  7828  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  7829  0EBF  085B               	movf	___fldiv@a+3,w
  7830  0EC0  1683               	bsf	3,5	;RP0=1, select bank1
  7831  0EC1  1303               	bcf	3,6	;RP1=0, select bank1
  7832  0EC2  0223               	subwf	(___fldiv@rem+3)^(0+128),w
  7833  0EC3  1D03               	skipz
  7834  0EC4  2EDB               	goto	u406_25
  7835  0EC5  1283               	bcf	3,5	;RP0=0, select bank0
  7836  0EC6  1303               	bcf	3,6	;RP1=0, select bank0
  7837  0EC7  085A               	movf	___fldiv@a+2,w
  7838  0EC8  1683               	bsf	3,5	;RP0=1, select bank1
  7839  0EC9  1303               	bcf	3,6	;RP1=0, select bank1
  7840  0ECA  0222               	subwf	(___fldiv@rem+2)^(0+128),w
  7841  0ECB  1D03               	skipz
  7842  0ECC  2EDB               	goto	u406_25
  7843  0ECD  1283               	bcf	3,5	;RP0=0, select bank0
  7844  0ECE  1303               	bcf	3,6	;RP1=0, select bank0
  7845  0ECF  0859               	movf	___fldiv@a+1,w
  7846  0ED0  1683               	bsf	3,5	;RP0=1, select bank1
  7847  0ED1  1303               	bcf	3,6	;RP1=0, select bank1
  7848  0ED2  0221               	subwf	(___fldiv@rem+1)^(0+128),w
  7849  0ED3  1D03               	skipz
  7850  0ED4  2EDB               	goto	u406_25
  7851  0ED5  1283               	bcf	3,5	;RP0=0, select bank0
  7852  0ED6  1303               	bcf	3,6	;RP1=0, select bank0
  7853  0ED7  0858               	movf	___fldiv@a,w
  7854  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  7855  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  7856  0EDA  0220               	subwf	___fldiv@rem^(0+128),w
  7857  0EDB                     u406_25:
  7858  0EDB  1C03               	skipc
  7859  0EDC  2F06               	goto	i1l3445
  7860  0EDD  172A               	bsf	(___fldiv@grs^(0+128)+3),6
  7861  0EDE  1283               	bcf	3,5	;RP0=0, select bank0
  7862  0EDF  1303               	bcf	3,6	;RP1=0, select bank0
  7863  0EE0  0858               	movf	___fldiv@a,w
  7864  0EE1  1683               	bsf	3,5	;RP0=1, select bank1
  7865  0EE2  1303               	bcf	3,6	;RP1=0, select bank1
  7866  0EE3  02A0               	subwf	___fldiv@rem^(0+128),f
  7867  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  7868  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  7869  0EE6  0859               	movf	___fldiv@a+1,w
  7870  0EE7  1C03               	skipc
  7871  0EE8  0F59               	incfsz	___fldiv@a+1,w
  7872  0EE9  2EEB               	goto	u407_25
  7873  0EEA  2EEE               	goto	u407_26
  7874  0EEB                     u407_25:
  7875  0EEB  1683               	bsf	3,5	;RP0=1, select bank1
  7876  0EEC  1303               	bcf	3,6	;RP1=0, select bank1
  7877  0EED  02A1               	subwf	(___fldiv@rem+1)^(0+128),f
  7878  0EEE                     u407_26:
  7879  0EEE  1283               	bcf	3,5	;RP0=0, select bank0
  7880  0EEF  1303               	bcf	3,6	;RP1=0, select bank0
  7881  0EF0  085A               	movf	___fldiv@a+2,w
  7882  0EF1  1C03               	skipc
  7883  0EF2  0F5A               	incfsz	___fldiv@a+2,w
  7884  0EF3  2EF5               	goto	u407_27
  7885  0EF4  2EF8               	goto	u407_28
  7886  0EF5                     u407_27:
  7887  0EF5  1683               	bsf	3,5	;RP0=1, select bank1
  7888  0EF6  1303               	bcf	3,6	;RP1=0, select bank1
  7889  0EF7  02A2               	subwf	(___fldiv@rem+2)^(0+128),f
  7890  0EF8                     u407_28:
  7891  0EF8  1283               	bcf	3,5	;RP0=0, select bank0
  7892  0EF9  1303               	bcf	3,6	;RP1=0, select bank0
  7893  0EFA  085B               	movf	___fldiv@a+3,w
  7894  0EFB  1C03               	skipc
  7895  0EFC  0F5B               	incfsz	___fldiv@a+3,w
  7896  0EFD  2EFF               	goto	u407_29
  7897  0EFE  2F02               	goto	u407_20
  7898  0EFF                     u407_29:
  7899  0EFF  1683               	bsf	3,5	;RP0=1, select bank1
  7900  0F00  1303               	bcf	3,6	;RP1=0, select bank1
  7901  0F01  02A3               	subwf	(___fldiv@rem+3)^(0+128),f
  7902  0F02                     u407_20:
  7903  0F02  1283               	bcf	3,5	;RP0=0, select bank0
  7904  0F03  1303               	bcf	3,6	;RP1=0, select bank0
  7905  0F04  1683               	bsf	3,5	;RP0=1, select bank1
  7906  0F05  1303               	bcf	3,6	;RP1=0, select bank1
  7907  0F06                     i1l3445:
  7908  0F06  3001               	movlw	1
  7909  0F07  1283               	bcf	3,5	;RP0=0, select bank0
  7910  0F08  1303               	bcf	3,6	;RP1=0, select bank0
  7911  0F09  00E0               	movwf	??___fldiv
  7912  0F0A  0860               	movf	??___fldiv,w
  7913  0F0B  1683               	bsf	3,5	;RP0=1, select bank1
  7914  0F0C  1303               	bcf	3,6	;RP1=0, select bank1
  7915  0F0D  07AC               	addwf	___fldiv@aexp^(0+128),f
  7916  0F0E  2E8A               	goto	i1l3447
  7917  0F0F                     i1l3449:
  7918  0F0F  0823               	movf	(___fldiv@rem+3)^(0+128),w
  7919  0F10  0422               	iorwf	(___fldiv@rem+2)^(0+128),w
  7920  0F11  0421               	iorwf	(___fldiv@rem+1)^(0+128),w
  7921  0F12  0420               	iorwf	___fldiv@rem^(0+128),w
  7922  0F13  1D03               	btfss	3,2
  7923  0F14  1427               	bsf	___fldiv@grs^(0+128),0
  7924  0F15                     i1l3463:
  7925  0F15  1283               	bcf	3,5	;RP0=0, select bank0
  7926  0F16  1303               	bcf	3,6	;RP1=0, select bank0
  7927  0F17  1BDE               	btfsc	___fldiv@b+2,7
  7928  0F18  2F40               	goto	i1l3465
  7929  0F19  3001               	movlw	1
  7930  0F1A  00E0               	movwf	??___fldiv
  7931  0F1B                     u410_25:
  7932  0F1B  1003               	clrc
  7933  0F1C  0DDC               	rlf	___fldiv@b,f
  7934  0F1D  0DDD               	rlf	___fldiv@b+1,f
  7935  0F1E  0DDE               	rlf	___fldiv@b+2,f
  7936  0F1F  0DDF               	rlf	___fldiv@b+3,f
  7937  0F20  0BE0               	decfsz	??___fldiv,f
  7938  0F21  2F1B               	goto	u410_25
  7939  0F22  1683               	bsf	3,5	;RP0=1, select bank1
  7940  0F23  1303               	bcf	3,6	;RP1=0, select bank1
  7941  0F24  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  7942  0F25  2F29               	goto	i1l3459
  7943  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  7944  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  7945  0F28  145C               	bsf	___fldiv@b,0
  7946  0F29                     i1l3459:
  7947  0F29  3001               	movlw	1
  7948  0F2A  1283               	bcf	3,5	;RP0=0, select bank0
  7949  0F2B  00E0               	movwf	??___fldiv
  7950  0F2C                     u412_25:
  7951  0F2C  1003               	clrc
  7952  0F2D  1683               	bsf	3,5	;RP0=1, select bank1
  7953  0F2E  1303               	bcf	3,6	;RP1=0, select bank1
  7954  0F2F  0DA7               	rlf	___fldiv@grs^(0+128),f
  7955  0F30  0DA8               	rlf	(___fldiv@grs+1)^(0+128),f
  7956  0F31  0DA9               	rlf	(___fldiv@grs+2)^(0+128),f
  7957  0F32  0DAA               	rlf	(___fldiv@grs+3)^(0+128),f
  7958  0F33  1283               	bcf	3,5	;RP0=0, select bank0
  7959  0F34  1303               	bcf	3,6	;RP1=0, select bank0
  7960  0F35  0BE0               	decfsz	??___fldiv,f
  7961  0F36  2F2C               	goto	u412_25
  7962  0F37  30FF               	movlw	255
  7963  0F38  1683               	bsf	3,5	;RP0=1, select bank1
  7964  0F39  1303               	bcf	3,6	;RP1=0, select bank1
  7965  0F3A  07A5               	addwf	___fldiv@new_exp^(0+128),f
  7966  0F3B  1803               	skipnc
  7967  0F3C  0AA6               	incf	(___fldiv@new_exp+1)^(0+128),f
  7968  0F3D  30FF               	movlw	255
  7969  0F3E  07A6               	addwf	(___fldiv@new_exp+1)^(0+128),f
  7970  0F3F  2F15               	goto	i1l3463
  7971  0F40                     i1l3465:
  7972  0F40  1683               	bsf	3,5	;RP0=1, select bank1
  7973  0F41  1303               	bcf	3,6	;RP1=0, select bank1
  7974  0F42  01AC               	clrf	___fldiv@aexp^(0+128)
  7975  0F43  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  7976  0F44  2F6B               	goto	i1l3475
  7977  0F45  30FF               	movlw	255
  7978  0F46  0527               	andwf	___fldiv@grs^(0+128),w
  7979  0F47  1283               	bcf	3,5	;RP0=0, select bank0
  7980  0F48  1303               	bcf	3,6	;RP1=0, select bank0
  7981  0F49  00E0               	movwf	??___fldiv
  7982  0F4A  30FF               	movlw	255
  7983  0F4B  1683               	bsf	3,5	;RP0=1, select bank1
  7984  0F4C  1303               	bcf	3,6	;RP1=0, select bank1
  7985  0F4D  0528               	andwf	(___fldiv@grs+1)^(0+128),w
  7986  0F4E  1283               	bcf	3,5	;RP0=0, select bank0
  7987  0F4F  1303               	bcf	3,6	;RP1=0, select bank0
  7988  0F50  00E1               	movwf	??___fldiv+1
  7989  0F51  30FF               	movlw	255
  7990  0F52  1683               	bsf	3,5	;RP0=1, select bank1
  7991  0F53  1303               	bcf	3,6	;RP1=0, select bank1
  7992  0F54  0529               	andwf	(___fldiv@grs+2)^(0+128),w
  7993  0F55  1283               	bcf	3,5	;RP0=0, select bank0
  7994  0F56  1303               	bcf	3,6	;RP1=0, select bank0
  7995  0F57  00E2               	movwf	??___fldiv+2
  7996  0F58  307F               	movlw	127
  7997  0F59  1683               	bsf	3,5	;RP0=1, select bank1
  7998  0F5A  1303               	bcf	3,6	;RP1=0, select bank1
  7999  0F5B  052A               	andwf	(___fldiv@grs+3)^(0+128),w
  8000  0F5C  1283               	bcf	3,5	;RP0=0, select bank0
  8001  0F5D  1303               	bcf	3,6	;RP1=0, select bank0
  8002  0F5E  00E3               	movwf	??___fldiv+3
  8003  0F5F  0863               	movf	??___fldiv+3,w
  8004  0F60  0462               	iorwf	??___fldiv+2,w
  8005  0F61  0461               	iorwf	??___fldiv+1,w
  8006  0F62  0460               	iorwf	??___fldiv,w
  8007  0F63  1903               	skipnz
  8008  0F64  185C               	btfsc	___fldiv@b,0
  8009  0F65  2F67               	goto	i1l3471
  8010  0F66  2F6B               	goto	i1l3475
  8011  0F67                     i1l3471:
  8012  0F67  1683               	bsf	3,5	;RP0=1, select bank1
  8013  0F68  1303               	bcf	3,6	;RP1=0, select bank1
  8014  0F69  01AC               	clrf	___fldiv@aexp^(0+128)
  8015  0F6A  0AAC               	incf	___fldiv@aexp^(0+128),f
  8016  0F6B                     i1l3475:
  8017  0F6B  1683               	bsf	3,5	;RP0=1, select bank1
  8018  0F6C  1303               	bcf	3,6	;RP1=0, select bank1
  8019  0F6D  082C               	movf	___fldiv@aexp^(0+128),w
  8020  0F6E  1903               	btfsc	3,2
  8021  0F6F  2FA3               	goto	i1l3485
  8022  0F70  3001               	movlw	1
  8023  0F71  1283               	bcf	3,5	;RP0=0, select bank0
  8024  0F72  1303               	bcf	3,6	;RP1=0, select bank0
  8025  0F73  07DC               	addwf	___fldiv@b,f
  8026  0F74  3000               	movlw	0
  8027  0F75  1803               	skipnc
  8028  0F76  3001               	movlw	1
  8029  0F77  07DD               	addwf	___fldiv@b+1,f
  8030  0F78  3000               	movlw	0
  8031  0F79  1803               	skipnc
  8032  0F7A  3001               	movlw	1
  8033  0F7B  07DE               	addwf	___fldiv@b+2,f
  8034  0F7C  3000               	movlw	0
  8035  0F7D  1803               	skipnc
  8036  0F7E  3001               	movlw	1
  8037  0F7F  07DF               	addwf	___fldiv@b+3,f
  8038  0F80  1C5F               	btfss	___fldiv@b+3,0
  8039  0F81  2FA3               	goto	i1l3485
  8040  0F82  085C               	movf	___fldiv@b,w
  8041  0F83  00E0               	movwf	??___fldiv
  8042  0F84  085D               	movf	___fldiv@b+1,w
  8043  0F85  00E1               	movwf	??___fldiv+1
  8044  0F86  085E               	movf	___fldiv@b+2,w
  8045  0F87  00E2               	movwf	??___fldiv+2
  8046  0F88  085F               	movf	___fldiv@b+3,w
  8047  0F89  00E3               	movwf	??___fldiv+3
  8048  0F8A  3001               	movlw	1
  8049  0F8B  00E4               	movwf	??___fldiv+4
  8050  0F8C                     u419_25:
  8051  0F8C  0D63               	rlf	??___fldiv+3,w
  8052  0F8D  0CE3               	rrf	??___fldiv+3,f
  8053  0F8E  0CE2               	rrf	??___fldiv+2,f
  8054  0F8F  0CE1               	rrf	??___fldiv+1,f
  8055  0F90  0CE0               	rrf	??___fldiv,f
  8056  0F91  0BE4               	decfsz	??___fldiv+4,f
  8057  0F92  2F8C               	goto	u419_25
  8058  0F93  0863               	movf	??___fldiv+3,w
  8059  0F94  00DF               	movwf	___fldiv@b+3
  8060  0F95  0862               	movf	??___fldiv+2,w
  8061  0F96  00DE               	movwf	___fldiv@b+2
  8062  0F97  0861               	movf	??___fldiv+1,w
  8063  0F98  00DD               	movwf	___fldiv@b+1
  8064  0F99  0860               	movf	??___fldiv,w
  8065  0F9A  00DC               	movwf	___fldiv@b
  8066  0F9B  3001               	movlw	1
  8067  0F9C  1683               	bsf	3,5	;RP0=1, select bank1
  8068  0F9D  1303               	bcf	3,6	;RP1=0, select bank1
  8069  0F9E  07A5               	addwf	___fldiv@new_exp^(0+128),f
  8070  0F9F  1803               	skipnc
  8071  0FA0  0AA6               	incf	(___fldiv@new_exp+1)^(0+128),f
  8072  0FA1  3000               	movlw	0
  8073  0FA2  07A6               	addwf	(___fldiv@new_exp+1)^(0+128),f
  8074  0FA3                     i1l3485:
  8075  0FA3  1683               	bsf	3,5	;RP0=1, select bank1
  8076  0FA4  1303               	bcf	3,6	;RP1=0, select bank1
  8077  0FA5  0826               	movf	(___fldiv@new_exp+1)^(0+128),w
  8078  0FA6  3A80               	xorlw	128
  8079  0FA7  00FF               	movwf	127
  8080  0FA8  3080               	movlw	128
  8081  0FA9  027F               	subwf	127,w
  8082  0FAA  1D03               	skipz
  8083  0FAB  2FAE               	goto	u420_25
  8084  0FAC  30FF               	movlw	255
  8085  0FAD  0225               	subwf	___fldiv@new_exp^(0+128),w
  8086  0FAE                     u420_25:
  8087  0FAE  1C03               	skipc
  8088  0FAF  2FC0               	goto	i1l3489
  8089  0FB0  30FF               	movlw	255
  8090  0FB1  1683               	bsf	3,5	;RP0=1, select bank1
  8091  0FB2  1303               	bcf	3,6	;RP1=0, select bank1
  8092  0FB3  00A5               	movwf	___fldiv@new_exp^(0+128)
  8093  0FB4  3000               	movlw	0
  8094  0FB5  00A6               	movwf	(___fldiv@new_exp^(0+128)+1)
  8095  0FB6  3000               	movlw	0
  8096  0FB7  1283               	bcf	3,5	;RP0=0, select bank0
  8097  0FB8  1303               	bcf	3,6	;RP1=0, select bank0
  8098  0FB9  00DF               	movwf	___fldiv@b+3
  8099  0FBA  3000               	movlw	0
  8100  0FBB  00DE               	movwf	___fldiv@b+2
  8101  0FBC  3000               	movlw	0
  8102  0FBD  00DD               	movwf	___fldiv@b+1
  8103  0FBE  3000               	movlw	0
  8104  0FBF  00DC               	movwf	___fldiv@b
  8105  0FC0                     i1l3489:
  8106  0FC0  1683               	bsf	3,5	;RP0=1, select bank1
  8107  0FC1  1303               	bcf	3,6	;RP1=0, select bank1
  8108  0FC2  0826               	movf	(___fldiv@new_exp+1)^(0+128),w
  8109  0FC3  3A80               	xorlw	128
  8110  0FC4  00FF               	movwf	127
  8111  0FC5  3080               	movlw	128
  8112  0FC6  027F               	subwf	127,w
  8113  0FC7  1D03               	skipz
  8114  0FC8  2FCB               	goto	u421_25
  8115  0FC9  3001               	movlw	1
  8116  0FCA  0225               	subwf	___fldiv@new_exp^(0+128),w
  8117  0FCB                     u421_25:
  8118  0FCB  1803               	skipnc
  8119  0FCC  2FDE               	goto	i1l880
  8120  0FCD  1683               	bsf	3,5	;RP0=1, select bank1
  8121  0FCE  1303               	bcf	3,6	;RP1=0, select bank1
  8122  0FCF  01A5               	clrf	___fldiv@new_exp^(0+128)
  8123  0FD0  01A6               	clrf	(___fldiv@new_exp+1)^(0+128)
  8124  0FD1  3000               	movlw	0
  8125  0FD2  1283               	bcf	3,5	;RP0=0, select bank0
  8126  0FD3  1303               	bcf	3,6	;RP1=0, select bank0
  8127  0FD4  00DF               	movwf	___fldiv@b+3
  8128  0FD5  3000               	movlw	0
  8129  0FD6  00DE               	movwf	___fldiv@b+2
  8130  0FD7  3000               	movlw	0
  8131  0FD8  00DD               	movwf	___fldiv@b+1
  8132  0FD9  3000               	movlw	0
  8133  0FDA  00DC               	movwf	___fldiv@b
  8134  0FDB  1683               	bsf	3,5	;RP0=1, select bank1
  8135  0FDC  1303               	bcf	3,6	;RP1=0, select bank1
  8136  0FDD  01A4               	clrf	___fldiv@sign^(0+128)
  8137  0FDE                     i1l880:
  8138  0FDE  1683               	bsf	3,5	;RP0=1, select bank1
  8139  0FDF  1303               	bcf	3,6	;RP1=0, select bank1
  8140  0FE0  0825               	movf	___fldiv@new_exp^(0+128),w
  8141  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  8142  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  8143  0FE3  00E0               	movwf	??___fldiv
  8144  0FE4  0860               	movf	??___fldiv,w
  8145  0FE5  1683               	bsf	3,5	;RP0=1, select bank1
  8146  0FE6  1303               	bcf	3,6	;RP1=0, select bank1
  8147  0FE7  00AB               	movwf	___fldiv@bexp^(0+128)
  8148  0FE8  1C2B               	btfss	___fldiv@bexp^(0+128),0
  8149  0FE9  2FEE               	goto	i1l3501
  8150  0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  8151  0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  8152  0FEC  17DE               	bsf	___fldiv@b+2,7
  8153  0FED  2FF4               	goto	i1l882
  8154  0FEE                     i1l3501:
  8155  0FEE  307F               	movlw	127
  8156  0FEF  1283               	bcf	3,5	;RP0=0, select bank0
  8157  0FF0  1303               	bcf	3,6	;RP1=0, select bank0
  8158  0FF1  00E0               	movwf	??___fldiv
  8159  0FF2  0860               	movf	??___fldiv,w
  8160  0FF3  05DE               	andwf	___fldiv@b+2,f
  8161  0FF4                     i1l882:
  8162  0FF4  1683               	bsf	3,5	;RP0=1, select bank1
  8163  0FF5  1303               	bcf	3,6	;RP1=0, select bank1
  8164  0FF6  082B               	movf	___fldiv@bexp^(0+128),w
  8165  0FF7  1283               	bcf	3,5	;RP0=0, select bank0
  8166  0FF8  1303               	bcf	3,6	;RP1=0, select bank0
  8167  0FF9  00E0               	movwf	??___fldiv
  8168  0FFA  1003               	clrc
  8169  0FFB  0C60               	rrf	??___fldiv,w
  8170  0FFC  00E1               	movwf	??___fldiv+1
  8171  0FFD  0861               	movf	??___fldiv+1,w
  8172  0FFE  00DF               	movwf	___fldiv@b+3
  8173  0FFF  2E1E               	goto	L22
  8174  1000                     __end_of___fldiv:
  8175                           
  8176                           	psect	text35
  8177  0693                     __ptext35:	
  8178 ;; *************** function _log *****************
  8179 ;; Defined at:
  8180 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\log.c"
  8181 ;; Parameters:    Size  Location     Type
  8182 ;;  x               4   72[BANK0 ] unsigned char 
  8183 ;; Auto vars:     Size  Location     Type
  8184 ;;  exponent        2   77[BANK0 ] int 
  8185 ;; Return value:  Size  Location     Type
  8186 ;;                  4   72[BANK0 ] int 
  8187 ;; Registers used:
  8188 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8189 ;; Tracked objects:
  8190 ;;		On entry : 0/0
  8191 ;;		On exit  : 0/0
  8192 ;;		Unchanged: 0/0
  8193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8194 ;;      Params:         0       4       0       0       0
  8195 ;;      Locals:         0       2       0       0       0
  8196 ;;      Temps:          0       1       0       0       0
  8197 ;;      Totals:         0       7       0       0       0
  8198 ;;Total ram usage:        7 bytes
  8199 ;; Hardware stack levels used: 1
  8200 ;; Hardware stack levels required when called: 3
  8201 ;; This function calls:
  8202 ;;		___fladd
  8203 ;;		___fleq
  8204 ;;		___flge
  8205 ;;		___flmul
  8206 ;;		___xxtofl
  8207 ;;		_eval_poly
  8208 ;;		_frexp
  8209 ;; This function is called by:
  8210 ;;		_slave
  8211 ;; This function uses a non-reentrant model
  8212 ;;
  8213                           
  8214  0693                     _log:	
  8215                           ;psect for function _log
  8216                           
  8217                           
  8218                           ;incstack = 0
  8219                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8220  0693  1283               	bcf	3,5	;RP0=0, select bank0
  8221  0694  1303               	bcf	3,6	;RP1=0, select bank0
  8222  0695  086B               	movf	log@x+3,w
  8223  0696  00F3               	movwf	___flge@ff1+3
  8224  0697  086A               	movf	log@x+2,w
  8225  0698  00F2               	movwf	___flge@ff1+2
  8226  0699  0869               	movf	log@x+1,w
  8227  069A  00F1               	movwf	___flge@ff1+1
  8228  069B  0868               	movf	log@x,w
  8229  069C  00F0               	movwf	___flge@ff1
  8230  069D  3000               	movlw	0
  8231  069E  00F7               	movwf	___flge@ff2+3
  8232  069F  3000               	movlw	0
  8233  06A0  00F6               	movwf	___flge@ff2+2
  8234  06A1  3000               	movlw	0
  8235  06A2  00F5               	movwf	___flge@ff2+1
  8236  06A3  3000               	movlw	0
  8237  06A4  00F4               	movwf	___flge@ff2
  8238  06A5  160A  118A  2416  120A  118A  	fcall	___flge
  8239  06AA  1803               	btfsc	3,0
  8240  06AB  2EBD               	goto	i1l3633
  8241  06AC  3021               	movlw	33
  8242  06AD  1683               	bsf	3,5	;RP0=1, select bank1
  8243  06AE  1303               	bcf	3,6	;RP1=0, select bank1
  8244  06AF  00E0               	movwf	_errno^(0+128)
  8245  06B0  3000               	movlw	0
  8246  06B1  00E1               	movwf	(_errno^(0+128)+1)
  8247  06B2  3000               	movlw	0
  8248  06B3  1283               	bcf	3,5	;RP0=0, select bank0
  8249  06B4  1303               	bcf	3,6	;RP1=0, select bank0
  8250  06B5  00EB               	movwf	?_log+3
  8251  06B6  3000               	movlw	0
  8252  06B7  00EA               	movwf	?_log+2
  8253  06B8  3000               	movlw	0
  8254  06B9  00E9               	movwf	?_log+1
  8255  06BA  3000               	movlw	0
  8256  06BB  00E8               	movwf	?_log
  8257  06BC  0008               	return
  8258  06BD                     i1l3633:
  8259  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  8260  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  8261  06BF  086B               	movf	log@x+3,w
  8262  06C0  00F3               	movwf	___fleq@ff1+3
  8263  06C1  086A               	movf	log@x+2,w
  8264  06C2  00F2               	movwf	___fleq@ff1+2
  8265  06C3  0869               	movf	log@x+1,w
  8266  06C4  00F1               	movwf	___fleq@ff1+1
  8267  06C5  0868               	movf	log@x,w
  8268  06C6  00F0               	movwf	___fleq@ff1
  8269  06C7  3000               	movlw	0
  8270  06C8  00F7               	movwf	___fleq@ff2+3
  8271  06C9  3000               	movlw	0
  8272  06CA  00F6               	movwf	___fleq@ff2+2
  8273  06CB  3000               	movlw	0
  8274  06CC  00F5               	movwf	___fleq@ff2+1
  8275  06CD  3000               	movlw	0
  8276  06CE  00F4               	movwf	___fleq@ff2
  8277  06CF  160A  158A  27B8  120A  118A  	fcall	___fleq
  8278  06D4  1C03               	btfss	3,0
  8279  06D5  2EE7               	goto	i1l3639
  8280  06D6  3022               	movlw	34
  8281  06D7  1683               	bsf	3,5	;RP0=1, select bank1
  8282  06D8  1303               	bcf	3,6	;RP1=0, select bank1
  8283  06D9  00E0               	movwf	_errno^(0+128)
  8284  06DA  3000               	movlw	0
  8285  06DB  00E1               	movwf	(_errno^(0+128)+1)
  8286  06DC  3000               	movlw	0
  8287  06DD  1283               	bcf	3,5	;RP0=0, select bank0
  8288  06DE  1303               	bcf	3,6	;RP1=0, select bank0
  8289  06DF  00EB               	movwf	?_log+3
  8290  06E0  3000               	movlw	0
  8291  06E1  00EA               	movwf	?_log+2
  8292  06E2  3000               	movlw	0
  8293  06E3  00E9               	movwf	?_log+1
  8294  06E4  3000               	movlw	0
  8295  06E5  00E8               	movwf	?_log
  8296  06E6  0008               	return
  8297  06E7                     i1l3639:
  8298  06E7  30BF               	movlw	191
  8299  06E8  1283               	bcf	3,5	;RP0=0, select bank0
  8300  06E9  1303               	bcf	3,6	;RP1=0, select bank0
  8301  06EA  00AD               	movwf	___fladd@b+3
  8302  06EB  3080               	movlw	128
  8303  06EC  00AC               	movwf	___fladd@b+2
  8304  06ED  3000               	movlw	0
  8305  06EE  00AB               	movwf	___fladd@b+1
  8306  06EF  3000               	movlw	0
  8307  06F0  00AA               	movwf	___fladd@b
  8308  06F1  3040               	movlw	64
  8309  06F2  00C1               	movwf	___flmul@b+3
  8310  06F3  3000               	movlw	0
  8311  06F4  00C0               	movwf	___flmul@b+2
  8312  06F5  3000               	movlw	0
  8313  06F6  00BF               	movwf	___flmul@b+1
  8314  06F7  3000               	movlw	0
  8315  06F8  00BE               	movwf	___flmul@b
  8316  06F9  306D               	movlw	(low (log@exponent| 0))& (0+255)
  8317  06FA  00EC               	movwf	??_log
  8318  06FB  086C               	movf	??_log,w
  8319  06FC  00A4               	movwf	frexp@eptr
  8320  06FD  086B               	movf	log@x+3,w
  8321  06FE  00A3               	movwf	frexp@value+3
  8322  06FF  086A               	movf	log@x+2,w
  8323  0700  00A2               	movwf	frexp@value+2
  8324  0701  0869               	movf	log@x+1,w
  8325  0702  00A1               	movwf	frexp@value+1
  8326  0703  0868               	movf	log@x,w
  8327  0704  00A0               	movwf	frexp@value
  8328  0705  160A  118A  2037  120A  118A  	fcall	_frexp
  8329  070A  1283               	bcf	3,5	;RP0=0, select bank0
  8330  070B  1303               	bcf	3,6	;RP1=0, select bank0
  8331  070C  0823               	movf	?_frexp+3,w
  8332  070D  00C5               	movwf	___flmul@a+3
  8333  070E  0822               	movf	?_frexp+2,w
  8334  070F  00C4               	movwf	___flmul@a+2
  8335  0710  0821               	movf	?_frexp+1,w
  8336  0711  00C3               	movwf	___flmul@a+1
  8337  0712  0820               	movf	?_frexp,w
  8338  0713  00C2               	movwf	___flmul@a
  8339  0714  120A  118A  237E  120A  118A  	fcall	___flmul
  8340  0719  1283               	bcf	3,5	;RP0=0, select bank0
  8341  071A  1303               	bcf	3,6	;RP1=0, select bank0
  8342  071B  0841               	movf	?___flmul+3,w
  8343  071C  00B1               	movwf	___fladd@a+3
  8344  071D  0840               	movf	?___flmul+2,w
  8345  071E  00B0               	movwf	___fladd@a+2
  8346  071F  083F               	movf	?___flmul+1,w
  8347  0720  00AF               	movwf	___fladd@a+1
  8348  0721  083E               	movf	?___flmul,w
  8349  0722  00AE               	movwf	___fladd@a
  8350  0723  120A  158A  2109  120A  118A  	fcall	___fladd
  8351  0728  1283               	bcf	3,5	;RP0=0, select bank0
  8352  0729  1303               	bcf	3,6	;RP1=0, select bank0
  8353  072A  082D               	movf	?___fladd+3,w
  8354  072B  00EB               	movwf	log@x+3
  8355  072C  082C               	movf	?___fladd+2,w
  8356  072D  00EA               	movwf	log@x+2
  8357  072E  082B               	movf	?___fladd+1,w
  8358  072F  00E9               	movwf	log@x+1
  8359  0730  082A               	movf	?___fladd,w
  8360  0731  00E8               	movwf	log@x
  8361  0732  30FF               	movlw	255
  8362  0733  07ED               	addwf	log@exponent,f
  8363  0734  1803               	skipnc
  8364  0735  0AEE               	incf	log@exponent+1,f
  8365  0736  30FF               	movlw	255
  8366  0737  07EE               	addwf	log@exponent+1,f
  8367  0738  086B               	movf	log@x+3,w
  8368  0739  00DB               	movwf	eval_poly@x+3
  8369  073A  086A               	movf	log@x+2,w
  8370  073B  00DA               	movwf	eval_poly@x+2
  8371  073C  0869               	movf	log@x+1,w
  8372  073D  00D9               	movwf	eval_poly@x+1
  8373  073E  0868               	movf	log@x,w
  8374  073F  00D8               	movwf	eval_poly@x
  8375  0740  3001               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  8376  0741  00EC               	movwf	??_log
  8377  0742  086C               	movf	??_log,w
  8378  0743  00DC               	movwf	eval_poly@d
  8379  0744  3008               	movlw	8
  8380  0745  00DD               	movwf	eval_poly@n
  8381  0746  3000               	movlw	0
  8382  0747  00DE               	movwf	eval_poly@n+1
  8383  0748  160A  118A  24A9  120A  118A  	fcall	_eval_poly
  8384  074D  1283               	bcf	3,5	;RP0=0, select bank0
  8385  074E  1303               	bcf	3,6	;RP1=0, select bank0
  8386  074F  085B               	movf	?_eval_poly+3,w
  8387  0750  00EB               	movwf	log@x+3
  8388  0751  085A               	movf	?_eval_poly+2,w
  8389  0752  00EA               	movwf	log@x+2
  8390  0753  0859               	movf	?_eval_poly+1,w
  8391  0754  00E9               	movwf	log@x+1
  8392  0755  0858               	movf	?_eval_poly,w
  8393  0756  00E8               	movwf	log@x
  8394  0757  086B               	movf	log@x+3,w
  8395  0758  00AD               	movwf	___fladd@b+3
  8396  0759  086A               	movf	log@x+2,w
  8397  075A  00AC               	movwf	___fladd@b+2
  8398  075B  0869               	movf	log@x+1,w
  8399  075C  00AB               	movwf	___fladd@b+1
  8400  075D  0868               	movf	log@x,w
  8401  075E  00AA               	movwf	___fladd@b
  8402  075F  303F               	movlw	63
  8403  0760  00C1               	movwf	___flmul@b+3
  8404  0761  3031               	movlw	49
  8405  0762  00C0               	movwf	___flmul@b+2
  8406  0763  3072               	movlw	114
  8407  0764  00BF               	movwf	___flmul@b+1
  8408  0765  3018               	movlw	24
  8409  0766  00BE               	movwf	___flmul@b
  8410  0767  086D               	movf	log@exponent,w
  8411  0768  00F9               	movwf	___xxtofl@val
  8412  0769  086E               	movf	log@exponent+1,w
  8413  076A  00FA               	movwf	___xxtofl@val+1
  8414  076B  3000               	movlw	0
  8415  076C  1BFA               	btfsc	___xxtofl@val+1,7
  8416  076D  30FF               	movlw	255
  8417  076E  00FB               	movwf	___xxtofl@val+2
  8418  076F  00FC               	movwf	___xxtofl@val+3
  8419  0770  3001               	movlw	1
  8420  0771  160A  118A  25E8  120A  118A  	fcall	___xxtofl
  8421  0776  087C               	movf	?___xxtofl+3,w
  8422  0777  1283               	bcf	3,5	;RP0=0, select bank0
  8423  0778  1303               	bcf	3,6	;RP1=0, select bank0
  8424  0779  00C5               	movwf	___flmul@a+3
  8425  077A  087B               	movf	?___xxtofl+2,w
  8426  077B  00C4               	movwf	___flmul@a+2
  8427  077C  087A               	movf	?___xxtofl+1,w
  8428  077D  00C3               	movwf	___flmul@a+1
  8429  077E  0879               	movf	?___xxtofl,w
  8430  077F  00C2               	movwf	___flmul@a
  8431  0780  120A  118A  237E  120A  118A  	fcall	___flmul
  8432  0785  1283               	bcf	3,5	;RP0=0, select bank0
  8433  0786  1303               	bcf	3,6	;RP1=0, select bank0
  8434  0787  0841               	movf	?___flmul+3,w
  8435  0788  00B1               	movwf	___fladd@a+3
  8436  0789  0840               	movf	?___flmul+2,w
  8437  078A  00B0               	movwf	___fladd@a+2
  8438  078B  083F               	movf	?___flmul+1,w
  8439  078C  00AF               	movwf	___fladd@a+1
  8440  078D  083E               	movf	?___flmul,w
  8441  078E  00AE               	movwf	___fladd@a
  8442  078F  120A  158A  2109   	fcall	___fladd
  8443  0792  1283               	bcf	3,5	;RP0=0, select bank0
  8444  0793  1303               	bcf	3,6	;RP1=0, select bank0
  8445  0794  082D               	movf	?___fladd+3,w
  8446  0795  00EB               	movwf	?_log+3
  8447  0796  082C               	movf	?___fladd+2,w
  8448  0797  00EA               	movwf	?_log+2
  8449  0798  082B               	movf	?___fladd+1,w
  8450  0799  00E9               	movwf	?_log+1
  8451  079A  082A               	movf	?___fladd,w
  8452  079B  00E8               	movwf	?_log
  8453  079C  0008               	return
  8454  079D                     __end_of_log:
  8455                           
  8456                           	psect	text36
  8457  1037                     __ptext36:	
  8458 ;; *************** function _frexp *****************
  8459 ;; Defined at:
  8460 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\frexp.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;  value           4    0[BANK0 ] int 
  8463 ;;  eptr            1    4[BANK0 ] PTR int 
  8464 ;;		 -> log@exponent(2), 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;		None
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  4    0[BANK0 ] PTR int 
  8469 ;; Registers used:
  8470 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8476 ;;      Params:         0       5       0       0       0
  8477 ;;      Locals:         0       0       0       0       0
  8478 ;;      Temps:          2       0       0       0       0
  8479 ;;      Totals:         2       5       0       0       0
  8480 ;;Total ram usage:        7 bytes
  8481 ;; Hardware stack levels used: 1
  8482 ;; Hardware stack levels required when called: 1
  8483 ;; This function calls:
  8484 ;;		___fleq
  8485 ;; This function is called by:
  8486 ;;		_log
  8487 ;; This function uses a non-reentrant model
  8488 ;;
  8489                           
  8490  1037                     _frexp:	
  8491                           ;psect for function _frexp
  8492                           
  8493                           
  8494                           ;incstack = 0
  8495                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8496  1037  1283               	bcf	3,5	;RP0=0, select bank0
  8497  1038  1303               	bcf	3,6	;RP1=0, select bank0
  8498  1039  0823               	movf	frexp@value+3,w
  8499  103A  00F3               	movwf	___fleq@ff1+3
  8500  103B  0822               	movf	frexp@value+2,w
  8501  103C  00F2               	movwf	___fleq@ff1+2
  8502  103D  0821               	movf	frexp@value+1,w
  8503  103E  00F1               	movwf	___fleq@ff1+1
  8504  103F  0820               	movf	frexp@value,w
  8505  1040  00F0               	movwf	___fleq@ff1
  8506  1041  3000               	movlw	0
  8507  1042  00F7               	movwf	___fleq@ff2+3
  8508  1043  3000               	movlw	0
  8509  1044  00F6               	movwf	___fleq@ff2+2
  8510  1045  3000               	movlw	0
  8511  1046  00F5               	movwf	___fleq@ff2+1
  8512  1047  3000               	movlw	0
  8513  1048  00F4               	movwf	___fleq@ff2
  8514  1049  160A  158A  27B8  160A  118A  	fcall	___fleq
  8515  104E  1C03               	btfss	3,0
  8516  104F  2861               	goto	i1l3559
  8517  1050  1283               	bcf	3,5	;RP0=0, select bank0
  8518  1051  1303               	bcf	3,6	;RP1=0, select bank0
  8519  1052  0824               	movf	frexp@eptr,w
  8520  1053  0084               	movwf	4
  8521  1054  1383               	bcf	3,7	;select IRP bank0
  8522  1055  0180               	clrf	0
  8523  1056  0A84               	incf	4,f
  8524  1057  0180               	clrf	0
  8525  1058  3000               	movlw	0
  8526  1059  00A3               	movwf	?_frexp+3
  8527  105A  3000               	movlw	0
  8528  105B  00A2               	movwf	?_frexp+2
  8529  105C  3000               	movlw	0
  8530  105D  00A1               	movwf	?_frexp+1
  8531  105E  3000               	movlw	0
  8532  105F  00A0               	movwf	?_frexp
  8533  1060  0008               	return
  8534  1061                     i1l3559:
  8535  1061  1283               	bcf	3,5	;RP0=0, select bank0
  8536  1062  1303               	bcf	3,6	;RP1=0, select bank0
  8537  1063  0823               	movf	frexp@value+3,w
  8538  1064  397F               	andlw	127
  8539  1065  00FC               	movwf	??_frexp
  8540  1066  01FD               	clrf	??_frexp+1
  8541  1067  1003               	clrc
  8542  1068  0DFC               	rlf	??_frexp,f
  8543  1069  0DFD               	rlf	??_frexp+1,f
  8544  106A  0824               	movf	frexp@eptr,w
  8545  106B  0084               	movwf	4
  8546  106C  087C               	movf	??_frexp,w
  8547  106D  1383               	bcf	3,7	;select IRP bank0
  8548  106E  0080               	movwf	0
  8549  106F  0A84               	incf	4,f
  8550  1070  087D               	movf	??_frexp+1,w
  8551  1071  0080               	movwf	0
  8552  1072  0D22               	rlf	frexp@value+2,w
  8553  1073  0D22               	rlf	frexp@value+2,w
  8554  1074  3901               	andlw	1
  8555  1075  00FC               	movwf	??_frexp
  8556  1076  01FD               	clrf	??_frexp+1
  8557  1077  0824               	movf	frexp@eptr,w
  8558  1078  0084               	movwf	4
  8559  1079  087C               	movf	??_frexp,w
  8560  107A  0480               	iorwf	0,f
  8561  107B  0A84               	incf	4,f
  8562  107C  087D               	movf	??_frexp+1,w
  8563  107D  0480               	iorwf	0,f
  8564  107E  0824               	movf	frexp@eptr,w
  8565  107F  0084               	movwf	4
  8566  1080  3082               	movlw	130
  8567  1081  0780               	addwf	0,f
  8568  1082  0F84               	incfsz	4,f
  8569  1083  0800               	movf	0,w
  8570  1084  1803               	skipnc
  8571  1085  0A00               	incf	0,w
  8572  1086  00FF               	movwf	127
  8573  1087  30FF               	movlw	255
  8574  1088  077F               	addwf	127,w
  8575  1089  0080               	movwf	0
  8576  108A  0384               	decf	4,f
  8577  108B  0823               	movf	frexp@value+3,w
  8578  108C  3980               	andlw	-128
  8579  108D  383F               	iorlw	63
  8580  108E  00A3               	movwf	frexp@value+3
  8581  108F  13A2               	bcf	frexp@value+2,7
  8582  1090  0008               	return
  8583  1091                     __end_of_frexp:
  8584                           
  8585                           	psect	text37
  8586  1FB8                     __ptext37:	
  8587 ;; *************** function ___fleq *****************
  8588 ;; Defined at:
  8589 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fleq.c"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;  ff1             4    0[COMMON] PTR int 
  8592 ;;  ff2             4    4[COMMON] PTR int 
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;		None
  8595 ;; Return value:  Size  Location     Type
  8596 ;;		None               void
  8597 ;; Registers used:
  8598 ;;		wreg, status,2, status,0
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8604 ;;      Params:         8       0       0       0       0
  8605 ;;      Locals:         0       0       0       0       0
  8606 ;;      Temps:          4       0       0       0       0
  8607 ;;      Totals:        12       0       0       0       0
  8608 ;;Total ram usage:       12 bytes
  8609 ;; Hardware stack levels used: 1
  8610 ;; This function calls:
  8611 ;;		Nothing
  8612 ;; This function is called by:
  8613 ;;		_log
  8614 ;;		_frexp
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618  1FB8                     ___fleq:	
  8619                           ;psect for function ___fleq
  8620                           
  8621                           
  8622                           ;incstack = 0
  8623                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8624  1FB8  3000               	movlw	0
  8625  1FB9  0570               	andwf	___fleq@ff1,w
  8626  1FBA  00F8               	movwf	??___fleq
  8627  1FBB  3000               	movlw	0
  8628  1FBC  0571               	andwf	___fleq@ff1+1,w
  8629  1FBD  00F9               	movwf	??___fleq+1
  8630  1FBE  3080               	movlw	128
  8631  1FBF  0572               	andwf	___fleq@ff1+2,w
  8632  1FC0  00FA               	movwf	??___fleq+2
  8633  1FC1  307F               	movlw	127
  8634  1FC2  0573               	andwf	___fleq@ff1+3,w
  8635  1FC3  00FB               	movwf	??___fleq+3
  8636  1FC4  087B               	movf	??___fleq+3,w
  8637  1FC5  047A               	iorwf	??___fleq+2,w
  8638  1FC6  0479               	iorwf	??___fleq+1,w
  8639  1FC7  0478               	iorwf	??___fleq,w
  8640  1FC8  1D03               	skipz
  8641  1FC9  2FD2               	goto	i1l678
  8642  1FCA  3000               	movlw	0
  8643  1FCB  00F3               	movwf	___fleq@ff1+3
  8644  1FCC  3000               	movlw	0
  8645  1FCD  00F2               	movwf	___fleq@ff1+2
  8646  1FCE  3000               	movlw	0
  8647  1FCF  00F1               	movwf	___fleq@ff1+1
  8648  1FD0  3000               	movlw	0
  8649  1FD1  00F0               	movwf	___fleq@ff1
  8650  1FD2                     i1l678:
  8651  1FD2  3000               	movlw	0
  8652  1FD3  0574               	andwf	___fleq@ff2,w
  8653  1FD4  00F8               	movwf	??___fleq
  8654  1FD5  3000               	movlw	0
  8655  1FD6  0575               	andwf	___fleq@ff2+1,w
  8656  1FD7  00F9               	movwf	??___fleq+1
  8657  1FD8  3080               	movlw	128
  8658  1FD9  0576               	andwf	___fleq@ff2+2,w
  8659  1FDA  00FA               	movwf	??___fleq+2
  8660  1FDB  307F               	movlw	127
  8661  1FDC  0577               	andwf	___fleq@ff2+3,w
  8662  1FDD  00FB               	movwf	??___fleq+3
  8663  1FDE  087B               	movf	??___fleq+3,w
  8664  1FDF  047A               	iorwf	??___fleq+2,w
  8665  1FE0  0479               	iorwf	??___fleq+1,w
  8666  1FE1  0478               	iorwf	??___fleq,w
  8667  1FE2  1D03               	skipz
  8668  1FE3  2FEC               	goto	i1l679
  8669  1FE4  3000               	movlw	0
  8670  1FE5  00F7               	movwf	___fleq@ff2+3
  8671  1FE6  3000               	movlw	0
  8672  1FE7  00F6               	movwf	___fleq@ff2+2
  8673  1FE8  3000               	movlw	0
  8674  1FE9  00F5               	movwf	___fleq@ff2+1
  8675  1FEA  3000               	movlw	0
  8676  1FEB  00F4               	movwf	___fleq@ff2
  8677  1FEC                     i1l679:
  8678  1FEC  0877               	movf	___fleq@ff2+3,w
  8679  1FED  0673               	xorwf	___fleq@ff1+3,w
  8680  1FEE  1D03               	skipz
  8681  1FEF  2FFA               	goto	u274_25
  8682  1FF0  0876               	movf	___fleq@ff2+2,w
  8683  1FF1  0672               	xorwf	___fleq@ff1+2,w
  8684  1FF2  1D03               	skipz
  8685  1FF3  2FFA               	goto	u274_25
  8686  1FF4  0875               	movf	___fleq@ff2+1,w
  8687  1FF5  0671               	xorwf	___fleq@ff1+1,w
  8688  1FF6  1D03               	skipz
  8689  1FF7  2FFA               	goto	u274_25
  8690  1FF8  0874               	movf	___fleq@ff2,w
  8691  1FF9  0670               	xorwf	___fleq@ff1,w
  8692  1FFA                     u274_25:
  8693  1FFA  1903               	skipnz
  8694  1FFB  2FFE               	goto	i1l2733
  8695  1FFC  1003               	clrc
  8696  1FFD  0008               	return
  8697  1FFE                     i1l2733:
  8698  1FFE  1403               	setc
  8699  1FFF  0008               	return
  8700  2000                     __end_of___fleq:
  8701                           
  8702                           	psect	text38
  8703  14A9                     __ptext38:	
  8704 ;; *************** function _eval_poly *****************
  8705 ;; Defined at:
  8706 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\evalpoly.c"
  8707 ;; Parameters:    Size  Location     Type
  8708 ;;  x               4   56[BANK0 ] PTR int 
  8709 ;;  d               1   60[BANK0 ] PTR const 
  8710 ;;		 -> log@coeff(36), 
  8711 ;;  n               2   61[BANK0 ] int 
  8712 ;; Auto vars:     Size  Location     Type
  8713 ;;  res             4   68[BANK0 ] int 
  8714 ;; Return value:  Size  Location     Type
  8715 ;;                  4   56[BANK0 ] int 
  8716 ;; Registers used:
  8717 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8718 ;; Tracked objects:
  8719 ;;		On entry : 0/0
  8720 ;;		On exit  : 0/0
  8721 ;;		Unchanged: 0/0
  8722 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8723 ;;      Params:         0       7       0       0       0
  8724 ;;      Locals:         0       4       0       0       0
  8725 ;;      Temps:          0       5       0       0       0
  8726 ;;      Totals:         0      16       0       0       0
  8727 ;;Total ram usage:       16 bytes
  8728 ;; Hardware stack levels used: 1
  8729 ;; Hardware stack levels required when called: 2
  8730 ;; This function calls:
  8731 ;;		___fladd
  8732 ;;		___flmul
  8733 ;; This function is called by:
  8734 ;;		_log
  8735 ;; This function uses a non-reentrant model
  8736 ;;
  8737                           
  8738  14A9                     _eval_poly:	
  8739                           ;psect for function _eval_poly
  8740                           
  8741                           
  8742                           ;incstack = 0
  8743 ;; using string table level
  8744                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8745  14A9  1283               	bcf	3,5	;RP0=0, select bank0
  8746  14AA  1303               	bcf	3,6	;RP1=0, select bank0
  8747  14AB  085D               	movf	eval_poly@n,w
  8748  14AC  00DF               	movwf	??_eval_poly
  8749  14AD  3001               	movlw	1
  8750  14AE                     u438_25:
  8751  14AE  1003               	clrc
  8752  14AF  0DDF               	rlf	??_eval_poly,f
  8753  14B0  3EFF               	addlw	-1
  8754  14B1  1D03               	skipz
  8755  14B2  2CAE               	goto	u438_25
  8756  14B3  1003               	clrc
  8757  14B4  0D5F               	rlf	??_eval_poly,w
  8758  14B5  075C               	addwf	eval_poly@d,w
  8759  14B6  0084               	movwf	4
  8760  14B7  160A  158A  2000  160A  118A  	fcall	stringdir
  8761  14BC  00E0               	movwf	??_eval_poly+1
  8762  14BD  160A  158A  2000  160A  118A  	fcall	stringdir
  8763  14C2  00E1               	movwf	??_eval_poly+2
  8764  14C3  160A  158A  2000  160A  118A  	fcall	stringdir
  8765  14C8  00E2               	movwf	??_eval_poly+3
  8766  14C9  160A  158A  2000  160A  118A  	fcall	stringdir
  8767  14CE  00E3               	movwf	??_eval_poly+4
  8768  14CF  0863               	movf	??_eval_poly+4,w
  8769  14D0  00E7               	movwf	eval_poly@res+3
  8770  14D1  0862               	movf	??_eval_poly+3,w
  8771  14D2  00E6               	movwf	eval_poly@res+2
  8772  14D3  0861               	movf	??_eval_poly+2,w
  8773  14D4  00E5               	movwf	eval_poly@res+1
  8774  14D5  0860               	movf	??_eval_poly+1,w
  8775  14D6                     L23:
  8776  14D6  00E4               	movwf	eval_poly@res
  8777  14D7  085D               	movf	eval_poly@n,w
  8778  14D8  045E               	iorwf	eval_poly@n+1,w
  8779  14D9  1903               	btfsc	3,2
  8780  14DA  2D3B               	goto	i1l3577
  8781  14DB  30FF               	movlw	255
  8782  14DC  07DD               	addwf	eval_poly@n,f
  8783  14DD  1803               	skipnc
  8784  14DE  0ADE               	incf	eval_poly@n+1,f
  8785  14DF  30FF               	movlw	255
  8786  14E0  07DE               	addwf	eval_poly@n+1,f
  8787  14E1  085D               	movf	eval_poly@n,w
  8788  14E2  00DF               	movwf	??_eval_poly
  8789  14E3  3001               	movlw	1
  8790  14E4                     u439_25:
  8791  14E4  1003               	clrc
  8792  14E5  0DDF               	rlf	??_eval_poly,f
  8793  14E6  3EFF               	addlw	-1
  8794  14E7  1D03               	skipz
  8795  14E8  2CE4               	goto	u439_25
  8796  14E9  1003               	clrc
  8797  14EA  0D5F               	rlf	??_eval_poly,w
  8798  14EB  075C               	addwf	eval_poly@d,w
  8799  14EC  0084               	movwf	4
  8800  14ED  160A  158A  2000  160A  118A  	fcall	stringdir
  8801  14F2  00E0               	movwf	??_eval_poly+1
  8802  14F3  160A  158A  2000  160A  118A  	fcall	stringdir
  8803  14F8  00E1               	movwf	??_eval_poly+2
  8804  14F9  160A  158A  2000  160A  118A  	fcall	stringdir
  8805  14FE  00E2               	movwf	??_eval_poly+3
  8806  14FF  160A  158A  2000  160A  118A  	fcall	stringdir
  8807  1504  00E3               	movwf	??_eval_poly+4
  8808  1505  0863               	movf	??_eval_poly+4,w
  8809  1506  00AD               	movwf	___fladd@b+3
  8810  1507  0862               	movf	??_eval_poly+3,w
  8811  1508  00AC               	movwf	___fladd@b+2
  8812  1509  0861               	movf	??_eval_poly+2,w
  8813  150A  00AB               	movwf	___fladd@b+1
  8814  150B  0860               	movf	??_eval_poly+1,w
  8815  150C  00AA               	movwf	___fladd@b
  8816  150D  0867               	movf	eval_poly@res+3,w
  8817  150E  00C1               	movwf	___flmul@b+3
  8818  150F  0866               	movf	eval_poly@res+2,w
  8819  1510  00C0               	movwf	___flmul@b+2
  8820  1511  0865               	movf	eval_poly@res+1,w
  8821  1512  00BF               	movwf	___flmul@b+1
  8822  1513  0864               	movf	eval_poly@res,w
  8823  1514  00BE               	movwf	___flmul@b
  8824  1515  085B               	movf	eval_poly@x+3,w
  8825  1516  00C5               	movwf	___flmul@a+3
  8826  1517  085A               	movf	eval_poly@x+2,w
  8827  1518  00C4               	movwf	___flmul@a+2
  8828  1519  0859               	movf	eval_poly@x+1,w
  8829  151A  00C3               	movwf	___flmul@a+1
  8830  151B  0858               	movf	eval_poly@x,w
  8831  151C  00C2               	movwf	___flmul@a
  8832  151D  120A  118A  237E  160A  118A  	fcall	___flmul
  8833  1522  1283               	bcf	3,5	;RP0=0, select bank0
  8834  1523  1303               	bcf	3,6	;RP1=0, select bank0
  8835  1524  0841               	movf	?___flmul+3,w
  8836  1525  00B1               	movwf	___fladd@a+3
  8837  1526  0840               	movf	?___flmul+2,w
  8838  1527  00B0               	movwf	___fladd@a+2
  8839  1528  083F               	movf	?___flmul+1,w
  8840  1529  00AF               	movwf	___fladd@a+1
  8841  152A  083E               	movf	?___flmul,w
  8842  152B  00AE               	movwf	___fladd@a
  8843  152C  120A  158A  2109  160A  118A  	fcall	___fladd
  8844  1531  1283               	bcf	3,5	;RP0=0, select bank0
  8845  1532  1303               	bcf	3,6	;RP1=0, select bank0
  8846  1533  082D               	movf	?___fladd+3,w
  8847  1534  00E7               	movwf	eval_poly@res+3
  8848  1535  082C               	movf	?___fladd+2,w
  8849  1536  00E6               	movwf	eval_poly@res+2
  8850  1537  082B               	movf	?___fladd+1,w
  8851  1538  00E5               	movwf	eval_poly@res+1
  8852  1539  082A               	movf	?___fladd,w
  8853  153A  2CD6               	goto	L23
  8854  153B                     i1l3577:
  8855  153B  0867               	movf	eval_poly@res+3,w
  8856  153C  00DB               	movwf	?_eval_poly+3
  8857  153D  0866               	movf	eval_poly@res+2,w
  8858  153E  00DA               	movwf	?_eval_poly+2
  8859  153F  0865               	movf	eval_poly@res+1,w
  8860  1540  00D9               	movwf	?_eval_poly+1
  8861  1541  0864               	movf	eval_poly@res,w
  8862  1542  00D8               	movwf	?_eval_poly
  8863  1543  0008               	return
  8864  1544                     __end_of_eval_poly:
  8865                           
  8866                           	psect	text39
  8867  037E                     __ptext39:	
  8868 ;; *************** function ___flmul *****************
  8869 ;; Defined at:
  8870 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcmul.c"
  8871 ;; Parameters:    Size  Location     Type
  8872 ;;  b               4   30[BANK0 ] int 
  8873 ;;  a               4   34[BANK0 ] int 
  8874 ;; Auto vars:     Size  Location     Type
  8875 ;;  prod            4   50[BANK0 ] struct .
  8876 ;;  grs             4   44[BANK0 ] unsigned long 
  8877 ;;  temp            2   54[BANK0 ] struct .
  8878 ;;  bexp            1   49[BANK0 ] unsigned char 
  8879 ;;  aexp            1   48[BANK0 ] unsigned char 
  8880 ;;  sign            1   43[BANK0 ] unsigned char 
  8881 ;; Return value:  Size  Location     Type
  8882 ;;                  4   30[BANK0 ] unsigned char 
  8883 ;; Registers used:
  8884 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8885 ;; Tracked objects:
  8886 ;;		On entry : 0/0
  8887 ;;		On exit  : 0/0
  8888 ;;		Unchanged: 0/0
  8889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8890 ;;      Params:         0       8       0       0       0
  8891 ;;      Locals:         0      13       0       0       0
  8892 ;;      Temps:          0       5       0       0       0
  8893 ;;      Totals:         0      26       0       0       0
  8894 ;;Total ram usage:       26 bytes
  8895 ;; Hardware stack levels used: 1
  8896 ;; Hardware stack levels required when called: 1
  8897 ;; This function calls:
  8898 ;;		__Umul8_16
  8899 ;; This function is called by:
  8900 ;;		_slave
  8901 ;;		_map
  8902 ;;		_log
  8903 ;;		_eval_poly
  8904 ;; This function uses a non-reentrant model
  8905 ;;
  8906                           
  8907  037E                     ___flmul:	
  8908                           ;psect for function ___flmul
  8909                           
  8910                           
  8911                           ;incstack = 0
  8912                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8913  037E  1283               	bcf	3,5	;RP0=0, select bank0
  8914  037F  1303               	bcf	3,6	;RP1=0, select bank0
  8915  0380  0841               	movf	___flmul@b+3,w
  8916  0381  3980               	andlw	128
  8917  0382  00C6               	movwf	??___flmul
  8918  0383  0846               	movf	??___flmul,w
  8919  0384  00CB               	movwf	___flmul@sign
  8920  0385  0841               	movf	___flmul@b+3,w
  8921  0386  00C6               	movwf	??___flmul
  8922  0387  0746               	addwf	??___flmul,w
  8923  0388  00C7               	movwf	??___flmul+1
  8924  0389  0847               	movf	??___flmul+1,w
  8925  038A  00D1               	movwf	___flmul@bexp
  8926  038B  1BC0               	btfsc	___flmul@b+2,7
  8927  038C  1451               	bsf	___flmul@bexp,0
  8928  038D  0851               	movf	___flmul@bexp,w
  8929  038E  1903               	btfsc	3,2
  8930  038F  2B9D               	goto	i1l2947
  8931  0390  0A51               	incf	___flmul@bexp,w
  8932  0391  1D03               	btfss	3,2
  8933  0392  2B9B               	goto	i1l2945
  8934  0393  3000               	movlw	0
  8935  0394  00C1               	movwf	___flmul@b+3
  8936  0395  3000               	movlw	0
  8937  0396  00C0               	movwf	___flmul@b+2
  8938  0397  3000               	movlw	0
  8939  0398  00BF               	movwf	___flmul@b+1
  8940  0399  3000               	movlw	0
  8941  039A  00BE               	movwf	___flmul@b
  8942  039B                     i1l2945:
  8943  039B  17C0               	bsf	___flmul@b+2,7
  8944  039C  2BA5               	goto	i1l2949
  8945  039D                     i1l2947:
  8946  039D  3000               	movlw	0
  8947  039E  00C1               	movwf	___flmul@b+3
  8948  039F  3000               	movlw	0
  8949  03A0  00C0               	movwf	___flmul@b+2
  8950  03A1  3000               	movlw	0
  8951  03A2  00BF               	movwf	___flmul@b+1
  8952  03A3  3000               	movlw	0
  8953  03A4  00BE               	movwf	___flmul@b
  8954  03A5                     i1l2949:
  8955  03A5  0845               	movf	___flmul@a+3,w
  8956  03A6  3980               	andlw	128
  8957  03A7  00C6               	movwf	??___flmul
  8958  03A8  0846               	movf	??___flmul,w
  8959  03A9  06CB               	xorwf	___flmul@sign,f
  8960  03AA  0845               	movf	___flmul@a+3,w
  8961  03AB  00C6               	movwf	??___flmul
  8962  03AC  0746               	addwf	??___flmul,w
  8963  03AD  00C7               	movwf	??___flmul+1
  8964  03AE  0847               	movf	??___flmul+1,w
  8965  03AF  00D0               	movwf	___flmul@aexp
  8966  03B0  1BC4               	btfsc	___flmul@a+2,7
  8967  03B1  1450               	bsf	___flmul@aexp,0
  8968  03B2  0850               	movf	___flmul@aexp,w
  8969  03B3  1903               	btfsc	3,2
  8970  03B4  2BC2               	goto	i1l2965
  8971  03B5  0A50               	incf	___flmul@aexp,w
  8972  03B6  1D03               	btfss	3,2
  8973  03B7  2BC0               	goto	i1l2963
  8974  03B8  3000               	movlw	0
  8975  03B9  00C5               	movwf	___flmul@a+3
  8976  03BA  3000               	movlw	0
  8977  03BB  00C4               	movwf	___flmul@a+2
  8978  03BC  3000               	movlw	0
  8979  03BD  00C3               	movwf	___flmul@a+1
  8980  03BE  3000               	movlw	0
  8981  03BF  00C2               	movwf	___flmul@a
  8982  03C0                     i1l2963:
  8983  03C0  17C4               	bsf	___flmul@a+2,7
  8984  03C1  2BCA               	goto	i1l2967
  8985  03C2                     i1l2965:
  8986  03C2  3000               	movlw	0
  8987  03C3  00C5               	movwf	___flmul@a+3
  8988  03C4  3000               	movlw	0
  8989  03C5  00C4               	movwf	___flmul@a+2
  8990  03C6  3000               	movlw	0
  8991  03C7  00C3               	movwf	___flmul@a+1
  8992  03C8  3000               	movlw	0
  8993  03C9  00C2               	movwf	___flmul@a
  8994  03CA                     i1l2967:
  8995  03CA  0850               	movf	___flmul@aexp,w
  8996  03CB  1D03               	btfss	3,2
  8997  03CC  0851               	movf	___flmul@bexp,w
  8998  03CD  1D03               	btfss	3,2
  8999  03CE  2BD8               	goto	i1l2975
  9000  03CF  3000               	movlw	0
  9001  03D0  00C1               	movwf	?___flmul+3
  9002  03D1  3000               	movlw	0
  9003  03D2  00C0               	movwf	?___flmul+2
  9004  03D3  3000               	movlw	0
  9005  03D4  00BF               	movwf	?___flmul+1
  9006  03D5  3000               	movlw	0
  9007  03D6  00BE               	movwf	?___flmul
  9008  03D7  0008               	return
  9009  03D8                     i1l2975:
  9010  03D8  083E               	movf	___flmul@b,w
  9011  03D9  00C6               	movwf	??___flmul
  9012  03DA  0846               	movf	??___flmul,w
  9013  03DB  00F0               	movwf	__Umul8_16@multiplicand
  9014  03DC  0844               	movf	___flmul@a+2,w
  9015  03DD  120A  158A  2001  120A  118A  	fcall	__Umul8_16
  9016  03E2  0871               	movf	?__Umul8_16+1,w
  9017  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  9018  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  9019  03E5  00D7               	movwf	___flmul@temp+1
  9020  03E6  0870               	movf	?__Umul8_16,w
  9021  03E7  00D6               	movwf	___flmul@temp
  9022  03E8  0856               	movf	___flmul@temp,w
  9023  03E9  00C6               	movwf	??___flmul
  9024  03EA  01C7               	clrf	??___flmul+1
  9025  03EB  01C8               	clrf	??___flmul+2
  9026  03EC  01C9               	clrf	??___flmul+3
  9027  03ED  0849               	movf	??___flmul+3,w
  9028  03EE  00CF               	movwf	___flmul@grs+3
  9029  03EF  0848               	movf	??___flmul+2,w
  9030  03F0  00CE               	movwf	___flmul@grs+2
  9031  03F1  0847               	movf	??___flmul+1,w
  9032  03F2  00CD               	movwf	___flmul@grs+1
  9033  03F3  0846               	movf	??___flmul,w
  9034  03F4  00CC               	movwf	___flmul@grs
  9035  03F5  0857               	movf	___flmul@temp+1,w
  9036  03F6  00C6               	movwf	??___flmul
  9037  03F7  01C7               	clrf	??___flmul+1
  9038  03F8  01C8               	clrf	??___flmul+2
  9039  03F9  01C9               	clrf	??___flmul+3
  9040  03FA  0849               	movf	??___flmul+3,w
  9041  03FB  00D5               	movwf	___flmul@prod+3
  9042  03FC  0848               	movf	??___flmul+2,w
  9043  03FD  00D4               	movwf	___flmul@prod+2
  9044  03FE  0847               	movf	??___flmul+1,w
  9045  03FF  00D3               	movwf	___flmul@prod+1
  9046  0400  0846               	movf	??___flmul,w
  9047  0401  00D2               	movwf	___flmul@prod
  9048  0402  083F               	movf	___flmul@b+1,w
  9049  0403  00C6               	movwf	??___flmul
  9050  0404  0846               	movf	??___flmul,w
  9051  0405  00F0               	movwf	__Umul8_16@multiplicand
  9052  0406  0843               	movf	___flmul@a+1,w
  9053  0407  120A  158A  2001  120A  118A  	fcall	__Umul8_16
  9054  040C  0871               	movf	?__Umul8_16+1,w
  9055  040D  1283               	bcf	3,5	;RP0=0, select bank0
  9056  040E  1303               	bcf	3,6	;RP1=0, select bank0
  9057  040F  00D7               	movwf	___flmul@temp+1
  9058  0410  0870               	movf	?__Umul8_16,w
  9059  0411  00D6               	movwf	___flmul@temp
  9060  0412  0856               	movf	___flmul@temp,w
  9061  0413  00C6               	movwf	??___flmul
  9062  0414  01C7               	clrf	??___flmul+1
  9063  0415  01C8               	clrf	??___flmul+2
  9064  0416  01C9               	clrf	??___flmul+3
  9065  0417  0846               	movf	??___flmul,w
  9066  0418  07CC               	addwf	___flmul@grs,f
  9067  0419  0847               	movf	??___flmul+1,w
  9068  041A  1103               	clrz
  9069  041B  1803               	skipnc
  9070  041C  3E01               	addlw	1
  9071  041D  1D03               	btfss	3,2
  9072  041E  07CD               	addwf	___flmul@grs+1,f
  9073  041F  0848               	movf	??___flmul+2,w
  9074  0420  1103               	clrz
  9075  0421  1803               	skipnc
  9076  0422  3E01               	addlw	1
  9077  0423  1D03               	btfss	3,2
  9078  0424  07CE               	addwf	___flmul@grs+2,f
  9079  0425  0849               	movf	??___flmul+3,w
  9080  0426  1103               	clrz
  9081  0427  1803               	skipnc
  9082  0428  3E01               	addlw	1
  9083  0429  1D03               	btfss	3,2
  9084  042A  07CF               	addwf	___flmul@grs+3,f
  9085  042B  0857               	movf	___flmul@temp+1,w
  9086  042C  00C6               	movwf	??___flmul
  9087  042D  01C7               	clrf	??___flmul+1
  9088  042E  01C8               	clrf	??___flmul+2
  9089  042F  01C9               	clrf	??___flmul+3
  9090  0430  0846               	movf	??___flmul,w
  9091  0431  07D2               	addwf	___flmul@prod,f
  9092  0432  0847               	movf	??___flmul+1,w
  9093  0433  1103               	clrz
  9094  0434  1803               	skipnc
  9095  0435  3E01               	addlw	1
  9096  0436  1D03               	btfss	3,2
  9097  0437  07D3               	addwf	___flmul@prod+1,f
  9098  0438  0848               	movf	??___flmul+2,w
  9099  0439  1103               	clrz
  9100  043A  1803               	skipnc
  9101  043B  3E01               	addlw	1
  9102  043C  1D03               	btfss	3,2
  9103  043D  07D4               	addwf	___flmul@prod+2,f
  9104  043E  0849               	movf	??___flmul+3,w
  9105  043F  1103               	clrz
  9106  0440  1803               	skipnc
  9107  0441  3E01               	addlw	1
  9108  0442  1D03               	btfss	3,2
  9109  0443  07D5               	addwf	___flmul@prod+3,f
  9110  0444  0840               	movf	___flmul@b+2,w
  9111  0445  00C6               	movwf	??___flmul
  9112  0446  0846               	movf	??___flmul,w
  9113  0447  00F0               	movwf	__Umul8_16@multiplicand
  9114  0448  0842               	movf	___flmul@a,w
  9115  0449  120A  158A  2001  120A  118A  	fcall	__Umul8_16
  9116  044E  0871               	movf	?__Umul8_16+1,w
  9117  044F  1283               	bcf	3,5	;RP0=0, select bank0
  9118  0450  1303               	bcf	3,6	;RP1=0, select bank0
  9119  0451  00D7               	movwf	___flmul@temp+1
  9120  0452  0870               	movf	?__Umul8_16,w
  9121  0453  00D6               	movwf	___flmul@temp
  9122  0454  0856               	movf	___flmul@temp,w
  9123  0455  00C6               	movwf	??___flmul
  9124  0456  01C7               	clrf	??___flmul+1
  9125  0457  01C8               	clrf	??___flmul+2
  9126  0458  01C9               	clrf	??___flmul+3
  9127  0459  0846               	movf	??___flmul,w
  9128  045A  07CC               	addwf	___flmul@grs,f
  9129  045B  0847               	movf	??___flmul+1,w
  9130  045C  1103               	clrz
  9131  045D  1803               	skipnc
  9132  045E  3E01               	addlw	1
  9133  045F  1D03               	btfss	3,2
  9134  0460  07CD               	addwf	___flmul@grs+1,f
  9135  0461  0848               	movf	??___flmul+2,w
  9136  0462  1103               	clrz
  9137  0463  1803               	skipnc
  9138  0464  3E01               	addlw	1
  9139  0465  1D03               	btfss	3,2
  9140  0466  07CE               	addwf	___flmul@grs+2,f
  9141  0467  0849               	movf	??___flmul+3,w
  9142  0468  1103               	clrz
  9143  0469  1803               	skipnc
  9144  046A  3E01               	addlw	1
  9145  046B  1D03               	btfss	3,2
  9146  046C  07CF               	addwf	___flmul@grs+3,f
  9147  046D  0857               	movf	___flmul@temp+1,w
  9148  046E  00C6               	movwf	??___flmul
  9149  046F  01C7               	clrf	??___flmul+1
  9150  0470  01C8               	clrf	??___flmul+2
  9151  0471  01C9               	clrf	??___flmul+3
  9152  0472  0846               	movf	??___flmul,w
  9153  0473  07D2               	addwf	___flmul@prod,f
  9154  0474  0847               	movf	??___flmul+1,w
  9155  0475  1103               	clrz
  9156  0476  1803               	skipnc
  9157  0477  3E01               	addlw	1
  9158  0478  1D03               	btfss	3,2
  9159  0479  07D3               	addwf	___flmul@prod+1,f
  9160  047A  0848               	movf	??___flmul+2,w
  9161  047B  1103               	clrz
  9162  047C  1803               	skipnc
  9163  047D  3E01               	addlw	1
  9164  047E  1D03               	btfss	3,2
  9165  047F  07D4               	addwf	___flmul@prod+2,f
  9166  0480  0849               	movf	??___flmul+3,w
  9167  0481  1103               	clrz
  9168  0482  1803               	skipnc
  9169  0483  3E01               	addlw	1
  9170  0484  1D03               	btfss	3,2
  9171  0485  07D5               	addwf	___flmul@prod+3,f
  9172  0486  3008               	movlw	8
  9173  0487  00C6               	movwf	??___flmul
  9174  0488                     u333_25:
  9175  0488  1003               	clrc
  9176  0489  0DCC               	rlf	___flmul@grs,f
  9177  048A  0DCD               	rlf	___flmul@grs+1,f
  9178  048B  0DCE               	rlf	___flmul@grs+2,f
  9179  048C  0DCF               	rlf	___flmul@grs+3,f
  9180  048D  0BC6               	decfsz	??___flmul,f
  9181  048E  2C88               	goto	u333_25
  9182  048F  083F               	movf	___flmul@b+1,w
  9183  0490  00C6               	movwf	??___flmul
  9184  0491  0846               	movf	??___flmul,w
  9185  0492  00F0               	movwf	__Umul8_16@multiplicand
  9186  0493  0842               	movf	___flmul@a,w
  9187  0494  120A  158A  2001  120A  118A  	fcall	__Umul8_16
  9188  0499  0871               	movf	?__Umul8_16+1,w
  9189  049A  1283               	bcf	3,5	;RP0=0, select bank0
  9190  049B  1303               	bcf	3,6	;RP1=0, select bank0
  9191  049C  00D7               	movwf	___flmul@temp+1
  9192  049D  0870               	movf	?__Umul8_16,w
  9193  049E  00D6               	movwf	___flmul@temp
  9194  049F  0856               	movf	___flmul@temp,w
  9195  04A0  00C6               	movwf	??___flmul
  9196  04A1  0857               	movf	___flmul@temp+1,w
  9197  04A2  00C7               	movwf	??___flmul+1
  9198  04A3  01C8               	clrf	??___flmul+2
  9199  04A4  01C9               	clrf	??___flmul+3
  9200  04A5  0846               	movf	??___flmul,w
  9201  04A6  07CC               	addwf	___flmul@grs,f
  9202  04A7  0847               	movf	??___flmul+1,w
  9203  04A8  1103               	clrz
  9204  04A9  1803               	skipnc
  9205  04AA  3E01               	addlw	1
  9206  04AB  1D03               	btfss	3,2
  9207  04AC  07CD               	addwf	___flmul@grs+1,f
  9208  04AD  0848               	movf	??___flmul+2,w
  9209  04AE  1103               	clrz
  9210  04AF  1803               	skipnc
  9211  04B0  3E01               	addlw	1
  9212  04B1  1D03               	btfss	3,2
  9213  04B2  07CE               	addwf	___flmul@grs+2,f
  9214  04B3  0849               	movf	??___flmul+3,w
  9215  04B4  1103               	clrz
  9216  04B5  1803               	skipnc
  9217  04B6  3E01               	addlw	1
  9218  04B7  1D03               	btfss	3,2
  9219  04B8  07CF               	addwf	___flmul@grs+3,f
  9220  04B9  083E               	movf	___flmul@b,w
  9221  04BA  00C6               	movwf	??___flmul
  9222  04BB  0846               	movf	??___flmul,w
  9223  04BC  00F0               	movwf	__Umul8_16@multiplicand
  9224  04BD  0843               	movf	___flmul@a+1,w
  9225  04BE  120A  158A  2001  120A  118A  	fcall	__Umul8_16
  9226  04C3  0871               	movf	?__Umul8_16+1,w
  9227  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  9228  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  9229  04C6  00D7               	movwf	___flmul@temp+1
  9230  04C7  0870               	movf	?__Umul8_16,w
  9231  04C8  00D6               	movwf	___flmul@temp
  9232  04C9  0856               	movf	___flmul@temp,w
  9233  04CA  00C6               	movwf	??___flmul
  9234  04CB  0857               	movf	___flmul@temp+1,w
  9235  04CC  00C7               	movwf	??___flmul+1
  9236  04CD  01C8               	clrf	??___flmul+2
  9237  04CE  01C9               	clrf	??___flmul+3
  9238  04CF  0846               	movf	??___flmul,w
  9239  04D0  07CC               	addwf	___flmul@grs,f
  9240  04D1  0847               	movf	??___flmul+1,w
  9241  04D2  1103               	clrz
  9242  04D3  1803               	skipnc
  9243  04D4  3E01               	addlw	1
  9244  04D5  1D03               	btfss	3,2
  9245  04D6  07CD               	addwf	___flmul@grs+1,f
  9246  04D7  0848               	movf	??___flmul+2,w
  9247  04D8  1103               	clrz
  9248  04D9  1803               	skipnc
  9249  04DA  3E01               	addlw	1
  9250  04DB  1D03               	btfss	3,2
  9251  04DC  07CE               	addwf	___flmul@grs+2,f
  9252  04DD  0849               	movf	??___flmul+3,w
  9253  04DE  1103               	clrz
  9254  04DF  1803               	skipnc
  9255  04E0  3E01               	addlw	1
  9256  04E1  1D03               	btfss	3,2
  9257  04E2  07CF               	addwf	___flmul@grs+3,f
  9258  04E3  3008               	movlw	8
  9259  04E4  00C6               	movwf	??___flmul
  9260  04E5                     u336_25:
  9261  04E5  1003               	clrc
  9262  04E6  0DCC               	rlf	___flmul@grs,f
  9263  04E7  0DCD               	rlf	___flmul@grs+1,f
  9264  04E8  0DCE               	rlf	___flmul@grs+2,f
  9265  04E9  0DCF               	rlf	___flmul@grs+3,f
  9266  04EA  0BC6               	decfsz	??___flmul,f
  9267  04EB  2CE5               	goto	u336_25
  9268  04EC  083E               	movf	___flmul@b,w
  9269  04ED  00C6               	movwf	??___flmul
  9270  04EE  0846               	movf	??___flmul,w
  9271  04EF  00F0               	movwf	__Umul8_16@multiplicand
  9272  04F0  0842               	movf	___flmul@a,w
  9273  04F1  120A  158A  2001  120A  118A  	fcall	__Umul8_16
  9274  04F6  0871               	movf	?__Umul8_16+1,w
  9275  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  9276  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  9277  04F9  00D7               	movwf	___flmul@temp+1
  9278  04FA  0870               	movf	?__Umul8_16,w
  9279  04FB  00D6               	movwf	___flmul@temp
  9280  04FC  0856               	movf	___flmul@temp,w
  9281  04FD  00C6               	movwf	??___flmul
  9282  04FE  0857               	movf	___flmul@temp+1,w
  9283  04FF  00C7               	movwf	??___flmul+1
  9284  0500  01C8               	clrf	??___flmul+2
  9285  0501  01C9               	clrf	??___flmul+3
  9286  0502  0846               	movf	??___flmul,w
  9287  0503  07CC               	addwf	___flmul@grs,f
  9288  0504  0847               	movf	??___flmul+1,w
  9289  0505  1103               	clrz
  9290  0506  1803               	skipnc
  9291  0507  3E01               	addlw	1
  9292  0508  1D03               	btfss	3,2
  9293  0509  07CD               	addwf	___flmul@grs+1,f
  9294  050A  0848               	movf	??___flmul+2,w
  9295  050B  1103               	clrz
  9296  050C  1803               	skipnc
  9297  050D  3E01               	addlw	1
  9298  050E  1D03               	btfss	3,2
  9299  050F  07CE               	addwf	___flmul@grs+2,f
  9300  0510  0849               	movf	??___flmul+3,w
  9301  0511  1103               	clrz
  9302  0512  1803               	skipnc
  9303  0513  3E01               	addlw	1
  9304  0514  1D03               	btfss	3,2
  9305  0515  07CF               	addwf	___flmul@grs+3,f
  9306  0516  083F               	movf	___flmul@b+1,w
  9307  0517  00C6               	movwf	??___flmul
  9308  0518  0846               	movf	??___flmul,w
  9309  0519  00F0               	movwf	__Umul8_16@multiplicand
  9310  051A  0844               	movf	___flmul@a+2,w
  9311  051B  120A  158A  2001  120A  118A  	fcall	__Umul8_16
  9312  0520  0871               	movf	?__Umul8_16+1,w
  9313  0521  1283               	bcf	3,5	;RP0=0, select bank0
  9314  0522  1303               	bcf	3,6	;RP1=0, select bank0
  9315  0523  00D7               	movwf	___flmul@temp+1
  9316  0524  0870               	movf	?__Umul8_16,w
  9317  0525  00D6               	movwf	___flmul@temp
  9318  0526  0856               	movf	___flmul@temp,w
  9319  0527  00C6               	movwf	??___flmul
  9320  0528  0857               	movf	___flmul@temp+1,w
  9321  0529  00C7               	movwf	??___flmul+1
  9322  052A  01C8               	clrf	??___flmul+2
  9323  052B  01C9               	clrf	??___flmul+3
  9324  052C  0846               	movf	??___flmul,w
  9325  052D  07D2               	addwf	___flmul@prod,f
  9326  052E  0847               	movf	??___flmul+1,w
  9327  052F  1103               	clrz
  9328  0530  1803               	skipnc
  9329  0531  3E01               	addlw	1
  9330  0532  1D03               	btfss	3,2
  9331  0533  07D3               	addwf	___flmul@prod+1,f
  9332  0534  0848               	movf	??___flmul+2,w
  9333  0535  1103               	clrz
  9334  0536  1803               	skipnc
  9335  0537  3E01               	addlw	1
  9336  0538  1D03               	btfss	3,2
  9337  0539  07D4               	addwf	___flmul@prod+2,f
  9338  053A  0849               	movf	??___flmul+3,w
  9339  053B  1103               	clrz
  9340  053C  1803               	skipnc
  9341  053D  3E01               	addlw	1
  9342  053E  1D03               	btfss	3,2
  9343  053F  07D5               	addwf	___flmul@prod+3,f
  9344  0540  0840               	movf	___flmul@b+2,w
  9345  0541  00C6               	movwf	??___flmul
  9346  0542  0846               	movf	??___flmul,w
  9347  0543  00F0               	movwf	__Umul8_16@multiplicand
  9348  0544  0843               	movf	___flmul@a+1,w
  9349  0545  120A  158A  2001  120A  118A  	fcall	__Umul8_16
  9350  054A  0871               	movf	?__Umul8_16+1,w
  9351  054B  1283               	bcf	3,5	;RP0=0, select bank0
  9352  054C  1303               	bcf	3,6	;RP1=0, select bank0
  9353  054D  00D7               	movwf	___flmul@temp+1
  9354  054E  0870               	movf	?__Umul8_16,w
  9355  054F  00D6               	movwf	___flmul@temp
  9356  0550  0856               	movf	___flmul@temp,w
  9357  0551  00C6               	movwf	??___flmul
  9358  0552  0857               	movf	___flmul@temp+1,w
  9359  0553  00C7               	movwf	??___flmul+1
  9360  0554  01C8               	clrf	??___flmul+2
  9361  0555  01C9               	clrf	??___flmul+3
  9362  0556  0846               	movf	??___flmul,w
  9363  0557  07D2               	addwf	___flmul@prod,f
  9364  0558  0847               	movf	??___flmul+1,w
  9365  0559  1103               	clrz
  9366  055A  1803               	skipnc
  9367  055B  3E01               	addlw	1
  9368  055C  1D03               	btfss	3,2
  9369  055D  07D3               	addwf	___flmul@prod+1,f
  9370  055E  0848               	movf	??___flmul+2,w
  9371  055F  1103               	clrz
  9372  0560  1803               	skipnc
  9373  0561  3E01               	addlw	1
  9374  0562  1D03               	btfss	3,2
  9375  0563  07D4               	addwf	___flmul@prod+2,f
  9376  0564  0849               	movf	??___flmul+3,w
  9377  0565  1103               	clrz
  9378  0566  1803               	skipnc
  9379  0567  3E01               	addlw	1
  9380  0568  1D03               	btfss	3,2
  9381  0569  07D5               	addwf	___flmul@prod+3,f
  9382  056A  0840               	movf	___flmul@b+2,w
  9383  056B  00C6               	movwf	??___flmul
  9384  056C  0846               	movf	??___flmul,w
  9385  056D  00F0               	movwf	__Umul8_16@multiplicand
  9386  056E  0844               	movf	___flmul@a+2,w
  9387  056F  120A  158A  2001  120A  118A  	fcall	__Umul8_16
  9388  0574  0871               	movf	?__Umul8_16+1,w
  9389  0575  1283               	bcf	3,5	;RP0=0, select bank0
  9390  0576  1303               	bcf	3,6	;RP1=0, select bank0
  9391  0577  00D7               	movwf	___flmul@temp+1
  9392  0578  0870               	movf	?__Umul8_16,w
  9393  0579  00D6               	movwf	___flmul@temp
  9394  057A  0856               	movf	___flmul@temp,w
  9395  057B  00C6               	movwf	??___flmul
  9396  057C  0857               	movf	___flmul@temp+1,w
  9397  057D  00C7               	movwf	??___flmul+1
  9398  057E  01C8               	clrf	??___flmul+2
  9399  057F  01C9               	clrf	??___flmul+3
  9400  0580  3008               	movlw	8
  9401  0581                     u340_25:
  9402  0581  1003               	clrc
  9403  0582  0DC6               	rlf	??___flmul,f
  9404  0583  0DC7               	rlf	??___flmul+1,f
  9405  0584  0DC8               	rlf	??___flmul+2,f
  9406  0585  0DC9               	rlf	??___flmul+3,f
  9407  0586  3EFF               	addlw	-1
  9408  0587  1D03               	skipz
  9409  0588  2D81               	goto	u340_25
  9410  0589  0846               	movf	??___flmul,w
  9411  058A  07D2               	addwf	___flmul@prod,f
  9412  058B  0847               	movf	??___flmul+1,w
  9413  058C  1103               	clrz
  9414  058D  1803               	skipnc
  9415  058E  3E01               	addlw	1
  9416  058F  1D03               	btfss	3,2
  9417  0590  07D3               	addwf	___flmul@prod+1,f
  9418  0591  0848               	movf	??___flmul+2,w
  9419  0592  1103               	clrz
  9420  0593  1803               	skipnc
  9421  0594  3E01               	addlw	1
  9422  0595  1D03               	btfss	3,2
  9423  0596  07D4               	addwf	___flmul@prod+2,f
  9424  0597  0849               	movf	??___flmul+3,w
  9425  0598  1103               	clrz
  9426  0599  1803               	skipnc
  9427  059A  3E01               	addlw	1
  9428  059B  1D03               	btfss	3,2
  9429  059C  07D5               	addwf	___flmul@prod+3,f
  9430  059D  084C               	movf	___flmul@grs,w
  9431  059E  00C6               	movwf	??___flmul
  9432  059F  084D               	movf	___flmul@grs+1,w
  9433  05A0  00C7               	movwf	??___flmul+1
  9434  05A1  084E               	movf	___flmul@grs+2,w
  9435  05A2  00C8               	movwf	??___flmul+2
  9436  05A3  084F               	movf	___flmul@grs+3,w
  9437  05A4  00C9               	movwf	??___flmul+3
  9438  05A5  3018               	movlw	24
  9439  05A6                     u342_25:
  9440  05A6  1003               	clrc
  9441  05A7  0CC9               	rrf	??___flmul+3,f
  9442  05A8  0CC8               	rrf	??___flmul+2,f
  9443  05A9  0CC7               	rrf	??___flmul+1,f
  9444  05AA  0CC6               	rrf	??___flmul,f
  9445  05AB  3EFF               	addlw	-1
  9446  05AC  1D03               	skipz
  9447  05AD  2DA6               	goto	u342_25
  9448  05AE  0846               	movf	??___flmul,w
  9449  05AF  07D2               	addwf	___flmul@prod,f
  9450  05B0  0847               	movf	??___flmul+1,w
  9451  05B1  1103               	clrz
  9452  05B2  1803               	skipnc
  9453  05B3  3E01               	addlw	1
  9454  05B4  1D03               	btfss	3,2
  9455  05B5  07D3               	addwf	___flmul@prod+1,f
  9456  05B6  0848               	movf	??___flmul+2,w
  9457  05B7  1103               	clrz
  9458  05B8  1803               	skipnc
  9459  05B9  3E01               	addlw	1
  9460  05BA  1D03               	btfss	3,2
  9461  05BB  07D4               	addwf	___flmul@prod+2,f
  9462  05BC  0849               	movf	??___flmul+3,w
  9463  05BD  1103               	clrz
  9464  05BE  1803               	skipnc
  9465  05BF  3E01               	addlw	1
  9466  05C0  1D03               	btfss	3,2
  9467  05C1  07D5               	addwf	___flmul@prod+3,f
  9468  05C2  3008               	movlw	8
  9469  05C3  00C6               	movwf	??___flmul
  9470  05C4                     u344_25:
  9471  05C4  1003               	clrc
  9472  05C5  0DCC               	rlf	___flmul@grs,f
  9473  05C6  0DCD               	rlf	___flmul@grs+1,f
  9474  05C7  0DCE               	rlf	___flmul@grs+2,f
  9475  05C8  0DCF               	rlf	___flmul@grs+3,f
  9476  05C9  0BC6               	decfsz	??___flmul,f
  9477  05CA  2DC4               	goto	u344_25
  9478  05CB  0851               	movf	___flmul@bexp,w
  9479  05CC  0750               	addwf	___flmul@aexp,w
  9480  05CD  00C6               	movwf	??___flmul
  9481  05CE  01C7               	clrf	??___flmul+1
  9482  05CF  0DC7               	rlf	??___flmul+1,f
  9483  05D0  0846               	movf	??___flmul,w
  9484  05D1  3E82               	addlw	130
  9485  05D2  00D6               	movwf	___flmul@temp
  9486  05D3  0847               	movf	??___flmul+1,w
  9487  05D4  1803               	skipnc
  9488  05D5  3E01               	addlw	1
  9489  05D6  3EFF               	addlw	255
  9490  05D7  00D7               	movwf	___flmul@temp+1
  9491  05D8                     i1l3027:
  9492  05D8  1BD4               	btfsc	___flmul@prod+2,7
  9493  05D9  2DF5               	goto	i1l3029
  9494  05DA  3001               	movlw	1
  9495  05DB  00C6               	movwf	??___flmul
  9496  05DC                     u345_25:
  9497  05DC  1003               	clrc
  9498  05DD  0DD2               	rlf	___flmul@prod,f
  9499  05DE  0DD3               	rlf	___flmul@prod+1,f
  9500  05DF  0DD4               	rlf	___flmul@prod+2,f
  9501  05E0  0DD5               	rlf	___flmul@prod+3,f
  9502  05E1  0BC6               	decfsz	??___flmul,f
  9503  05E2  2DDC               	goto	u345_25
  9504  05E3  1BCF               	btfsc	___flmul@grs+3,7
  9505  05E4  1452               	bsf	___flmul@prod,0
  9506  05E5  3001               	movlw	1
  9507  05E6  00C6               	movwf	??___flmul
  9508  05E7                     u347_25:
  9509  05E7  1003               	clrc
  9510  05E8  0DCC               	rlf	___flmul@grs,f
  9511  05E9  0DCD               	rlf	___flmul@grs+1,f
  9512  05EA  0DCE               	rlf	___flmul@grs+2,f
  9513  05EB  0DCF               	rlf	___flmul@grs+3,f
  9514  05EC  0BC6               	decfsz	??___flmul,f
  9515  05ED  2DE7               	goto	u347_25
  9516  05EE  30FF               	movlw	255
  9517  05EF  07D6               	addwf	___flmul@temp,f
  9518  05F0  1803               	skipnc
  9519  05F1  0AD7               	incf	___flmul@temp+1,f
  9520  05F2  30FF               	movlw	255
  9521  05F3  07D7               	addwf	___flmul@temp+1,f
  9522  05F4  2DD8               	goto	i1l3027
  9523  05F5                     i1l3029:
  9524  05F5  01D0               	clrf	___flmul@aexp
  9525  05F6  1FCF               	btfss	___flmul@grs+3,7
  9526  05F7  2E0E               	goto	i1l3039
  9527  05F8  30FF               	movlw	255
  9528  05F9  054C               	andwf	___flmul@grs,w
  9529  05FA  00C6               	movwf	??___flmul
  9530  05FB  30FF               	movlw	255
  9531  05FC  054D               	andwf	___flmul@grs+1,w
  9532  05FD  00C7               	movwf	??___flmul+1
  9533  05FE  30FF               	movlw	255
  9534  05FF  054E               	andwf	___flmul@grs+2,w
  9535  0600  00C8               	movwf	??___flmul+2
  9536  0601  307F               	movlw	127
  9537  0602  054F               	andwf	___flmul@grs+3,w
  9538  0603  00C9               	movwf	??___flmul+3
  9539  0604  0849               	movf	??___flmul+3,w
  9540  0605  0448               	iorwf	??___flmul+2,w
  9541  0606  0447               	iorwf	??___flmul+1,w
  9542  0607  0446               	iorwf	??___flmul,w
  9543  0608  1903               	skipnz
  9544  0609  1852               	btfsc	___flmul@prod,0
  9545  060A  2E0C               	goto	i1l3035
  9546  060B  2E0E               	goto	i1l3039
  9547  060C                     i1l3035:
  9548  060C  01D0               	clrf	___flmul@aexp
  9549  060D  0AD0               	incf	___flmul@aexp,f
  9550  060E                     i1l3039:
  9551  060E  0850               	movf	___flmul@aexp,w
  9552  060F  1903               	btfsc	3,2
  9553  0610  2E40               	goto	i1l3049
  9554  0611  3001               	movlw	1
  9555  0612  07D2               	addwf	___flmul@prod,f
  9556  0613  3000               	movlw	0
  9557  0614  1803               	skipnc
  9558  0615  3001               	movlw	1
  9559  0616  07D3               	addwf	___flmul@prod+1,f
  9560  0617  3000               	movlw	0
  9561  0618  1803               	skipnc
  9562  0619  3001               	movlw	1
  9563  061A  07D4               	addwf	___flmul@prod+2,f
  9564  061B  3000               	movlw	0
  9565  061C  1803               	skipnc
  9566  061D  3001               	movlw	1
  9567  061E  07D5               	addwf	___flmul@prod+3,f
  9568  061F  1C55               	btfss	___flmul@prod+3,0
  9569  0620  2E40               	goto	i1l3049
  9570  0621  0852               	movf	___flmul@prod,w
  9571  0622  00C6               	movwf	??___flmul
  9572  0623  0853               	movf	___flmul@prod+1,w
  9573  0624  00C7               	movwf	??___flmul+1
  9574  0625  0854               	movf	___flmul@prod+2,w
  9575  0626  00C8               	movwf	??___flmul+2
  9576  0627  0855               	movf	___flmul@prod+3,w
  9577  0628  00C9               	movwf	??___flmul+3
  9578  0629  3001               	movlw	1
  9579  062A  00CA               	movwf	??___flmul+4
  9580  062B                     u354_25:
  9581  062B  0D49               	rlf	??___flmul+3,w
  9582  062C  0CC9               	rrf	??___flmul+3,f
  9583  062D  0CC8               	rrf	??___flmul+2,f
  9584  062E  0CC7               	rrf	??___flmul+1,f
  9585  062F  0CC6               	rrf	??___flmul,f
  9586  0630  0BCA               	decfsz	??___flmul+4,f
  9587  0631  2E2B               	goto	u354_25
  9588  0632  0849               	movf	??___flmul+3,w
  9589  0633  00D5               	movwf	___flmul@prod+3
  9590  0634  0848               	movf	??___flmul+2,w
  9591  0635  00D4               	movwf	___flmul@prod+2
  9592  0636  0847               	movf	??___flmul+1,w
  9593  0637  00D3               	movwf	___flmul@prod+1
  9594  0638  0846               	movf	??___flmul,w
  9595  0639  00D2               	movwf	___flmul@prod
  9596  063A  3001               	movlw	1
  9597  063B  07D6               	addwf	___flmul@temp,f
  9598  063C  1803               	skipnc
  9599  063D  0AD7               	incf	___flmul@temp+1,f
  9600  063E  3000               	movlw	0
  9601  063F  07D7               	addwf	___flmul@temp+1,f
  9602  0640                     i1l3049:
  9603  0640  0857               	movf	___flmul@temp+1,w
  9604  0641  3A80               	xorlw	128
  9605  0642  00FF               	movwf	127
  9606  0643  3080               	movlw	128
  9607  0644  027F               	subwf	127,w
  9608  0645  1D03               	skipz
  9609  0646  2E49               	goto	u355_25
  9610  0647  30FF               	movlw	255
  9611  0648  0256               	subwf	___flmul@temp,w
  9612  0649                     u355_25:
  9613  0649  1C03               	skipc
  9614  064A  2E56               	goto	i1l3053
  9615  064B  307F               	movlw	127
  9616  064C  1283               	bcf	3,5	;RP0=0, select bank0
  9617  064D  1303               	bcf	3,6	;RP1=0, select bank0
  9618  064E  00D5               	movwf	___flmul@prod+3
  9619  064F  3080               	movlw	128
  9620  0650  00D4               	movwf	___flmul@prod+2
  9621  0651  3000               	movlw	0
  9622  0652  00D3               	movwf	___flmul@prod+1
  9623  0653  3000               	movlw	0
  9624  0654  00D2               	movwf	___flmul@prod
  9625  0655  2E86               	goto	i1l910
  9626  0656                     i1l3053:
  9627  0656  1283               	bcf	3,5	;RP0=0, select bank0
  9628  0657  1303               	bcf	3,6	;RP1=0, select bank0
  9629  0658  0857               	movf	___flmul@temp+1,w
  9630  0659  3A80               	xorlw	128
  9631  065A  00FF               	movwf	127
  9632  065B  3080               	movlw	128
  9633  065C  027F               	subwf	127,w
  9634  065D  1D03               	skipz
  9635  065E  2E61               	goto	u356_25
  9636  065F  3001               	movlw	1
  9637  0660  0256               	subwf	___flmul@temp,w
  9638  0661                     u356_25:
  9639  0661  1803               	skipnc
  9640  0662  2E6F               	goto	i1l3059
  9641  0663  3000               	movlw	0
  9642  0664  1283               	bcf	3,5	;RP0=0, select bank0
  9643  0665  1303               	bcf	3,6	;RP1=0, select bank0
  9644  0666  00D5               	movwf	___flmul@prod+3
  9645  0667  3000               	movlw	0
  9646  0668  00D4               	movwf	___flmul@prod+2
  9647  0669  3000               	movlw	0
  9648  066A  00D3               	movwf	___flmul@prod+1
  9649  066B  3000               	movlw	0
  9650  066C  00D2               	movwf	___flmul@prod
  9651  066D  01CB               	clrf	___flmul@sign
  9652  066E  2E86               	goto	i1l910
  9653  066F                     i1l3059:
  9654  066F  1283               	bcf	3,5	;RP0=0, select bank0
  9655  0670  1303               	bcf	3,6	;RP1=0, select bank0
  9656  0671  0856               	movf	___flmul@temp,w
  9657  0672  00C6               	movwf	??___flmul
  9658  0673  0846               	movf	??___flmul,w
  9659  0674  00D1               	movwf	___flmul@bexp
  9660  0675  30FF               	movlw	255
  9661  0676  05D2               	andwf	___flmul@prod,f
  9662  0677  30FF               	movlw	255
  9663  0678  05D3               	andwf	___flmul@prod+1,f
  9664  0679  307F               	movlw	127
  9665  067A  05D4               	andwf	___flmul@prod+2,f
  9666  067B  3000               	movlw	0
  9667  067C  05D5               	andwf	___flmul@prod+3,f
  9668  067D  1851               	btfsc	___flmul@bexp,0
  9669  067E  17D4               	bsf	___flmul@prod+2,7
  9670  067F  0851               	movf	___flmul@bexp,w
  9671  0680  00C6               	movwf	??___flmul
  9672  0681  1003               	clrc
  9673  0682  0C46               	rrf	??___flmul,w
  9674  0683  00C7               	movwf	??___flmul+1
  9675  0684  0847               	movf	??___flmul+1,w
  9676  0685  00D5               	movwf	___flmul@prod+3
  9677  0686                     i1l910:
  9678  0686  084B               	movf	___flmul@sign,w
  9679  0687  00C6               	movwf	??___flmul
  9680  0688  0846               	movf	??___flmul,w
  9681  0689  04D5               	iorwf	___flmul@prod+3,f
  9682  068A  0855               	movf	___flmul@prod+3,w
  9683  068B  00C1               	movwf	?___flmul+3
  9684  068C  0854               	movf	___flmul@prod+2,w
  9685  068D  00C0               	movwf	?___flmul+2
  9686  068E  0853               	movf	___flmul@prod+1,w
  9687  068F  00BF               	movwf	?___flmul+1
  9688  0690  0852               	movf	___flmul@prod,w
  9689  0691  00BE               	movwf	?___flmul
  9690  0692  0008               	return
  9691  0693                     __end_of___flmul:
  9692                           
  9693                           	psect	text40
  9694  0801                     __ptext40:	
  9695 ;; *************** function __Umul8_16 *****************
  9696 ;; Defined at:
  9697 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8_16.c"
  9698 ;; Parameters:    Size  Location     Type
  9699 ;;  multiplier      1    wreg     unsigned char 
  9700 ;;  multiplicand    1    0[COMMON] unsigned char 
  9701 ;; Auto vars:     Size  Location     Type
  9702 ;;  multiplier      1    8[COMMON] unsigned char 
  9703 ;;  word_mpld       2    6[COMMON] unsigned int 
  9704 ;;  product         2    4[COMMON] unsigned int 
  9705 ;; Return value:  Size  Location     Type
  9706 ;;                  2    0[COMMON] unsigned int 
  9707 ;; Registers used:
  9708 ;;		wreg, status,2, status,0
  9709 ;; Tracked objects:
  9710 ;;		On entry : 0/0
  9711 ;;		On exit  : 0/0
  9712 ;;		Unchanged: 0/0
  9713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9714 ;;      Params:         2       0       0       0       0
  9715 ;;      Locals:         5       0       0       0       0
  9716 ;;      Temps:          2       0       0       0       0
  9717 ;;      Totals:         9       0       0       0       0
  9718 ;;Total ram usage:        9 bytes
  9719 ;; Hardware stack levels used: 1
  9720 ;; This function calls:
  9721 ;;		Nothing
  9722 ;; This function is called by:
  9723 ;;		___flmul
  9724 ;; This function uses a non-reentrant model
  9725 ;;
  9726                           
  9727  0801                     __Umul8_16:	
  9728                           ;psect for function __Umul8_16
  9729                           
  9730                           
  9731                           ;incstack = 0
  9732                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9733                           ;__Umul8_16@multiplier stored from wreg
  9734  0801  00F8               	movwf	__Umul8_16@multiplier
  9735  0802  01F4               	clrf	__Umul8_16@product
  9736  0803  01F5               	clrf	__Umul8_16@product+1
  9737  0804  0870               	movf	__Umul8_16@multiplicand,w
  9738  0805  00F2               	movwf	??__Umul8_16
  9739  0806  01F3               	clrf	??__Umul8_16+1
  9740  0807  0872               	movf	??__Umul8_16,w
  9741  0808  00F6               	movwf	__Umul8_16@word_mpld
  9742  0809  0873               	movf	??__Umul8_16+1,w
  9743  080A  00F7               	movwf	__Umul8_16@word_mpld+1
  9744  080B                     i1l2659:
  9745  080B  1C78               	btfss	__Umul8_16@multiplier,0
  9746  080C  2813               	goto	i1l917
  9747  080D  0876               	movf	__Umul8_16@word_mpld,w
  9748  080E  07F4               	addwf	__Umul8_16@product,f
  9749  080F  1803               	skipnc
  9750  0810  0AF5               	incf	__Umul8_16@product+1,f
  9751  0811  0877               	movf	__Umul8_16@word_mpld+1,w
  9752  0812  07F5               	addwf	__Umul8_16@product+1,f
  9753  0813                     i1l917:
  9754  0813  3001               	movlw	1
  9755  0814                     u254_25:
  9756  0814  1003               	clrc
  9757  0815  0DF6               	rlf	__Umul8_16@word_mpld,f
  9758  0816  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  9759  0817  3EFF               	addlw	-1
  9760  0818  1D03               	skipz
  9761  0819  2814               	goto	u254_25
  9762  081A  1003               	clrc
  9763  081B  0CF8               	rrf	__Umul8_16@multiplier,f
  9764  081C  0878               	movf	__Umul8_16@multiplier,w
  9765  081D  1D03               	btfss	3,2
  9766  081E  280B               	goto	i1l2659
  9767  081F  0875               	movf	__Umul8_16@product+1,w
  9768  0820  00F1               	movwf	?__Umul8_16+1
  9769  0821  0874               	movf	__Umul8_16@product,w
  9770  0822  00F0               	movwf	?__Umul8_16
  9771  0823  0008               	return
  9772  0824                     __end_of__Umul8_16:
  9773                           
  9774                           	psect	text41
  9775  15E8                     __ptext41:	
  9776 ;; *************** function ___xxtofl *****************
  9777 ;; Defined at:
  9778 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\xxtofl.c"
  9779 ;; Parameters:    Size  Location     Type
  9780 ;;  sign            1    wreg     unsigned char 
  9781 ;;  val             4    9[COMMON] long 
  9782 ;; Auto vars:     Size  Location     Type
  9783 ;;  sign            1    4[BANK0 ] unsigned char 
  9784 ;;  arg             4    6[BANK0 ] unsigned long 
  9785 ;;  exp             1    5[BANK0 ] unsigned char 
  9786 ;; Return value:  Size  Location     Type
  9787 ;;                  4    9[COMMON] unsigned char 
  9788 ;; Registers used:
  9789 ;;		wreg, status,2, status,0
  9790 ;; Tracked objects:
  9791 ;;		On entry : 0/0
  9792 ;;		On exit  : 0/0
  9793 ;;		Unchanged: 0/0
  9794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9795 ;;      Params:         4       0       0       0       0
  9796 ;;      Locals:         0       6       0       0       0
  9797 ;;      Temps:          0       4       0       0       0
  9798 ;;      Totals:         4      10       0       0       0
  9799 ;;Total ram usage:       14 bytes
  9800 ;; Hardware stack levels used: 1
  9801 ;; This function calls:
  9802 ;;		Nothing
  9803 ;; This function is called by:
  9804 ;;		_slave
  9805 ;;		_map
  9806 ;;		_log
  9807 ;; This function uses a non-reentrant model
  9808 ;;
  9809                           
  9810  15E8                     ___xxtofl:	
  9811                           ;psect for function ___xxtofl
  9812                           
  9813                           
  9814                           ;incstack = 0
  9815                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  9816                           ;___xxtofl@sign stored from wreg
  9817  15E8  1283               	bcf	3,5	;RP0=0, select bank0
  9818  15E9  1303               	bcf	3,6	;RP1=0, select bank0
  9819  15EA  00A4               	movwf	___xxtofl@sign
  9820  15EB  0824               	movf	___xxtofl@sign,w
  9821  15EC  1D03               	btfss	3,2
  9822  15ED  1FFC               	btfss	___xxtofl@val+3,7
  9823  15EE  2DFF               	goto	i1l3513
  9824  15EF  0979               	comf	___xxtofl@val,w
  9825  15F0  00A6               	movwf	___xxtofl@arg
  9826  15F1  097A               	comf	___xxtofl@val+1,w
  9827  15F2  00A7               	movwf	___xxtofl@arg+1
  9828  15F3  097B               	comf	___xxtofl@val+2,w
  9829  15F4  00A8               	movwf	___xxtofl@arg+2
  9830  15F5  097C               	comf	___xxtofl@val+3,w
  9831  15F6  00A9               	movwf	___xxtofl@arg+3
  9832  15F7  0AA6               	incf	___xxtofl@arg,f
  9833  15F8  1903               	skipnz
  9834  15F9  0AA7               	incf	___xxtofl@arg+1,f
  9835  15FA  1903               	skipnz
  9836  15FB  0AA8               	incf	___xxtofl@arg+2,f
  9837  15FC  1903               	skipnz
  9838  15FD  0AA9               	incf	___xxtofl@arg+3,f
  9839  15FE  2E07               	goto	i1l942
  9840  15FF                     i1l3513:
  9841  15FF  087C               	movf	___xxtofl@val+3,w
  9842  1600  00A9               	movwf	___xxtofl@arg+3
  9843  1601  087B               	movf	___xxtofl@val+2,w
  9844  1602  00A8               	movwf	___xxtofl@arg+2
  9845  1603  087A               	movf	___xxtofl@val+1,w
  9846  1604  00A7               	movwf	___xxtofl@arg+1
  9847  1605  0879               	movf	___xxtofl@val,w
  9848  1606  00A6               	movwf	___xxtofl@arg
  9849  1607                     i1l942:
  9850  1607  087C               	movf	___xxtofl@val+3,w
  9851  1608  047B               	iorwf	___xxtofl@val+2,w
  9852  1609  047A               	iorwf	___xxtofl@val+1,w
  9853  160A  0479               	iorwf	___xxtofl@val,w
  9854  160B  1D03               	skipz
  9855  160C  2E16               	goto	i1l3519
  9856  160D  3000               	movlw	0
  9857  160E  00FC               	movwf	?___xxtofl+3
  9858  160F  3000               	movlw	0
  9859  1610  00FB               	movwf	?___xxtofl+2
  9860  1611  3000               	movlw	0
  9861  1612  00FA               	movwf	?___xxtofl+1
  9862  1613  3000               	movlw	0
  9863  1614  00F9               	movwf	?___xxtofl
  9864  1615  0008               	return
  9865  1616                     i1l3519:
  9866  1616  3096               	movlw	150
  9867  1617  00A0               	movwf	??___xxtofl
  9868  1618  0820               	movf	??___xxtofl,w
  9869  1619  00A5               	movwf	___xxtofl@exp
  9870  161A                     i1l3523:
  9871  161A  30FE               	movlw	254
  9872  161B  0529               	andwf	___xxtofl@arg+3,w
  9873  161C  1903               	btfsc	3,2
  9874  161D  2E47               	goto	i1l948
  9875  161E  3001               	movlw	1
  9876  161F  00A0               	movwf	??___xxtofl
  9877  1620  0820               	movf	??___xxtofl,w
  9878  1621  07A5               	addwf	___xxtofl@exp,f
  9879  1622  3001               	movlw	1
  9880  1623                     u426_25:
  9881  1623  1003               	clrc
  9882  1624  0CA9               	rrf	___xxtofl@arg+3,f
  9883  1625  0CA8               	rrf	___xxtofl@arg+2,f
  9884  1626  0CA7               	rrf	___xxtofl@arg+1,f
  9885  1627  0CA6               	rrf	___xxtofl@arg,f
  9886  1628  3EFF               	addlw	-1
  9887  1629  1D03               	skipz
  9888  162A  2E23               	goto	u426_25
  9889  162B  2E1A               	goto	i1l3523
  9890  162C                     i1l3525:
  9891  162C  3001               	movlw	1
  9892  162D  00A0               	movwf	??___xxtofl
  9893  162E  0820               	movf	??___xxtofl,w
  9894  162F  07A5               	addwf	___xxtofl@exp,f
  9895  1630  3001               	movlw	1
  9896  1631  07A6               	addwf	___xxtofl@arg,f
  9897  1632  3000               	movlw	0
  9898  1633  1803               	skipnc
  9899  1634  3001               	movlw	1
  9900  1635  07A7               	addwf	___xxtofl@arg+1,f
  9901  1636  3000               	movlw	0
  9902  1637  1803               	skipnc
  9903  1638  3001               	movlw	1
  9904  1639  07A8               	addwf	___xxtofl@arg+2,f
  9905  163A  3000               	movlw	0
  9906  163B  1803               	skipnc
  9907  163C  3001               	movlw	1
  9908  163D  07A9               	addwf	___xxtofl@arg+3,f
  9909  163E  3001               	movlw	1
  9910  163F                     u428_25:
  9911  163F  1003               	clrc
  9912  1640  0CA9               	rrf	___xxtofl@arg+3,f
  9913  1641  0CA8               	rrf	___xxtofl@arg+2,f
  9914  1642  0CA7               	rrf	___xxtofl@arg+1,f
  9915  1643  0CA6               	rrf	___xxtofl@arg,f
  9916  1644  3EFF               	addlw	-1
  9917  1645  1D03               	skipz
  9918  1646  2E3F               	goto	u428_25
  9919  1647                     i1l948:
  9920  1647  30FF               	movlw	255
  9921  1648  0529               	andwf	___xxtofl@arg+3,w
  9922  1649  1903               	btfsc	3,2
  9923  164A  2E5B               	goto	i1l3533
  9924  164B  2E2C               	goto	i1l3525
  9925  164C                     i1l3535:
  9926  164C  3002               	movlw	2
  9927  164D  0225               	subwf	___xxtofl@exp,w
  9928  164E  1C03               	btfss	3,0
  9929  164F  2E5D               	goto	i1l955
  9930  1650  3001               	movlw	1
  9931  1651  02A5               	subwf	___xxtofl@exp,f
  9932  1652  3001               	movlw	1
  9933  1653  00A0               	movwf	??___xxtofl
  9934  1654                     u430_25:
  9935  1654  1003               	clrc
  9936  1655  0DA6               	rlf	___xxtofl@arg,f
  9937  1656  0DA7               	rlf	___xxtofl@arg+1,f
  9938  1657  0DA8               	rlf	___xxtofl@arg+2,f
  9939  1658  0DA9               	rlf	___xxtofl@arg+3,f
  9940  1659  0BA0               	decfsz	??___xxtofl,f
  9941  165A  2E54               	goto	u430_25
  9942  165B                     i1l3533:
  9943  165B  1FA8               	btfss	___xxtofl@arg+2,7
  9944  165C  2E4C               	goto	i1l3535
  9945  165D                     i1l955:
  9946  165D  1825               	btfsc	___xxtofl@exp,0
  9947  165E  2E67               	goto	i1l956
  9948  165F  30FF               	movlw	255
  9949  1660  05A6               	andwf	___xxtofl@arg,f
  9950  1661  30FF               	movlw	255
  9951  1662  05A7               	andwf	___xxtofl@arg+1,f
  9952  1663  307F               	movlw	127
  9953  1664  05A8               	andwf	___xxtofl@arg+2,f
  9954  1665  30FF               	movlw	255
  9955  1666  05A9               	andwf	___xxtofl@arg+3,f
  9956  1667                     i1l956:
  9957  1667  1003               	clrc
  9958  1668  0CA5               	rrf	___xxtofl@exp,f
  9959  1669  0825               	movf	___xxtofl@exp,w
  9960  166A  00A0               	movwf	??___xxtofl
  9961  166B  01A1               	clrf	??___xxtofl+1
  9962  166C  01A2               	clrf	??___xxtofl+2
  9963  166D  01A3               	clrf	??___xxtofl+3
  9964  166E  3018               	movlw	24
  9965  166F                     u434_25:
  9966  166F  1003               	clrc
  9967  1670  0DA0               	rlf	??___xxtofl,f
  9968  1671  0DA1               	rlf	??___xxtofl+1,f
  9969  1672  0DA2               	rlf	??___xxtofl+2,f
  9970  1673  0DA3               	rlf	??___xxtofl+3,f
  9971  1674  3EFF               	addlw	-1
  9972  1675  1D03               	skipz
  9973  1676  2E6F               	goto	u434_25
  9974  1677  0820               	movf	??___xxtofl,w
  9975  1678  04A6               	iorwf	___xxtofl@arg,f
  9976  1679  0821               	movf	??___xxtofl+1,w
  9977  167A  04A7               	iorwf	___xxtofl@arg+1,f
  9978  167B  0822               	movf	??___xxtofl+2,w
  9979  167C  04A8               	iorwf	___xxtofl@arg+2,f
  9980  167D  0823               	movf	??___xxtofl+3,w
  9981  167E  04A9               	iorwf	___xxtofl@arg+3,f
  9982  167F  0824               	movf	___xxtofl@sign,w
  9983  1680  1D03               	btfss	3,2
  9984  1681  1FFC               	btfss	___xxtofl@val+3,7
  9985  1682  2E84               	goto	i1l3547
  9986  1683  17A9               	bsf	___xxtofl@arg+3,7
  9987  1684                     i1l3547:
  9988  1684  0829               	movf	___xxtofl@arg+3,w
  9989  1685  00FC               	movwf	?___xxtofl+3
  9990  1686  0828               	movf	___xxtofl@arg+2,w
  9991  1687  00FB               	movwf	?___xxtofl+2
  9992  1688  0827               	movf	___xxtofl@arg+1,w
  9993  1689  00FA               	movwf	?___xxtofl+1
  9994  168A  0826               	movf	___xxtofl@arg,w
  9995  168B  00F9               	movwf	?___xxtofl
  9996  168C  0008               	return
  9997  168D                     __end_of___xxtofl:
  9998                           
  9999                           	psect	text42
 10000  1416                     __ptext42:	
 10001 ;; *************** function ___flge *****************
 10002 ;; Defined at:
 10003 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\flge.c"
 10004 ;; Parameters:    Size  Location     Type
 10005 ;;  ff1             4    0[COMMON] unsigned char 
 10006 ;;  ff2             4    4[COMMON] unsigned char 
 10007 ;; Auto vars:     Size  Location     Type
 10008 ;;		None
 10009 ;; Return value:  Size  Location     Type
 10010 ;;		None               void
 10011 ;; Registers used:
 10012 ;;		wreg, status,2, status,0
 10013 ;; Tracked objects:
 10014 ;;		On entry : 0/0
 10015 ;;		On exit  : 0/0
 10016 ;;		Unchanged: 0/0
 10017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10018 ;;      Params:         8       0       0       0       0
 10019 ;;      Locals:         0       0       0       0       0
 10020 ;;      Temps:          4       0       0       0       0
 10021 ;;      Totals:        12       0       0       0       0
 10022 ;;Total ram usage:       12 bytes
 10023 ;; Hardware stack levels used: 1
 10024 ;; This function calls:
 10025 ;;		Nothing
 10026 ;; This function is called by:
 10027 ;;		_log
 10028 ;; This function uses a non-reentrant model
 10029 ;;
 10030                           
 10031  1416                     ___flge:	
 10032                           ;psect for function ___flge
 10033                           
 10034                           
 10035                           ;incstack = 0
 10036                           ; Regs used in ___flge: [wreg+status,2+status,0]
 10037  1416  3000               	movlw	0
 10038  1417  0570               	andwf	___flge@ff1,w
 10039  1418  00F8               	movwf	??___flge
 10040  1419  3000               	movlw	0
 10041  141A  0571               	andwf	___flge@ff1+1,w
 10042  141B  00F9               	movwf	??___flge+1
 10043  141C  3080               	movlw	128
 10044  141D  0572               	andwf	___flge@ff1+2,w
 10045  141E  00FA               	movwf	??___flge+2
 10046  141F  307F               	movlw	127
 10047  1420  0573               	andwf	___flge@ff1+3,w
 10048  1421  00FB               	movwf	??___flge+3
 10049  1422  087B               	movf	??___flge+3,w
 10050  1423  047A               	iorwf	??___flge+2,w
 10051  1424  0479               	iorwf	??___flge+1,w
 10052  1425  0478               	iorwf	??___flge,w
 10053  1426  1D03               	skipz
 10054  1427  2C30               	goto	i1l683
 10055  1428  3000               	movlw	0
 10056  1429  00F3               	movwf	___flge@ff1+3
 10057  142A  3000               	movlw	0
 10058  142B  00F2               	movwf	___flge@ff1+2
 10059  142C  3000               	movlw	0
 10060  142D  00F1               	movwf	___flge@ff1+1
 10061  142E  3000               	movlw	0
 10062  142F  00F0               	movwf	___flge@ff1
 10063  1430                     i1l683:
 10064  1430  3000               	movlw	0
 10065  1431  0574               	andwf	___flge@ff2,w
 10066  1432  00F8               	movwf	??___flge
 10067  1433  3000               	movlw	0
 10068  1434  0575               	andwf	___flge@ff2+1,w
 10069  1435  00F9               	movwf	??___flge+1
 10070  1436  3080               	movlw	128
 10071  1437  0576               	andwf	___flge@ff2+2,w
 10072  1438  00FA               	movwf	??___flge+2
 10073  1439  307F               	movlw	127
 10074  143A  0577               	andwf	___flge@ff2+3,w
 10075  143B  00FB               	movwf	??___flge+3
 10076  143C  087B               	movf	??___flge+3,w
 10077  143D  047A               	iorwf	??___flge+2,w
 10078  143E  0479               	iorwf	??___flge+1,w
 10079  143F  0478               	iorwf	??___flge,w
 10080  1440  1D03               	skipz
 10081  1441  2C4A               	goto	i1l3351
 10082  1442  3000               	movlw	0
 10083  1443  00F7               	movwf	___flge@ff2+3
 10084  1444  3000               	movlw	0
 10085  1445  00F6               	movwf	___flge@ff2+2
 10086  1446  3000               	movlw	0
 10087  1447  00F5               	movwf	___flge@ff2+1
 10088  1448  3000               	movlw	0
 10089  1449  00F4               	movwf	___flge@ff2
 10090  144A                     i1l3351:
 10091  144A  1FF3               	btfss	___flge@ff1+3,7
 10092  144B  2C70               	goto	i1l3355
 10093  144C  3000               	movlw	0
 10094  144D  00F8               	movwf	??___flge
 10095  144E  3000               	movlw	0
 10096  144F  00F9               	movwf	??___flge+1
 10097  1450  3000               	movlw	0
 10098  1451  00FA               	movwf	??___flge+2
 10099  1452  3080               	movlw	128
 10100  1453  00FB               	movwf	??___flge+3
 10101  1454  0870               	movf	___flge@ff1,w
 10102  1455  02F8               	subwf	??___flge,f
 10103  1456  0871               	movf	___flge@ff1+1,w
 10104  1457  1C03               	skipc
 10105  1458  0F71               	incfsz	___flge@ff1+1,w
 10106  1459  2C5B               	goto	u389_21
 10107  145A  2C5C               	goto	u389_22
 10108  145B                     u389_21:
 10109  145B  02F9               	subwf	??___flge+1,f
 10110  145C                     u389_22:
 10111  145C  0872               	movf	___flge@ff1+2,w
 10112  145D  1C03               	skipc
 10113  145E  0F72               	incfsz	___flge@ff1+2,w
 10114  145F  2C61               	goto	u389_23
 10115  1460  2C62               	goto	u389_24
 10116  1461                     u389_23:
 10117  1461  02FA               	subwf	??___flge+2,f
 10118  1462                     u389_24:
 10119  1462  0873               	movf	___flge@ff1+3,w
 10120  1463  1C03               	skipc
 10121  1464  0F73               	incfsz	___flge@ff1+3,w
 10122  1465  2C67               	goto	u389_25
 10123  1466  2C68               	goto	u389_26
 10124  1467                     u389_25:
 10125  1467  02FB               	subwf	??___flge+3,f
 10126  1468                     u389_26:
 10127  1468  087B               	movf	??___flge+3,w
 10128  1469  00F3               	movwf	___flge@ff1+3
 10129  146A  087A               	movf	??___flge+2,w
 10130  146B  00F2               	movwf	___flge@ff1+2
 10131  146C  0879               	movf	??___flge+1,w
 10132  146D  00F1               	movwf	___flge@ff1+1
 10133  146E  0878               	movf	??___flge,w
 10134  146F  00F0               	movwf	___flge@ff1
 10135  1470                     i1l3355:
 10136  1470  1FF7               	btfss	___flge@ff2+3,7
 10137  1471  2C96               	goto	i1l686
 10138  1472  3000               	movlw	0
 10139  1473  00F8               	movwf	??___flge
 10140  1474  3000               	movlw	0
 10141  1475  00F9               	movwf	??___flge+1
 10142  1476  3000               	movlw	0
 10143  1477  00FA               	movwf	??___flge+2
 10144  1478  3080               	movlw	128
 10145  1479  00FB               	movwf	??___flge+3
 10146  147A  0874               	movf	___flge@ff2,w
 10147  147B  02F8               	subwf	??___flge,f
 10148  147C  0875               	movf	___flge@ff2+1,w
 10149  147D  1C03               	skipc
 10150  147E  0F75               	incfsz	___flge@ff2+1,w
 10151  147F  2C81               	goto	u391_21
 10152  1480  2C82               	goto	u391_22
 10153  1481                     u391_21:
 10154  1481  02F9               	subwf	??___flge+1,f
 10155  1482                     u391_22:
 10156  1482  0876               	movf	___flge@ff2+2,w
 10157  1483  1C03               	skipc
 10158  1484  0F76               	incfsz	___flge@ff2+2,w
 10159  1485  2C87               	goto	u391_23
 10160  1486  2C88               	goto	u391_24
 10161  1487                     u391_23:
 10162  1487  02FA               	subwf	??___flge+2,f
 10163  1488                     u391_24:
 10164  1488  0877               	movf	___flge@ff2+3,w
 10165  1489  1C03               	skipc
 10166  148A  0F77               	incfsz	___flge@ff2+3,w
 10167  148B  2C8D               	goto	u391_25
 10168  148C  2C8E               	goto	u391_26
 10169  148D                     u391_25:
 10170  148D  02FB               	subwf	??___flge+3,f
 10171  148E                     u391_26:
 10172  148E  087B               	movf	??___flge+3,w
 10173  148F  00F7               	movwf	___flge@ff2+3
 10174  1490  087A               	movf	??___flge+2,w
 10175  1491  00F6               	movwf	___flge@ff2+2
 10176  1492  0879               	movf	??___flge+1,w
 10177  1493  00F5               	movwf	___flge@ff2+1
 10178  1494  0878               	movf	??___flge,w
 10179  1495  00F4               	movwf	___flge@ff2
 10180  1496                     i1l686:
 10181  1496  3080               	movlw	128
 10182  1497  06F3               	xorwf	___flge@ff1+3,f
 10183  1498  3080               	movlw	128
 10184  1499  06F7               	xorwf	___flge@ff2+3,f
 10185  149A  0877               	movf	___flge@ff2+3,w
 10186  149B  0273               	subwf	___flge@ff1+3,w
 10187  149C  1D03               	skipz
 10188  149D  0008               	return
 10189  149E  0876               	movf	___flge@ff2+2,w
 10190  149F  0272               	subwf	___flge@ff1+2,w
 10191  14A0  1D03               	skipz
 10192  14A1  0008               	return
 10193  14A2  0875               	movf	___flge@ff2+1,w
 10194  14A3  0271               	subwf	___flge@ff1+1,w
 10195  14A4  1D03               	skipz
 10196  14A5  0008               	return
 10197  14A6  0874               	movf	___flge@ff2,w
 10198  14A7  0270               	subwf	___flge@ff1,w
 10199  14A8  0008               	return
 10200  14A9                     __end_of___flge:
 10201                           
 10202                           	psect	text43
 10203  1D71                     __ptext43:	
 10204 ;; *************** function _adc_read *****************
 10205 ;; Defined at:
 10206 ;;		line 66 in file "adc.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;		None
 10209 ;; Auto vars:     Size  Location     Type
 10210 ;;		None
 10211 ;; Return value:  Size  Location     Type
 10212 ;;                  2    0[COMMON] unsigned int 
 10213 ;; Registers used:
 10214 ;;		wreg
 10215 ;; Tracked objects:
 10216 ;;		On entry : 0/0
 10217 ;;		On exit  : 0/0
 10218 ;;		Unchanged: 0/0
 10219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10220 ;;      Params:         2       0       0       0       0
 10221 ;;      Locals:         0       0       0       0       0
 10222 ;;      Temps:          0       0       0       0       0
 10223 ;;      Totals:         2       0       0       0       0
 10224 ;;Total ram usage:        2 bytes
 10225 ;; Hardware stack levels used: 1
 10226 ;; This function calls:
 10227 ;;		Nothing
 10228 ;; This function is called by:
 10229 ;;		_slave
 10230 ;; This function uses a non-reentrant model
 10231 ;;
 10232                           
 10233  1D71                     _adc_read:	
 10234                           ;psect for function _adc_read
 10235                           
 10236                           
 10237                           ;incstack = 0
 10238                           ; Regs used in _adc_read: [wreg]
 10239  1D71  1283               	bcf	3,5	;RP0=0, select bank0
 10240  1D72  1303               	bcf	3,6	;RP1=0, select bank0
 10241  1D73  130C               	bcf	12,6	;volatile
 10242  1D74  081E               	movf	30,w	;volatile
 10243  1D75  00F1               	movwf	?_adc_read+1
 10244  1D76  1683               	bsf	3,5	;RP0=1, select bank1
 10245  1D77  1303               	bcf	3,6	;RP1=0, select bank1
 10246  1D78  081E               	movf	30,w	;volatile
 10247  1D79  00F0               	movwf	?_adc_read
 10248  1D7A  0008               	return
 10249  1D7B                     __end_of_adc_read:
 10250                           
 10251                           	psect	text44
 10252  1EFC                     __ptext44:	
 10253 ;; *************** function ___lwdiv *****************
 10254 ;; Defined at:
 10255 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
 10256 ;; Parameters:    Size  Location     Type
 10257 ;;  divisor         2    0[COMMON] unsigned int 
 10258 ;;  dividend        2    2[COMMON] unsigned int 
 10259 ;; Auto vars:     Size  Location     Type
 10260 ;;  quotient        2    5[COMMON] unsigned int 
 10261 ;;  counter         1    7[COMMON] unsigned char 
 10262 ;; Return value:  Size  Location     Type
 10263 ;;                  2    0[COMMON] unsigned int 
 10264 ;; Registers used:
 10265 ;;		wreg, status,2, status,0
 10266 ;; Tracked objects:
 10267 ;;		On entry : 0/0
 10268 ;;		On exit  : 0/0
 10269 ;;		Unchanged: 0/0
 10270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10271 ;;      Params:         4       0       0       0       0
 10272 ;;      Locals:         3       0       0       0       0
 10273 ;;      Temps:          1       0       0       0       0
 10274 ;;      Totals:         8       0       0       0       0
 10275 ;;Total ram usage:        8 bytes
 10276 ;; Hardware stack levels used: 1
 10277 ;; This function calls:
 10278 ;;		Nothing
 10279 ;; This function is called by:
 10280 ;;		_slave
 10281 ;; This function uses a non-reentrant model
 10282 ;;
 10283                           
 10284  1EFC                     ___lwdiv:	
 10285                           ;psect for function ___lwdiv
 10286                           
 10287                           
 10288                           ;incstack = 0
 10289                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 10290  1EFC  01F5               	clrf	___lwdiv@quotient
 10291  1EFD  01F6               	clrf	___lwdiv@quotient+1
 10292  1EFE  0870               	movf	___lwdiv@divisor,w
 10293  1EFF  0471               	iorwf	___lwdiv@divisor+1,w
 10294  1F00  1903               	btfsc	3,2
 10295  1F01  2F33               	goto	i1l3919
 10296  1F02  01F7               	clrf	___lwdiv@counter
 10297  1F03  0AF7               	incf	___lwdiv@counter,f
 10298  1F04                     i1l3907:
 10299  1F04  1BF1               	btfsc	___lwdiv@divisor+1,7
 10300  1F05  2F12               	goto	i1l3909
 10301  1F06  3001               	movlw	1
 10302  1F07                     u488_25:
 10303  1F07  1003               	clrc
 10304  1F08  0DF0               	rlf	___lwdiv@divisor,f
 10305  1F09  0DF1               	rlf	___lwdiv@divisor+1,f
 10306  1F0A  3EFF               	addlw	-1
 10307  1F0B  1D03               	skipz
 10308  1F0C  2F07               	goto	u488_25
 10309  1F0D  3001               	movlw	1
 10310  1F0E  00F4               	movwf	??___lwdiv
 10311  1F0F  0874               	movf	??___lwdiv,w
 10312  1F10  07F7               	addwf	___lwdiv@counter,f
 10313  1F11  2F04               	goto	i1l3907
 10314  1F12                     i1l3909:
 10315  1F12  3001               	movlw	1
 10316  1F13                     u490_25:
 10317  1F13  1003               	clrc
 10318  1F14  0DF5               	rlf	___lwdiv@quotient,f
 10319  1F15  0DF6               	rlf	___lwdiv@quotient+1,f
 10320  1F16  3EFF               	addlw	-1
 10321  1F17  1D03               	skipz
 10322  1F18  2F13               	goto	u490_25
 10323  1F19  0871               	movf	___lwdiv@divisor+1,w
 10324  1F1A  0273               	subwf	___lwdiv@dividend+1,w
 10325  1F1B  1D03               	skipz
 10326  1F1C  2F1F               	goto	u491_25
 10327  1F1D  0870               	movf	___lwdiv@divisor,w
 10328  1F1E  0272               	subwf	___lwdiv@dividend,w
 10329  1F1F                     u491_25:
 10330  1F1F  1C03               	skipc
 10331  1F20  2F28               	goto	i1l3915
 10332  1F21  0870               	movf	___lwdiv@divisor,w
 10333  1F22  02F2               	subwf	___lwdiv@dividend,f
 10334  1F23  0871               	movf	___lwdiv@divisor+1,w
 10335  1F24  1C03               	skipc
 10336  1F25  03F3               	decf	___lwdiv@dividend+1,f
 10337  1F26  02F3               	subwf	___lwdiv@dividend+1,f
 10338  1F27  1475               	bsf	___lwdiv@quotient,0
 10339  1F28                     i1l3915:
 10340  1F28  3001               	movlw	1
 10341  1F29                     u492_25:
 10342  1F29  1003               	clrc
 10343  1F2A  0CF1               	rrf	___lwdiv@divisor+1,f
 10344  1F2B  0CF0               	rrf	___lwdiv@divisor,f
 10345  1F2C  3EFF               	addlw	-1
 10346  1F2D  1D03               	skipz
 10347  1F2E  2F29               	goto	u492_25
 10348  1F2F  3001               	movlw	1
 10349  1F30  02F7               	subwf	___lwdiv@counter,f
 10350  1F31  1D03               	btfss	3,2
 10351  1F32  2F12               	goto	i1l3909
 10352  1F33                     i1l3919:
 10353  1F33  0876               	movf	___lwdiv@quotient+1,w
 10354  1F34  00F1               	movwf	?___lwdiv+1
 10355  1F35  0875               	movf	___lwdiv@quotient,w
 10356  1F36  00F0               	movwf	?___lwdiv
 10357  1F37  0008               	return
 10358  1F38                     __end_of___lwdiv:
 10359                           
 10360                           	psect	text45
 10361  1DFA                     __ptext45:	
 10362 ;; *************** function ___flsub *****************
 10363 ;; Defined at:
 10364 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcadd.c"
 10365 ;; Parameters:    Size  Location     Type
 10366 ;;  a               4   69[BANK0 ] unsigned int 
 10367 ;;  b               4   73[BANK0 ] unsigned int 
 10368 ;; Auto vars:     Size  Location     Type
 10369 ;;		None
 10370 ;; Return value:  Size  Location     Type
 10371 ;;                  4   69[BANK0 ] unsigned int 
 10372 ;; Registers used:
 10373 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 10374 ;; Tracked objects:
 10375 ;;		On entry : 0/0
 10376 ;;		On exit  : 0/0
 10377 ;;		Unchanged: 0/0
 10378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10379 ;;      Params:         0       8       0       0       0
 10380 ;;      Locals:         0       0       0       0       0
 10381 ;;      Temps:          0       0       0       0       0
 10382 ;;      Totals:         0       8       0       0       0
 10383 ;;Total ram usage:        8 bytes
 10384 ;; Hardware stack levels used: 1
 10385 ;; Hardware stack levels required when called: 1
 10386 ;; This function calls:
 10387 ;;		___fladd
 10388 ;; This function is called by:
 10389 ;;		_slave
 10390 ;; This function uses a non-reentrant model
 10391 ;;
 10392                           
 10393  1DFA                     ___flsub:	
 10394                           ;psect for function ___flsub
 10395                           
 10396                           
 10397                           ;incstack = 0
 10398                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 10399  1DFA  3080               	movlw	128
 10400  1DFB  1283               	bcf	3,5	;RP0=0, select bank0
 10401  1DFC  1303               	bcf	3,6	;RP1=0, select bank0
 10402  1DFD  06E8               	xorwf	___flsub@a+3,f
 10403  1DFE  086C               	movf	___flsub@b+3,w
 10404  1DFF  00AD               	movwf	___fladd@b+3
 10405  1E00  086B               	movf	___flsub@b+2,w
 10406  1E01  00AC               	movwf	___fladd@b+2
 10407  1E02  086A               	movf	___flsub@b+1,w
 10408  1E03  00AB               	movwf	___fladd@b+1
 10409  1E04  0869               	movf	___flsub@b,w
 10410  1E05  00AA               	movwf	___fladd@b
 10411  1E06  0868               	movf	___flsub@a+3,w
 10412  1E07  00B1               	movwf	___fladd@a+3
 10413  1E08  0867               	movf	___flsub@a+2,w
 10414  1E09  00B0               	movwf	___fladd@a+2
 10415  1E0A  0866               	movf	___flsub@a+1,w
 10416  1E0B  00AF               	movwf	___fladd@a+1
 10417  1E0C  0865               	movf	___flsub@a,w
 10418  1E0D  00AE               	movwf	___fladd@a
 10419  1E0E  120A  158A  2109   	fcall	___fladd
 10420  1E11  1283               	bcf	3,5	;RP0=0, select bank0
 10421  1E12  1303               	bcf	3,6	;RP1=0, select bank0
 10422  1E13  082D               	movf	?___fladd+3,w
 10423  1E14  00E8               	movwf	?___flsub+3
 10424  1E15  082C               	movf	?___fladd+2,w
 10425  1E16  00E7               	movwf	?___flsub+2
 10426  1E17  082B               	movf	?___fladd+1,w
 10427  1E18  00E6               	movwf	?___flsub+1
 10428  1E19  082A               	movf	?___fladd,w
 10429  1E1A  00E5               	movwf	?___flsub
 10430  1E1B  0008               	return
 10431  1E1C                     __end_of___flsub:
 10432                           
 10433                           	psect	text46
 10434  0909                     __ptext46:	
 10435 ;; *************** function ___fladd *****************
 10436 ;; Defined at:
 10437 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcadd.c"
 10438 ;; Parameters:    Size  Location     Type
 10439 ;;  b               4   10[BANK0 ] unsigned int 
 10440 ;;  a               4   14[BANK0 ] unsigned int 
 10441 ;; Auto vars:     Size  Location     Type
 10442 ;;  grs             1   29[BANK0 ] unsigned char 
 10443 ;;  bexp            1   28[BANK0 ] unsigned char 
 10444 ;;  aexp            1   27[BANK0 ] unsigned char 
 10445 ;;  signs           1   26[BANK0 ] unsigned char 
 10446 ;; Return value:  Size  Location     Type
 10447 ;;                  4   10[BANK0 ] unsigned char 
 10448 ;; Registers used:
 10449 ;;		wreg, status,2, status,0, btemp+1
 10450 ;; Tracked objects:
 10451 ;;		On entry : 0/0
 10452 ;;		On exit  : 0/0
 10453 ;;		Unchanged: 0/0
 10454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10455 ;;      Params:         0       8       0       0       0
 10456 ;;      Locals:         0       4       0       0       0
 10457 ;;      Temps:          0       8       0       0       0
 10458 ;;      Totals:         0      20       0       0       0
 10459 ;;Total ram usage:       20 bytes
 10460 ;; Hardware stack levels used: 1
 10461 ;; This function calls:
 10462 ;;		Nothing
 10463 ;; This function is called by:
 10464 ;;		_slave
 10465 ;;		_map
 10466 ;;		___flsub
 10467 ;;		_log
 10468 ;;		_eval_poly
 10469 ;; This function uses a non-reentrant model
 10470 ;;
 10471                           
 10472  0909                     ___fladd:	
 10473                           ;psect for function ___fladd
 10474                           
 10475                           
 10476                           ;incstack = 0
 10477                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
 10478  0909  1283               	bcf	3,5	;RP0=0, select bank0
 10479  090A  1303               	bcf	3,6	;RP1=0, select bank0
 10480  090B  082D               	movf	___fladd@b+3,w
 10481  090C  3980               	andlw	128
 10482  090D  00B2               	movwf	??___fladd
 10483  090E  0832               	movf	??___fladd,w
 10484  090F  00BA               	movwf	___fladd@signs
 10485  0910  082D               	movf	___fladd@b+3,w
 10486  0911  00B2               	movwf	??___fladd
 10487  0912  0732               	addwf	??___fladd,w
 10488  0913  00B3               	movwf	??___fladd+1
 10489  0914  0833               	movf	??___fladd+1,w
 10490  0915  00BC               	movwf	___fladd@bexp
 10491  0916  1BAC               	btfsc	___fladd@b+2,7
 10492  0917  143C               	bsf	___fladd@bexp,0
 10493  0918  083C               	movf	___fladd@bexp,w
 10494  0919  1903               	btfsc	3,2
 10495  091A  2929               	goto	i1l2755
 10496  091B  0A3C               	incf	___fladd@bexp,w
 10497  091C  1D03               	btfss	3,2
 10498  091D  2926               	goto	i1l2751
 10499  091E  3000               	movlw	0
 10500  091F  00AD               	movwf	___fladd@b+3
 10501  0920  3000               	movlw	0
 10502  0921  00AC               	movwf	___fladd@b+2
 10503  0922  3000               	movlw	0
 10504  0923  00AB               	movwf	___fladd@b+1
 10505  0924  3000               	movlw	0
 10506  0925  00AA               	movwf	___fladd@b
 10507  0926                     i1l2751:
 10508  0926  17AC               	bsf	___fladd@b+2,7
 10509  0927  01AD               	clrf	___fladd@b+3
 10510  0928  2931               	goto	i1l2757
 10511  0929                     i1l2755:
 10512  0929  3000               	movlw	0
 10513  092A  00AD               	movwf	___fladd@b+3
 10514  092B  3000               	movlw	0
 10515  092C  00AC               	movwf	___fladd@b+2
 10516  092D  3000               	movlw	0
 10517  092E  00AB               	movwf	___fladd@b+1
 10518  092F  3000               	movlw	0
 10519  0930  00AA               	movwf	___fladd@b
 10520  0931                     i1l2757:
 10521  0931  0831               	movf	___fladd@a+3,w
 10522  0932  3980               	andlw	128
 10523  0933  00B2               	movwf	??___fladd
 10524  0934  0832               	movf	??___fladd,w
 10525  0935  00BB               	movwf	___fladd@aexp
 10526  0936  083B               	movf	___fladd@aexp,w
 10527  0937  063A               	xorwf	___fladd@signs,w
 10528  0938  1D03               	btfss	3,2
 10529  0939  173A               	bsf	___fladd@signs,6
 10530  093A  0831               	movf	___fladd@a+3,w
 10531  093B  00B2               	movwf	??___fladd
 10532  093C  0732               	addwf	??___fladd,w
 10533  093D  00B3               	movwf	??___fladd+1
 10534  093E  0833               	movf	??___fladd+1,w
 10535  093F  00BB               	movwf	___fladd@aexp
 10536  0940  1BB0               	btfsc	___fladd@a+2,7
 10537  0941  143B               	bsf	___fladd@aexp,0
 10538  0942  083B               	movf	___fladd@aexp,w
 10539  0943  1903               	btfsc	3,2
 10540  0944  2953               	goto	i1l2779
 10541  0945  0A3B               	incf	___fladd@aexp,w
 10542  0946  1D03               	btfss	3,2
 10543  0947  2950               	goto	i1l2775
 10544  0948  3000               	movlw	0
 10545  0949  00B1               	movwf	___fladd@a+3
 10546  094A  3000               	movlw	0
 10547  094B  00B0               	movwf	___fladd@a+2
 10548  094C  3000               	movlw	0
 10549  094D  00AF               	movwf	___fladd@a+1
 10550  094E  3000               	movlw	0
 10551  094F  00AE               	movwf	___fladd@a
 10552  0950                     i1l2775:
 10553  0950  17B0               	bsf	___fladd@a+2,7
 10554  0951  01B1               	clrf	___fladd@a+3
 10555  0952  295B               	goto	i1l802
 10556  0953                     i1l2779:
 10557  0953  3000               	movlw	0
 10558  0954  00B1               	movwf	___fladd@a+3
 10559  0955  3000               	movlw	0
 10560  0956  00B0               	movwf	___fladd@a+2
 10561  0957  3000               	movlw	0
 10562  0958  00AF               	movwf	___fladd@a+1
 10563  0959  3000               	movlw	0
 10564  095A  00AE               	movwf	___fladd@a
 10565  095B                     i1l802:
 10566  095B  083C               	movf	___fladd@bexp,w
 10567  095C  023B               	subwf	___fladd@aexp,w
 10568  095D  1803               	skipnc
 10569  095E  29A1               	goto	i1l2815
 10570  095F  1F3A               	btfss	___fladd@signs,6
 10571  0960  2965               	goto	i1l2785
 10572  0961  3080               	movlw	128
 10573  0962  00B2               	movwf	??___fladd
 10574  0963  0832               	movf	??___fladd,w
 10575  0964  06BA               	xorwf	___fladd@signs,f
 10576  0965                     i1l2785:
 10577  0965  083C               	movf	___fladd@bexp,w
 10578  0966  00B2               	movwf	??___fladd
 10579  0967  0832               	movf	??___fladd,w
 10580  0968  00BD               	movwf	___fladd@grs
 10581  0969  083B               	movf	___fladd@aexp,w
 10582  096A  00B2               	movwf	??___fladd
 10583  096B  0832               	movf	??___fladd,w
 10584  096C  00BC               	movwf	___fladd@bexp
 10585  096D  083D               	movf	___fladd@grs,w
 10586  096E  00B2               	movwf	??___fladd
 10587  096F  0832               	movf	??___fladd,w
 10588  0970  00BB               	movwf	___fladd@aexp
 10589  0971  082A               	movf	___fladd@b,w
 10590  0972  00B2               	movwf	??___fladd
 10591  0973  0832               	movf	??___fladd,w
 10592  0974  00BD               	movwf	___fladd@grs
 10593  0975  082E               	movf	___fladd@a,w
 10594  0976  00B2               	movwf	??___fladd
 10595  0977  0832               	movf	??___fladd,w
 10596  0978  00AA               	movwf	___fladd@b
 10597  0979  083D               	movf	___fladd@grs,w
 10598  097A  00B2               	movwf	??___fladd
 10599  097B  0832               	movf	??___fladd,w
 10600  097C  00AE               	movwf	___fladd@a
 10601  097D  082B               	movf	___fladd@b+1,w
 10602  097E  00B2               	movwf	??___fladd
 10603  097F  0832               	movf	??___fladd,w
 10604  0980  00BD               	movwf	___fladd@grs
 10605  0981  082F               	movf	___fladd@a+1,w
 10606  0982  00B2               	movwf	??___fladd
 10607  0983  0832               	movf	??___fladd,w
 10608  0984  00AB               	movwf	___fladd@b+1
 10609  0985  083D               	movf	___fladd@grs,w
 10610  0986  00B2               	movwf	??___fladd
 10611  0987  0832               	movf	??___fladd,w
 10612  0988  00AF               	movwf	___fladd@a+1
 10613  0989  082C               	movf	___fladd@b+2,w
 10614  098A  00B2               	movwf	??___fladd
 10615  098B  0832               	movf	??___fladd,w
 10616  098C  00BD               	movwf	___fladd@grs
 10617  098D  0830               	movf	___fladd@a+2,w
 10618  098E  00B2               	movwf	??___fladd
 10619  098F  0832               	movf	??___fladd,w
 10620  0990  00AC               	movwf	___fladd@b+2
 10621  0991  083D               	movf	___fladd@grs,w
 10622  0992  00B2               	movwf	??___fladd
 10623  0993  0832               	movf	??___fladd,w
 10624  0994  00B0               	movwf	___fladd@a+2
 10625  0995  082D               	movf	___fladd@b+3,w
 10626  0996  00B2               	movwf	??___fladd
 10627  0997  0832               	movf	??___fladd,w
 10628  0998  00BD               	movwf	___fladd@grs
 10629  0999  0831               	movf	___fladd@a+3,w
 10630  099A  00B2               	movwf	??___fladd
 10631  099B  0832               	movf	??___fladd,w
 10632  099C  00AD               	movwf	___fladd@b+3
 10633  099D  083D               	movf	___fladd@grs,w
 10634  099E  00B2               	movwf	??___fladd
 10635  099F  0832               	movf	??___fladd,w
 10636  09A0  00B1               	movwf	___fladd@a+3
 10637  09A1                     i1l2815:
 10638  09A1  01BD               	clrf	___fladd@grs
 10639  09A2  083B               	movf	___fladd@aexp,w
 10640  09A3  00B2               	movwf	??___fladd
 10641  09A4  01B3               	clrf	??___fladd+1
 10642  09A5  0833               	movf	??___fladd+1,w
 10643  09A6  00B5               	movwf	??___fladd+3
 10644  09A7  083C               	movf	___fladd@bexp,w
 10645  09A8  0232               	subwf	??___fladd,w
 10646  09A9  00B4               	movwf	??___fladd+2
 10647  09AA  1C03               	skipc
 10648  09AB  03B5               	decf	??___fladd+3,f
 10649  09AC  0835               	movf	??___fladd+3,w
 10650  09AD  3A80               	xorlw	128
 10651  09AE  00FF               	movwf	127
 10652  09AF  3080               	movlw	128
 10653  09B0  027F               	subwf	127,w
 10654  09B1  1D03               	skipz
 10655  09B2  29B5               	goto	u284_25
 10656  09B3  301A               	movlw	26
 10657  09B4  0234               	subwf	??___fladd+2,w
 10658  09B5                     u284_25:
 10659  09B5  1C03               	skipc
 10660  09B6  29EE               	goto	i1l2833
 10661  09B7  1283               	bcf	3,5	;RP0=0, select bank0
 10662  09B8  1303               	bcf	3,6	;RP1=0, select bank0
 10663  09B9  082D               	movf	___fladd@b+3,w
 10664  09BA  042C               	iorwf	___fladd@b+2,w
 10665  09BB  042B               	iorwf	___fladd@b+1,w
 10666  09BC  042A               	iorwf	___fladd@b,w
 10667  09BD  1903               	btfsc	3,2
 10668  09BE  29C1               	goto	u285_20
 10669  09BF  3001               	movlw	1
 10670  09C0  29C2               	goto	u286_20
 10671  09C1                     u285_20:
 10672  09C1  3000               	movlw	0
 10673  09C2                     u286_20:
 10674  09C2  00B2               	movwf	??___fladd
 10675  09C3  0832               	movf	??___fladd,w
 10676  09C4  00BD               	movwf	___fladd@grs
 10677  09C5  3000               	movlw	0
 10678  09C6  00AD               	movwf	___fladd@b+3
 10679  09C7  3000               	movlw	0
 10680  09C8  00AC               	movwf	___fladd@b+2
 10681  09C9  3000               	movlw	0
 10682  09CA  00AB               	movwf	___fladd@b+1
 10683  09CB  3000               	movlw	0
 10684  09CC  00AA               	movwf	___fladd@b
 10685  09CD  083B               	movf	___fladd@aexp,w
 10686  09CE  00B2               	movwf	??___fladd
 10687  09CF  0832               	movf	??___fladd,w
 10688  09D0  00BC               	movwf	___fladd@bexp
 10689  09D1  29F4               	goto	i1l806
 10690  09D2                     i1l808:
 10691  09D2  1C3D               	btfss	___fladd@grs,0
 10692  09D3  29DD               	goto	i1l2823
 10693  09D4  083D               	movf	___fladd@grs,w
 10694  09D5  00B2               	movwf	??___fladd
 10695  09D6  1003               	clrc
 10696  09D7  0C32               	rrf	??___fladd,w
 10697  09D8  3801               	iorlw	1
 10698  09D9  00B3               	movwf	??___fladd+1
 10699  09DA  0833               	movf	??___fladd+1,w
 10700  09DB  00BD               	movwf	___fladd@grs
 10701  09DC  29DF               	goto	i1l2825
 10702  09DD                     i1l2823:
 10703  09DD  1003               	clrc
 10704  09DE  0CBD               	rrf	___fladd@grs,f
 10705  09DF                     i1l2825:
 10706  09DF  182A               	btfsc	___fladd@b,0
 10707  09E0  17BD               	bsf	___fladd@grs,7
 10708  09E1  3001               	movlw	1
 10709  09E2  00B2               	movwf	??___fladd
 10710  09E3                     u289_25:
 10711  09E3  0D2D               	rlf	___fladd@b+3,w
 10712  09E4  0CAD               	rrf	___fladd@b+3,f
 10713  09E5  0CAC               	rrf	___fladd@b+2,f
 10714  09E6  0CAB               	rrf	___fladd@b+1,f
 10715  09E7  0CAA               	rrf	___fladd@b,f
 10716  09E8  0BB2               	decfsz	??___fladd& (0+127),f
 10717  09E9  29E3               	goto	u289_25
 10718  09EA  3001               	movlw	1
 10719  09EB  00B2               	movwf	??___fladd
 10720  09EC  0832               	movf	??___fladd,w
 10721  09ED  07BC               	addwf	___fladd@bexp,f
 10722  09EE                     i1l2833:
 10723  09EE  1283               	bcf	3,5	;RP0=0, select bank0
 10724  09EF  1303               	bcf	3,6	;RP1=0, select bank0
 10725  09F0  083B               	movf	___fladd@aexp,w
 10726  09F1  023C               	subwf	___fladd@bexp,w
 10727  09F2  1C03               	skipc
 10728  09F3  29D2               	goto	i1l808
 10729  09F4                     i1l806:
 10730  09F4  1B3A               	btfsc	___fladd@signs,6
 10731  09F5  2A35               	goto	i1l2859
 10732  09F6  083C               	movf	___fladd@bexp,w
 10733  09F7  1D03               	btfss	3,2
 10734  09F8  2A02               	goto	i1l2841
 10735  09F9  3000               	movlw	0
 10736  09FA  00AD               	movwf	?___fladd+3
 10737  09FB  3000               	movlw	0
 10738  09FC  00AC               	movwf	?___fladd+2
 10739  09FD  3000               	movlw	0
 10740  09FE  00AB               	movwf	?___fladd+1
 10741  09FF  3000               	movlw	0
 10742  0A00  00AA               	movwf	?___fladd
 10743  0A01  0008               	return
 10744  0A02                     i1l2841:
 10745  0A02  082E               	movf	___fladd@a,w
 10746  0A03  07AA               	addwf	___fladd@b,f
 10747  0A04  082F               	movf	___fladd@a+1,w
 10748  0A05  1103               	clrz
 10749  0A06  1803               	skipnc
 10750  0A07  3E01               	addlw	1
 10751  0A08  1D03               	btfss	3,2
 10752  0A09  07AB               	addwf	___fladd@b+1,f
 10753  0A0A  0830               	movf	___fladd@a+2,w
 10754  0A0B  1103               	clrz
 10755  0A0C  1803               	skipnc
 10756  0A0D  3E01               	addlw	1
 10757  0A0E  1D03               	btfss	3,2
 10758  0A0F  07AC               	addwf	___fladd@b+2,f
 10759  0A10  0831               	movf	___fladd@a+3,w
 10760  0A11  1103               	clrz
 10761  0A12  1803               	skipnc
 10762  0A13  3E01               	addlw	1
 10763  0A14  1D03               	btfss	3,2
 10764  0A15  07AD               	addwf	___fladd@b+3,f
 10765  0A16  1C2D               	btfss	___fladd@b+3,0
 10766  0A17  2AD7               	goto	i1l2893
 10767  0A18  1C3D               	btfss	___fladd@grs,0
 10768  0A19  2A23               	goto	i1l2849
 10769  0A1A  083D               	movf	___fladd@grs,w
 10770  0A1B  00B2               	movwf	??___fladd
 10771  0A1C  1003               	clrc
 10772  0A1D  0C32               	rrf	??___fladd,w
 10773  0A1E  3801               	iorlw	1
 10774  0A1F  00B3               	movwf	??___fladd+1
 10775  0A20  0833               	movf	??___fladd+1,w
 10776  0A21  00BD               	movwf	___fladd@grs
 10777  0A22  2A25               	goto	i1l2851
 10778  0A23                     i1l2849:
 10779  0A23  1003               	clrc
 10780  0A24  0CBD               	rrf	___fladd@grs,f
 10781  0A25                     i1l2851:
 10782  0A25  182A               	btfsc	___fladd@b,0
 10783  0A26  17BD               	bsf	___fladd@grs,7
 10784  0A27  3001               	movlw	1
 10785  0A28  00B2               	movwf	??___fladd
 10786  0A29                     u297_25:
 10787  0A29  0D2D               	rlf	___fladd@b+3,w
 10788  0A2A  0CAD               	rrf	___fladd@b+3,f
 10789  0A2B  0CAC               	rrf	___fladd@b+2,f
 10790  0A2C  0CAB               	rrf	___fladd@b+1,f
 10791  0A2D  0CAA               	rrf	___fladd@b,f
 10792  0A2E  0BB2               	decfsz	??___fladd& (0+127),f
 10793  0A2F  2A29               	goto	u297_25
 10794  0A30  3001               	movlw	1
 10795  0A31  00B2               	movwf	??___fladd
 10796  0A32  0832               	movf	??___fladd,w
 10797  0A33  07BC               	addwf	___fladd@bexp,f
 10798  0A34  2AD7               	goto	i1l2893
 10799  0A35                     i1l2859:
 10800  0A35  082D               	movf	___fladd@b+3,w
 10801  0A36  3A80               	xorlw	128
 10802  0A37  00FF               	movwf	127
 10803  0A38  0831               	movf	___fladd@a+3,w
 10804  0A39  3A80               	xorlw	128
 10805  0A3A  027F               	subwf	127,w
 10806  0A3B  1D03               	skipz
 10807  0A3C  2A47               	goto	u298_23
 10808  0A3D  0830               	movf	___fladd@a+2,w
 10809  0A3E  022C               	subwf	___fladd@b+2,w
 10810  0A3F  1D03               	skipz
 10811  0A40  2A47               	goto	u298_23
 10812  0A41  082F               	movf	___fladd@a+1,w
 10813  0A42  022B               	subwf	___fladd@b+1,w
 10814  0A43  1D03               	skipz
 10815  0A44  2A47               	goto	u298_23
 10816  0A45  082E               	movf	___fladd@a,w
 10817  0A46  022A               	subwf	___fladd@b,w
 10818  0A47                     u298_23:
 10819  0A47  1803               	skipnc
 10820  0A48  2A9F               	goto	i1l2869
 10821  0A49  30FF               	movlw	255
 10822  0A4A  00B2               	movwf	??___fladd
 10823  0A4B  30FF               	movlw	255
 10824  0A4C  00B3               	movwf	??___fladd+1
 10825  0A4D  30FF               	movlw	255
 10826  0A4E  00B4               	movwf	??___fladd+2
 10827  0A4F  30FF               	movlw	255
 10828  0A50  00B5               	movwf	??___fladd+3
 10829  0A51  082E               	movf	___fladd@a,w
 10830  0A52  00B6               	movwf	??___fladd+4
 10831  0A53  082F               	movf	___fladd@a+1,w
 10832  0A54  00B7               	movwf	??___fladd+5
 10833  0A55  0830               	movf	___fladd@a+2,w
 10834  0A56  00B8               	movwf	??___fladd+6
 10835  0A57  0831               	movf	___fladd@a+3,w
 10836  0A58  00B9               	movwf	??___fladd+7
 10837  0A59  082A               	movf	___fladd@b,w
 10838  0A5A  02B6               	subwf	??___fladd+4,f
 10839  0A5B  082B               	movf	___fladd@b+1,w
 10840  0A5C  1C03               	skipc
 10841  0A5D  0F2B               	incfsz	___fladd@b+1,w
 10842  0A5E  2A60               	goto	u299_21
 10843  0A5F  2A61               	goto	u299_22
 10844  0A60                     u299_21:
 10845  0A60  02B7               	subwf	??___fladd+5,f
 10846  0A61                     u299_22:
 10847  0A61  082C               	movf	___fladd@b+2,w
 10848  0A62  1C03               	skipc
 10849  0A63  0F2C               	incfsz	___fladd@b+2,w
 10850  0A64  2A66               	goto	u299_23
 10851  0A65  2A67               	goto	u299_24
 10852  0A66                     u299_23:
 10853  0A66  02B8               	subwf	??___fladd+6,f
 10854  0A67                     u299_24:
 10855  0A67  082D               	movf	___fladd@b+3,w
 10856  0A68  1C03               	skipc
 10857  0A69  0F2D               	incfsz	___fladd@b+3,w
 10858  0A6A  2A6C               	goto	u299_25
 10859  0A6B  2A6D               	goto	u299_26
 10860  0A6C                     u299_25:
 10861  0A6C  02B9               	subwf	??___fladd+7,f
 10862  0A6D                     u299_26:
 10863  0A6D  0836               	movf	??___fladd+4,w
 10864  0A6E  07B2               	addwf	??___fladd,f
 10865  0A6F  0837               	movf	??___fladd+5,w
 10866  0A70  1803               	skipnc
 10867  0A71  0F37               	incfsz	??___fladd+5,w
 10868  0A72  2A74               	goto	u300_20
 10869  0A73  2A75               	goto	u300_21
 10870  0A74                     u300_20:
 10871  0A74  07B3               	addwf	??___fladd+1,f
 10872  0A75                     u300_21:
 10873  0A75  0838               	movf	??___fladd+6,w
 10874  0A76  1803               	skipnc
 10875  0A77  0F38               	incfsz	??___fladd+6,w
 10876  0A78  2A7A               	goto	u300_22
 10877  0A79  2A7B               	goto	u300_23
 10878  0A7A                     u300_22:
 10879  0A7A  07B4               	addwf	??___fladd+2,f
 10880  0A7B                     u300_23:
 10881  0A7B  0839               	movf	??___fladd+7,w
 10882  0A7C  1803               	skipnc
 10883  0A7D  0A39               	incf	??___fladd+7,w
 10884  0A7E  07B5               	addwf	??___fladd+3,f
 10885  0A7F  0835               	movf	??___fladd+3,w
 10886  0A80  00AD               	movwf	___fladd@b+3
 10887  0A81  0834               	movf	??___fladd+2,w
 10888  0A82  00AC               	movwf	___fladd@b+2
 10889  0A83  0833               	movf	??___fladd+1,w
 10890  0A84  00AB               	movwf	___fladd@b+1
 10891  0A85  0832               	movf	??___fladd,w
 10892  0A86  00AA               	movwf	___fladd@b
 10893  0A87  3080               	movlw	128
 10894  0A88  00B2               	movwf	??___fladd
 10895  0A89  0832               	movf	??___fladd,w
 10896  0A8A  06BA               	xorwf	___fladd@signs,f
 10897  0A8B  09BD               	comf	___fladd@grs,f
 10898  0A8C  0ABD               	incf	___fladd@grs,f
 10899  0A8D  083D               	movf	___fladd@grs,w
 10900  0A8E  1D03               	btfss	3,2
 10901  0A8F  2AAD               	goto	i1l823
 10902  0A90  3001               	movlw	1
 10903  0A91  07AA               	addwf	___fladd@b,f
 10904  0A92  3000               	movlw	0
 10905  0A93  1803               	skipnc
 10906  0A94  3001               	movlw	1
 10907  0A95  07AB               	addwf	___fladd@b+1,f
 10908  0A96  3000               	movlw	0
 10909  0A97  1803               	skipnc
 10910  0A98  3001               	movlw	1
 10911  0A99  07AC               	addwf	___fladd@b+2,f
 10912  0A9A  3000               	movlw	0
 10913  0A9B  1803               	skipnc
 10914  0A9C  3001               	movlw	1
 10915  0A9D  07AD               	addwf	___fladd@b+3,f
 10916  0A9E  2AAD               	goto	i1l823
 10917  0A9F                     i1l2869:
 10918  0A9F  082E               	movf	___fladd@a,w
 10919  0AA0  02AA               	subwf	___fladd@b,f
 10920  0AA1  082F               	movf	___fladd@a+1,w
 10921  0AA2  1C03               	skipc
 10922  0AA3  0F2F               	incfsz	___fladd@a+1,w
 10923  0AA4  02AB               	subwf	___fladd@b+1,f
 10924  0AA5  0830               	movf	___fladd@a+2,w
 10925  0AA6  1C03               	skipc
 10926  0AA7  0F30               	incfsz	___fladd@a+2,w
 10927  0AA8  02AC               	subwf	___fladd@b+2,f
 10928  0AA9  0831               	movf	___fladd@a+3,w
 10929  0AAA  1C03               	skipc
 10930  0AAB  0F31               	incfsz	___fladd@a+3,w
 10931  0AAC  02AD               	subwf	___fladd@b+3,f
 10932  0AAD                     i1l823:
 10933  0AAD  082D               	movf	___fladd@b+3,w
 10934  0AAE  042C               	iorwf	___fladd@b+2,w
 10935  0AAF  042B               	iorwf	___fladd@b+1,w
 10936  0AB0  042A               	iorwf	___fladd@b,w
 10937  0AB1  1D03               	skipz
 10938  0AB2  2AD5               	goto	i1l2891
 10939  0AB3  083D               	movf	___fladd@grs,w
 10940  0AB4  1D03               	btfss	3,2
 10941  0AB5  2AD5               	goto	i1l2891
 10942  0AB6  3000               	movlw	0
 10943  0AB7  00AD               	movwf	?___fladd+3
 10944  0AB8  3000               	movlw	0
 10945  0AB9  00AC               	movwf	?___fladd+2
 10946  0ABA  3000               	movlw	0
 10947  0ABB  00AB               	movwf	?___fladd+1
 10948  0ABC  3000               	movlw	0
 10949  0ABD  00AA               	movwf	?___fladd
 10950  0ABE  0008               	return
 10951  0ABF                     i1l2877:
 10952  0ABF  3001               	movlw	1
 10953  0AC0  00B2               	movwf	??___fladd
 10954  0AC1                     u304_25:
 10955  0AC1  1003               	clrc
 10956  0AC2  0DAA               	rlf	___fladd@b,f
 10957  0AC3  0DAB               	rlf	___fladd@b+1,f
 10958  0AC4  0DAC               	rlf	___fladd@b+2,f
 10959  0AC5  0DAD               	rlf	___fladd@b+3,f
 10960  0AC6  0BB2               	decfsz	??___fladd,f
 10961  0AC7  2AC1               	goto	u304_25
 10962  0AC8  1BBD               	btfsc	___fladd@grs,7
 10963  0AC9  142A               	bsf	___fladd@b,0
 10964  0ACA  1C3D               	btfss	___fladd@grs,0
 10965  0ACB  2ACE               	goto	i1l2885
 10966  0ACC  1403               	setc
 10967  0ACD  2ACF               	goto	L25
 10968  0ACE                     i1l2885:
 10969  0ACE  1003               	clrc
 10970  0ACF                     L25:
 10971  0ACF  0DBD               	rlf	___fladd@grs,f
 10972  0AD0  083C               	movf	___fladd@bexp,w
 10973  0AD1  1903               	btfsc	3,2
 10974  0AD2  2AD5               	goto	i1l2891
 10975  0AD3  3001               	movlw	1
 10976  0AD4  02BC               	subwf	___fladd@bexp,f
 10977  0AD5                     i1l2891:
 10978  0AD5  1FAC               	btfss	___fladd@b+2,7
 10979  0AD6  2ABF               	goto	i1l2877
 10980  0AD7                     i1l2893:
 10981  0AD7  01BB               	clrf	___fladd@aexp
 10982  0AD8  1FBD               	btfss	___fladd@grs,7
 10983  0AD9  2AE2               	goto	i1l2903
 10984  0ADA  083D               	movf	___fladd@grs,w
 10985  0ADB  397F               	andlw	127
 10986  0ADC  1903               	btfsc	3,2
 10987  0ADD  182A               	btfsc	___fladd@b,0
 10988  0ADE  2AE0               	goto	i1l2899
 10989  0ADF  2AE2               	goto	i1l2903
 10990  0AE0                     i1l2899:
 10991  0AE0  01BB               	clrf	___fladd@aexp
 10992  0AE1  0ABB               	incf	___fladd@aexp,f
 10993  0AE2                     i1l2903:
 10994  0AE2  083B               	movf	___fladd@aexp,w
 10995  0AE3  1903               	btfsc	3,2
 10996  0AE4  2B15               	goto	i1l836
 10997  0AE5  3001               	movlw	1
 10998  0AE6  07AA               	addwf	___fladd@b,f
 10999  0AE7  3000               	movlw	0
 11000  0AE8  1803               	skipnc
 11001  0AE9  3001               	movlw	1
 11002  0AEA  07AB               	addwf	___fladd@b+1,f
 11003  0AEB  3000               	movlw	0
 11004  0AEC  1803               	skipnc
 11005  0AED  3001               	movlw	1
 11006  0AEE  07AC               	addwf	___fladd@b+2,f
 11007  0AEF  3000               	movlw	0
 11008  0AF0  1803               	skipnc
 11009  0AF1  3001               	movlw	1
 11010  0AF2  07AD               	addwf	___fladd@b+3,f
 11011  0AF3  1C2D               	btfss	___fladd@b+3,0
 11012  0AF4  2B15               	goto	i1l836
 11013  0AF5  082A               	movf	___fladd@b,w
 11014  0AF6  00B2               	movwf	??___fladd
 11015  0AF7  082B               	movf	___fladd@b+1,w
 11016  0AF8  00B3               	movwf	??___fladd+1
 11017  0AF9  082C               	movf	___fladd@b+2,w
 11018  0AFA  00B4               	movwf	??___fladd+2
 11019  0AFB  082D               	movf	___fladd@b+3,w
 11020  0AFC  00B5               	movwf	??___fladd+3
 11021  0AFD  3001               	movlw	1
 11022  0AFE  00B6               	movwf	??___fladd+4
 11023  0AFF                     u314_25:
 11024  0AFF  0D35               	rlf	??___fladd+3,w
 11025  0B00  0CB5               	rrf	??___fladd+3,f
 11026  0B01  0CB4               	rrf	??___fladd+2,f
 11027  0B02  0CB3               	rrf	??___fladd+1,f
 11028  0B03  0CB2               	rrf	??___fladd,f
 11029  0B04  0BB6               	decfsz	??___fladd+4,f
 11030  0B05  2AFF               	goto	u314_25
 11031  0B06  0835               	movf	??___fladd+3,w
 11032  0B07  00AD               	movwf	___fladd@b+3
 11033  0B08  0834               	movf	??___fladd+2,w
 11034  0B09  00AC               	movwf	___fladd@b+2
 11035  0B0A  0833               	movf	??___fladd+1,w
 11036  0B0B  00AB               	movwf	___fladd@b+1
 11037  0B0C  0832               	movf	??___fladd,w
 11038  0B0D  00AA               	movwf	___fladd@b
 11039  0B0E  0A3C               	incf	___fladd@bexp,w
 11040  0B0F  1903               	btfsc	3,2
 11041  0B10  2B15               	goto	i1l836
 11042  0B11  3001               	movlw	1
 11043  0B12  00B2               	movwf	??___fladd
 11044  0B13  0832               	movf	??___fladd,w
 11045  0B14  07BC               	addwf	___fladd@bexp,f
 11046  0B15                     i1l836:
 11047  0B15  0A3C               	incf	___fladd@bexp,w
 11048  0B16  1D03               	btfss	3,2
 11049  0B17  083C               	movf	___fladd@bexp,w
 11050  0B18  1D03               	btfss	3,2
 11051  0B19  2B25               	goto	i1l2921
 11052  0B1A  3000               	movlw	0
 11053  0B1B  00AD               	movwf	___fladd@b+3
 11054  0B1C  3000               	movlw	0
 11055  0B1D  00AC               	movwf	___fladd@b+2
 11056  0B1E  3000               	movlw	0
 11057  0B1F  00AB               	movwf	___fladd@b+1
 11058  0B20  3000               	movlw	0
 11059  0B21  00AA               	movwf	___fladd@b
 11060  0B22  083C               	movf	___fladd@bexp,w
 11061  0B23  1903               	btfsc	3,2
 11062  0B24  01BA               	clrf	___fladd@signs
 11063  0B25                     i1l2921:
 11064  0B25  1C3C               	btfss	___fladd@bexp,0
 11065  0B26  2B29               	goto	i1l2925
 11066  0B27  17AC               	bsf	___fladd@b+2,7
 11067  0B28  2B2D               	goto	i1l844
 11068  0B29                     i1l2925:
 11069  0B29  307F               	movlw	127
 11070  0B2A  00B2               	movwf	??___fladd
 11071  0B2B  0832               	movf	??___fladd,w
 11072  0B2C  05AC               	andwf	___fladd@b+2,f
 11073  0B2D                     i1l844:
 11074  0B2D  083C               	movf	___fladd@bexp,w
 11075  0B2E  00B2               	movwf	??___fladd
 11076  0B2F  1003               	clrc
 11077  0B30  0C32               	rrf	??___fladd,w
 11078  0B31  00B3               	movwf	??___fladd+1
 11079  0B32  0833               	movf	??___fladd+1,w
 11080  0B33  00AD               	movwf	___fladd@b+3
 11081  0B34  1FBA               	btfss	___fladd@signs,7
 11082  0B35  0008               	return
 11083  0B36  17AD               	bsf	___fladd@b+3,7
 11084  0B37  0008               	return
 11085  0B38                     __end_of___fladd:
 11086  007E                     btemp	set	126	;btemp
 11087  007E                     wtemp0	set	126
 11088                           
 11089                           	psect	idloc
 11090                           
 11091                           ;Config register IDLOC0 @ 0x2000
 11092                           ;	unspecified, using default values
 11093  2000                     	org	8192
 11094  2000  3FFF               	dw	16383
 11095                           
 11096                           ;Config register IDLOC1 @ 0x2001
 11097                           ;	unspecified, using default values
 11098  2001                     	org	8193
 11099  2001  3FFF               	dw	16383
 11100                           
 11101                           ;Config register IDLOC2 @ 0x2002
 11102                           ;	unspecified, using default values
 11103  2002                     	org	8194
 11104  2002  3FFF               	dw	16383
 11105                           
 11106                           ;Config register IDLOC3 @ 0x2003
 11107                           ;	unspecified, using default values
 11108  2003                     	org	8195
 11109  2003  3FFF               	dw	16383
 11110                           
 11111                           	psect	config
 11112                           
 11113                           ;Config register CONFIG1 @ 0x2007
 11114                           ;	Oscillator Selection bits
 11115                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 11116                           ;	Watchdog Timer Enable bit
 11117                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 11118                           ;	Power-up Timer Enable bit
 11119                           ;	PWRTE = OFF, PWRT disabled
 11120                           ;	RE3/MCLR pin function select bit
 11121                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 11122                           ;	Code Protection bit
 11123                           ;	CP = OFF, Program memory code protection is disabled
 11124                           ;	Data Code Protection bit
 11125                           ;	CPD = OFF, Data memory code protection is disabled
 11126                           ;	Brown Out Reset Selection bits
 11127                           ;	BOREN = OFF, BOR disabled
 11128                           ;	Internal External Switchover bit
 11129                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 11130                           ;	Fail-Safe Clock Monitor Enabled bit
 11131                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 11132                           ;	Low Voltage Programming Enable bit
 11133                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 11134                           ;	In-Circuit Debugger Mode bit
 11135                           ;	DEBUG = 0x1, unprogrammed default
 11136  2007                     	org	8199
 11137  2007  20D4               	dw	8404
 11138                           
 11139                           ;Config register CONFIG2 @ 0x2008
 11140                           ;	Brown-out Reset Selection bit
 11141                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
 11142                           ;	Flash Program Memory Self Write Enable bits
 11143                           ;	WRT = OFF, Write protection off
 11144  2008                     	org	8200
 11145  2008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    36
    Data        25
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     56      80
    BANK3            96     68      95
    BANK2            96      0       4

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(1) Largest target is 36
		 -> log@coeff(CODE[36]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _slave in COMMON

    _log->_frexp
    _frexp->___fleq
    ___flmul->_frexp
    ___xxtofl->__Umul8_16
    ___fladd->_frexp

Critical Paths under _main in BANK0

    None.

Critical Paths under _slave in BANK0

    _slave->_log
    _slave->i1___fltol
    _map->i1___fltol
    i1___fltol->___flsub
    ___fldiv->___flmul
    _log->_eval_poly
    _eval_poly->___flmul
    ___flmul->___fladd
    ___flsub->___fldiv
    ___fladd->___xxtofl

Critical Paths under _main in BANK1

    None.

Critical Paths under _slave in BANK1

    _slave->_map
    _map->i1___fltol
    i1___fltol->___fldiv
    ___flsub->___fldiv

Critical Paths under _main in BANK3

    _main->_RTC_read
    _setup->_USART_set
    _USART_set->___lldiv
    _I2C_Master_Init->___lldiv
    _servo->_pwm_duty_cycle
    _motor_dc->___fltol
    _RTC_read->_bcd_dec
    _bcd_dec->___bmul
    _LUX_read->___bmul
    _calculateLux->___lldiv
    ___bmul->_calculateLux
    _LUX_config->_I2C_Master_Write

Critical Paths under _slave in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _slave in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10327
                                             64 BANK3      4     4      0
                         _LUX_config
                           _LUX_read
                           _RTC_read
                            ___fltol
                      _adc_ch_switch
                           _motor_dc
                         _pulse_step
                              _servo
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1782
                    _I2C_Master_Init
                          _USART_set
                           _adc_init
                        _int_osc_MHz
                           _pwm_init
                          _tmr0_init
                        _tmr0_reload
 ---------------------------------------------------------------------------------
 (2) _tmr0_reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            3     3      0      66
                                              0 BANK3      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pwm_init                                             3     3      0      22
                                              0 BANK3      3     3      0
 ---------------------------------------------------------------------------------
 (2) _int_osc_MHz                                          3     3      0      22
                                              0 BANK3      3     3      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             5     3      2     218
                                              0 BANK3      5     3      2
 ---------------------------------------------------------------------------------
 (2) _USART_set                                           16    12      4     738
                                             14 BANK3     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     716
                                             14 BANK3      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _servo                                                2     0      2     382
                                              4 BANK3      2     0      2
                         _USART_send
                     _pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (2) _pwm_duty_cycle                                       4     2      2     196
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _pulse_step                                           4     0      4     240
                                              0 BANK3      4     0      4
 ---------------------------------------------------------------------------------
 (1) _motor_dc                                             2     0      2     186
                                             11 BANK3      2     0      2
                         _USART_send
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_ch_switch                                        3     3      0      22
                                              0 BANK3      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     405
                                              0 BANK3     11     7      4
 ---------------------------------------------------------------------------------
 (1) _RTC_read                                             2     2      0    2049
                                             62 BANK3      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_send
                            _bcd_dec
 ---------------------------------------------------------------------------------
 (2) _bcd_dec                                              4     4      0     288
                                             58 BANK3      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _LUX_read                                             2     2      0    4099
                                             58 BANK3      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_send
                             ___bmul
                       _calculateLux
 ---------------------------------------------------------------------------------
 (2) _calculateLux                                        42    38      4    2094
                                             14 BANK3     40    36      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     700
                                              0 BANK3     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     618
                                              0 BANK3     14     6      8
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     244
                                             54 BANK3      4     3      1
                       _calculateLux (ARG)
 ---------------------------------------------------------------------------------
 (2) _USART_send                                           1     1      0      22
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     577
                                              0 BANK3      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _LUX_config                                           2     2      0    1162
                                              2 BANK3      2     2      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2    1162
                                              0 BANK3      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _slave                                               24    24      0   40733
                                             32 BANK1     24    24      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___lwdiv
                           ___xxtofl
                           _adc_read
                                _log
                                _map
                          i1___fltol
                      i1_tmr0_reload
 ---------------------------------------------------------------------------------
 (5) i1_tmr0_reload                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _map                                                 10     0     10   10053
                                             22 BANK1     10     0     10
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _adc_read (ARG)
                          i1___fltol
 ---------------------------------------------------------------------------------
 (5) i1___fltol                                           11     7      4     281
                                             77 BANK0      2     2      0
                                             13 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    1425
                                             56 BANK0     13     5      8
                                              0 BANK1     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _log                                                  7     3      4   17358
                                             72 BANK0      7     3      4
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                7     2      5     896
                                             12 COMMON     2     2      0
                                              0 BANK0      5     0      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     520
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) _eval_poly                                           16     9      7    7365
                                             56 BANK0     16     9      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    3759
                                             30 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4     854
                                              9 COMMON     4     0      4
                                              0 BANK0     10    10      0
                          __Umul8_16 (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     460
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) _adc_read                                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3397
                                             69 BANK0      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    3200
                                             10 BANK0     20    12      8
                          __Umul8_16 (ARG)
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LUX_config
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _LUX_read
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _USART_send
     ___bmul
       _calculateLux (ARG)
         ___lldiv
         ___lmul
     _calculateLux
   _RTC_read
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _USART_send
     _bcd_dec
       ___bmul
   ___fltol
   _adc_ch_switch
   _motor_dc
     _USART_send
     ___fltol (ARG)
   _pulse_step
   _servo
     _USART_send
     _pwm_duty_cycle
   _setup
     _I2C_Master_Init
       ___lldiv
     _USART_set
       ___lldiv
     _adc_init
     _int_osc_MHz
     _pwm_init
     _tmr0_init
     _tmr0_reload

 _slave (ROOT)
   ___fladd
     __Umul8_16 (ARG)
     ___lwdiv (ARG)
     ___xxtofl (ARG)
       __Umul8_16 (ARG)
       ___lwdiv (ARG)
     _frexp (ARG)
       ___fleq
   ___fldiv
     ___fladd (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___fladd (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
       _frexp (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___flsub
     ___fladd
     ___fldiv (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _adc_read
   _log
     ___fladd
     ___fleq
     ___flge
     ___flmul
     ___xxtofl
     _eval_poly
       ___fladd
       ___flmul
     _frexp
   _map
     ___fladd
     ___fldiv
     ___flmul
     ___xxtofl
     _adc_read (ARG)
     i1___fltol (ARG)
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
   i1___fltol
   i1_tmr0_reload

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     44      5F       9       99.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       4      11        4.2%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     38      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     110      12        0.0%
ABS                  0      0     110       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Fri Sep 23 22:26:12 2022

                               _A 00E4                                 _B 00EC                                 _C 0110  
                    ___fldiv@aexp 00AC                      ___fldiv@bexp 00AB                                 _p 01E5  
                               pc 0002                        _LUX_config 079D                      ___fldiv@sign 00A4  
                  ___bmul@product 01C8                                _R1 00E8                                _R2 00D8  
                              _TC 01D4                                fsr 0004               __Umul8_16@word_mpld 0076  
                             l210 1035                               l303 15E7                               l233 1D94  
                             _CH0 01DA                               l165 1E4F                               l325 1F3C  
                             _CH1 01D8                               l270 12D7                               l423 0D6A  
                             l327 1F49                               l272 12ED                               l273 1308  
                             l329 1F70                               l290 1559                               l274 12EE  
                             l355 1D5F                               l179 1DF6                               l275 12F2  
                             l267 12D2                               l188 17FC                               l373 1EB9  
                             l269 12D3                               l374 1EBC                               l702 1212  
                             l295 158E                               l287 1548                               l389 129D  
                             _PR2 0092                               _LUX 01DE                               _dir 01EB  
                             _map 168D                               _min 01E4                               _log 0693  
                             _hrs 01E3                               fsr0 0004                               indf 0000  
                    i1___fltol@f1 00AD                      ___flmul@aexp 0050                      ___flmul@bexp 0051  
                    ___flmul@sign 004B                      ___flmul@temp 0056                      ___flmul@prod 0052  
                    ___fltol@exp1 019A                              l3201 101F             adc_ch_switch@channels 0192  
                            l3301 123F                              l3151 0C6B                              l3143 0C37  
                            l3223 1F54                              l3311 124D                              l3137 0BF5  
                            l3225 1F64                              l3321 126C                              l3313 1253  
                            l3305 1246                              l3163 0CBD                              l3155 0C87  
                            l3147 0C52                              l3171 0CF2                              l4211 1280  
                            l3323 1271                              l3315 1259                              l3307 1246  
                            l4221 1300                              l3261 12B0                              l4213 1F5C  
                            l3317 125F                              l3309 1247                              l3167 0CDA  
                            l3159 0CA3                              l4223 15DC                              l3263 12B5  
                            l3271 12DB                              l3255 12A4                              l4215 1027  
                            l3191 100C                              l3319 1265                              l3327 1276  
                            l2721 10E8                              l3169 0CEC                              l4217 12C4  
                            l3257 12A9                              l3193 1012                              l2707 10A3  
                            l4219 12E5                              l3275 12F6                              l3259 12AA  
                            l3267 12BC                              l3195 1013                              l2717 10DB  
                            l2709 10B3                              l3197 1018                              l3189 1006  
                            l2675 1F81                              l3731 1DEA                              l2693 1DB9  
                            ?_map 00B6                              l2679 1F97                              l3831 17CC  
                            l3807 1E6F                              l2689 1DB3                              l3841 17F2  
                            l3825 17BB                              l3771 15B3                              l3763 15C2  
                            l3755 1583                              l3747 157C                              l3765 15A2  
                            l3749 156D                              l3839 17E7                              l3863 11CE  
                            l3783 15D4                              l3777 15C9                              l3883 11FE  
                            l3867 11D7                              l3795 1E52                              l3893 1221  
                            l3885 120E                              ?_log 0068                              l3989 10FB  
                            u2605 1F99                              u2615 1FA1                              u2705 10DC  
                            u5107 17ED                              u5117 07F8                              u3605 1DCF  
                            u3703 0C61                              u3615 0B4B                              u2665 10A7  
                            u3713 0C7B                              u3625 0B79                              u5057 1552  
                            u3723 0C97                              u3635 0BA7                              u5067 1580  
                            u3660 0C04                              u2685 10B5                              u3733 0CB3  
                            u3661 0C05                              u5077 1587                              u3821 119C  
                            u3805 116C                              u3662 0C0A                              u3822 119D  
                            u2695 10CA                              u3743 0CCD                              u3663 0C0B  
                            u3655 0BD6                              u5087 15C6                              u3823 11A2  
                            u3815 1185                              u3824 11A3                              u3753 0CEA  
                            u5097 15CD                              u3825 11A8                              u4730 17E4  
                            u3826 11A9                              u3771 0D55                              u3683 0C2D  
                            u3675 0C10                              u4635 1E49                              u3772 0D56  
                            u3773 0D5B                              u3765 0D44                              u3693 0C46  
                            u4645 1E5A                              u3774 0D5C                              u4670 1E8C  
                            u3775 0D61                              u4815 11FF                              u3855 1ED6  
                            u3776 0D62                              u4680 1E8D                              u3785 0D81  
                            u4665 1E80                              u4845 1217                              u4785 11E0  
                            _TMR0 0001  __end_of_I2C_Master_RepeatedStart 1D57                              _main 10F1  
                            map@x 00B6                              btemp 007E                              log@x 0068  
                            start 0012                   ___fldiv@new_exp 00A5                 ___bmul@multiplier 01C9  
                  _pwm_duty_cycle 1E1C                             ??_map 007E                             ??_log 006C  
                ?_I2C_Master_Init 019E                  ?_I2C_Master_Read 0190                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                     ___fltol@sign1 0199                   __end_of___fladd 0B38  
                           ?_main 0070                   __end_of___fldiv 1000                   __end_of___flmul 0693  
                 __end_of___flsub 1E1C                   __end_of___fltol 1230                             _ANSEL 0188  
                 __end_of___lldiv 10F1                   __end_of_bcd_dec 1DDC                   __end_of___lwdiv 1F38  
                           i1l151 0371                             i1l143 0071                             i1l146 0082  
                           i1l702 13F2                             i1l802 095B                             i1l806 09F4  
                           i1l910 0686                             i1l823 0AAD                             i1l808 09D2  
                           i1l683 1430                             i1l844 0B2D                             i1l836 0B15  
                           i1l917 0813                             i1l686 1496                             i1l942 1607  
                           i1l678 1FD2                             i1l679 1FEC                             i1l880 0FDE  
                           i1l882 0FF4                             i1l858 0E0C                             i1l955 165D  
                           i1l956 1667                             i1l948 1647                             _SPBRG 0099  
                           _TXREG 0019                adc_init@vref_minus 0191               ___lmul@multiplicand 0194  
                 int_osc_MHz@freq 0192                             _logR2 00DC                             _frexp 1037  
                           _errno 00E0                             _slave 0052                             map@x0 00B8  
                           map@x1 00BA                             map@y0 00BC                             map@y1 00BE  
                           _servo 1E67                             _setup 1313                             _pulso 01EC  
                    ?_int_osc_MHz 0070                  __end_of_LUX_read 0909                             pclath 000A  
                __end_of_RTC_read 1800                    i1___fltol@exp1 006E                             status 0003  
                           wtemp0 007E            __end_of_pwm_duty_cycle 1E3E                   __initialization 0015  
                     ?_USART_send 0070                       log@exponent 006D                      __end_of_main 1158  
                     ?_LUX_config 0070                      _switch_servo 01DC                            ??_main 01D0  
                   _adc_ch_switch 1544                 ?_I2C_Master_Start 0070                 ?_I2C_Master_Write 0190  
                    ?_tmr0_reload 0070                ??_I2C_Master_Start 0190                ??_I2C_Master_Write 0192  
                          ?_frexp 0020                            _ADRESH 001E                            _ADRESL 009E  
                          _CCPR1L 0015                            ?_slave 0070                            ?_servo 0194  
                          ?_setup 0070                            _ANSELH 0189                  __end_of_adc_init 1313  
                __end_of_adc_read 1D7B                            i1l3035 060C                            i1l3027 05D8  
                          i1l3053 0656                            i1l3029 05F5                            i1l3039 060E  
                          i1l3049 0640                            i1l3059 066F                            i1l3403 0E02  
                          i1l3501 0FEE                            i1l3413 0E2F                            i1l3351 144A  
                          i1l3513 15FF                            i1l3355 1470                            i1l3523 161A  
                          i1l3419 0E3F                            i1l3603 13DA                            i1l3533 165B  
                          i1l3525 162C                            i1l2733 1FFE                            i1l3445 0F06  
                          i1l3437 0EB0                            i1l3373 0DB4                            i1l3613 1405  
                          i1l3605 13EE                            i1l2903 0AE2                            i1l2823 09DD  
                          i1l2815 09A1                            i1l2751 0926                            i1l3535 164C  
                          i1l3519 1616                            i1l3471 0F67                            i1l3463 0F15  
                          i1l3439 0EBE                            i1l3447 0E8A                            i1l3383 0DCA  
                          i1l2921 0B25                            i1l2841 0A02                            i1l2825 09DF  
                          i1l2833 09EE                            i1l3633 06BD                            i1l3465 0F40  
                          i1l3449 0F0F                            i1l3393 0DEC                            i1l3385 0DD4  
                          i1l2851 0A25                            i1l2755 0929                            i1l3547 1684  
                          i1l2659 080B                            i1l3475 0F6B                            i1l3459 0F29  
                          i1l3379 0DC6                            i1l2925 0B29                            i1l2757 0931  
                          i1l3485 0FA3                            i1l2775 0950                            i1l3559 1061  
                          i1l3639 06E7                            i1l3399 0DFE                            i1l3583 13A0  
                          u300_20 0A74                            u300_21 0A75                            i1l2849 0A23  
                          i1l2785 0965                            i1l2945 039B                            i1l3577 153B  
                          i1l3489 0FC0                            u300_22 0A7A                            i1l2891 0AD5  
                          u300_23 0A7B                            i1l2859 0A35                            i1l2779 0953  
                          i1l3915 1F28                            i1l3907 1F04                            i1l2963 03C0  
                          i1l2947 039D                            i1l3587 13AB                            i1l2885 0ACE  
                          i1l2877 0ABF                            i1l2869 0A9F                            i1l2893 0AD7  
                          i1l3909 1F12                            i1l2965 03C2                            i1l2949 03A5  
                          i1l3919 1F33                            i1l2975 03D8                            i1l2967 03CA  
                          i1l3961 0095                            i1l2899 0AE0                            i1l3955 008A  
                          i1l3947 0077                            i1l3963 0096                            i1l3939 0064  
                          i1l3981 036E                            u304_25 0AC1                            u314_25 0AFF  
                          u410_25 0F1B                            u402_25 0E95                            u403_25 0EA2  
                          u340_25 0581                            u420_25 0FAE                            u412_25 0F2C  
                          u333_25 0488                            u421_25 0FCB                            u405_25 0EB3  
                          u430_25 1654                            u254_25 0814                            u342_25 05A6  
                          u406_25 0EDB                            u407_20 0F02                            u407_25 0EEB  
                          u407_26 0EEE                            u407_27 0EF5                            u407_28 0EF8  
                          u407_29 0EFF                            u344_25 05C4                            u336_25 04E5  
                          u345_25 05DC                            u434_25 166F                            u426_25 1623  
                          u354_25 062B                            u274_25 1FFA                            u442_25 13B6  
                          u355_25 0649                            u347_25 05E7                            u419_25 0F8C  
                          u284_25 09B5                            u428_25 163F                            u356_25 0661  
                          u285_20 09C1                            u445_25 13DB                            u286_20 09C2  
                          u438_25 14AE                            u391_21 1481                            u391_22 1482  
                          u391_23 1487                            u391_24 1488                            u391_25 148D  
                          u439_25 14E4                            u391_26 148E                            u448_25 13F9  
                          u297_25 0A29                            u289_25 09E3                            u298_23 0A47  
                          u490_25 1F13                            u299_21 0A60                            u299_22 0A61  
                          u299_23 0A66                            u299_24 0A67                            u299_25 0A6C  
                          u491_25 1F1F                            u299_26 0A6D                            u492_25 1F29  
                          u389_21 145B                            u389_22 145C                            u389_23 1461  
                          u389_24 1462                            u389_25 1467                            u389_26 1468  
                          u488_25 1F07                     calculateLux@b 01B2                     calculateLux@m 01B4  
                          _SPBRGH 009A                            _SSPADD 0093                            _SSPCON 0014  
                          _SSPBUF 0013                  __end_of___xxtofl 168D                   ?_pwm_duty_cycle 0190  
        _I2C_Master_RepeatedStart 1D50                            ___flge 1416                            ___bmul 1DAF  
                          ___fleq 1FB8                            ___lmul 1F77                         ??___fladd 0032  
                       ??___fldiv 0060                         ??___flmul 0046                         ??___flsub 007E  
                       ??___fltol 0194                         ??___lldiv 0198                         ??_bcd_dec 01CA  
                       ??___lwdiv 0074                      pulse_step@bt 0190                            _lowCH0 01E2  
                          _lowCH1 01E0                    ?_adc_ch_switch 0070                 __end_of_USART_set 11C3  
               __end_ofi1___fltol 1416                      _calculateLux 0B38                  __end_of_motor_dc 1E67  
           calculateLux@broadband 019E                            saved_w 007E                   i1___fltol@sign1 006D  
                __end_of_pwm_init 1F77                   pwm_init@channel 0192                        ___flge@ff1 0070  
                      ___flge@ff2 0074                      ___xxtofl@arg 0026                      ___xxtofl@exp 0025  
                    ___xxtofl@val 0079                        ___fleq@ff1 0070                        ___fleq@ff2 0074  
                __end_oflog@coeff 182A           __end_of__initialization 004E                      eval_poly@res 0064  
                      ___fltol@f1 0190               ___bmul@multiplicand 01C6                    __pcstackCOMMON 0070  
                    __pidataBANK1 1D85                      __pidataBANK2 1D32                      __pidataBANK3 1D68  
                   __end_of_frexp 1091                     __end_of_slave 037E                     __end_of_servo 1E92  
                   __end_of_setup 1393                         ?_LUX_read 0070                         ?_RTC_read 0070  
                  _OPTION_REGbits 0081                    adc_init@adc_cs 0194                           ??_frexp 007C  
                         ??_slave 00C0                           ??_servo 0196                           ??_setup 01AE  
                      __pbssBANK1 00D8                        __pbssBANK3 01D4                 __end_of__Umul8_16 0824  
                      __pmaintext 10F1                           ?___flge 0070                           ?___bmul 01C6  
                         ?___fleq 0070                           ?___lmul 0190                        __pintentry 0004  
                         _CCP1CON 0017                           _CCP2CON 001D                   ??_adc_ch_switch 0190  
                  ___lmul@product 0199                         ?_adc_init 0190                         ?_adc_read 0070  
                      ??_LUX_read 01CA                        ??_RTC_read 01CE                         ?___xxtofl 0079  
                  calculateLux@ir 01A0                  pulse_step@signal 0192                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 1800                      ??_USART_send 0190  
                       ?_motor_dc 019B                           ___fladd 0909                      ??_LUX_config 0192  
                         ___fldiv 0D9A                           ___flmul 037E                           ___flsub 1DFA  
                         ___fltol 11C3                           ___lldiv 1091                         ?_pwm_init 0070  
                         _bcd_dec 1DC2                           ___lwdiv 1EFC                 __end_of_eval_poly 1544  
                         _highCH0 01E1                           _highCH1 01DF                        ??_adc_init 0192  
                      ??_adc_read 0072                           __ptext1 1313                           __ptext2 1D3C  
                         __ptext3 1230                           __ptext4 1F38                           __ptext5 1002  
                         __ptext6 12A0                           __ptext7 1158                           __ptext8 1EC4  
                         __ptext9 1E67                         _T2CONbits 0012                        ??___xxtofl 0020  
                   i1_tmr0_reload 1D36                           clrloop0 1D58                __end_of_USART_send 1D9E  
            end_of_initialization 004E                 __end_of_tmr0_init 12A0                        _slave$1780 00C8  
                      _slave$1781 00CC                        _slave$1782 00D0                        _slave$1783 00D4  
      ??_I2C_Master_RepeatedStart 0190                __end_of_LUX_config 07FE                  ??_pwm_duty_cycle 0192  
                 ___lldiv@divisor 0190                   ___lldiv@counter 019D                        ??_motor_dc 019D  
                       _RCSTAbits 0018                  I2C_Master_Init@c 019E                  I2C_Master_Read@a 0190  
                      ??_pwm_init 0190                  calculateLux@temp 01AE                         _PORTAbits 0005  
                       _PORTBbits 0006                         _PORTDbits 0008                       ___fladd@grs 003D  
                   ___xxtofl@sign 0024                         _TRISAbits 0085                         _TRISBbits 0086  
                       _TRISCbits 0087                         _TRISDbits 0088                         _USART_set 1158  
                  ?i1_tmr0_reload 0070                       ___fldiv@grs 00A7                         i1___fltol 1393  
                     ___fldiv@rem 00A0                        _pulse_step 1DDC                       ___flmul@grs 004C  
                     _CCP1CONbits 0017                       _CCP2CONbits 001D                         _TXSTAbits 0098  
                  __end_of___flge 14A9                    __end_of___bmul 1DC2                    __end_of___fleq 2000  
                  __end_of___lmul 1FB8                 adc_init@vref_plus 0190                       _BAUDCTLbits 0187  
             start_initialization 0015                        eval_poly@d 005C                        eval_poly@n 005D  
                      eval_poly@x 0058                        ?_USART_set 019E                       __end_of_map 1744  
                     __end_of_log 079D                        ?i1___fltol 00AD                    USART_send@data 0190  
                      frexp@value 0020                 ??_I2C_Master_Init 01A2                 ??_I2C_Master_Read 0192  
               ??_I2C_Master_Wait 0190                 ??_I2C_Master_Stop 0190                 USART_set@baudrate 019E  
            calculateLux@channel0 01BE              calculateLux@channel1 01BA                          ??___flge 0078  
                        ??___bmul 01C7                          ??___fleq 0078                          ??___lmul 0198  
                      init_fetch0 1D9E                         __Umul8_16 0801                       __pdataBANK1 00E4  
                     __pdataBANK2 0110                       __pdataBANK3 01E6                         ___fladd@a 002E  
                       ___fladd@b 002A                         ___fldiv@a 0058                         ___fldiv@b 005C  
                 ??i1_tmr0_reload 0070                         ___flmul@a 0042                         ___flmul@b 003E  
                       ___flsub@a 0065                         ___flsub@b 0069                         ___latbits 0002  
                   __pcstackBANK0 0020                     __pcstackBANK1 00A0                     __pcstackBANK3 0190  
                   ??_int_osc_MHz 0190                       ?_pulse_step 0190                  _I2C_Master_Start 1D42  
                _I2C_Master_Write 1D7B                         bcd_dec@no 01CD                  ___lwdiv@dividend 0072  
        pwm_duty_cycle@duty_cycle 0190                          ?___fladd 002A                          ?___fldiv 0058  
                        ?___flmul 003E                          ?___flsub 0065                          ?___fltol 0190  
                        ?___lldiv 0190                          ?_bcd_dec 0070                        ?__Umul8_16 0070  
                        ?___lwdiv 0070                         __pstrings 1800             __end_of_adc_ch_switch 15E8  
                       _eval_poly 14A9                     ??_tmr0_reload 0190                       ??_USART_set 01A2  
                     ??i1___fltol 00B1                  ___lwdiv@quotient 0075                 interrupt_function 0004  
                        _IOCBbits 0096                         clear_ram0 1D57                         _tmr0_init 1230  
                        _PIE1bits 008C               __end_of_int_osc_MHz 1037                          _OLD_TEMP 01E6  
                        _PIR1bits 000C                          _TEMP_POT 00E2                   calculateLux@lux 01A6  
              tmr0_init@prescaler 0192                        _ADCON0bits 001F                          _LUX_read 0824  
                     __stringbase 1805                        _ADCON1bits 009F                          _RTC_read 1744  
                   ?_calculateLux 019E                          _WPUBbits 0095                        ?_eval_poly 0058  
             I2C_Master_Read@temp 0194                 ___lmul@multiplier 0190               __end_of_tmr0_reload 1D42  
                       frexp@eptr 0024                        ?_tmr0_init 0070               calculateLux@chScale 01B6  
                     ??__Umul8_16 0072         ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 1806  
                        _adc_init 12A0                          _adc_read 1D71                    ??_calculateLux 01A2  
                 _I2C_Master_Init 1EC4                   _I2C_Master_Read 1E92                          ___xxtofl 15E8  
                 _I2C_Master_Wait 1D5F                   _I2C_Master_Stop 1D49                   ___lwdiv@divisor 0070  
                 ___lwdiv@counter 0077                          __ptext10 1E1C                          __ptext11 1DDC  
                        __ptext20 1091                          __ptext12 1E3E                          __ptext21 1DAF  
                        __ptext13 1544                          __ptext30 0052                          __ptext22 1D91  
                        __ptext14 11C3                          __ptext31 1D36                          __ptext23 1D50  
                        __ptext15 1744                          __ptext40 0801                          __ptext32 168D  
                        __ptext24 1E92                          __ptext16 1DC2                          __ptext41 15E8  
                        __ptext33 1393                          __ptext25 079D                          __ptext17 0824  
                        __ptext42 1416                          __ptext34 0D9A                          __ptext26 1D7B  
                        __ptext18 0B38                          __ptext43 1D71                          __ptext35 0693  
                        __ptext27 1D49                          __ptext19 1F77                          __ptext44 1EFC  
                        __ptext36 1037                          __ptext28 1D42                          __ptext45 1DFA  
                        __ptext37 1FB8                          __ptext29 1D5F                          __ptext46 0909  
                        __ptext38 14A9                          __ptext39 037E                       _int_osc_MHz 1002  
                        _last_LUX 01EA                          _last_min 01EE                          _last_hrs 01ED  
                        _last_mov 01E8                          _motor_dc 1E3E                          _pwm_init 1F38  
                        log@coeff 1806          __end_of_I2C_Master_Start 1D49          __end_of_I2C_Master_Write 1D85  
                      _INTCONbits 000B                       ??_eval_poly 005F                       _tmr0_reload 1D3C  
                        init_ram0 1DA2                      ??_pulse_step 0194                calculateLux@ratio1 01AA  
                        intlevel1 0000                  ___lldiv@dividend 0194                       ??_tmr0_init 0190  
                       stringcode 1800                      motor_dc@temp 019B                        _OSCCONbits 008F  
                        servo@mov 0194           __end_of_I2C_Master_Init 1EFC           __end_of_I2C_Master_Read 1EC4  
         __end_of_I2C_Master_Wait 1D68           __end_of_I2C_Master_Stop 1D50                __end_of_pulse_step 1DFA  
               calculateLux@ratio 01C2            __Umul8_16@multiplicand 0070                  ___lldiv@quotient 0199  
               I2C_Master_Write@d 0190                          stringdir 1800                          stringtab 1800  
           __end_ofi1_tmr0_reload 1D3C                       _SSPCON2bits 0091                     ___fladd@signs 003A  
                    ___fladd@aexp 003B                      ___fladd@bexp 003C              __Umul8_16@multiplier 0078  
            __end_of_calculateLux 0D9A                 __Umul8_16@product 0074                        _USART_send 1D91  
