Version 4.0 HI-TECH Software Intermediate Code
"10 tsl2561.c
[; ;tsl2561.c: 10: uint32_t calculateLux(uint16_t broadband, uint16_t ir) {
[v _calculateLux `(ul ~T0 @X0 1 ef2`ui`ui ]
{
[e :U _calculateLux ]
[v _broadband `ui ~T0 @X0 1 r1 ]
[v _ir `ui ~T0 @X0 1 r2 ]
[f ]
"11
[; ;tsl2561.c: 11:   unsigned long chScale;
[v _chScale `ul ~T0 @X0 1 a ]
"12
[; ;tsl2561.c: 12:   unsigned long channel1;
[v _channel1 `ul ~T0 @X0 1 a ]
"13
[; ;tsl2561.c: 13:   unsigned long channel0;
[v _channel0 `ul ~T0 @X0 1 a ]
"16
[; ;tsl2561.c: 16:   uint16_t clipThreshold;
[v _clipThreshold `ui ~T0 @X0 1 a ]
"17
[; ;tsl2561.c: 17:   clipThreshold = 4900;
[e = _clipThreshold -> -> 4900 `i `ui ]
"19
[; ;tsl2561.c: 19:   if ((broadband > 0xFFFF) || (ir > 0xFFFF)) {
[e $ ! || > _broadband -> 65535 `ui > _ir -> 65535 `ui 2  ]
{
"20
[; ;tsl2561.c: 20:     return 0;
[e ) -> -> -> 0 `i `l `ul ]
[e $UE 1  ]
"21
[; ;tsl2561.c: 21:   }
}
[e :U 2 ]
"23
[; ;tsl2561.c: 23:   chScale = (0x7517);
[e = _chScale -> -> -> 29975 `i `l `ul ]
"24
[; ;tsl2561.c: 24:   chScale = chScale<<4;
[e = _chScale << _chScale -> 4 `i ]
"26
[; ;tsl2561.c: 26:   channel0 = (broadband * chScale) >> (10);
[e = _channel0 >> * -> _broadband `ul _chScale -> 10 `i ]
"27
[; ;tsl2561.c: 27:   channel1 = (ir * chScale) >> (10);
[e = _channel1 >> * -> _ir `ul _chScale -> 10 `i ]
"29
[; ;tsl2561.c: 29:   unsigned long ratio1 = 0;
[v _ratio1 `ul ~T0 @X0 1 a ]
[e = _ratio1 -> -> -> 0 `i `l `ul ]
"30
[; ;tsl2561.c: 30:   if (channel0 != 0)
[e $ ! != _channel0 -> -> -> 0 `i `l `ul 3  ]
"31
[; ;tsl2561.c: 31:     ratio1 = (channel1 << ((9) + 1)) / channel0;
[e = _ratio1 / << _channel1 + -> 9 `i -> 1 `i _channel0 ]
[e :U 3 ]
"33
[; ;tsl2561.c: 33:   unsigned long ratio = (ratio1 + 1) >> 1;
[v _ratio `ul ~T0 @X0 1 a ]
[e = _ratio >> + _ratio1 -> -> -> 1 `i `l `ul -> 1 `i ]
"35
[; ;tsl2561.c: 35:   unsigned int b, m;
[v _b `ui ~T0 @X0 1 a ]
[v _m `ui ~T0 @X0 1 a ]
"37
[; ;tsl2561.c: 37:   if ((ratio >= 0) && (ratio <= (0x0040))) {
[e $ ! && >= _ratio -> -> -> 0 `i `l `ul <= _ratio -> -> -> 64 `i `l `ul 4  ]
{
"38
[; ;tsl2561.c: 38:     b = (0x01f2);
[e = _b -> -> 498 `i `ui ]
"39
[; ;tsl2561.c: 39:     m = (0x01be);
[e = _m -> -> 446 `i `ui ]
"40
[; ;tsl2561.c: 40:   } else if (ratio <= (0x0080)) {
}
[e $U 5  ]
[e :U 4 ]
[e $ ! <= _ratio -> -> -> 128 `i `l `ul 6  ]
{
"41
[; ;tsl2561.c: 41:     b = (0x0214);
[e = _b -> -> 532 `i `ui ]
"42
[; ;tsl2561.c: 42:     m = (0x02d1);
[e = _m -> -> 721 `i `ui ]
"43
[; ;tsl2561.c: 43:   } else if (ratio <= (0x00c0)) {
}
[e $U 7  ]
[e :U 6 ]
[e $ ! <= _ratio -> -> -> 192 `i `l `ul 8  ]
{
"44
[; ;tsl2561.c: 44:     b = (0x023f);
[e = _b -> -> 575 `i `ui ]
"45
[; ;tsl2561.c: 45:     m = (0x037b);
[e = _m -> -> 891 `i `ui ]
"46
[; ;tsl2561.c: 46:   } else if (ratio <= (0x0100)) {
}
[e $U 9  ]
[e :U 8 ]
[e $ ! <= _ratio -> -> -> 256 `i `l `ul 10  ]
{
"47
[; ;tsl2561.c: 47:     b = (0x0270);
[e = _b -> -> 624 `i `ui ]
"48
[; ;tsl2561.c: 48:     m = (0x03fe);
[e = _m -> -> 1022 `i `ui ]
"49
[; ;tsl2561.c: 49:   } else if (ratio <= (0x0138)) {
}
[e $U 11  ]
[e :U 10 ]
[e $ ! <= _ratio -> -> -> 312 `i `l `ul 12  ]
{
"50
[; ;tsl2561.c: 50:     b = (0x016f);
[e = _b -> -> 367 `i `ui ]
"51
[; ;tsl2561.c: 51:     m = (0x01fc);
[e = _m -> -> 508 `i `ui ]
"52
[; ;tsl2561.c: 52:   } else if (ratio <= (0x019a)) {
}
[e $U 13  ]
[e :U 12 ]
[e $ ! <= _ratio -> -> -> 410 `i `l `ul 14  ]
{
"53
[; ;tsl2561.c: 53:     b = (0x00d2);
[e = _b -> -> 210 `i `ui ]
"54
[; ;tsl2561.c: 54:     m = (0x00fb);
[e = _m -> -> 251 `i `ui ]
"55
[; ;tsl2561.c: 55:   } else if (ratio <= (0x029a)) {
}
[e $U 15  ]
[e :U 14 ]
[e $ ! <= _ratio -> -> -> 666 `i `l `ul 16  ]
{
"56
[; ;tsl2561.c: 56:     b = (0x0018);
[e = _b -> -> 24 `i `ui ]
"57
[; ;tsl2561.c: 57:     m = (0x0012);
[e = _m -> -> 18 `i `ui ]
"58
[; ;tsl2561.c: 58:   } else if (ratio > (0x029a)) {
}
[e $U 17  ]
[e :U 16 ]
[e $ ! > _ratio -> -> -> 666 `i `l `ul 18  ]
{
"59
[; ;tsl2561.c: 59:     b = (0x0000);
[e = _b -> -> 0 `i `ui ]
"60
[; ;tsl2561.c: 60:     m = (0x0000);
[e = _m -> -> 0 `i `ui ]
"61
[; ;tsl2561.c: 61:   }
}
[e :U 18 ]
[e :U 17 ]
[e :U 15 ]
[e :U 13 ]
[e :U 11 ]
[e :U 9 ]
[e :U 7 ]
[e :U 5 ]
"63
[; ;tsl2561.c: 63:   unsigned long temp;
[v _temp `ul ~T0 @X0 1 a ]
"64
[; ;tsl2561.c: 64:   channel0 = channel0 * b;
[e = _channel0 * _channel0 -> _b `ul ]
"65
[; ;tsl2561.c: 65:   channel1 = channel1 * m;
[e = _channel1 * _channel1 -> _m `ul ]
"67
[; ;tsl2561.c: 67:   temp = 0;
[e = _temp -> -> -> 0 `i `l `ul ]
"69
[; ;tsl2561.c: 69:   if (channel0 > channel1)
[e $ ! > _channel0 _channel1 19  ]
"70
[; ;tsl2561.c: 70:     temp = channel0 - channel1;
[e = _temp - _channel0 _channel1 ]
[e :U 19 ]
"73
[; ;tsl2561.c: 73:   temp += (1 << ((14) - 1));
[e =+ _temp -> -> << -> 1 `i - -> 14 `i -> 1 `i `l `ul ]
"76
[; ;tsl2561.c: 76:   uint32_t lux = temp >> (14);
[v _lux `ul ~T0 @X0 1 a ]
[e = _lux >> _temp -> 14 `i ]
"79
[; ;tsl2561.c: 79:   return lux;
[e ) _lux ]
[e $UE 1  ]
"80
[; ;tsl2561.c: 80: }
[e :UE 1 ]
}
