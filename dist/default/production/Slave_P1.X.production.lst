

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Sep 14 12:45:27 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  0105                     	;# 
   358  0107                     	;# 
   359  0108                     	;# 
   360  0109                     	;# 
   361  010C                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  010F                     	;# 
   366  0185                     	;# 
   367  0187                     	;# 
   368  0188                     	;# 
   369  0189                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  000E                     	;# 
   388  000F                     	;# 
   389  0010                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0013                     	;# 
   393  0014                     	;# 
   394  0015                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  001D                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  0081                     	;# 
   408  0085                     	;# 
   409  0086                     	;# 
   410  0087                     	;# 
   411  0088                     	;# 
   412  0089                     	;# 
   413  008C                     	;# 
   414  008D                     	;# 
   415  008E                     	;# 
   416  008F                     	;# 
   417  0090                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0094                     	;# 
   424  0095                     	;# 
   425  0096                     	;# 
   426  0097                     	;# 
   427  0098                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009C                     	;# 
   432  009D                     	;# 
   433  009E                     	;# 
   434  009F                     	;# 
   435  0105                     	;# 
   436  0107                     	;# 
   437  0108                     	;# 
   438  0109                     	;# 
   439  010C                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  010F                     	;# 
   444  0185                     	;# 
   445  0187                     	;# 
   446  0188                     	;# 
   447  0189                     	;# 
   448  018C                     	;# 
   449  018D                     	;# 
   450  0000                     	;# 
   451  0001                     	;# 
   452  0002                     	;# 
   453  0003                     	;# 
   454  0004                     	;# 
   455  0005                     	;# 
   456  0006                     	;# 
   457  0007                     	;# 
   458  0008                     	;# 
   459  0009                     	;# 
   460  000A                     	;# 
   461  000B                     	;# 
   462  000C                     	;# 
   463  000D                     	;# 
   464  000E                     	;# 
   465  000E                     	;# 
   466  000F                     	;# 
   467  0010                     	;# 
   468  0011                     	;# 
   469  0012                     	;# 
   470  0013                     	;# 
   471  0014                     	;# 
   472  0015                     	;# 
   473  0015                     	;# 
   474  0016                     	;# 
   475  0017                     	;# 
   476  0018                     	;# 
   477  0019                     	;# 
   478  001A                     	;# 
   479  001B                     	;# 
   480  001B                     	;# 
   481  001C                     	;# 
   482  001D                     	;# 
   483  001E                     	;# 
   484  001F                     	;# 
   485  0081                     	;# 
   486  0085                     	;# 
   487  0086                     	;# 
   488  0087                     	;# 
   489  0088                     	;# 
   490  0089                     	;# 
   491  008C                     	;# 
   492  008D                     	;# 
   493  008E                     	;# 
   494  008F                     	;# 
   495  0090                     	;# 
   496  0091                     	;# 
   497  0092                     	;# 
   498  0093                     	;# 
   499  0093                     	;# 
   500  0093                     	;# 
   501  0094                     	;# 
   502  0095                     	;# 
   503  0096                     	;# 
   504  0097                     	;# 
   505  0098                     	;# 
   506  0099                     	;# 
   507  009A                     	;# 
   508  009B                     	;# 
   509  009C                     	;# 
   510  009D                     	;# 
   511  009E                     	;# 
   512  009F                     	;# 
   513  0105                     	;# 
   514  0107                     	;# 
   515  0108                     	;# 
   516  0109                     	;# 
   517  010C                     	;# 
   518  010C                     	;# 
   519  010D                     	;# 
   520  010E                     	;# 
   521  010F                     	;# 
   522  0185                     	;# 
   523  0187                     	;# 
   524  0188                     	;# 
   525  0189                     	;# 
   526  018C                     	;# 
   527  018D                     	;# 
   528                           
   529                           	psect	idataCOMMON
   530  022D                     __pidataCOMMON:
   531                           
   532                           ;initializer for _last_mov
   533  022D  3405               	retlw	5
   534  022E  3400               	retlw	0
   535  0015                     _CCPR1L	set	21
   536  0012                     _T2CONbits	set	18
   537  001D                     _CCP2CONbits	set	29
   538  001D                     _CCP2CON	set	29
   539  0017                     _CCP1CONbits	set	23
   540  0017                     _CCP1CON	set	23
   541  001E                     _ADRESH	set	30
   542  000C                     _PIR1bits	set	12
   543  001F                     _ADCON0bits	set	31
   544  0019                     _TXREG	set	25
   545  0018                     _RCSTAbits	set	24
   546  0006                     _PORTBbits	set	6
   547  000B                     _INTCONbits	set	11
   548  0092                     _PR2	set	146
   549  0087                     _TRISCbits	set	135
   550  009E                     _ADRESL	set	158
   551  008C                     _PIE1bits	set	140
   552  009F                     _ADCON1bits	set	159
   553  0099                     _SPBRG	set	153
   554  009A                     _SPBRGH	set	154
   555  0098                     _TXSTAbits	set	152
   556  008F                     _OSCCONbits	set	143
   557  0096                     _IOCBbits	set	150
   558  0095                     _WPUBbits	set	149
   559  0081                     _OPTION_REGbits	set	129
   560  0086                     _TRISBbits	set	134
   561  0187                     _BAUDCTLbits	set	391
   562  0189                     _ANSELH	set	393
   563  0188                     _ANSEL	set	392
   564                           
   565                           	psect	cinit
   566  000F                     start_initialization:	
   567                           ; #config settings
   568                           
   569  000F                     __initialization:
   570                           
   571                           ; Initialize objects allocated to COMMON
   572  000F  120A  118A  222D  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   573  0014  00FA               	movwf	__pdataCOMMON& (0+127)
   574  0015  120A  118A  222E  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   575  001A  00FB               	movwf	(__pdataCOMMON+1)& (0+127)
   576                           
   577                           ; Clear objects allocated to BANK0
   578  001B  01B6               	clrf	__pbssBANK0& (0+127)
   579  001C  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   580  001D                     end_of_initialization:	
   581                           ;End of C runtime variable initialization code
   582                           
   583  001D                     __end_of__initialization:
   584  001D  0183               	clrf	3
   585  001E  120A  118A  2A0D   	ljmp	_main	;jump to C main() function
   586                           
   587                           	psect	dataCOMMON
   588  007A                     __pdataCOMMON:
   589  007A                     _last_mov:
   590  007A                     	ds	2
   591                           
   592                           	psect	bssBANK0
   593  0036                     __pbssBANK0:
   594  0036                     _switch_servo:
   595  0036                     	ds	2
   596                           
   597                           	psect	cstackCOMMON
   598  0070                     __pcstackCOMMON:
   599  0070                     ?_setup:
   600  0070                     ?_USART_send:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_int_osc_MHz:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_pwm_init:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_slave:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ??_slave:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_main:	
   616                           ; 1 bytes @ 0x0
   617                           
   618                           
   619                           ; 1 bytes @ 0x0
   620  0070                     	ds	2
   621  0072                     ?_pwm_duty_cycle:
   622  0072                     ??_USART_send:	
   623                           ; 1 bytes @ 0x2
   624                           
   625  0072                     ??_int_osc_MHz:	
   626                           ; 1 bytes @ 0x2
   627                           
   628  0072                     ??_pwm_init:	
   629                           ; 1 bytes @ 0x2
   630                           
   631  0072                     ?___lldiv:	
   632                           ; 1 bytes @ 0x2
   633                           
   634  0072                     USART_send@data:	
   635                           ; 4 bytes @ 0x2
   636                           
   637  0072                     pwm_duty_cycle@duty_cycle:	
   638                           ; 1 bytes @ 0x2
   639                           
   640  0072                     ___lldiv@divisor:	
   641                           ; 2 bytes @ 0x2
   642                           
   643                           
   644                           ; 4 bytes @ 0x2
   645  0072                     	ds	2
   646  0074                     ??_pwm_duty_cycle:
   647  0074                     int_osc_MHz@freq:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0074                     pwm_init@channel:	
   651                           ; 1 bytes @ 0x4
   652                           
   653                           
   654                           ; 1 bytes @ 0x4
   655  0074                     	ds	2
   656  0076                     ?_servo:
   657  0076                     servo@mov:	
   658                           ; 1 bytes @ 0x6
   659                           
   660  0076                     ___lldiv@dividend:	
   661                           ; 2 bytes @ 0x6
   662                           
   663                           
   664                           ; 4 bytes @ 0x6
   665  0076                     	ds	2
   666  0078                     ??_servo:
   667                           
   668                           ; 1 bytes @ 0x8
   669  0078                     	ds	2
   670  007A                     ??_setup:
   671  007A                     ??_main:	
   672                           ; 1 bytes @ 0xA
   673                           
   674                           
   675                           	psect	cstackBANK0
   676  0020                     __pcstackBANK0:	
   677                           ; 1 bytes @ 0xA
   678                           
   679  0020                     ??___lldiv:
   680                           
   681                           ; 1 bytes @ 0x0
   682  0020                     	ds	1
   683  0021                     ___lldiv@quotient:
   684                           
   685                           ; 4 bytes @ 0x1
   686  0021                     	ds	4
   687  0025                     ___lldiv@counter:
   688                           
   689                           ; 1 bytes @ 0x5
   690  0025                     	ds	1
   691  0026                     ?_USART_set:
   692  0026                     USART_set@baudrate:	
   693                           ; 1 bytes @ 0x6
   694                           
   695                           
   696                           ; 4 bytes @ 0x6
   697  0026                     	ds	4
   698  002A                     ??_USART_set:
   699                           
   700                           ; 1 bytes @ 0xA
   701  002A                     	ds	12
   702                           
   703                           	psect	maintext
   704  020D                     __pmaintext:	
   705 ;;
   706 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   707 ;;
   708 ;; *************** function _main *****************
   709 ;; Defined at:
   710 ;;		line 80 in file "main_slave_p1.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   719 ;; Tracked objects:
   720 ;;		On entry : B00/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   724 ;;      Params:         0       0       0       0       0
   725 ;;      Locals:         0       0       0       0       0
   726 ;;      Temps:          0       0       0       0       0
   727 ;;      Totals:         0       0       0       0       0
   728 ;;Total ram usage:        0 bytes
   729 ;; Hardware stack levels required when called: 4
   730 ;; This function calls:
   731 ;;		_servo
   732 ;;		_setup
   733 ;; This function is called by:
   734 ;;		Startup code after reset
   735 ;; This function uses a non-reentrant model
   736 ;;
   737                           
   738  020D                     _main:	
   739                           ;psect for function _main
   740                           
   741  020D                     l1367:	
   742                           ;incstack = 0
   743                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   744                           
   745                           
   746                           ;main_slave_p1.c: 81:     setup();
   747  020D  120A  118A  216E  120A  118A  	fcall	_setup
   748  0212                     l1369:
   749                           
   750                           ;main_slave_p1.c: 83:         servo(switch_servo);
   751  0212  1283               	bcf	3,5	;RP0=0, select bank0
   752  0213  1303               	bcf	3,6	;RP1=0, select bank0
   753  0214  0837               	movf	_switch_servo+1,w
   754  0215  00F7               	movwf	servo@mov+1
   755  0216  0836               	movf	_switch_servo,w
   756  0217  00F6               	movwf	servo@mov
   757  0218  120A  118A  21A6  120A  118A  	fcall	_servo
   758  021D  2A12               	goto	l1369
   759  021E  120A  118A  280C   	ljmp	start
   760  0221                     __end_of_main:
   761                           
   762                           	psect	text1
   763  016E                     __ptext1:	
   764 ;; *************** function _setup *****************
   765 ;; Defined at:
   766 ;;		line 110 in file "main_slave_p1.c"
   767 ;; Parameters:    Size  Location     Type
   768 ;;		None
   769 ;; Auto vars:     Size  Location     Type
   770 ;;		None
   771 ;; Return value:  Size  Location     Type
   772 ;;                  1    wreg      void 
   773 ;; Registers used:
   774 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   775 ;; Tracked objects:
   776 ;;		On entry : 0/0
   777 ;;		On exit  : 0/0
   778 ;;		Unchanged: 0/0
   779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   780 ;;      Params:         0       0       0       0       0
   781 ;;      Locals:         0       0       0       0       0
   782 ;;      Temps:          0       0       0       0       0
   783 ;;      Totals:         0       0       0       0       0
   784 ;;Total ram usage:        0 bytes
   785 ;; Hardware stack levels used: 1
   786 ;; Hardware stack levels required when called: 3
   787 ;; This function calls:
   788 ;;		_USART_set
   789 ;;		_int_osc_MHz
   790 ;;		_pwm_init
   791 ;; This function is called by:
   792 ;;		_main
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796  016E                     _setup:	
   797                           ;psect for function _setup
   798                           
   799  016E                     l1333:	
   800                           ;incstack = 0
   801                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   802                           
   803                           
   804                           ;main_slave_p1.c: 111:     int_osc_MHz(1);
   805  016E  3001               	movlw	1
   806  016F  120A  118A  2133  120A  118A  	fcall	_int_osc_MHz
   807  0174                     l1335:
   808                           
   809                           ;main_slave_p1.c: 114:     ANSEL = 0;
   810  0174  1683               	bsf	3,5	;RP0=1, select bank3
   811  0175  1703               	bsf	3,6	;RP1=1, select bank3
   812  0176  0188               	clrf	8	;volatile
   813  0177                     l1337:
   814                           
   815                           ;main_slave_p1.c: 115:     ANSELH = 0;
   816  0177  0189               	clrf	9	;volatile
   817  0178                     l1339:
   818                           
   819                           ;main_slave_p1.c: 118:     TRISBbits.TRISB0 = 0;
   820  0178  1683               	bsf	3,5	;RP0=1, select bank1
   821  0179  1303               	bcf	3,6	;RP1=0, select bank1
   822  017A  1006               	bcf	6,0	;volatile
   823  017B                     l1341:
   824                           
   825                           ;main_slave_p1.c: 119:     PORTBbits.RB0 = 0;
   826  017B  1283               	bcf	3,5	;RP0=0, select bank0
   827  017C  1303               	bcf	3,6	;RP1=0, select bank0
   828  017D  1006               	bcf	6,0	;volatile
   829  017E                     l1343:
   830                           
   831                           ;main_slave_p1.c: 120:     TRISBbits.TRISB1 = 1;
   832  017E  1683               	bsf	3,5	;RP0=1, select bank1
   833  017F  1303               	bcf	3,6	;RP1=0, select bank1
   834  0180  1486               	bsf	6,1	;volatile
   835  0181                     l1345:
   836                           
   837                           ;main_slave_p1.c: 121:     PORTBbits.RB1 = 0;
   838  0181  1283               	bcf	3,5	;RP0=0, select bank0
   839  0182  1303               	bcf	3,6	;RP1=0, select bank0
   840  0183  1086               	bcf	6,1	;volatile
   841  0184                     l1347:
   842                           
   843                           ;main_slave_p1.c: 122:     OPTION_REGbits.nRBPU = 0;
   844  0184  1683               	bsf	3,5	;RP0=1, select bank1
   845  0185  1303               	bcf	3,6	;RP1=0, select bank1
   846  0186  1381               	bcf	1,7	;volatile
   847  0187                     l1349:
   848                           
   849                           ;main_slave_p1.c: 123:     WPUBbits.WPUB = 0x02;
   850  0187  3002               	movlw	2
   851  0188  0095               	movwf	21	;volatile
   852  0189                     l1351:
   853                           
   854                           ;main_slave_p1.c: 125:     pwm_init(1);
   855  0189  3001               	movlw	1
   856  018A  120A  118A  20F4  120A  118A  	fcall	_pwm_init
   857  018F                     l1353:
   858                           
   859                           ;main_slave_p1.c: 126:     USART_set(9600);
   860  018F  3000               	movlw	0
   861  0190  1283               	bcf	3,5	;RP0=0, select bank0
   862  0191  1303               	bcf	3,6	;RP1=0, select bank0
   863  0192  00A9               	movwf	USART_set@baudrate+3
   864  0193  3000               	movlw	0
   865  0194  00A8               	movwf	USART_set@baudrate+2
   866  0195  3025               	movlw	37
   867  0196  00A7               	movwf	USART_set@baudrate+1
   868  0197  3080               	movlw	128
   869  0198  00A6               	movwf	USART_set@baudrate
   870  0199  120A  118A  2021  120A  118A  	fcall	_USART_set
   871  019E                     l1355:
   872                           
   873                           ;main_slave_p1.c: 129:     INTCONbits.GIE = 1;
   874  019E  178B               	bsf	11,7	;volatile
   875  019F                     l1357:
   876                           
   877                           ;main_slave_p1.c: 130:     INTCONbits.PEIE = 1;
   878  019F  170B               	bsf	11,6	;volatile
   879  01A0                     l1359:
   880                           
   881                           ;main_slave_p1.c: 131:     INTCONbits.RBIE = 1;
   882  01A0  158B               	bsf	11,3	;volatile
   883  01A1                     l1361:
   884                           
   885                           ;main_slave_p1.c: 132:     IOCBbits.IOCB1 = 1;
   886  01A1  1683               	bsf	3,5	;RP0=1, select bank1
   887  01A2  1303               	bcf	3,6	;RP1=0, select bank1
   888  01A3  1496               	bsf	22,1	;volatile
   889  01A4                     l1363:
   890                           
   891                           ;main_slave_p1.c: 133:     INTCONbits.RBIF = 0;
   892  01A4  100B               	bcf	11,0	;volatile
   893  01A5                     l59:
   894  01A5  0008               	return
   895  01A6                     __end_of_setup:
   896                           
   897                           	psect	text2
   898  00F4                     __ptext2:	
   899 ;; *************** function _pwm_init *****************
   900 ;; Defined at:
   901 ;;		line 12 in file "pwm.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  channel         1    wreg     unsigned char 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  channel         1    4[COMMON] unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   915 ;;      Params:         0       0       0       0       0
   916 ;;      Locals:         1       0       0       0       0
   917 ;;      Temps:          2       0       0       0       0
   918 ;;      Totals:         3       0       0       0       0
   919 ;;Total ram usage:        3 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; Hardware stack levels required when called: 1
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_setup
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929  00F4                     _pwm_init:	
   930                           ;psect for function _pwm_init
   931                           
   932                           
   933                           ;incstack = 0
   934                           ; Regs used in _pwm_init: [wreg-fsr0h+status,2+status,0]
   935                           ;pwm_init@channel stored from wreg
   936  00F4  00F4               	movwf	pwm_init@channel
   937  00F5                     l1141:
   938                           
   939                           ;pwm.c: 13:     switch(channel) {
   940  00F5  290E               	goto	l1155
   941  00F6                     l181:	
   942                           ;pwm.c: 14:         case 1:
   943                           
   944                           
   945                           ;pwm.c: 15:             TRISCbits.TRISC2 = 1;
   946  00F6  1683               	bsf	3,5	;RP0=1, select bank1
   947  00F7  1303               	bcf	3,6	;RP1=0, select bank1
   948  00F8  1507               	bsf	7,2	;volatile
   949  00F9                     l1143:
   950                           
   951                           ;pwm.c: 16:             CCP1CON = 0;
   952  00F9  1283               	bcf	3,5	;RP0=0, select bank0
   953  00FA  1303               	bcf	3,6	;RP1=0, select bank0
   954  00FB  0197               	clrf	23	;volatile
   955  00FC                     l1145:
   956                           
   957                           ;pwm.c: 17:             CCP1CONbits.P1M = 0;
   958  00FC  303F               	movlw	-193
   959  00FD  0597               	andwf	23,f	;volatile
   960  00FE                     l1147:
   961                           
   962                           ;pwm.c: 18:             CCP1CONbits.CCP1M = 0b1100;
   963  00FE  0817               	movf	23,w	;volatile
   964  00FF  39F0               	andlw	-16
   965  0100  380C               	iorlw	12
   966  0101  0097               	movwf	23	;volatile
   967                           
   968                           ;pwm.c: 19:             break;
   969  0102  291E               	goto	l1157
   970  0103                     l183:	
   971                           ;pwm.c: 20:         case 2:
   972                           
   973                           
   974                           ;pwm.c: 21:             TRISCbits.TRISC1 = 1;
   975  0103  1683               	bsf	3,5	;RP0=1, select bank1
   976  0104  1303               	bcf	3,6	;RP1=0, select bank1
   977  0105  1487               	bsf	7,1	;volatile
   978  0106                     l1149:
   979                           
   980                           ;pwm.c: 22:             CCP2CON = 0;
   981  0106  1283               	bcf	3,5	;RP0=0, select bank0
   982  0107  1303               	bcf	3,6	;RP1=0, select bank0
   983  0108  019D               	clrf	29	;volatile
   984  0109                     l1151:
   985                           
   986                           ;pwm.c: 23:             CCP2CONbits.CCP2M = 0b1100;
   987  0109  081D               	movf	29,w	;volatile
   988  010A  39F0               	andlw	-16
   989  010B  380C               	iorlw	12
   990  010C  009D               	movwf	29	;volatile
   991                           
   992                           ;pwm.c: 24:             break;
   993  010D  291E               	goto	l1157
   994  010E                     l1155:
   995  010E  0874               	movf	pwm_init@channel,w
   996  010F  00F2               	movwf	??_pwm_init
   997  0110  01F3               	clrf	??_pwm_init+1
   998                           
   999                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1000                           ; Switch size 1, requested type "simple"
  1001                           ; Number of cases is 1, Range of values is 0 to 0
  1002                           ; switch strategies available:
  1003                           ; Name         Instructions Cycles
  1004                           ; simple_byte            4     3 (average)
  1005                           ; direct_byte           11     8 (fixed)
  1006                           ; jumptable            260     6 (fixed)
  1007                           ;	Chosen strategy is simple_byte
  1008  0111  0873               	movf	??_pwm_init+1,w
  1009  0112  3A00               	xorlw	0	; case 0
  1010  0113  1903               	skipnz
  1011  0114  2916               	goto	l1411
  1012  0115  291E               	goto	l1157
  1013  0116                     l1411:
  1014                           
  1015                           ; Switch size 1, requested type "simple"
  1016                           ; Number of cases is 2, Range of values is 1 to 2
  1017                           ; switch strategies available:
  1018                           ; Name         Instructions Cycles
  1019                           ; simple_byte            7     4 (average)
  1020                           ; direct_byte           17    11 (fixed)
  1021                           ; jumptable            263     9 (fixed)
  1022                           ;	Chosen strategy is simple_byte
  1023  0116  0872               	movf	??_pwm_init,w
  1024  0117  3A01               	xorlw	1	; case 1
  1025  0118  1903               	skipnz
  1026  0119  28F6               	goto	l181
  1027  011A  3A03               	xorlw	3	; case 2
  1028  011B  1903               	skipnz
  1029  011C  2903               	goto	l183
  1030  011D  291E               	goto	l1157
  1031  011E                     l1157:
  1032                           
  1033                           ;pwm.c: 28:     T2CONbits.T2CKPS = 0b11;
  1034  011E  3003               	movlw	3
  1035  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1036  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1037  0121  0492               	iorwf	18,f	;volatile
  1038  0122                     l1159:
  1039                           
  1040                           ;pwm.c: 29:     PR2 = 255;
  1041  0122  30FF               	movlw	255
  1042  0123  1683               	bsf	3,5	;RP0=1, select bank1
  1043  0124  1303               	bcf	3,6	;RP1=0, select bank1
  1044  0125  0092               	movwf	18	;volatile
  1045  0126                     l1161:
  1046                           
  1047                           ;pwm.c: 32:     PIR1bits.TMR2IF = 0;
  1048  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1049  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1050  0128  108C               	bcf	12,1	;volatile
  1051  0129                     l1163:
  1052                           
  1053                           ;pwm.c: 33:     T2CONbits.TMR2ON = 1;
  1054  0129  1512               	bsf	18,2	;volatile
  1055  012A                     l185:	
  1056                           ;pwm.c: 34:     while(!PIR1bits.TMR2IF);
  1057                           
  1058  012A  1C8C               	btfss	12,1	;volatile
  1059  012B  292D               	goto	u371
  1060  012C  292E               	goto	u370
  1061  012D                     u371:
  1062  012D  292A               	goto	l185
  1063  012E                     u370:
  1064  012E                     l187:
  1065                           
  1066                           ;pwm.c: 35:     PIR1bits.TMR2IF = 0;
  1067  012E  108C               	bcf	12,1	;volatile
  1068                           
  1069                           ;pwm.c: 36:     TRISCbits.TRISC2 = 0;
  1070  012F  1683               	bsf	3,5	;RP0=1, select bank1
  1071  0130  1303               	bcf	3,6	;RP1=0, select bank1
  1072  0131  1107               	bcf	7,2	;volatile
  1073  0132                     l188:
  1074  0132  0008               	return
  1075  0133                     __end_of_pwm_init:
  1076                           
  1077                           	psect	text3
  1078  0133                     __ptext3:	
  1079 ;; *************** function _int_osc_MHz *****************
  1080 ;; Defined at:
  1081 ;;		line 13 in file "osc.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  freq            1    wreg     unsigned char 
  1084 ;; Auto vars:     Size  Location     Type
  1085 ;;  freq            1    4[COMMON] unsigned char 
  1086 ;; Return value:  Size  Location     Type
  1087 ;;                  1    wreg      void 
  1088 ;; Registers used:
  1089 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1090 ;; Tracked objects:
  1091 ;;		On entry : 0/0
  1092 ;;		On exit  : 0/0
  1093 ;;		Unchanged: 0/0
  1094 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1095 ;;      Params:         0       0       0       0       0
  1096 ;;      Locals:         1       0       0       0       0
  1097 ;;      Temps:          2       0       0       0       0
  1098 ;;      Totals:         3       0       0       0       0
  1099 ;;Total ram usage:        3 bytes
  1100 ;; Hardware stack levels used: 1
  1101 ;; Hardware stack levels required when called: 1
  1102 ;; This function calls:
  1103 ;;		Nothing
  1104 ;; This function is called by:
  1105 ;;		_setup
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           
  1109  0133                     _int_osc_MHz:	
  1110                           ;psect for function _int_osc_MHz
  1111                           
  1112                           
  1113                           ;incstack = 0
  1114                           ; Regs used in _int_osc_MHz: [wreg-fsr0h+status,2+status,0]
  1115                           ;int_osc_MHz@freq stored from wreg
  1116  0133  00F4               	movwf	int_osc_MHz@freq
  1117  0134                     l1121:
  1118                           
  1119                           ;osc.c: 14:     switch(freq){
  1120  0134  2956               	goto	l1135
  1121  0135                     l1123:
  1122                           
  1123                           ;osc.c: 16:             OSCCONbits.IRCF = 0b100;
  1124  0135  1683               	bsf	3,5	;RP0=1, select bank1
  1125  0136  1303               	bcf	3,6	;RP1=0, select bank1
  1126  0137  080F               	movf	15,w	;volatile
  1127  0138  398F               	andlw	-113
  1128  0139  3840               	iorlw	64
  1129  013A  008F               	movwf	15	;volatile
  1130                           
  1131                           ;osc.c: 17:             break;
  1132  013B  296C               	goto	l66
  1133  013C                     l1125:
  1134                           
  1135                           ;osc.c: 19:             OSCCONbits.IRCF = 0b101;
  1136  013C  1683               	bsf	3,5	;RP0=1, select bank1
  1137  013D  1303               	bcf	3,6	;RP1=0, select bank1
  1138  013E  080F               	movf	15,w	;volatile
  1139  013F  398F               	andlw	-113
  1140  0140  3850               	iorlw	80
  1141  0141  008F               	movwf	15	;volatile
  1142                           
  1143                           ;osc.c: 20:             break;
  1144  0142  296C               	goto	l66
  1145  0143                     l1127:
  1146                           
  1147                           ;osc.c: 22:             OSCCONbits.IRCF = 0b110;
  1148  0143  1683               	bsf	3,5	;RP0=1, select bank1
  1149  0144  1303               	bcf	3,6	;RP1=0, select bank1
  1150  0145  080F               	movf	15,w	;volatile
  1151  0146  398F               	andlw	-113
  1152  0147  3860               	iorlw	96
  1153  0148  008F               	movwf	15	;volatile
  1154                           
  1155                           ;osc.c: 23:             break;
  1156  0149  296C               	goto	l66
  1157  014A                     l1129:
  1158                           
  1159                           ;osc.c: 25:             OSCCONbits.IRCF = 0b111;
  1160  014A  3070               	movlw	112
  1161  014B  1683               	bsf	3,5	;RP0=1, select bank1
  1162  014C  1303               	bcf	3,6	;RP1=0, select bank1
  1163  014D  048F               	iorwf	15,f	;volatile
  1164                           
  1165                           ;osc.c: 26:             break;
  1166  014E  296C               	goto	l66
  1167  014F                     l1131:
  1168                           
  1169                           ;osc.c: 28:             OSCCONbits.IRCF = 0b110;
  1170  014F  1683               	bsf	3,5	;RP0=1, select bank1
  1171  0150  1303               	bcf	3,6	;RP1=0, select bank1
  1172  0151  080F               	movf	15,w	;volatile
  1173  0152  398F               	andlw	-113
  1174  0153  3860               	iorlw	96
  1175  0154  008F               	movwf	15	;volatile
  1176                           
  1177                           ;osc.c: 29:             break;
  1178  0155  296C               	goto	l66
  1179  0156                     l1135:
  1180  0156  0874               	movf	int_osc_MHz@freq,w
  1181  0157  00F2               	movwf	??_int_osc_MHz
  1182  0158  01F3               	clrf	??_int_osc_MHz+1
  1183                           
  1184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1185                           ; Switch size 1, requested type "simple"
  1186                           ; Number of cases is 1, Range of values is 0 to 0
  1187                           ; switch strategies available:
  1188                           ; Name         Instructions Cycles
  1189                           ; simple_byte            4     3 (average)
  1190                           ; direct_byte           11     8 (fixed)
  1191                           ; jumptable            260     6 (fixed)
  1192                           ;	Chosen strategy is simple_byte
  1193  0159  0873               	movf	??_int_osc_MHz+1,w
  1194  015A  3A00               	xorlw	0	; case 0
  1195  015B  1903               	skipnz
  1196  015C  295E               	goto	l1413
  1197  015D  294F               	goto	l1131
  1198  015E                     l1413:
  1199                           
  1200                           ; Switch size 1, requested type "simple"
  1201                           ; Number of cases is 4, Range of values is 1 to 8
  1202                           ; switch strategies available:
  1203                           ; Name         Instructions Cycles
  1204                           ; simple_byte           13     7 (average)
  1205                           ; direct_byte           35    11 (fixed)
  1206                           ; jumptable            263     9 (fixed)
  1207                           ;	Chosen strategy is simple_byte
  1208  015E  0872               	movf	??_int_osc_MHz,w
  1209  015F  3A01               	xorlw	1	; case 1
  1210  0160  1903               	skipnz
  1211  0161  2935               	goto	l1123
  1212  0162  3A03               	xorlw	3	; case 2
  1213  0163  1903               	skipnz
  1214  0164  293C               	goto	l1125
  1215  0165  3A06               	xorlw	6	; case 4
  1216  0166  1903               	skipnz
  1217  0167  2943               	goto	l1127
  1218  0168  3A0C               	xorlw	12	; case 8
  1219  0169  1903               	skipnz
  1220  016A  294A               	goto	l1129
  1221  016B  294F               	goto	l1131
  1222  016C                     l66:
  1223                           
  1224                           ;osc.c: 31:     OSCCONbits.SCS = 1;
  1225  016C  140F               	bsf	15,0	;volatile
  1226  016D                     l71:
  1227  016D  0008               	return
  1228  016E                     __end_of_int_osc_MHz:
  1229                           
  1230                           	psect	text4
  1231  0021                     __ptext4:	
  1232 ;; *************** function _USART_set *****************
  1233 ;; Defined at:
  1234 ;;		line 12 in file "USART.c"
  1235 ;; Parameters:    Size  Location     Type
  1236 ;;  baudrate        4    6[BANK0 ] const unsigned long 
  1237 ;; Auto vars:     Size  Location     Type
  1238 ;;		None
  1239 ;; Return value:  Size  Location     Type
  1240 ;;                  1    wreg      void 
  1241 ;; Registers used:
  1242 ;;		wreg, status,2, status,0, pclath, cstack
  1243 ;; Tracked objects:
  1244 ;;		On entry : 0/0
  1245 ;;		On exit  : 0/0
  1246 ;;		Unchanged: 0/0
  1247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1248 ;;      Params:         0       4       0       0       0
  1249 ;;      Locals:         0       0       0       0       0
  1250 ;;      Temps:          0      12       0       0       0
  1251 ;;      Totals:         0      16       0       0       0
  1252 ;;Total ram usage:       16 bytes
  1253 ;; Hardware stack levels used: 1
  1254 ;; Hardware stack levels required when called: 2
  1255 ;; This function calls:
  1256 ;;		___lldiv
  1257 ;; This function is called by:
  1258 ;;		_setup
  1259 ;; This function uses a non-reentrant model
  1260 ;;
  1261                           
  1262  0021                     _USART_set:	
  1263                           ;psect for function _USART_set
  1264                           
  1265  0021                     l1319:	
  1266                           ;incstack = 0
  1267                           ; Regs used in _USART_set: [wreg+status,2+status,0+pclath+cstack]
  1268                           
  1269                           
  1270                           ;USART.c: 12: void USART_set(const unsigned long int baudrate);USART.c: 13: {;USART.c: 1
      +                          4:     TXSTAbits.BRGH = 1;
  1271  0021  1683               	bsf	3,5	;RP0=1, select bank1
  1272  0022  1303               	bcf	3,6	;RP1=0, select bank1
  1273  0023  1518               	bsf	24,2	;volatile
  1274                           
  1275                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  1276  0024  1683               	bsf	3,5	;RP0=1, select bank3
  1277  0025  1703               	bsf	3,6	;RP1=1, select bank3
  1278  0026  1587               	bsf	7,3	;volatile
  1279  0027                     l1321:
  1280                           
  1281                           ;USART.c: 16:     SPBRGH = 0;
  1282  0027  1683               	bsf	3,5	;RP0=1, select bank1
  1283  0028  1303               	bcf	3,6	;RP1=0, select bank1
  1284  0029  019A               	clrf	26	;volatile
  1285  002A                     l1323:
  1286                           
  1287                           ;USART.c: 17:     SPBRG = (1000000 - baudrate * 4) / (baudrate * 4);
  1288  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1289  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1290  002C  0826               	movf	USART_set@baudrate,w
  1291  002D  00AA               	movwf	??_USART_set
  1292  002E  0827               	movf	USART_set@baudrate+1,w
  1293  002F  00AB               	movwf	??_USART_set+1
  1294  0030  0828               	movf	USART_set@baudrate+2,w
  1295  0031  00AC               	movwf	??_USART_set+2
  1296  0032  0829               	movf	USART_set@baudrate+3,w
  1297  0033  00AD               	movwf	??_USART_set+3
  1298  0034  3002               	movlw	2
  1299  0035                     u555:
  1300  0035  1003               	clrc
  1301  0036  0DAA               	rlf	??_USART_set,f
  1302  0037  0DAB               	rlf	??_USART_set+1,f
  1303  0038  0DAC               	rlf	??_USART_set+2,f
  1304  0039  0DAD               	rlf	??_USART_set+3,f
  1305  003A                     u550:
  1306  003A  3EFF               	addlw	-1
  1307  003B  1D03               	skipz
  1308  003C  2835               	goto	u555
  1309  003D  082D               	movf	??_USART_set+3,w
  1310  003E  00F5               	movwf	___lldiv@divisor+3
  1311  003F  082C               	movf	??_USART_set+2,w
  1312  0040  00F4               	movwf	___lldiv@divisor+2
  1313  0041  082B               	movf	??_USART_set+1,w
  1314  0042  00F3               	movwf	___lldiv@divisor+1
  1315  0043  082A               	movf	??_USART_set,w
  1316  0044  00F2               	movwf	___lldiv@divisor
  1317  0045  0826               	movf	USART_set@baudrate,w
  1318  0046  00AE               	movwf	??_USART_set+4
  1319  0047  0827               	movf	USART_set@baudrate+1,w
  1320  0048  00AF               	movwf	??_USART_set+5
  1321  0049  0828               	movf	USART_set@baudrate+2,w
  1322  004A  00B0               	movwf	??_USART_set+6
  1323  004B  0829               	movf	USART_set@baudrate+3,w
  1324  004C  00B1               	movwf	??_USART_set+7
  1325  004D  3002               	movlw	2
  1326  004E                     u565:
  1327  004E  1003               	clrc
  1328  004F  0DAE               	rlf	??_USART_set+4,f
  1329  0050  0DAF               	rlf	??_USART_set+5,f
  1330  0051  0DB0               	rlf	??_USART_set+6,f
  1331  0052  0DB1               	rlf	??_USART_set+7,f
  1332  0053                     u560:
  1333  0053  3EFF               	addlw	-1
  1334  0054  1D03               	skipz
  1335  0055  284E               	goto	u565
  1336  0056  3040               	movlw	64
  1337  0057  00B2               	movwf	??_USART_set+8
  1338  0058  3042               	movlw	66
  1339  0059  00B3               	movwf	??_USART_set+9
  1340  005A  300F               	movlw	15
  1341  005B  00B4               	movwf	??_USART_set+10
  1342  005C  3000               	movlw	0
  1343  005D  00B5               	movwf	??_USART_set+11
  1344  005E  082E               	movf	??_USART_set+4,w
  1345  005F  02B2               	subwf	??_USART_set+8,f
  1346  0060  082F               	movf	??_USART_set+5,w
  1347  0061  1C03               	skipc
  1348  0062  0F2F               	incfsz	??_USART_set+5,w
  1349  0063  2865               	goto	u571
  1350  0064  2866               	goto	u572
  1351  0065                     u571:
  1352  0065  02B3               	subwf	??_USART_set+9,f
  1353  0066                     u572:
  1354  0066  0830               	movf	??_USART_set+6,w
  1355  0067  1C03               	skipc
  1356  0068  0F30               	incfsz	??_USART_set+6,w
  1357  0069  286B               	goto	u573
  1358  006A  286C               	goto	u574
  1359  006B                     u573:
  1360  006B  02B4               	subwf	??_USART_set+10,f
  1361  006C                     u574:
  1362  006C  0831               	movf	??_USART_set+7,w
  1363  006D  1C03               	skipc
  1364  006E  0F31               	incfsz	??_USART_set+7,w
  1365  006F  2871               	goto	u575
  1366  0070  2872               	goto	u576
  1367  0071                     u575:
  1368  0071  02B5               	subwf	??_USART_set+11,f
  1369  0072                     u576:
  1370  0072  0835               	movf	??_USART_set+11,w
  1371  0073  00F9               	movwf	___lldiv@dividend+3
  1372  0074  0834               	movf	??_USART_set+10,w
  1373  0075  00F8               	movwf	___lldiv@dividend+2
  1374  0076  0833               	movf	??_USART_set+9,w
  1375  0077  00F7               	movwf	___lldiv@dividend+1
  1376  0078  0832               	movf	??_USART_set+8,w
  1377  0079  00F6               	movwf	___lldiv@dividend
  1378  007A  120A  118A  208C  120A  118A  	fcall	___lldiv
  1379  007F  0872               	movf	?___lldiv,w
  1380  0080  1683               	bsf	3,5	;RP0=1, select bank1
  1381  0081  1303               	bcf	3,6	;RP1=0, select bank1
  1382  0082  0099               	movwf	25	;volatile
  1383  0083                     l1325:
  1384                           
  1385                           ;USART.c: 18:     TXSTAbits.SYNC = 0;
  1386  0083  1218               	bcf	24,4	;volatile
  1387  0084                     l1327:
  1388                           
  1389                           ;USART.c: 19:     RCSTAbits.SPEN = 1;
  1390  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1391  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1392  0086  1798               	bsf	24,7	;volatile
  1393  0087                     l1329:
  1394                           
  1395                           ;USART.c: 22:     TXSTAbits.TX9 = 0;
  1396  0087  1683               	bsf	3,5	;RP0=1, select bank1
  1397  0088  1303               	bcf	3,6	;RP1=0, select bank1
  1398  0089  1318               	bcf	24,6	;volatile
  1399  008A                     l1331:
  1400                           
  1401                           ;USART.c: 24:     TXSTAbits.TXEN = 1;
  1402  008A  1698               	bsf	24,5	;volatile
  1403  008B                     l86:
  1404  008B  0008               	return
  1405  008C                     __end_of_USART_set:
  1406                           
  1407                           	psect	text5
  1408  008C                     __ptext5:	
  1409 ;; *************** function ___lldiv *****************
  1410 ;; Defined at:
  1411 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\__lldiv.c"
  1412 ;; Parameters:    Size  Location     Type
  1413 ;;  divisor         4    2[COMMON] unsigned long 
  1414 ;;  dividend        4    6[COMMON] unsigned long 
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;  quotient        4    1[BANK0 ] unsigned long 
  1417 ;;  counter         1    5[BANK0 ] unsigned char 
  1418 ;; Return value:  Size  Location     Type
  1419 ;;                  4    2[COMMON] unsigned long 
  1420 ;; Registers used:
  1421 ;;		wreg, status,2, status,0
  1422 ;; Tracked objects:
  1423 ;;		On entry : 0/0
  1424 ;;		On exit  : 0/0
  1425 ;;		Unchanged: 0/0
  1426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1427 ;;      Params:         8       0       0       0       0
  1428 ;;      Locals:         0       5       0       0       0
  1429 ;;      Temps:          0       1       0       0       0
  1430 ;;      Totals:         8       6       0       0       0
  1431 ;;Total ram usage:       14 bytes
  1432 ;; Hardware stack levels used: 1
  1433 ;; Hardware stack levels required when called: 1
  1434 ;; This function calls:
  1435 ;;		Nothing
  1436 ;; This function is called by:
  1437 ;;		_USART_set
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441  008C                     ___lldiv:	
  1442                           ;psect for function ___lldiv
  1443                           
  1444  008C                     l1295:	
  1445                           ;incstack = 0
  1446                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1447                           
  1448  008C  3000               	movlw	0
  1449  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1450  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1451  008F  00A4               	movwf	___lldiv@quotient+3
  1452  0090  3000               	movlw	0
  1453  0091  00A3               	movwf	___lldiv@quotient+2
  1454  0092  3000               	movlw	0
  1455  0093  00A2               	movwf	___lldiv@quotient+1
  1456  0094  3000               	movlw	0
  1457  0095  00A1               	movwf	___lldiv@quotient
  1458  0096  0875               	movf	___lldiv@divisor+3,w
  1459  0097  0474               	iorwf	___lldiv@divisor+2,w
  1460  0098  0473               	iorwf	___lldiv@divisor+1,w
  1461  0099  0472               	iorwf	___lldiv@divisor,w
  1462  009A  1903               	skipnz
  1463  009B  289D               	goto	u481
  1464  009C  289E               	goto	u480
  1465  009D                     u481:
  1466  009D  28EB               	goto	l1315
  1467  009E                     u480:
  1468  009E                     l1297:
  1469  009E  01A5               	clrf	___lldiv@counter
  1470  009F  0AA5               	incf	___lldiv@counter,f
  1471  00A0  28AE               	goto	l1301
  1472  00A1                     l1299:
  1473  00A1  3001               	movlw	1
  1474  00A2  00A0               	movwf	??___lldiv
  1475  00A3                     u495:
  1476  00A3  1003               	clrc
  1477  00A4  0DF2               	rlf	___lldiv@divisor,f
  1478  00A5  0DF3               	rlf	___lldiv@divisor+1,f
  1479  00A6  0DF4               	rlf	___lldiv@divisor+2,f
  1480  00A7  0DF5               	rlf	___lldiv@divisor+3,f
  1481  00A8  0BA0               	decfsz	??___lldiv,f
  1482  00A9  28A3               	goto	u495
  1483  00AA  3001               	movlw	1
  1484  00AB  00A0               	movwf	??___lldiv
  1485  00AC  0820               	movf	??___lldiv,w
  1486  00AD  07A5               	addwf	___lldiv@counter,f
  1487  00AE                     l1301:
  1488  00AE  1FF5               	btfss	___lldiv@divisor+3,7
  1489  00AF  28B1               	goto	u501
  1490  00B0  28B2               	goto	u500
  1491  00B1                     u501:
  1492  00B1  28A1               	goto	l1299
  1493  00B2                     u500:
  1494  00B2                     l1303:
  1495  00B2  3001               	movlw	1
  1496  00B3  00A0               	movwf	??___lldiv
  1497  00B4                     u515:
  1498  00B4  1003               	clrc
  1499  00B5  0DA1               	rlf	___lldiv@quotient,f
  1500  00B6  0DA2               	rlf	___lldiv@quotient+1,f
  1501  00B7  0DA3               	rlf	___lldiv@quotient+2,f
  1502  00B8  0DA4               	rlf	___lldiv@quotient+3,f
  1503  00B9  0BA0               	decfsz	??___lldiv,f
  1504  00BA  28B4               	goto	u515
  1505  00BB                     l1305:
  1506  00BB  0875               	movf	___lldiv@divisor+3,w
  1507  00BC  0279               	subwf	___lldiv@dividend+3,w
  1508  00BD  1D03               	skipz
  1509  00BE  28C9               	goto	u525
  1510  00BF  0874               	movf	___lldiv@divisor+2,w
  1511  00C0  0278               	subwf	___lldiv@dividend+2,w
  1512  00C1  1D03               	skipz
  1513  00C2  28C9               	goto	u525
  1514  00C3  0873               	movf	___lldiv@divisor+1,w
  1515  00C4  0277               	subwf	___lldiv@dividend+1,w
  1516  00C5  1D03               	skipz
  1517  00C6  28C9               	goto	u525
  1518  00C7  0872               	movf	___lldiv@divisor,w
  1519  00C8  0276               	subwf	___lldiv@dividend,w
  1520  00C9                     u525:
  1521  00C9  1C03               	skipc
  1522  00CA  28CC               	goto	u521
  1523  00CB  28CD               	goto	u520
  1524  00CC                     u521:
  1525  00CC  28DC               	goto	l1311
  1526  00CD                     u520:
  1527  00CD                     l1307:
  1528  00CD  0872               	movf	___lldiv@divisor,w
  1529  00CE  02F6               	subwf	___lldiv@dividend,f
  1530  00CF  0873               	movf	___lldiv@divisor+1,w
  1531  00D0  1C03               	skipc
  1532  00D1  0F73               	incfsz	___lldiv@divisor+1,w
  1533  00D2  02F7               	subwf	___lldiv@dividend+1,f
  1534  00D3  0874               	movf	___lldiv@divisor+2,w
  1535  00D4  1C03               	skipc
  1536  00D5  0F74               	incfsz	___lldiv@divisor+2,w
  1537  00D6  02F8               	subwf	___lldiv@dividend+2,f
  1538  00D7  0875               	movf	___lldiv@divisor+3,w
  1539  00D8  1C03               	skipc
  1540  00D9  0F75               	incfsz	___lldiv@divisor+3,w
  1541  00DA  02F9               	subwf	___lldiv@dividend+3,f
  1542  00DB                     l1309:
  1543  00DB  1421               	bsf	___lldiv@quotient,0
  1544  00DC                     l1311:
  1545  00DC  3001               	movlw	1
  1546  00DD                     u535:
  1547  00DD  1003               	clrc
  1548  00DE  0CF5               	rrf	___lldiv@divisor+3,f
  1549  00DF  0CF4               	rrf	___lldiv@divisor+2,f
  1550  00E0  0CF3               	rrf	___lldiv@divisor+1,f
  1551  00E1  0CF2               	rrf	___lldiv@divisor,f
  1552  00E2  3EFF               	addlw	-1
  1553  00E3  1D03               	skipz
  1554  00E4  28DD               	goto	u535
  1555  00E5                     l1313:
  1556  00E5  3001               	movlw	1
  1557  00E6  02A5               	subwf	___lldiv@counter,f
  1558  00E7  1D03               	btfss	3,2
  1559  00E8  28EA               	goto	u541
  1560  00E9  28EB               	goto	u540
  1561  00EA                     u541:
  1562  00EA  28B2               	goto	l1303
  1563  00EB                     u540:
  1564  00EB                     l1315:
  1565  00EB  0824               	movf	___lldiv@quotient+3,w
  1566  00EC  00F5               	movwf	?___lldiv+3
  1567  00ED  0823               	movf	___lldiv@quotient+2,w
  1568  00EE  00F4               	movwf	?___lldiv+2
  1569  00EF  0822               	movf	___lldiv@quotient+1,w
  1570  00F0  00F3               	movwf	?___lldiv+1
  1571  00F1  0821               	movf	___lldiv@quotient,w
  1572  00F2  00F2               	movwf	?___lldiv
  1573  00F3                     l313:
  1574  00F3  0008               	return
  1575  00F4                     __end_of___lldiv:
  1576                           
  1577                           	psect	text6
  1578  01A6                     __ptext6:	
  1579 ;; *************** function _servo *****************
  1580 ;; Defined at:
  1581 ;;		line 91 in file "main_slave_p1.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  mov             2    6[COMMON] unsigned short 
  1584 ;; Auto vars:     Size  Location     Type
  1585 ;;		None
  1586 ;; Return value:  Size  Location     Type
  1587 ;;                  1    wreg      void 
  1588 ;; Registers used:
  1589 ;;		wreg, status,2, status,0, pclath, cstack
  1590 ;; Tracked objects:
  1591 ;;		On entry : 0/0
  1592 ;;		On exit  : 0/0
  1593 ;;		Unchanged: 0/0
  1594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1595 ;;      Params:         2       0       0       0       0
  1596 ;;      Locals:         0       0       0       0       0
  1597 ;;      Temps:          0       0       0       0       0
  1598 ;;      Totals:         2       0       0       0       0
  1599 ;;Total ram usage:        2 bytes
  1600 ;; Hardware stack levels used: 1
  1601 ;; Hardware stack levels required when called: 2
  1602 ;; This function calls:
  1603 ;;		_USART_send
  1604 ;;		_pwm_duty_cycle
  1605 ;; This function is called by:
  1606 ;;		_main
  1607 ;; This function uses a non-reentrant model
  1608 ;;
  1609                           
  1610  01A6                     _servo:	
  1611                           ;psect for function _servo
  1612                           
  1613  01A6                     l1217:	
  1614                           ;incstack = 0
  1615                           ; Regs used in _servo: [wreg+status,2+status,0+pclath+cstack]
  1616                           
  1617                           
  1618                           ;main_slave_p1.c: 92:     if (mov == 1){
  1619  01A6  0376               	decf	servo@mov,w
  1620  01A7  0477               	iorwf	servo@mov+1,w
  1621  01A8  1D03               	btfss	3,2
  1622  01A9  29AB               	goto	u411
  1623  01AA  29AC               	goto	u410
  1624  01AB                     u411:
  1625  01AB  29B6               	goto	l1221
  1626  01AC                     u410:
  1627  01AC                     l1219:
  1628                           
  1629                           ;main_slave_p1.c: 93:         pwm_duty_cycle(94);
  1630  01AC  305E               	movlw	94
  1631  01AD  00F2               	movwf	pwm_duty_cycle@duty_cycle
  1632  01AE  3000               	movlw	0
  1633  01AF  00F3               	movwf	pwm_duty_cycle@duty_cycle+1
  1634  01B0  120A  118A  21F5  120A  118A  	fcall	_pwm_duty_cycle
  1635                           
  1636                           ;main_slave_p1.c: 94:     }
  1637  01B5  29BF               	goto	l1223
  1638  01B6                     l1221:
  1639                           
  1640                           ;main_slave_p1.c: 96:         pwm_duty_cycle(31);
  1641  01B6  301F               	movlw	31
  1642  01B7  00F2               	movwf	pwm_duty_cycle@duty_cycle
  1643  01B8  3000               	movlw	0
  1644  01B9  00F3               	movwf	pwm_duty_cycle@duty_cycle+1
  1645  01BA  120A  118A  21F5  120A  118A  	fcall	_pwm_duty_cycle
  1646  01BF                     l1223:
  1647                           
  1648                           ;main_slave_p1.c: 99:     if (mov != last_mov){
  1649  01BF  087B               	movf	_last_mov+1,w
  1650  01C0  0677               	xorwf	servo@mov+1,w
  1651  01C1  1D03               	skipz
  1652  01C2  29C5               	goto	u425
  1653  01C3  087A               	movf	_last_mov,w
  1654  01C4  0676               	xorwf	servo@mov,w
  1655  01C5                     u425:
  1656  01C5  1903               	skipnz
  1657  01C6  29C8               	goto	u421
  1658  01C7  29C9               	goto	u420
  1659  01C8                     u421:
  1660  01C8  29DB               	goto	l56
  1661  01C9                     u420:
  1662  01C9                     l1225:
  1663                           
  1664                           ;main_slave_p1.c: 100:         last_mov = mov;
  1665  01C9  0877               	movf	servo@mov+1,w
  1666  01CA  00FB               	movwf	_last_mov+1
  1667  01CB  0876               	movf	servo@mov,w
  1668  01CC  00FA               	movwf	_last_mov
  1669  01CD                     l1227:
  1670                           
  1671                           ;main_slave_p1.c: 101:         USART_send((('M')<<1) + !mov);
  1672  01CD  0876               	movf	servo@mov,w
  1673  01CE  0477               	iorwf	servo@mov+1,w
  1674  01CF  1903               	btfsc	3,2
  1675  01D0  29D2               	goto	u431
  1676  01D1  29D4               	goto	u430
  1677  01D2                     u431:
  1678  01D2  3001               	movlw	1
  1679  01D3  29D5               	goto	u440
  1680  01D4                     u430:
  1681  01D4  3000               	movlw	0
  1682  01D5                     u440:
  1683  01D5  3E9A               	addlw	154
  1684  01D6  120A  118A  2221  120A  118A  	fcall	_USART_send
  1685  01DB                     l56:
  1686  01DB  0008               	return
  1687  01DC                     __end_of_servo:
  1688                           
  1689                           	psect	text7
  1690  01F5                     __ptext7:	
  1691 ;; *************** function _pwm_duty_cycle *****************
  1692 ;; Defined at:
  1693 ;;		line 40 in file "pwm.c"
  1694 ;; Parameters:    Size  Location     Type
  1695 ;;  duty_cycle      2    2[COMMON] unsigned int 
  1696 ;; Auto vars:     Size  Location     Type
  1697 ;;		None
  1698 ;; Return value:  Size  Location     Type
  1699 ;;                  1    wreg      void 
  1700 ;; Registers used:
  1701 ;;		wreg, status,2, status,0
  1702 ;; Tracked objects:
  1703 ;;		On entry : 0/0
  1704 ;;		On exit  : 0/0
  1705 ;;		Unchanged: 0/0
  1706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1707 ;;      Params:         2       0       0       0       0
  1708 ;;      Locals:         0       0       0       0       0
  1709 ;;      Temps:          2       0       0       0       0
  1710 ;;      Totals:         4       0       0       0       0
  1711 ;;Total ram usage:        4 bytes
  1712 ;; Hardware stack levels used: 1
  1713 ;; Hardware stack levels required when called: 1
  1714 ;; This function calls:
  1715 ;;		Nothing
  1716 ;; This function is called by:
  1717 ;;		_servo
  1718 ;; This function uses a non-reentrant model
  1719 ;;
  1720                           
  1721  01F5                     _pwm_duty_cycle:	
  1722                           ;psect for function _pwm_duty_cycle
  1723                           
  1724  01F5                     l1115:	
  1725                           ;incstack = 0
  1726                           ; Regs used in _pwm_duty_cycle: [wreg+status,2+status,0]
  1727                           
  1728                           
  1729                           ;pwm.c: 41:     CCPR1L = (uint8_t)(duty_cycle>>2);
  1730  01F5  0873               	movf	pwm_duty_cycle@duty_cycle+1,w
  1731  01F6  00F5               	movwf	??_pwm_duty_cycle+1
  1732  01F7  0872               	movf	pwm_duty_cycle@duty_cycle,w
  1733  01F8  00F4               	movwf	??_pwm_duty_cycle
  1734  01F9  1003               	clrc
  1735  01FA  0CF5               	rrf	??_pwm_duty_cycle+1,f
  1736  01FB  0CF4               	rrf	??_pwm_duty_cycle,f
  1737  01FC  1003               	clrc
  1738  01FD  0CF5               	rrf	??_pwm_duty_cycle+1,f
  1739  01FE  0CF4               	rrf	??_pwm_duty_cycle,f
  1740  01FF  0874               	movf	??_pwm_duty_cycle,w
  1741  0200  1283               	bcf	3,5	;RP0=0, select bank0
  1742  0201  1303               	bcf	3,6	;RP1=0, select bank0
  1743  0202  0095               	movwf	21	;volatile
  1744                           
  1745                           ;pwm.c: 42:     CCP1CONbits.DC1B = duty_cycle & 0b11;
  1746  0203  0872               	movf	pwm_duty_cycle@duty_cycle,w
  1747  0204  3903               	andlw	3
  1748  0205  00F4               	movwf	??_pwm_duty_cycle
  1749  0206  0EF4               	swapf	??_pwm_duty_cycle,f
  1750  0207  0817               	movf	23,w	;volatile
  1751  0208  0674               	xorwf	??_pwm_duty_cycle,w
  1752  0209  39CF               	andlw	-49
  1753  020A  0674               	xorwf	??_pwm_duty_cycle,w
  1754  020B  0097               	movwf	23	;volatile
  1755  020C                     l191:
  1756  020C  0008               	return
  1757  020D                     __end_of_pwm_duty_cycle:
  1758                           
  1759                           	psect	text8
  1760  0221                     __ptext8:	
  1761 ;; *************** function _USART_send *****************
  1762 ;; Defined at:
  1763 ;;		line 27 in file "USART.c"
  1764 ;; Parameters:    Size  Location     Type
  1765 ;;  data            1    wreg     const unsigned char 
  1766 ;; Auto vars:     Size  Location     Type
  1767 ;;  data            1    2[COMMON] const unsigned char 
  1768 ;; Return value:  Size  Location     Type
  1769 ;;                  1    wreg      void 
  1770 ;; Registers used:
  1771 ;;		wreg
  1772 ;; Tracked objects:
  1773 ;;		On entry : 0/0
  1774 ;;		On exit  : 0/0
  1775 ;;		Unchanged: 0/0
  1776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1777 ;;      Params:         0       0       0       0       0
  1778 ;;      Locals:         1       0       0       0       0
  1779 ;;      Temps:          0       0       0       0       0
  1780 ;;      Totals:         1       0       0       0       0
  1781 ;;Total ram usage:        1 bytes
  1782 ;; Hardware stack levels used: 1
  1783 ;; Hardware stack levels required when called: 1
  1784 ;; This function calls:
  1785 ;;		Nothing
  1786 ;; This function is called by:
  1787 ;;		_servo
  1788 ;;		_USART_print
  1789 ;; This function uses a non-reentrant model
  1790 ;;
  1791                           
  1792  0221                     _USART_send:	
  1793                           ;psect for function _USART_send
  1794                           
  1795                           
  1796                           ;incstack = 0
  1797                           ; Regs used in _USART_send: [wreg]
  1798                           ;USART_send@data stored from wreg
  1799  0221  00F2               	movwf	USART_send@data
  1800  0222                     l1117:
  1801  0222                     l89:	
  1802                           ;USART.c: 27: void USART_send(const char data);USART.c: 28: {;USART.c: 29:     while(!TX
      +                          STAbits.TRMT);
  1803                           
  1804  0222  1683               	bsf	3,5	;RP0=1, select bank1
  1805  0223  1303               	bcf	3,6	;RP1=0, select bank1
  1806  0224  1C98               	btfss	24,1	;volatile
  1807  0225  2A27               	goto	u361
  1808  0226  2A28               	goto	u360
  1809  0227                     u361:
  1810  0227  2A22               	goto	l89
  1811  0228                     u360:
  1812  0228                     l1119:
  1813                           
  1814                           ;USART.c: 30:     TXREG = data;
  1815  0228  0872               	movf	USART_send@data,w
  1816  0229  1283               	bcf	3,5	;RP0=0, select bank0
  1817  022A  1303               	bcf	3,6	;RP1=0, select bank0
  1818  022B  0099               	movwf	25	;volatile
  1819  022C                     l92:
  1820  022C  0008               	return
  1821  022D                     __end_of_USART_send:
  1822                           
  1823                           	psect	text9
  1824  01DC                     __ptext9:	
  1825 ;; *************** function _slave *****************
  1826 ;; Defined at:
  1827 ;;		line 63 in file "main_slave_p1.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;		None
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;		None
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg, status,2
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1841 ;;      Params:         0       0       0       0       0
  1842 ;;      Locals:         0       0       0       0       0
  1843 ;;      Temps:          2       0       0       0       0
  1844 ;;      Totals:         2       0       0       0       0
  1845 ;;Total ram usage:        2 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		Interrupt level 1
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854  01DC                     _slave:	
  1855                           ;psect for function _slave
  1856                           
  1857  01DC                     i1l1231:
  1858                           
  1859                           ;main_slave_p1.c: 64:     if(INTCONbits.RBIF){
  1860  01DC  1C0B               	btfss	11,0	;volatile
  1861  01DD  29DF               	goto	u45_21
  1862  01DE  29E0               	goto	u45_20
  1863  01DF                     u45_21:
  1864  01DF  29EE               	goto	i1l42
  1865  01E0                     u45_20:
  1866  01E0                     i1l1233:
  1867                           
  1868                           ;main_slave_p1.c: 65:         if(!PORTBbits.RB1){
  1869  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1870  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1871  01E2  1886               	btfsc	6,1	;volatile
  1872  01E3  29E5               	goto	u46_21
  1873  01E4  29E6               	goto	u46_20
  1874  01E5                     u46_21:
  1875  01E5  29EB               	goto	i1l1237
  1876  01E6                     u46_20:
  1877  01E6                     i1l1235:
  1878                           
  1879                           ;main_slave_p1.c: 66:             switch_servo = 1;
  1880  01E6  3001               	movlw	1
  1881  01E7  00B6               	movwf	_switch_servo
  1882  01E8  3000               	movlw	0
  1883  01E9  00B7               	movwf	_switch_servo+1
  1884                           
  1885                           ;main_slave_p1.c: 67:         }
  1886  01EA  29ED               	goto	i1l1239
  1887  01EB                     i1l1237:
  1888                           
  1889                           ;main_slave_p1.c: 69:             switch_servo = 0;
  1890  01EB  01B6               	clrf	_switch_servo
  1891  01EC  01B7               	clrf	_switch_servo+1
  1892  01ED                     i1l1239:
  1893                           
  1894                           ;main_slave_p1.c: 71:         INTCONbits.RBIF = 0;
  1895  01ED  100B               	bcf	11,0	;volatile
  1896  01EE                     i1l42:
  1897  01EE  0871               	movf	??_slave+1,w
  1898  01EF  008A               	movwf	10
  1899  01F0  0E70               	swapf	??_slave,w
  1900  01F1  0083               	movwf	3
  1901  01F2  0EFE               	swapf	btemp,f
  1902  01F3  0E7E               	swapf	btemp,w
  1903  01F4  0009               	retfie
  1904  01F5                     __end_of_slave:
  1905  007E                     btemp	set	126	;btemp
  1906  007E                     wtemp0	set	126
  1907                           
  1908                           	psect	intentry
  1909  0004                     __pintentry:	
  1910                           ;incstack = 0
  1911                           ; Regs used in _slave: [wreg+status,2]
  1912                           
  1913  0004                     interrupt_function:
  1914  007E                     saved_w	set	btemp
  1915  0004  00FE               	movwf	btemp
  1916  0005  0E03               	swapf	3,w
  1917  0006  00F0               	movwf	??_slave
  1918  0007  080A               	movf	10,w
  1919  0008  00F1               	movwf	??_slave+1
  1920  0009  120A  118A  29DC   	ljmp	_slave
  1921                           
  1922                           	psect	idloc
  1923                           
  1924                           ;Config register IDLOC0 @ 0x2000
  1925                           ;	unspecified, using default values
  1926  2000                     	org	8192
  1927  2000  3FFF               	dw	16383
  1928                           
  1929                           ;Config register IDLOC1 @ 0x2001
  1930                           ;	unspecified, using default values
  1931  2001                     	org	8193
  1932  2001  3FFF               	dw	16383
  1933                           
  1934                           ;Config register IDLOC2 @ 0x2002
  1935                           ;	unspecified, using default values
  1936  2002                     	org	8194
  1937  2002  3FFF               	dw	16383
  1938                           
  1939                           ;Config register IDLOC3 @ 0x2003
  1940                           ;	unspecified, using default values
  1941  2003                     	org	8195
  1942  2003  3FFF               	dw	16383
  1943                           
  1944                           	psect	config
  1945                           
  1946                           ;Config register CONFIG1 @ 0x2007
  1947                           ;	Oscillator Selection bits
  1948                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1949                           ;	Watchdog Timer Enable bit
  1950                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1951                           ;	Power-up Timer Enable bit
  1952                           ;	PWRTE = OFF, PWRT disabled
  1953                           ;	RE3/MCLR pin function select bit
  1954                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1955                           ;	Code Protection bit
  1956                           ;	CP = OFF, Program memory code protection is disabled
  1957                           ;	Data Code Protection bit
  1958                           ;	CPD = OFF, Data memory code protection is disabled
  1959                           ;	Brown Out Reset Selection bits
  1960                           ;	BOREN = OFF, BOR disabled
  1961                           ;	Internal External Switchover bit
  1962                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1963                           ;	Fail-Safe Clock Monitor Enabled bit
  1964                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1965                           ;	Low Voltage Programming Enable bit
  1966                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1967                           ;	In-Circuit Debugger Mode bit
  1968                           ;	DEBUG = 0x1, unprogrammed default
  1969  2007                     	org	8199
  1970  2007  20D4               	dw	8404
  1971                           
  1972                           ;Config register CONFIG2 @ 0x2008
  1973                           ;	Brown-out Reset Selection bit
  1974                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  1975                           ;	Flash Program Memory Self Write Enable bits
  1976                           ;	WRT = OFF, Write protection off
  1977  2008                     	org	8200
  1978  2008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     22      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _USART_set->___lldiv
    _servo->_pwm_duty_cycle

Critical Paths under _slave in COMMON

    None.

Critical Paths under _main in BANK0

    _setup->_USART_set
    _USART_set->___lldiv

Critical Paths under _slave in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _slave in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _slave in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _slave in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     999
                              _servo
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     617
                          _USART_set
                        _int_osc_MHz
                           _pwm_init
 ---------------------------------------------------------------------------------
 (2) _pwm_init                                             3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _int_osc_MHz                                          3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _USART_set                                           16    12      4     573
                                              6 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              2 COMMON     8     0      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _servo                                                2     0      2     382
                                              6 COMMON     2     0      2
                         _USART_send
                     _pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (2) _pwm_duty_cycle                                       4     2      2     196
                                              2 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (2) _USART_send                                           1     1      0      22
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _slave                                                2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _servo
     _USART_send
     _pwm_duty_cycle
   _setup
     _USART_set
       ___lldiv
     _int_osc_MHz
     _pwm_init

 _slave (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     16      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       C       1       85.7%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      24      12        0.0%
ABS                  0      0      24       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Sep 14 12:45:27 2022

                      l71 016D                        l56 01DB                        l66 016C  
                      l59 01A5                        l92 022C                        l86 008B  
                      l89 0222                       l313 00F3                       l181 00F6  
                     l191 020C                       l183 0103                       l185 012A  
                     l187 012E                       l188 0132                       u410 01AC  
                     u411 01AB                       u420 01C9                       u500 00B2  
                     u421 01C8                       u501 00B1                       u430 01D4  
                     _PR2 0092                       u431 01D2                       u360 0228  
                     u440 01D5                       u520 00CD                       u361 0227  
                     u425 01C5                       u521 00CC                       u370 012E  
                     u515 00B4                       u371 012D                       u540 00EB  
                     u541 00EA                       u525 00C9                       u550 003A  
                     u535 00DD                       u480 009E                       u560 0053  
                     u481 009D                       u571 0065                       u555 0035  
                     u572 0066                       u573 006B                       u565 004E  
                     u574 006C                       u495 00A3                       u575 0071  
                     u576 0072                      l1121 0134                      l1115 01F5  
                    l1131 014F                      l1123 0135                      l1117 0222  
                    l1221 01B6                      l1301 00AE                      l1125 013C  
                    l1141 00F5                      l1119 0228                      l1223 01BF  
                    l1311 00DC                      l1303 00B2                      l1127 0143  
                    l1135 0156                      l1151 0109                      l1143 00F9  
                    l1225 01C9                      l1217 01A6                      l1313 00E5  
                    l1305 00BB                      l1321 0027                      l1129 014A  
                    l1161 0126                      l1145 00FC                      l1227 01CD  
                    l1219 01AC                      l1307 00CD                      l1315 00EB  
                    l1331 008A                      l1323 002A                      l1163 0129  
                    l1411 0116                      l1147 00FE                      l1155 010E  
                    l1309 00DB                      l1325 0083                      l1413 015E  
                    l1149 0106                      l1157 011E                      l1341 017B  
                    l1333 016E                      l1327 0084                      l1319 0021  
                    l1159 0122                      l1351 0189                      l1343 017E  
                    l1335 0174                      l1329 0087                      l1361 01A1  
                    l1353 018F                      l1345 0181                      l1337 0177  
                    l1363 01A4                      l1355 019E                      l1347 0184  
                    l1339 0178                      l1357 019F                      l1349 0187  
                    l1295 008C                      l1359 01A0                      l1367 020D  
                    l1297 009E                      l1369 0212                      l1299 00A1  
                    i1l42 01EE                      _main 020D                      btemp 007E  
                    start 000C            _pwm_duty_cycle 01F5                     ?_main 0070  
                   _ANSEL 0188           __end_of___lldiv 00F4                     _SPBRG 0099  
                   u45_20 01E0                     u45_21 01DF                     u46_20 01E6  
                   u46_21 01E5                     _TXREG 0019           int_osc_MHz@freq 0074  
                   _slave 01DC                     _servo 01A6                     _setup 016E  
            ?_int_osc_MHz 0070                     pclath 000A                     status 0003  
                   wtemp0 007E    __end_of_pwm_duty_cycle 020D           __initialization 000F  
             ?_USART_send 0070              __end_of_main 0221              _switch_servo 0036  
                  ??_main 007A                    _ADRESH 001E                    _ADRESL 009E  
                  _CCPR1L 0015                    ?_slave 0070                    ?_servo 0076  
                  ?_setup 0070                    _ANSELH 0189                    i1l1231 01DC  
                  i1l1233 01E0                    i1l1235 01E6                    i1l1237 01EB  
                  i1l1239 01ED                    _SPBRGH 009A           ?_pwm_duty_cycle 0072  
               ??___lldiv 0020         __end_of_USART_set 008C              __pdataCOMMON 007A  
                  saved_w 007E          __end_of_pwm_init 0133           pwm_init@channel 0074  
 __end_of__initialization 001D            __pcstackCOMMON 0070             __end_of_slave 01F5  
           __end_of_servo 01DC             __end_of_setup 01A6            _OPTION_REGbits 0081  
                 ??_slave 0070                   ??_servo 0078                   ??_setup 007A  
              __pbssBANK0 0036                __pmaintext 020D                __pintentry 0004  
                 _CCP1CON 0017                   _CCP2CON 001D              ??_USART_send 0072  
                 ___lldiv 008C                 ?_pwm_init 0070                   __ptext1 016E  
                 __ptext2 00F4                   __ptext3 0133                   __ptext4 0021  
                 __ptext5 008C                   __ptext6 01A6                   __ptext7 01F5  
                 __ptext8 0221                   __ptext9 01DC                 _T2CONbits 0012  
      __end_of_USART_send 022D      end_of_initialization 001D          ??_pwm_duty_cycle 0074  
         ___lldiv@divisor 0072           ___lldiv@counter 0025                 _RCSTAbits 0018  
              ??_pwm_init 0072                 _PORTBbits 0006                 _TRISBbits 0086  
               _TRISCbits 0087                 _USART_set 0021               _CCP1CONbits 0017  
             _CCP2CONbits 001D                 _TXSTAbits 0098             __pidataCOMMON 022D  
             _BAUDCTLbits 0187       start_initialization 000F                ?_USART_set 0026  
          USART_send@data 0072         USART_set@baudrate 0026                 ___latbits 0002  
           __pcstackBANK0 0020             ??_int_osc_MHz 0072  pwm_duty_cycle@duty_cycle 0072  
                ?___lldiv 0072               ??_USART_set 002A         interrupt_function 0004  
                _IOCBbits 0096                  _PIE1bits 008C       __end_of_int_osc_MHz 016E  
                _PIR1bits 000C                _ADCON0bits 001F                _ADCON1bits 009F  
                _WPUBbits 0095               _int_osc_MHz 0133                  _last_mov 007A  
                _pwm_init 00F4                _INTCONbits 000B                  intlevel1 0000  
        ___lldiv@dividend 0076                _OSCCONbits 008F                  servo@mov 0076  
        ___lldiv@quotient 0021                _USART_send 0221  
