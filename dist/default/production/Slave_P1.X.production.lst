

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Sep 13 16:44:26 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.40
    18                           ; Generated 17/11/2021 GMT
    19                           ; 
    20                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  001A                     _RCREG	set	26
   365  0019                     _TXREG	set	25
   366  0018                     _RCSTAbits	set	24
   367  000B                     _INTCONbits	set	11
   368  0005                     _PORTA	set	5
   369  008C                     _PIE1bits	set	140
   370  0099                     _SPBRG	set	153
   371  009A                     _SPBRGH	set	154
   372  0098                     _TXSTAbits	set	152
   373  008F                     _OSCCONbits	set	143
   374  0085                     _TRISA	set	133
   375  0187                     _BAUDCTLbits	set	391
   376  0189                     _ANSELH	set	393
   377  0188                     _ANSEL	set	392
   378                           
   379                           	psect	cinit
   380  07FC                     start_initialization:	
   381                           ; #config settings
   382                           
   383  07FC                     __initialization:
   384  07FC                     end_of_initialization:	
   385                           ;End of C runtime variable initialization code
   386                           
   387  07FC                     __end_of__initialization:
   388  07FC  0183               	clrf	3
   389  07FD  120A  118A  2EAF   	ljmp	_main	;jump to C main() function
   390                           
   391                           	psect	cstackCOMMON
   392  0070                     __pcstackCOMMON:
   393  0070                     ?_setup:
   394  0070                     ?_USART_send:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ??_USART_send:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_int_osc_MHz:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ??_int_osc_MHz:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_main:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ?___lldiv:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     USART_send@data:	
   413                           ; 4 bytes @ 0x0
   414                           
   415  0070                     ___lldiv@divisor:	
   416                           ; 1 bytes @ 0x0
   417                           
   418                           
   419                           ; 4 bytes @ 0x0
   420  0070                     	ds	2
   421  0072                     int_osc_MHz@freq:
   422                           
   423                           ; 1 bytes @ 0x2
   424  0072                     	ds	2
   425  0074                     ___lldiv@dividend:
   426                           
   427                           ; 4 bytes @ 0x4
   428  0074                     	ds	4
   429  0078                     ??___lldiv:
   430                           
   431                           ; 1 bytes @ 0x8
   432  0078                     	ds	1
   433  0079                     ___lldiv@quotient:
   434                           
   435                           ; 4 bytes @ 0x9
   436  0079                     	ds	4
   437  007D                     ___lldiv@counter:
   438                           
   439                           ; 1 bytes @ 0xD
   440  007D                     	ds	1
   441  007E                     ??_setup:
   442                           
   443                           	psect	cstackBANK0
   444  0020                     __pcstackBANK0:	
   445                           ; 1 bytes @ 0xE
   446                           
   447  0020                     ?_USART_set:
   448  0020                     USART_set@baudrate:	
   449                           ; 1 bytes @ 0x0
   450                           
   451                           
   452                           ; 4 bytes @ 0x0
   453  0020                     	ds	4
   454  0024                     ??_USART_set:
   455                           
   456                           ; 1 bytes @ 0x4
   457  0024                     	ds	12
   458  0030                     ??_main:
   459                           
   460                           ; 1 bytes @ 0x10
   461  0030                     	ds	2
   462                           
   463                           	psect	maintext
   464  06AF                     __pmaintext:	
   465 ;;
   466 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   467 ;;
   468 ;; *************** function _main *****************
   469 ;; Defined at:
   470 ;;		line 69 in file "main_slave_p1.c"
   471 ;; Parameters:    Size  Location     Type
   472 ;;		None
   473 ;; Auto vars:     Size  Location     Type
   474 ;;		None
   475 ;; Return value:  Size  Location     Type
   476 ;;                  1    wreg      void 
   477 ;; Registers used:
   478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   479 ;; Tracked objects:
   480 ;;		On entry : B00/0
   481 ;;		On exit  : 0/0
   482 ;;		Unchanged: 0/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   484 ;;      Params:         0       0       0       0       0
   485 ;;      Locals:         0       0       0       0       0
   486 ;;      Temps:          0       2       0       0       0
   487 ;;      Totals:         0       2       0       0       0
   488 ;;Total ram usage:        2 bytes
   489 ;; Hardware stack levels required when called: 3
   490 ;; This function calls:
   491 ;;		_USART_send
   492 ;;		_setup
   493 ;; This function is called by:
   494 ;;		Startup code after reset
   495 ;; This function uses a non-reentrant model
   496 ;;
   497                           
   498  06AF                     _main:	
   499                           ;psect for function _main
   500                           
   501  06AF                     l855:	
   502                           ;incstack = 0
   503                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   504                           
   505                           
   506                           ;main_slave_p1.c: 70:     setup();
   507  06AF  120A  118A  26C9  120A  118A  	fcall	_setup
   508  06B4                     l857:
   509                           
   510                           ;main_slave_p1.c: 72:         USART_send('A');
   511  06B4  3041               	movlw	65
   512  06B5  120A  118A  26A3  120A  118A  	fcall	_USART_send
   513  06BA                     l859:
   514                           
   515                           ;main_slave_p1.c: 73:         _delay((unsigned long)((100)*(1000000/4000.0)));
   516  06BA  3021               	movlw	33
   517  06BB  1283               	bcf	3,5	;RP0=0, select bank0
   518  06BC  1303               	bcf	3,6	;RP1=0, select bank0
   519  06BD  00B1               	movwf	??_main+1
   520  06BE  3075               	movlw	117
   521  06BF  00B0               	movwf	??_main
   522  06C0                     u237:
   523  06C0  0BB0               	decfsz	??_main,f
   524  06C1  2EC0               	goto	u237
   525  06C2  0BB1               	decfsz	??_main+1,f
   526  06C3  2EC0               	goto	u237
   527  06C4  2EC5               	nop2
   528  06C5  2EB4               	goto	l857
   529  06C6  120A  118A  2800   	ljmp	start
   530  06C9                     __end_of_main:
   531                           
   532                           	psect	text1
   533  06C9                     __ptext1:	
   534 ;; *************** function _setup *****************
   535 ;; Defined at:
   536 ;;		line 81 in file "main_slave_p1.c"
   537 ;; Parameters:    Size  Location     Type
   538 ;;		None
   539 ;; Auto vars:     Size  Location     Type
   540 ;;		None
   541 ;; Return value:  Size  Location     Type
   542 ;;                  1    wreg      void 
   543 ;; Registers used:
   544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   545 ;; Tracked objects:
   546 ;;		On entry : 0/0
   547 ;;		On exit  : 0/0
   548 ;;		Unchanged: 0/0
   549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   550 ;;      Params:         0       0       0       0       0
   551 ;;      Locals:         0       0       0       0       0
   552 ;;      Temps:          0       0       0       0       0
   553 ;;      Totals:         0       0       0       0       0
   554 ;;Total ram usage:        0 bytes
   555 ;; Hardware stack levels used: 1
   556 ;; Hardware stack levels required when called: 2
   557 ;; This function calls:
   558 ;;		_USART_set
   559 ;;		_int_osc_MHz
   560 ;; This function is called by:
   561 ;;		_main
   562 ;; This function uses a non-reentrant model
   563 ;;
   564                           
   565  06C9                     _setup:	
   566                           ;psect for function _setup
   567                           
   568  06C9                     l837:	
   569                           ;incstack = 0
   570                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   571                           
   572                           
   573                           ;main_slave_p1.c: 82:     int_osc_MHz(1);
   574  06C9  3001               	movlw	1
   575  06CA  120A  118A  26E9  120A  118A  	fcall	_int_osc_MHz
   576  06CF                     l839:
   577                           
   578                           ;main_slave_p1.c: 85:     ANSEL = 0;
   579  06CF  1683               	bsf	3,5	;RP0=1, select bank3
   580  06D0  1703               	bsf	3,6	;RP1=1, select bank3
   581  06D1  0188               	clrf	8	;volatile
   582  06D2                     l841:
   583                           
   584                           ;main_slave_p1.c: 86:     ANSELH = 0;
   585  06D2  0189               	clrf	9	;volatile
   586  06D3                     l843:
   587                           
   588                           ;main_slave_p1.c: 88:     TRISA = 0;
   589  06D3  1683               	bsf	3,5	;RP0=1, select bank1
   590  06D4  1303               	bcf	3,6	;RP1=0, select bank1
   591  06D5  0185               	clrf	5	;volatile
   592  06D6                     l845:
   593                           
   594                           ;main_slave_p1.c: 89:     PORTA = 0;
   595  06D6  1283               	bcf	3,5	;RP0=0, select bank0
   596  06D7  1303               	bcf	3,6	;RP1=0, select bank0
   597  06D8  0185               	clrf	5	;volatile
   598  06D9                     l847:
   599                           
   600                           ;main_slave_p1.c: 91:     USART_set(9600);
   601  06D9  3000               	movlw	0
   602  06DA  00A3               	movwf	USART_set@baudrate+3
   603  06DB  3000               	movlw	0
   604  06DC  00A2               	movwf	USART_set@baudrate+2
   605  06DD  3025               	movlw	37
   606  06DE  00A1               	movwf	USART_set@baudrate+1
   607  06DF  3080               	movlw	128
   608  06E0  00A0               	movwf	USART_set@baudrate
   609  06E1  120A  118A  278A  120A  118A  	fcall	_USART_set
   610  06E6                     l849:
   611                           
   612                           ;main_slave_p1.c: 94:     INTCONbits.GIE = 1;
   613  06E6  178B               	bsf	11,7	;volatile
   614  06E7                     l851:
   615                           
   616                           ;main_slave_p1.c: 95:     INTCONbits.PEIE = 1;
   617  06E7  170B               	bsf	11,6	;volatile
   618  06E8                     l31:
   619  06E8  0008               	return
   620  06E9                     __end_of_setup:
   621                           
   622                           	psect	text2
   623  06E9                     __ptext2:	
   624 ;; *************** function _int_osc_MHz *****************
   625 ;; Defined at:
   626 ;;		line 13 in file "osc.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;  freq            1    wreg     unsigned char 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  freq            1    2[COMMON] unsigned char 
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   640 ;;      Params:         0       0       0       0       0
   641 ;;      Locals:         1       0       0       0       0
   642 ;;      Temps:          2       0       0       0       0
   643 ;;      Totals:         3       0       0       0       0
   644 ;;Total ram usage:        3 bytes
   645 ;; Hardware stack levels used: 1
   646 ;; This function calls:
   647 ;;		Nothing
   648 ;; This function is called by:
   649 ;;		_setup
   650 ;; This function uses a non-reentrant model
   651 ;;
   652                           
   653  06E9                     _int_osc_MHz:	
   654                           ;psect for function _int_osc_MHz
   655                           
   656                           
   657                           ;incstack = 0
   658                           ; Regs used in _int_osc_MHz: [wreg-fsr0h+status,2+status,0]
   659                           ;int_osc_MHz@freq stored from wreg
   660  06E9  00F2               	movwf	int_osc_MHz@freq
   661  06EA                     l693:
   662                           
   663                           ;osc.c: 14:     switch(freq){
   664  06EA  2F0C               	goto	l707
   665  06EB                     l695:
   666                           
   667                           ;osc.c: 16:             OSCCONbits.IRCF = 0b100;
   668  06EB  1683               	bsf	3,5	;RP0=1, select bank1
   669  06EC  1303               	bcf	3,6	;RP1=0, select bank1
   670  06ED  080F               	movf	15,w	;volatile
   671  06EE  398F               	andlw	-113
   672  06EF  3840               	iorlw	64
   673  06F0  008F               	movwf	15	;volatile
   674                           
   675                           ;osc.c: 17:             break;
   676  06F1  2F22               	goto	l38
   677  06F2                     l697:
   678                           
   679                           ;osc.c: 19:             OSCCONbits.IRCF = 0b101;
   680  06F2  1683               	bsf	3,5	;RP0=1, select bank1
   681  06F3  1303               	bcf	3,6	;RP1=0, select bank1
   682  06F4  080F               	movf	15,w	;volatile
   683  06F5  398F               	andlw	-113
   684  06F6  3850               	iorlw	80
   685  06F7  008F               	movwf	15	;volatile
   686                           
   687                           ;osc.c: 20:             break;
   688  06F8  2F22               	goto	l38
   689  06F9                     l699:
   690                           
   691                           ;osc.c: 22:             OSCCONbits.IRCF = 0b110;
   692  06F9  1683               	bsf	3,5	;RP0=1, select bank1
   693  06FA  1303               	bcf	3,6	;RP1=0, select bank1
   694  06FB  080F               	movf	15,w	;volatile
   695  06FC  398F               	andlw	-113
   696  06FD  3860               	iorlw	96
   697  06FE  008F               	movwf	15	;volatile
   698                           
   699                           ;osc.c: 23:             break;
   700  06FF  2F22               	goto	l38
   701  0700                     l701:
   702                           
   703                           ;osc.c: 25:             OSCCONbits.IRCF = 0b111;
   704  0700  3070               	movlw	112
   705  0701  1683               	bsf	3,5	;RP0=1, select bank1
   706  0702  1303               	bcf	3,6	;RP1=0, select bank1
   707  0703  048F               	iorwf	15,f	;volatile
   708                           
   709                           ;osc.c: 26:             break;
   710  0704  2F22               	goto	l38
   711  0705                     l703:
   712                           
   713                           ;osc.c: 28:             OSCCONbits.IRCF = 0b110;
   714  0705  1683               	bsf	3,5	;RP0=1, select bank1
   715  0706  1303               	bcf	3,6	;RP1=0, select bank1
   716  0707  080F               	movf	15,w	;volatile
   717  0708  398F               	andlw	-113
   718  0709  3860               	iorlw	96
   719  070A  008F               	movwf	15	;volatile
   720                           
   721                           ;osc.c: 29:             break;
   722  070B  2F22               	goto	l38
   723  070C                     l707:
   724  070C  0872               	movf	int_osc_MHz@freq,w
   725  070D  00F0               	movwf	??_int_osc_MHz
   726  070E  01F1               	clrf	??_int_osc_MHz+1
   727                           
   728                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   729                           ; Switch size 1, requested type "simple"
   730                           ; Number of cases is 1, Range of values is 0 to 0
   731                           ; switch strategies available:
   732                           ; Name         Instructions Cycles
   733                           ; simple_byte            4     3 (average)
   734                           ; direct_byte           11     8 (fixed)
   735                           ; jumptable            260     6 (fixed)
   736                           ;	Chosen strategy is simple_byte
   737  070F  0871               	movf	??_int_osc_MHz+1,w
   738  0710  3A00               	xorlw	0	; case 0
   739  0711  1903               	skipnz
   740  0712  2F14               	goto	l881
   741  0713  2F05               	goto	l703
   742  0714                     l881:
   743                           
   744                           ; Switch size 1, requested type "simple"
   745                           ; Number of cases is 4, Range of values is 1 to 8
   746                           ; switch strategies available:
   747                           ; Name         Instructions Cycles
   748                           ; simple_byte           13     7 (average)
   749                           ; direct_byte           35    11 (fixed)
   750                           ; jumptable            263     9 (fixed)
   751                           ;	Chosen strategy is simple_byte
   752  0714  0870               	movf	??_int_osc_MHz,w
   753  0715  3A01               	xorlw	1	; case 1
   754  0716  1903               	skipnz
   755  0717  2EEB               	goto	l695
   756  0718  3A03               	xorlw	3	; case 2
   757  0719  1903               	skipnz
   758  071A  2EF2               	goto	l697
   759  071B  3A06               	xorlw	6	; case 4
   760  071C  1903               	skipnz
   761  071D  2EF9               	goto	l699
   762  071E  3A0C               	xorlw	12	; case 8
   763  071F  1903               	skipnz
   764  0720  2F00               	goto	l701
   765  0721  2F05               	goto	l703
   766  0722                     l38:
   767                           
   768                           ;osc.c: 31:     OSCCONbits.SCS = 1;
   769  0722  140F               	bsf	15,0	;volatile
   770  0723                     l43:
   771  0723  0008               	return
   772  0724                     __end_of_int_osc_MHz:
   773                           
   774                           	psect	text3
   775  078A                     __ptext3:	
   776 ;; *************** function _USART_set *****************
   777 ;; Defined at:
   778 ;;		line 12 in file "USART.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;  baudrate        4    0[BANK0 ] const unsigned long 
   781 ;; Auto vars:     Size  Location     Type
   782 ;;		None
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      void 
   785 ;; Registers used:
   786 ;;		wreg, status,2, status,0, pclath, cstack
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         0       4       0       0       0
   793 ;;      Locals:         0       0       0       0       0
   794 ;;      Temps:          0      12       0       0       0
   795 ;;      Totals:         0      16       0       0       0
   796 ;;Total ram usage:       16 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; Hardware stack levels required when called: 1
   799 ;; This function calls:
   800 ;;		___lldiv
   801 ;; This function is called by:
   802 ;;		_setup
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806  078A                     _USART_set:	
   807                           ;psect for function _USART_set
   808                           
   809  078A                     l817:	
   810                           ;incstack = 0
   811                           ; Regs used in _USART_set: [wreg+status,2+status,0+pclath+cstack]
   812                           
   813                           
   814                           ;USART.c: 12: void USART_set(const unsigned long int baudrate);USART.c: 13: {;USART.c: 1
      +                          5:     TXSTAbits.BRGH = 1;
   815  078A  1683               	bsf	3,5	;RP0=1, select bank1
   816  078B  1303               	bcf	3,6	;RP1=0, select bank1
   817  078C  1518               	bsf	24,2	;volatile
   818                           
   819                           ;USART.c: 16:     BAUDCTLbits.BRG16 = 1;
   820  078D  1683               	bsf	3,5	;RP0=1, select bank3
   821  078E  1703               	bsf	3,6	;RP1=1, select bank3
   822  078F  1587               	bsf	7,3	;volatile
   823  0790                     l819:
   824                           
   825                           ;USART.c: 17:     SPBRGH = 0;
   826  0790  1683               	bsf	3,5	;RP0=1, select bank1
   827  0791  1303               	bcf	3,6	;RP1=0, select bank1
   828  0792  019A               	clrf	26	;volatile
   829  0793                     l821:
   830                           
   831                           ;USART.c: 18:     SPBRG = (1000000 - baudrate * 4) / (baudrate * 4);
   832  0793  1283               	bcf	3,5	;RP0=0, select bank0
   833  0794  1303               	bcf	3,6	;RP1=0, select bank0
   834  0795  0820               	movf	USART_set@baudrate,w
   835  0796  00A4               	movwf	??_USART_set
   836  0797  0821               	movf	USART_set@baudrate+1,w
   837  0798  00A5               	movwf	??_USART_set+1
   838  0799  0822               	movf	USART_set@baudrate+2,w
   839  079A  00A6               	movwf	??_USART_set+2
   840  079B  0823               	movf	USART_set@baudrate+3,w
   841  079C  00A7               	movwf	??_USART_set+3
   842  079D  3002               	movlw	2
   843  079E                     u205:
   844  079E  1003               	clrc
   845  079F  0DA4               	rlf	??_USART_set,f
   846  07A0  0DA5               	rlf	??_USART_set+1,f
   847  07A1  0DA6               	rlf	??_USART_set+2,f
   848  07A2  0DA7               	rlf	??_USART_set+3,f
   849  07A3                     u200:
   850  07A3  3EFF               	addlw	-1
   851  07A4  1D03               	skipz
   852  07A5  2F9E               	goto	u205
   853  07A6  0827               	movf	??_USART_set+3,w
   854  07A7  00F3               	movwf	___lldiv@divisor+3
   855  07A8  0826               	movf	??_USART_set+2,w
   856  07A9  00F2               	movwf	___lldiv@divisor+2
   857  07AA  0825               	movf	??_USART_set+1,w
   858  07AB  00F1               	movwf	___lldiv@divisor+1
   859  07AC  0824               	movf	??_USART_set,w
   860  07AD  00F0               	movwf	___lldiv@divisor
   861  07AE  0820               	movf	USART_set@baudrate,w
   862  07AF  00A8               	movwf	??_USART_set+4
   863  07B0  0821               	movf	USART_set@baudrate+1,w
   864  07B1  00A9               	movwf	??_USART_set+5
   865  07B2  0822               	movf	USART_set@baudrate+2,w
   866  07B3  00AA               	movwf	??_USART_set+6
   867  07B4  0823               	movf	USART_set@baudrate+3,w
   868  07B5  00AB               	movwf	??_USART_set+7
   869  07B6  3002               	movlw	2
   870  07B7                     u215:
   871  07B7  1003               	clrc
   872  07B8  0DA8               	rlf	??_USART_set+4,f
   873  07B9  0DA9               	rlf	??_USART_set+5,f
   874  07BA  0DAA               	rlf	??_USART_set+6,f
   875  07BB  0DAB               	rlf	??_USART_set+7,f
   876  07BC                     u210:
   877  07BC  3EFF               	addlw	-1
   878  07BD  1D03               	skipz
   879  07BE  2FB7               	goto	u215
   880  07BF  3040               	movlw	64
   881  07C0  00AC               	movwf	??_USART_set+8
   882  07C1  3042               	movlw	66
   883  07C2  00AD               	movwf	??_USART_set+9
   884  07C3  300F               	movlw	15
   885  07C4  00AE               	movwf	??_USART_set+10
   886  07C5  3000               	movlw	0
   887  07C6  00AF               	movwf	??_USART_set+11
   888  07C7  0828               	movf	??_USART_set+4,w
   889  07C8  02AC               	subwf	??_USART_set+8,f
   890  07C9  0829               	movf	??_USART_set+5,w
   891  07CA  1C03               	skipc
   892  07CB  0F29               	incfsz	??_USART_set+5,w
   893  07CC  2FCE               	goto	u221
   894  07CD  2FCF               	goto	u222
   895  07CE                     u221:
   896  07CE  02AD               	subwf	??_USART_set+9,f
   897  07CF                     u222:
   898  07CF  082A               	movf	??_USART_set+6,w
   899  07D0  1C03               	skipc
   900  07D1  0F2A               	incfsz	??_USART_set+6,w
   901  07D2  2FD4               	goto	u223
   902  07D3  2FD5               	goto	u224
   903  07D4                     u223:
   904  07D4  02AE               	subwf	??_USART_set+10,f
   905  07D5                     u224:
   906  07D5  082B               	movf	??_USART_set+7,w
   907  07D6  1C03               	skipc
   908  07D7  0F2B               	incfsz	??_USART_set+7,w
   909  07D8  2FDA               	goto	u225
   910  07D9  2FDB               	goto	u226
   911  07DA                     u225:
   912  07DA  02AF               	subwf	??_USART_set+11,f
   913  07DB                     u226:
   914  07DB  082F               	movf	??_USART_set+11,w
   915  07DC  00F7               	movwf	___lldiv@dividend+3
   916  07DD  082E               	movf	??_USART_set+10,w
   917  07DE  00F6               	movwf	___lldiv@dividend+2
   918  07DF  082D               	movf	??_USART_set+9,w
   919  07E0  00F5               	movwf	___lldiv@dividend+1
   920  07E1  082C               	movf	??_USART_set+8,w
   921  07E2  00F4               	movwf	___lldiv@dividend
   922  07E3  120A  118A  2724  120A  118A  	fcall	___lldiv
   923  07E8  0870               	movf	?___lldiv,w
   924  07E9  1683               	bsf	3,5	;RP0=1, select bank1
   925  07EA  1303               	bcf	3,6	;RP1=0, select bank1
   926  07EB  0099               	movwf	25	;volatile
   927  07EC                     l823:
   928                           
   929                           ;USART.c: 19:     TXSTAbits.SYNC = 0;
   930  07EC  1218               	bcf	24,4	;volatile
   931  07ED                     l825:
   932                           
   933                           ;USART.c: 20:     RCSTAbits.SPEN = 1;
   934  07ED  1283               	bcf	3,5	;RP0=0, select bank0
   935  07EE  1303               	bcf	3,6	;RP1=0, select bank0
   936  07EF  1798               	bsf	24,7	;volatile
   937  07F0                     l827:
   938                           
   939                           ;USART.c: 23:     RCSTAbits.RX9 = 0;
   940  07F0  1318               	bcf	24,6	;volatile
   941  07F1                     l829:
   942                           
   943                           ;USART.c: 24:     TXSTAbits.TX9 = 0;
   944  07F1  1683               	bsf	3,5	;RP0=1, select bank1
   945  07F2  1303               	bcf	3,6	;RP1=0, select bank1
   946  07F3  1318               	bcf	24,6	;volatile
   947  07F4                     l831:
   948                           
   949                           ;USART.c: 26:     TXSTAbits.TXEN = 1;
   950  07F4  1698               	bsf	24,5	;volatile
   951  07F5                     l833:
   952                           
   953                           ;USART.c: 27:     RCSTAbits.CREN = 1;
   954  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   955  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   956  07F7  1618               	bsf	24,4	;volatile
   957  07F8                     l835:
   958                           
   959                           ;USART.c: 29:     PIE1bits.RCIE = 1;
   960  07F8  1683               	bsf	3,5	;RP0=1, select bank1
   961  07F9  1303               	bcf	3,6	;RP1=0, select bank1
   962  07FA  168C               	bsf	12,5	;volatile
   963  07FB                     l62:
   964  07FB  0008               	return
   965  07FC                     __end_of_USART_set:
   966                           
   967                           	psect	text4
   968  0724                     __ptext4:	
   969 ;; *************** function ___lldiv *****************
   970 ;; Defined at:
   971 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\__lldiv.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  divisor         4    0[COMMON] unsigned long 
   974 ;;  dividend        4    4[COMMON] unsigned long 
   975 ;; Auto vars:     Size  Location     Type
   976 ;;  quotient        4    9[COMMON] unsigned long 
   977 ;;  counter         1   13[COMMON] unsigned char 
   978 ;; Return value:  Size  Location     Type
   979 ;;                  4    0[COMMON] unsigned long 
   980 ;; Registers used:
   981 ;;		wreg, status,2, status,0
   982 ;; Tracked objects:
   983 ;;		On entry : 0/0
   984 ;;		On exit  : 0/0
   985 ;;		Unchanged: 0/0
   986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   987 ;;      Params:         8       0       0       0       0
   988 ;;      Locals:         5       0       0       0       0
   989 ;;      Temps:          1       0       0       0       0
   990 ;;      Totals:        14       0       0       0       0
   991 ;;Total ram usage:       14 bytes
   992 ;; Hardware stack levels used: 1
   993 ;; This function calls:
   994 ;;		Nothing
   995 ;; This function is called by:
   996 ;;		_USART_set
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000  0724                     ___lldiv:	
  1001                           ;psect for function ___lldiv
  1002                           
  1003  0724                     l793:	
  1004                           ;incstack = 0
  1005                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  1006                           
  1007  0724  3000               	movlw	0
  1008  0725  00FC               	movwf	___lldiv@quotient+3
  1009  0726  3000               	movlw	0
  1010  0727  00FB               	movwf	___lldiv@quotient+2
  1011  0728  3000               	movlw	0
  1012  0729  00FA               	movwf	___lldiv@quotient+1
  1013  072A  3000               	movlw	0
  1014  072B  00F9               	movwf	___lldiv@quotient
  1015  072C  0873               	movf	___lldiv@divisor+3,w
  1016  072D  0472               	iorwf	___lldiv@divisor+2,w
  1017  072E  0471               	iorwf	___lldiv@divisor+1,w
  1018  072F  0470               	iorwf	___lldiv@divisor,w
  1019  0730  1903               	skipnz
  1020  0731  2F33               	goto	u131
  1021  0732  2F34               	goto	u130
  1022  0733                     u131:
  1023  0733  2F81               	goto	l813
  1024  0734                     u130:
  1025  0734                     l795:
  1026  0734  01FD               	clrf	___lldiv@counter
  1027  0735  0AFD               	incf	___lldiv@counter,f
  1028  0736  2F44               	goto	l799
  1029  0737                     l797:
  1030  0737  3001               	movlw	1
  1031  0738  00F8               	movwf	??___lldiv
  1032  0739                     u145:
  1033  0739  1003               	clrc
  1034  073A  0DF0               	rlf	___lldiv@divisor,f
  1035  073B  0DF1               	rlf	___lldiv@divisor+1,f
  1036  073C  0DF2               	rlf	___lldiv@divisor+2,f
  1037  073D  0DF3               	rlf	___lldiv@divisor+3,f
  1038  073E  0BF8               	decfsz	??___lldiv,f
  1039  073F  2F39               	goto	u145
  1040  0740  3001               	movlw	1
  1041  0741  00F8               	movwf	??___lldiv
  1042  0742  0878               	movf	??___lldiv,w
  1043  0743  07FD               	addwf	___lldiv@counter,f
  1044  0744                     l799:
  1045  0744  1FF3               	btfss	___lldiv@divisor+3,7
  1046  0745  2F47               	goto	u151
  1047  0746  2F48               	goto	u150
  1048  0747                     u151:
  1049  0747  2F37               	goto	l797
  1050  0748                     u150:
  1051  0748                     l801:
  1052  0748  3001               	movlw	1
  1053  0749  00F8               	movwf	??___lldiv
  1054  074A                     u165:
  1055  074A  1003               	clrc
  1056  074B  0DF9               	rlf	___lldiv@quotient,f
  1057  074C  0DFA               	rlf	___lldiv@quotient+1,f
  1058  074D  0DFB               	rlf	___lldiv@quotient+2,f
  1059  074E  0DFC               	rlf	___lldiv@quotient+3,f
  1060  074F  0BF8               	decfsz	??___lldiv,f
  1061  0750  2F4A               	goto	u165
  1062  0751                     l803:
  1063  0751  0873               	movf	___lldiv@divisor+3,w
  1064  0752  0277               	subwf	___lldiv@dividend+3,w
  1065  0753  1D03               	skipz
  1066  0754  2F5F               	goto	u175
  1067  0755  0872               	movf	___lldiv@divisor+2,w
  1068  0756  0276               	subwf	___lldiv@dividend+2,w
  1069  0757  1D03               	skipz
  1070  0758  2F5F               	goto	u175
  1071  0759  0871               	movf	___lldiv@divisor+1,w
  1072  075A  0275               	subwf	___lldiv@dividend+1,w
  1073  075B  1D03               	skipz
  1074  075C  2F5F               	goto	u175
  1075  075D  0870               	movf	___lldiv@divisor,w
  1076  075E  0274               	subwf	___lldiv@dividend,w
  1077  075F                     u175:
  1078  075F  1C03               	skipc
  1079  0760  2F62               	goto	u171
  1080  0761  2F63               	goto	u170
  1081  0762                     u171:
  1082  0762  2F72               	goto	l809
  1083  0763                     u170:
  1084  0763                     l805:
  1085  0763  0870               	movf	___lldiv@divisor,w
  1086  0764  02F4               	subwf	___lldiv@dividend,f
  1087  0765  0871               	movf	___lldiv@divisor+1,w
  1088  0766  1C03               	skipc
  1089  0767  0F71               	incfsz	___lldiv@divisor+1,w
  1090  0768  02F5               	subwf	___lldiv@dividend+1,f
  1091  0769  0872               	movf	___lldiv@divisor+2,w
  1092  076A  1C03               	skipc
  1093  076B  0F72               	incfsz	___lldiv@divisor+2,w
  1094  076C  02F6               	subwf	___lldiv@dividend+2,f
  1095  076D  0873               	movf	___lldiv@divisor+3,w
  1096  076E  1C03               	skipc
  1097  076F  0F73               	incfsz	___lldiv@divisor+3,w
  1098  0770  02F7               	subwf	___lldiv@dividend+3,f
  1099  0771                     l807:
  1100  0771  1479               	bsf	___lldiv@quotient,0
  1101  0772                     l809:
  1102  0772  3001               	movlw	1
  1103  0773                     u185:
  1104  0773  1003               	clrc
  1105  0774  0CF3               	rrf	___lldiv@divisor+3,f
  1106  0775  0CF2               	rrf	___lldiv@divisor+2,f
  1107  0776  0CF1               	rrf	___lldiv@divisor+1,f
  1108  0777  0CF0               	rrf	___lldiv@divisor,f
  1109  0778  3EFF               	addlw	-1
  1110  0779  1D03               	skipz
  1111  077A  2F73               	goto	u185
  1112  077B                     l811:
  1113  077B  3001               	movlw	1
  1114  077C  02FD               	subwf	___lldiv@counter,f
  1115  077D  1D03               	btfss	3,2
  1116  077E  2F80               	goto	u191
  1117  077F  2F81               	goto	u190
  1118  0780                     u191:
  1119  0780  2F48               	goto	l801
  1120  0781                     u190:
  1121  0781                     l813:
  1122  0781  087C               	movf	___lldiv@quotient+3,w
  1123  0782  00F3               	movwf	?___lldiv+3
  1124  0783  087B               	movf	___lldiv@quotient+2,w
  1125  0784  00F2               	movwf	?___lldiv+2
  1126  0785  087A               	movf	___lldiv@quotient+1,w
  1127  0786  00F1               	movwf	?___lldiv+1
  1128  0787  0879               	movf	___lldiv@quotient,w
  1129  0788  00F0               	movwf	?___lldiv
  1130  0789                     l199:
  1131  0789  0008               	return
  1132  078A                     __end_of___lldiv:
  1133                           
  1134                           	psect	text5
  1135  06A3                     __ptext5:	
  1136 ;; *************** function _USART_send *****************
  1137 ;; Defined at:
  1138 ;;		line 32 in file "USART.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  data            1    wreg     const unsigned char 
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;  data            1    0[COMMON] const unsigned char 
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1152 ;;      Params:         0       0       0       0       0
  1153 ;;      Locals:         1       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0
  1155 ;;      Totals:         1       0       0       0       0
  1156 ;;Total ram usage:        1 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; This function calls:
  1159 ;;		Nothing
  1160 ;; This function is called by:
  1161 ;;		_main
  1162 ;;		_USART_print
  1163 ;; This function uses a non-reentrant model
  1164 ;;
  1165                           
  1166  06A3                     _USART_send:	
  1167                           ;psect for function _USART_send
  1168                           
  1169                           
  1170                           ;incstack = 0
  1171                           ; Regs used in _USART_send: [wreg]
  1172                           ;USART_send@data stored from wreg
  1173  06A3  00F0               	movwf	USART_send@data
  1174  06A4                     l751:
  1175  06A4                     l65:	
  1176                           ;USART.c: 32: void USART_send(const char data);USART.c: 33: {;USART.c: 34:     while(!TX
      +                          STAbits.TRMT);
  1177                           
  1178  06A4  1683               	bsf	3,5	;RP0=1, select bank1
  1179  06A5  1303               	bcf	3,6	;RP1=0, select bank1
  1180  06A6  1C98               	btfss	24,1	;volatile
  1181  06A7  2EA9               	goto	u111
  1182  06A8  2EAA               	goto	u110
  1183  06A9                     u111:
  1184  06A9  2EA4               	goto	l65
  1185  06AA                     u110:
  1186  06AA                     l753:
  1187                           
  1188                           ;USART.c: 35:     TXREG = data;
  1189  06AA  0870               	movf	USART_send@data,w
  1190  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  1191  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  1192  06AD  0099               	movwf	25	;volatile
  1193  06AE                     l68:
  1194  06AE  0008               	return
  1195  06AF                     __end_of_USART_send:
  1196  007E                     btemp	set	126	;btemp
  1197  007E                     wtemp0	set	126
  1198                           
  1199                           	psect	idloc
  1200                           
  1201                           ;Config register IDLOC0 @ 0x2000
  1202                           ;	unspecified, using default values
  1203  2000                     	org	8192
  1204  2000  3FFF               	dw	16383
  1205                           
  1206                           ;Config register IDLOC1 @ 0x2001
  1207                           ;	unspecified, using default values
  1208  2001                     	org	8193
  1209  2001  3FFF               	dw	16383
  1210                           
  1211                           ;Config register IDLOC2 @ 0x2002
  1212                           ;	unspecified, using default values
  1213  2002                     	org	8194
  1214  2002  3FFF               	dw	16383
  1215                           
  1216                           ;Config register IDLOC3 @ 0x2003
  1217                           ;	unspecified, using default values
  1218  2003                     	org	8195
  1219  2003  3FFF               	dw	16383
  1220                           
  1221                           	psect	config
  1222                           
  1223                           ;Config register CONFIG1 @ 0x2007
  1224                           ;	Oscillator Selection bits
  1225                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1226                           ;	Watchdog Timer Enable bit
  1227                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1228                           ;	Power-up Timer Enable bit
  1229                           ;	PWRTE = OFF, PWRT disabled
  1230                           ;	RE3/MCLR pin function select bit
  1231                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1232                           ;	Code Protection bit
  1233                           ;	CP = OFF, Program memory code protection is disabled
  1234                           ;	Data Code Protection bit
  1235                           ;	CPD = OFF, Data memory code protection is disabled
  1236                           ;	Brown Out Reset Selection bits
  1237                           ;	BOREN = OFF, BOR disabled
  1238                           ;	Internal External Switchover bit
  1239                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1240                           ;	Fail-Safe Clock Monitor Enabled bit
  1241                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1242                           ;	Low Voltage Programming Enable bit
  1243                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1244                           ;	In-Circuit Debugger Mode bit
  1245                           ;	DEBUG = 0x1, unprogrammed default
  1246  2007                     	org	8199
  1247  2007  20D4               	dw	8404
  1248                           
  1249                           ;Config register CONFIG2 @ 0x2008
  1250                           ;	Brown-out Reset Selection bit
  1251                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
  1252                           ;	Flash Program Memory Self Write Enable bits
  1253                           ;	WRT = OFF, Write protection off
  1254  2008                     	org	8200
  1255  2008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     18      18
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _USART_set->___lldiv

Critical Paths under _main in BANK0

    _setup->_USART_set

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     464
                                             16 BANK0      2     2      0
                         _USART_send
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     449
                          _USART_set
                        _int_osc_MHz
 ---------------------------------------------------------------------------------
 (2) _int_osc_MHz                                          3     3      0      15
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _USART_set                                           16    12      4     434
                                              0 BANK0     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _USART_send                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _USART_send
   _setup
     _USART_set
       ___lldiv
     _int_osc_MHz

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     12      12       5       22.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Sep 13 16:44:26 2022

                     l31 06E8                       l43 0723                       l62 07FB  
                     l38 0722                       l65 06A4                       l68 06AE  
                    l701 0700                      l199 0789                      l703 0705  
                    l801 0748                      l811 077B                      l803 0751  
                    l707 070C                      l805 0763                      l813 0781  
                    l821 0793                      l751 06A4                      l807 0771  
                    l831 07F4                      l823 07EC                      l753 06AA  
                    l809 0772                      l833 07F5                      l825 07ED  
                    l817 078A                      l841 06D2                      l835 07F8  
                    l827 07F0                      l819 0790                      l851 06E7  
                    l843 06D3                      l829 07F1                      l693 06EA  
                    l845 06D6                      l837 06C9                      l695 06EB  
                    l847 06D9                      l839 06CF                      l855 06AF  
                    l793 0724                      l881 0714                      l697 06F2  
                    l849 06E6                      l857 06B4                      l795 0734  
                    l699 06F9                      l859 06BA                      l797 0737  
                    l799 0744                      u110 06AA                      u111 06A9  
                    u200 07A3                      u130 0734                      u210 07BC  
                    u131 0733                      u221 07CE                      u205 079E  
                    u150 0748                      u222 07CF                      u151 0747  
                    u223 07D4                      u215 07B7                      u224 07D5  
                    u145 0739                      u225 07DA                      u170 0763  
                    u226 07DB                      u171 0762                      u165 074A  
                    u237 06C0                      u190 0781                      u191 0780  
                    u175 075F                      u185 0773                     _main 06AF  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188          __end_of___lldiv 078A                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _TRISA 0085  
                  _TXREG 0019          int_osc_MHz@freq 0072                    _setup 06C9  
           ?_int_osc_MHz 0070                    status 0003                    wtemp0 007E  
        __initialization 07FC              ?_USART_send 0070             __end_of_main 06C9  
                 ??_main 0030                   ?_setup 0070                   _ANSELH 0189  
                 _SPBRGH 009A                ??___lldiv 0078        __end_of_USART_set 07FC  
__end_of__initialization 07FC           __pcstackCOMMON 0070            __end_of_setup 06E9  
                ??_setup 007E               __pmaintext 06AF             ??_USART_send 0070  
                ___lldiv 0724                  __ptext1 06C9                  __ptext2 06E9  
                __ptext3 078A                  __ptext4 0724                  __ptext5 06A3  
     __end_of_USART_send 06AF     end_of_initialization 07FC          ___lldiv@divisor 0070  
        ___lldiv@counter 007D                _RCSTAbits 0018                _USART_set 078A  
              _TXSTAbits 0098              _BAUDCTLbits 0187      start_initialization 07FC  
             ?_USART_set 0020           USART_send@data 0070        USART_set@baudrate 0020  
              ___latbits 0002            __pcstackBANK0 0020            ??_int_osc_MHz 0070  
               ?___lldiv 0070              ??_USART_set 0024                 _PIE1bits 008C  
    __end_of_int_osc_MHz 0724              _int_osc_MHz 06E9               _INTCONbits 000B  
       ___lldiv@dividend 0074               _OSCCONbits 008F         ___lldiv@quotient 0079  
             _USART_send 06A3  
