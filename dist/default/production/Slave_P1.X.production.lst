

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Sat Sep 24 13:08:49 2022

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	maintext,global,class=CODE,split=1,delta=2
    19                           	psect	text1,local,class=CODE,merge=1,delta=2
    20                           	psect	text2,local,class=CODE,merge=1,delta=2
    21                           	psect	text3,local,class=CODE,merge=1,delta=2
    22                           	psect	text4,local,class=CODE,merge=1,delta=2
    23                           	psect	text5,local,class=CODE,merge=1,delta=2
    24                           	psect	text6,local,class=CODE,merge=1,delta=2
    25                           	psect	text7,local,class=CODE,merge=1,delta=2
    26                           	psect	text8,local,class=CODE,merge=1,delta=2
    27                           	psect	text9,local,class=CODE,merge=1,delta=2
    28                           	psect	text10,local,class=CODE,merge=1,delta=2
    29                           	psect	text11,local,class=CODE,merge=1,delta=2
    30                           	psect	text12,local,class=CODE,merge=1,delta=2
    31                           	psect	text13,local,class=CODE,merge=1,delta=2
    32                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text15,local,class=CODE,merge=1,delta=2
    34                           	psect	text16,local,class=CODE,merge=1,delta=2
    35                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    36                           	psect	text18,local,class=CODE,merge=1,delta=2
    37                           	psect	text19,local,class=CODE,merge=1,delta=2
    38                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    39                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text22,local,class=CODE,merge=1,delta=2
    41                           	psect	text23,local,class=CODE,merge=1,delta=2
    42                           	psect	text24,local,class=CODE,merge=1,delta=2
    43                           	psect	text25,local,class=CODE,merge=1,delta=2
    44                           	psect	text26,local,class=CODE,merge=1,delta=2
    45                           	psect	text27,local,class=CODE,merge=1,delta=2
    46                           	psect	text28,local,class=CODE,merge=1,delta=2
    47                           	psect	text29,local,class=CODE,merge=1,delta=2
    48                           	psect	text30,local,class=CODE,merge=1,delta=2
    49                           	psect	intentry,global,class=CODE,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2
    52                           	psect	text33,local,class=CODE,merge=1,delta=2
    53                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text35,local,class=CODE,merge=1,delta=2,group=2
    55                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2,group=1
    57                           	psect	text38,local,class=CODE,merge=1,delta=2,group=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2,group=1
    59                           	psect	text40,local,class=CODE,merge=1,delta=2,group=1
    60                           	psect	text41,local,class=CODE,merge=1,delta=2,group=1
    61                           	psect	text42,local,class=CODE,merge=1,delta=2,group=1
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2,group=1
    64                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    65                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    67                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    68                           	dabs	1,0x7E,2
    69  0000                     
    70                           ; Version 2.40
    71                           ; Generated 17/11/2021 GMT
    72                           ; 
    73                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    74                           ; All rights reserved.
    75                           ; 
    76                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    77                           ; 
    78                           ; Redistribution and use in source and binary forms, with or without modification, are
    79                           ; permitted provided that the following conditions are met:
    80                           ; 
    81                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    82                           ;        conditions and the following disclaimer.
    83                           ; 
    84                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    85                           ;        of conditions and the following disclaimer in the documentation and/or other
    86                           ;        materials provided with the distribution. Publication is not required when
    87                           ;        this file is used in an embedded application.
    88                           ; 
    89                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    90                           ;        software without specific prior written permission.
    91                           ; 
    92                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    93                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    94                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    95                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    96                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    97                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    98                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    99                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   100                           ; 
   101                           ; 
   102                           ; Code-generator required, PIC16F887 Definitions
   103                           ; 
   104                           ; SFR Addresses
   105  0000                     	;# 
   106  0001                     	;# 
   107  0002                     	;# 
   108  0003                     	;# 
   109  0004                     	;# 
   110  0005                     	;# 
   111  0006                     	;# 
   112  0007                     	;# 
   113  0008                     	;# 
   114  0009                     	;# 
   115  000A                     	;# 
   116  000B                     	;# 
   117  000C                     	;# 
   118  000D                     	;# 
   119  000E                     	;# 
   120  000E                     	;# 
   121  000F                     	;# 
   122  0010                     	;# 
   123  0011                     	;# 
   124  0012                     	;# 
   125  0013                     	;# 
   126  0014                     	;# 
   127  0015                     	;# 
   128  0015                     	;# 
   129  0016                     	;# 
   130  0017                     	;# 
   131  0018                     	;# 
   132  0019                     	;# 
   133  001A                     	;# 
   134  001B                     	;# 
   135  001B                     	;# 
   136  001C                     	;# 
   137  001D                     	;# 
   138  001E                     	;# 
   139  001F                     	;# 
   140  0081                     	;# 
   141  0085                     	;# 
   142  0086                     	;# 
   143  0087                     	;# 
   144  0088                     	;# 
   145  0089                     	;# 
   146  008C                     	;# 
   147  008D                     	;# 
   148  008E                     	;# 
   149  008F                     	;# 
   150  0090                     	;# 
   151  0091                     	;# 
   152  0092                     	;# 
   153  0093                     	;# 
   154  0093                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0095                     	;# 
   158  0096                     	;# 
   159  0097                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009A                     	;# 
   163  009B                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  009F                     	;# 
   168  0105                     	;# 
   169  0107                     	;# 
   170  0108                     	;# 
   171  0109                     	;# 
   172  010C                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  0185                     	;# 
   178  0187                     	;# 
   179  0188                     	;# 
   180  0189                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000D                     	;# 
   197  000E                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0014                     	;# 
   205  0015                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001B                     	;# 
   213  001B                     	;# 
   214  001C                     	;# 
   215  001D                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  0081                     	;# 
   219  0085                     	;# 
   220  0086                     	;# 
   221  0087                     	;# 
   222  0088                     	;# 
   223  0089                     	;# 
   224  008C                     	;# 
   225  008D                     	;# 
   226  008E                     	;# 
   227  008F                     	;# 
   228  0090                     	;# 
   229  0091                     	;# 
   230  0092                     	;# 
   231  0093                     	;# 
   232  0093                     	;# 
   233  0093                     	;# 
   234  0094                     	;# 
   235  0095                     	;# 
   236  0096                     	;# 
   237  0097                     	;# 
   238  0098                     	;# 
   239  0099                     	;# 
   240  009A                     	;# 
   241  009B                     	;# 
   242  009C                     	;# 
   243  009D                     	;# 
   244  009E                     	;# 
   245  009F                     	;# 
   246  0105                     	;# 
   247  0107                     	;# 
   248  0108                     	;# 
   249  0109                     	;# 
   250  010C                     	;# 
   251  010C                     	;# 
   252  010D                     	;# 
   253  010E                     	;# 
   254  010F                     	;# 
   255  0185                     	;# 
   256  0187                     	;# 
   257  0188                     	;# 
   258  0189                     	;# 
   259  018C                     	;# 
   260  018D                     	;# 
   261  0000                     	;# 
   262  0001                     	;# 
   263  0002                     	;# 
   264  0003                     	;# 
   265  0004                     	;# 
   266  0005                     	;# 
   267  0006                     	;# 
   268  0007                     	;# 
   269  0008                     	;# 
   270  0009                     	;# 
   271  000A                     	;# 
   272  000B                     	;# 
   273  000C                     	;# 
   274  000D                     	;# 
   275  000E                     	;# 
   276  000E                     	;# 
   277  000F                     	;# 
   278  0010                     	;# 
   279  0011                     	;# 
   280  0012                     	;# 
   281  0013                     	;# 
   282  0014                     	;# 
   283  0015                     	;# 
   284  0015                     	;# 
   285  0016                     	;# 
   286  0017                     	;# 
   287  0018                     	;# 
   288  0019                     	;# 
   289  001A                     	;# 
   290  001B                     	;# 
   291  001B                     	;# 
   292  001C                     	;# 
   293  001D                     	;# 
   294  001E                     	;# 
   295  001F                     	;# 
   296  0081                     	;# 
   297  0085                     	;# 
   298  0086                     	;# 
   299  0087                     	;# 
   300  0088                     	;# 
   301  0089                     	;# 
   302  008C                     	;# 
   303  008D                     	;# 
   304  008E                     	;# 
   305  008F                     	;# 
   306  0090                     	;# 
   307  0091                     	;# 
   308  0092                     	;# 
   309  0093                     	;# 
   310  0093                     	;# 
   311  0093                     	;# 
   312  0094                     	;# 
   313  0095                     	;# 
   314  0096                     	;# 
   315  0097                     	;# 
   316  0098                     	;# 
   317  0099                     	;# 
   318  009A                     	;# 
   319  009B                     	;# 
   320  009C                     	;# 
   321  009D                     	;# 
   322  009E                     	;# 
   323  009F                     	;# 
   324  0105                     	;# 
   325  0107                     	;# 
   326  0108                     	;# 
   327  0109                     	;# 
   328  010C                     	;# 
   329  010C                     	;# 
   330  010D                     	;# 
   331  010E                     	;# 
   332  010F                     	;# 
   333  0185                     	;# 
   334  0187                     	;# 
   335  0188                     	;# 
   336  0189                     	;# 
   337  018C                     	;# 
   338  018D                     	;# 
   339  0000                     	;# 
   340  0001                     	;# 
   341  0002                     	;# 
   342  0003                     	;# 
   343  0004                     	;# 
   344  0005                     	;# 
   345  0006                     	;# 
   346  0007                     	;# 
   347  0008                     	;# 
   348  0009                     	;# 
   349  000A                     	;# 
   350  000B                     	;# 
   351  000C                     	;# 
   352  000D                     	;# 
   353  000E                     	;# 
   354  000E                     	;# 
   355  000F                     	;# 
   356  0010                     	;# 
   357  0011                     	;# 
   358  0012                     	;# 
   359  0013                     	;# 
   360  0014                     	;# 
   361  0015                     	;# 
   362  0015                     	;# 
   363  0016                     	;# 
   364  0017                     	;# 
   365  0018                     	;# 
   366  0019                     	;# 
   367  001A                     	;# 
   368  001B                     	;# 
   369  001B                     	;# 
   370  001C                     	;# 
   371  001D                     	;# 
   372  001E                     	;# 
   373  001F                     	;# 
   374  0081                     	;# 
   375  0085                     	;# 
   376  0086                     	;# 
   377  0087                     	;# 
   378  0088                     	;# 
   379  0089                     	;# 
   380  008C                     	;# 
   381  008D                     	;# 
   382  008E                     	;# 
   383  008F                     	;# 
   384  0090                     	;# 
   385  0091                     	;# 
   386  0092                     	;# 
   387  0093                     	;# 
   388  0093                     	;# 
   389  0093                     	;# 
   390  0094                     	;# 
   391  0095                     	;# 
   392  0096                     	;# 
   393  0097                     	;# 
   394  0098                     	;# 
   395  0099                     	;# 
   396  009A                     	;# 
   397  009B                     	;# 
   398  009C                     	;# 
   399  009D                     	;# 
   400  009E                     	;# 
   401  009F                     	;# 
   402  0105                     	;# 
   403  0107                     	;# 
   404  0108                     	;# 
   405  0109                     	;# 
   406  010C                     	;# 
   407  010C                     	;# 
   408  010D                     	;# 
   409  010E                     	;# 
   410  010F                     	;# 
   411  0185                     	;# 
   412  0187                     	;# 
   413  0188                     	;# 
   414  0189                     	;# 
   415  018C                     	;# 
   416  018D                     	;# 
   417  0000                     	;# 
   418  0001                     	;# 
   419  0002                     	;# 
   420  0003                     	;# 
   421  0004                     	;# 
   422  0005                     	;# 
   423  0006                     	;# 
   424  0007                     	;# 
   425  0008                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  000D                     	;# 
   431  000E                     	;# 
   432  000E                     	;# 
   433  000F                     	;# 
   434  0010                     	;# 
   435  0011                     	;# 
   436  0012                     	;# 
   437  0013                     	;# 
   438  0014                     	;# 
   439  0015                     	;# 
   440  0015                     	;# 
   441  0016                     	;# 
   442  0017                     	;# 
   443  0018                     	;# 
   444  0019                     	;# 
   445  001A                     	;# 
   446  001B                     	;# 
   447  001B                     	;# 
   448  001C                     	;# 
   449  001D                     	;# 
   450  001E                     	;# 
   451  001F                     	;# 
   452  0081                     	;# 
   453  0085                     	;# 
   454  0086                     	;# 
   455  0087                     	;# 
   456  0088                     	;# 
   457  0089                     	;# 
   458  008C                     	;# 
   459  008D                     	;# 
   460  008E                     	;# 
   461  008F                     	;# 
   462  0090                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0093                     	;# 
   466  0093                     	;# 
   467  0093                     	;# 
   468  0094                     	;# 
   469  0095                     	;# 
   470  0096                     	;# 
   471  0097                     	;# 
   472  0098                     	;# 
   473  0099                     	;# 
   474  009A                     	;# 
   475  009B                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  009F                     	;# 
   480  0105                     	;# 
   481  0107                     	;# 
   482  0108                     	;# 
   483  0109                     	;# 
   484  010C                     	;# 
   485  010C                     	;# 
   486  010D                     	;# 
   487  010E                     	;# 
   488  010F                     	;# 
   489  0185                     	;# 
   490  0187                     	;# 
   491  0188                     	;# 
   492  0189                     	;# 
   493  018C                     	;# 
   494  018D                     	;# 
   495  0000                     	;# 
   496  0001                     	;# 
   497  0002                     	;# 
   498  0003                     	;# 
   499  0004                     	;# 
   500  0005                     	;# 
   501  0006                     	;# 
   502  0007                     	;# 
   503  0008                     	;# 
   504  0009                     	;# 
   505  000A                     	;# 
   506  000B                     	;# 
   507  000C                     	;# 
   508  000D                     	;# 
   509  000E                     	;# 
   510  000E                     	;# 
   511  000F                     	;# 
   512  0010                     	;# 
   513  0011                     	;# 
   514  0012                     	;# 
   515  0013                     	;# 
   516  0014                     	;# 
   517  0015                     	;# 
   518  0015                     	;# 
   519  0016                     	;# 
   520  0017                     	;# 
   521  0018                     	;# 
   522  0019                     	;# 
   523  001A                     	;# 
   524  001B                     	;# 
   525  001B                     	;# 
   526  001C                     	;# 
   527  001D                     	;# 
   528  001E                     	;# 
   529  001F                     	;# 
   530  0081                     	;# 
   531  0085                     	;# 
   532  0086                     	;# 
   533  0087                     	;# 
   534  0088                     	;# 
   535  0089                     	;# 
   536  008C                     	;# 
   537  008D                     	;# 
   538  008E                     	;# 
   539  008F                     	;# 
   540  0090                     	;# 
   541  0091                     	;# 
   542  0092                     	;# 
   543  0093                     	;# 
   544  0093                     	;# 
   545  0093                     	;# 
   546  0094                     	;# 
   547  0095                     	;# 
   548  0096                     	;# 
   549  0097                     	;# 
   550  0098                     	;# 
   551  0099                     	;# 
   552  009A                     	;# 
   553  009B                     	;# 
   554  009C                     	;# 
   555  009D                     	;# 
   556  009E                     	;# 
   557  009F                     	;# 
   558  0105                     	;# 
   559  0107                     	;# 
   560  0108                     	;# 
   561  0109                     	;# 
   562  010C                     	;# 
   563  010C                     	;# 
   564  010D                     	;# 
   565  010E                     	;# 
   566  010F                     	;# 
   567  0185                     	;# 
   568  0187                     	;# 
   569  0188                     	;# 
   570  0189                     	;# 
   571  018C                     	;# 
   572  018D                     	;# 
   573  0000                     	;# 
   574  0001                     	;# 
   575  0002                     	;# 
   576  0003                     	;# 
   577  0004                     	;# 
   578  0005                     	;# 
   579  0006                     	;# 
   580  0007                     	;# 
   581  0008                     	;# 
   582  0009                     	;# 
   583  000A                     	;# 
   584  000B                     	;# 
   585  000C                     	;# 
   586  000D                     	;# 
   587  000E                     	;# 
   588  000E                     	;# 
   589  000F                     	;# 
   590  0010                     	;# 
   591  0011                     	;# 
   592  0012                     	;# 
   593  0013                     	;# 
   594  0014                     	;# 
   595  0015                     	;# 
   596  0015                     	;# 
   597  0016                     	;# 
   598  0017                     	;# 
   599  0018                     	;# 
   600  0019                     	;# 
   601  001A                     	;# 
   602  001B                     	;# 
   603  001B                     	;# 
   604  001C                     	;# 
   605  001D                     	;# 
   606  001E                     	;# 
   607  001F                     	;# 
   608  0081                     	;# 
   609  0085                     	;# 
   610  0086                     	;# 
   611  0087                     	;# 
   612  0088                     	;# 
   613  0089                     	;# 
   614  008C                     	;# 
   615  008D                     	;# 
   616  008E                     	;# 
   617  008F                     	;# 
   618  0090                     	;# 
   619  0091                     	;# 
   620  0092                     	;# 
   621  0093                     	;# 
   622  0093                     	;# 
   623  0093                     	;# 
   624  0094                     	;# 
   625  0095                     	;# 
   626  0096                     	;# 
   627  0097                     	;# 
   628  0098                     	;# 
   629  0099                     	;# 
   630  009A                     	;# 
   631  009B                     	;# 
   632  009C                     	;# 
   633  009D                     	;# 
   634  009E                     	;# 
   635  009F                     	;# 
   636  0105                     	;# 
   637  0107                     	;# 
   638  0108                     	;# 
   639  0109                     	;# 
   640  010C                     	;# 
   641  010C                     	;# 
   642  010D                     	;# 
   643  010E                     	;# 
   644  010F                     	;# 
   645  0185                     	;# 
   646  0187                     	;# 
   647  0188                     	;# 
   648  0189                     	;# 
   649  018C                     	;# 
   650  018D                     	;# 
   651  0000                     	;# 
   652  0001                     	;# 
   653  0002                     	;# 
   654  0003                     	;# 
   655  0004                     	;# 
   656  0005                     	;# 
   657  0006                     	;# 
   658  0007                     	;# 
   659  0008                     	;# 
   660  0009                     	;# 
   661  000A                     	;# 
   662  000B                     	;# 
   663  000C                     	;# 
   664  000D                     	;# 
   665  000E                     	;# 
   666  000E                     	;# 
   667  000F                     	;# 
   668  0010                     	;# 
   669  0011                     	;# 
   670  0012                     	;# 
   671  0013                     	;# 
   672  0014                     	;# 
   673  0015                     	;# 
   674  0015                     	;# 
   675  0016                     	;# 
   676  0017                     	;# 
   677  0018                     	;# 
   678  0019                     	;# 
   679  001A                     	;# 
   680  001B                     	;# 
   681  001B                     	;# 
   682  001C                     	;# 
   683  001D                     	;# 
   684  001E                     	;# 
   685  001F                     	;# 
   686  0081                     	;# 
   687  0085                     	;# 
   688  0086                     	;# 
   689  0087                     	;# 
   690  0088                     	;# 
   691  0089                     	;# 
   692  008C                     	;# 
   693  008D                     	;# 
   694  008E                     	;# 
   695  008F                     	;# 
   696  0090                     	;# 
   697  0091                     	;# 
   698  0092                     	;# 
   699  0093                     	;# 
   700  0093                     	;# 
   701  0093                     	;# 
   702  0094                     	;# 
   703  0095                     	;# 
   704  0096                     	;# 
   705  0097                     	;# 
   706  0098                     	;# 
   707  0099                     	;# 
   708  009A                     	;# 
   709  009B                     	;# 
   710  009C                     	;# 
   711  009D                     	;# 
   712  009E                     	;# 
   713  009F                     	;# 
   714  0105                     	;# 
   715  0107                     	;# 
   716  0108                     	;# 
   717  0109                     	;# 
   718  010C                     	;# 
   719  010C                     	;# 
   720  010D                     	;# 
   721  010E                     	;# 
   722  010F                     	;# 
   723  0185                     	;# 
   724  0187                     	;# 
   725  0188                     	;# 
   726  0189                     	;# 
   727  018C                     	;# 
   728  018D                     	;# 
   729  0000                     	;# 
   730  0001                     	;# 
   731  0002                     	;# 
   732  0003                     	;# 
   733  0004                     	;# 
   734  0005                     	;# 
   735  0006                     	;# 
   736  0007                     	;# 
   737  0008                     	;# 
   738  0009                     	;# 
   739  000A                     	;# 
   740  000B                     	;# 
   741  000C                     	;# 
   742  000D                     	;# 
   743  000E                     	;# 
   744  000E                     	;# 
   745  000F                     	;# 
   746  0010                     	;# 
   747  0011                     	;# 
   748  0012                     	;# 
   749  0013                     	;# 
   750  0014                     	;# 
   751  0015                     	;# 
   752  0015                     	;# 
   753  0016                     	;# 
   754  0017                     	;# 
   755  0018                     	;# 
   756  0019                     	;# 
   757  001A                     	;# 
   758  001B                     	;# 
   759  001B                     	;# 
   760  001C                     	;# 
   761  001D                     	;# 
   762  001E                     	;# 
   763  001F                     	;# 
   764  0081                     	;# 
   765  0085                     	;# 
   766  0086                     	;# 
   767  0087                     	;# 
   768  0088                     	;# 
   769  0089                     	;# 
   770  008C                     	;# 
   771  008D                     	;# 
   772  008E                     	;# 
   773  008F                     	;# 
   774  0090                     	;# 
   775  0091                     	;# 
   776  0092                     	;# 
   777  0093                     	;# 
   778  0093                     	;# 
   779  0093                     	;# 
   780  0094                     	;# 
   781  0095                     	;# 
   782  0096                     	;# 
   783  0097                     	;# 
   784  0098                     	;# 
   785  0099                     	;# 
   786  009A                     	;# 
   787  009B                     	;# 
   788  009C                     	;# 
   789  009D                     	;# 
   790  009E                     	;# 
   791  009F                     	;# 
   792  0105                     	;# 
   793  0107                     	;# 
   794  0108                     	;# 
   795  0109                     	;# 
   796  010C                     	;# 
   797  010C                     	;# 
   798  010D                     	;# 
   799  010E                     	;# 
   800  010F                     	;# 
   801  0185                     	;# 
   802  0187                     	;# 
   803  0188                     	;# 
   804  0189                     	;# 
   805  018C                     	;# 
   806  018D                     	;# 
   807                           
   808                           	psect	idataBANK1
   809  1B6B                     __pidataBANK1:
   810                           
   811                           ;initializer for _A
   812  1B6B  34EB               	retlw	235
   813  1B6C  34FF               	retlw	255
   814  1B6D  3493               	retlw	147
   815  1B6E  343A               	retlw	58
   816                           
   817                           ;initializer for _R1
   818  1B6F  3400               	retlw	0
   819  1B70  3440               	retlw	64
   820  1B71  341C               	retlw	28
   821  1B72  3446               	retlw	70
   822                           
   823                           ;initializer for _B
   824  1B73  3473               	retlw	115
   825  1B74  347F               	retlw	127
   826  1B75  3475               	retlw	117
   827  1B76  3439               	retlw	57
   828                           
   829                           	psect	idataBANK3
   830  1B84                     __pidataBANK3:	
   831                           ;initializer for _C
   832                           
   833  1B84  3459               	retlw	89
   834  1B85  3447               	retlw	71
   835  1B86  34BC               	retlw	188
   836  1B87  3433               	retlw	51
   837                           
   838                           ;initializer for _OLD_TEMP
   839  1B88  3496               	retlw	150
   840  1B89  3400               	retlw	0
   841                           
   842                           ;initializer for _last_mov
   843  1B8A  3405               	retlw	5
   844  1B8B  3400               	retlw	0
   845                           
   846                           ;initializer for _last_LUX
   847  1B8C  340F               	retlw	15
   848                           
   849                           ;initializer for _LUX
   850  1B8D  3408               	retlw	8
   851                           
   852                           ;initializer for _dir
   853  1B8E  3405               	retlw	5
   854                           
   855                           ;initializer for _pulso
   856  1B8F  3401               	retlw	1
   857                           
   858                           ;initializer for _last_hrs
   859  1B90  341E               	retlw	30
   860                           
   861                           ;initializer for _last_min
   862  1B91  343D               	retlw	61
   863                           
   864                           	psect	strings
   865  1800                     __pstrings:
   866  1800                     stringtab:
   867  1800                     __stringtab:
   868  1800                     stringcode:	
   869                           ;	String table - string pointers are 1 byte each
   870                           
   871  1800                     stringdir:
   872  1800  3018               	movlw	high stringdir
   873  1801  008A               	movwf	10
   874  1802  0804               	movf	4,w
   875  1803  0A84               	incf	4,f
   876  1804  0782               	addwf	2,f
   877  1805                     __stringbase:
   878  1805  3400               	retlw	0
   879  1806                     __end_of__stringtab:
   880  1806                     log@coeff:
   881  1806  3400               	retlw	0
   882  1807  3400               	retlw	0
   883  1808  3400               	retlw	0
   884  1809  3400               	retlw	0
   885  180A  34C4               	retlw	196
   886  180B  34FF               	retlw	255
   887  180C  347F               	retlw	127
   888  180D  343F               	retlw	63
   889  180E  3480               	retlw	128
   890  180F  34EF               	retlw	239
   891  1810  34FF               	retlw	255
   892  1811  34BE               	retlw	190
   893  1812  3490               	retlw	144
   894  1813  34E1               	retlw	225
   895  1814  34A9               	retlw	169
   896  1815  343E               	retlw	62
   897  1816  34EC               	retlw	236
   898  1817  3482               	retlw	130
   899  1818  3476               	retlw	118
   900  1819  34BE               	retlw	190
   901  181A  3482               	retlw	130
   902  181B  34AD               	retlw	173
   903  181C  342B               	retlw	43
   904  181D  343E               	retlw	62
   905  181E  340E               	retlw	14
   906  181F  343C               	retlw	60
   907  1820  34C3               	retlw	195
   908  1821  34BD               	retlw	189
   909  1822  3487               	retlw	135
   910  1823  34D1               	retlw	209
   911  1824  3413               	retlw	19
   912  1825  343D               	retlw	61
   913  1826  3441               	retlw	65
   914  1827  3478               	retlw	120
   915  1828  34D3               	retlw	211
   916  1829  34BB               	retlw	187
   917  182A                     __end_oflog@coeff:
   918  0001                     _TMR0	set	1
   919  0013                     _SSPBUF	set	19
   920  0014                     _SSPCON	set	20
   921  0015                     _CCPR1L	set	21
   922  0012                     _T2CONbits	set	18
   923  001D                     _CCP2CONbits	set	29
   924  001D                     _CCP2CON	set	29
   925  0017                     _CCP1CONbits	set	23
   926  0017                     _CCP1CON	set	23
   927  001E                     _ADRESH	set	30
   928  0019                     _TXREG	set	25
   929  0018                     _RCSTAbits	set	24
   930  0005                     _PORTAbits	set	5
   931  001F                     _ADCON0bits	set	31
   932  000C                     _PIR1bits	set	12
   933  0006                     _PORTBbits	set	6
   934  0008                     _PORTDbits	set	8
   935  000B                     _INTCONbits	set	11
   936  0091                     _SSPCON2bits	set	145
   937  0094                     _SSPSTAT	set	148
   938  0093                     _SSPADD	set	147
   939  0091                     _SSPCON2	set	145
   940  0092                     _PR2	set	146
   941  0087                     _TRISCbits	set	135
   942  009E                     _ADRESL	set	158
   943  008C                     _PIE1bits	set	140
   944  009F                     _ADCON1bits	set	159
   945  0099                     _SPBRG	set	153
   946  009A                     _SPBRGH	set	154
   947  0098                     _TXSTAbits	set	152
   948  008F                     _OSCCONbits	set	143
   949  0096                     _IOCBbits	set	150
   950  0088                     _TRISDbits	set	136
   951  0095                     _WPUBbits	set	149
   952  0081                     _OPTION_REGbits	set	129
   953  0086                     _TRISBbits	set	134
   954  0085                     _TRISAbits	set	133
   955  0187                     _BAUDCTLbits	set	391
   956  0189                     _ANSELH	set	393
   957  0188                     _ANSEL	set	392
   958                           
   959                           	psect	cinit
   960  0015                     start_initialization:	
   961                           ; #config settings
   962                           
   963  0015                     __initialization:
   964                           
   965                           ; Initialize objects allocated to BANK3
   966  0015  1783               	bsf	3,7	;select IRP bank2
   967  0016  30EF               	movlw	low (__pdataBANK3+14)
   968  0017  00FD               	movwf	btemp+-1
   969  0018  301B               	movlw	high __pidataBANK3
   970  0019  00FE               	movwf	btemp
   971  001A  3084               	movlw	low __pidataBANK3
   972  001B  00FF               	movwf	btemp+1
   973  001C  30E1               	movlw	low __pdataBANK3
   974  001D  0084               	movwf	4
   975  001E  160A  158A  23A5  120A  118A  	fcall	init_ram0
   976                           
   977                           ; Initialize objects allocated to BANK1
   978  0023  1383               	bcf	3,7	;select IRP bank0
   979  0024  30F0               	movlw	low (__pdataBANK1+12)
   980  0025  00FD               	movwf	btemp+-1
   981  0026  301B               	movlw	high __pidataBANK1
   982  0027  00FE               	movwf	btemp
   983  0028  306B               	movlw	low __pidataBANK1
   984  0029  00FF               	movwf	btemp+1
   985  002A  30E4               	movlw	low __pdataBANK1
   986  002B  0084               	movwf	4
   987  002C  160A  158A  23A5  120A  118A  	fcall	init_ram0
   988                           
   989                           ; Clear objects allocated to BANK3
   990  0031  1783               	bsf	3,7	;select IRP bank2
   991  0032  30D0               	movlw	low __pbssBANK3
   992  0033  0084               	movwf	4
   993  0034  30E1               	movlw	low (__pbssBANK3+17)
   994  0035  160A  158A  2332  120A  118A  	fcall	clear_ram0
   995                           
   996                           ; Clear objects allocated to BANK1
   997  003A  1383               	bcf	3,7	;select IRP bank0
   998  003B  30D8               	movlw	low __pbssBANK1
   999  003C  0084               	movwf	4
  1000  003D  30E4               	movlw	low (__pbssBANK1+12)
  1001  003E  160A  158A  2332  120A  118A  	fcall	clear_ram0
  1002  0043                     end_of_initialization:	
  1003                           ;End of C runtime variable initialization code
  1004                           
  1005  0043                     __end_of__initialization:
  1006  0043  0183               	clrf	3
  1007  0044  160A  158A  2F29   	ljmp	_main	;jump to C main() function
  1008                           
  1009                           	psect	bssBANK1
  1010  00D8                     __pbssBANK1:
  1011  00D8                     _R2:
  1012  00D8                     	ds	4
  1013  00DC                     _logR2:
  1014  00DC                     	ds	4
  1015  00E0                     _errno:
  1016  00E0                     	ds	2
  1017  00E2                     _TEMP_POT:
  1018  00E2                     	ds	2
  1019                           
  1020                           	psect	dataBANK1
  1021  00E4                     __pdataBANK1:
  1022  00E4                     _A:
  1023  00E4                     	ds	4
  1024  00E8                     _R1:
  1025  00E8                     	ds	4
  1026  00EC                     _B:
  1027  00EC                     	ds	4
  1028                           
  1029                           	psect	bssBANK3
  1030  01D0                     __pbssBANK3:
  1031  01D0                     _TC:
  1032  01D0                     	ds	4
  1033  01D4                     _CH1:
  1034  01D4                     	ds	2
  1035  01D6                     _CH0:
  1036  01D6                     	ds	2
  1037  01D8                     _switch_servo:
  1038  01D8                     	ds	2
  1039  01DA                     _highCH1:
  1040  01DA                     	ds	1
  1041  01DB                     _lowCH1:
  1042  01DB                     	ds	1
  1043  01DC                     _highCH0:
  1044  01DC                     	ds	1
  1045  01DD                     _lowCH0:
  1046  01DD                     	ds	1
  1047  01DE                     _hrs:
  1048  01DE                     	ds	1
  1049  01DF                     _min:
  1050  01DF                     	ds	1
  1051  01E0                     _p:
  1052  01E0                     	ds	1
  1053                           
  1054                           	psect	dataBANK3
  1055  01E1                     __pdataBANK3:
  1056  01E1                     _C:
  1057  01E1                     	ds	4
  1058  01E5                     _OLD_TEMP:
  1059  01E5                     	ds	2
  1060  01E7                     _last_mov:
  1061  01E7                     	ds	2
  1062  01E9                     _last_LUX:
  1063  01E9                     	ds	1
  1064  01EA                     _LUX:
  1065  01EA                     	ds	1
  1066  01EB                     _dir:
  1067  01EB                     	ds	1
  1068  01EC                     _pulso:
  1069  01EC                     	ds	1
  1070  01ED                     _last_hrs:
  1071  01ED                     	ds	1
  1072  01EE                     _last_min:
  1073  01EE                     	ds	1
  1074                           
  1075                           	psect	inittext
  1076  1BA1                     init_fetch0:	
  1077                           ;	Called with low address in FSR and high address in W
  1078                           
  1079  1BA1  087E               	movf	btemp,w
  1080  1BA2  008A               	movwf	10
  1081  1BA3  087F               	movf	btemp+1,w
  1082  1BA4  0082               	movwf	2
  1083  1BA5                     init_ram0:	
  1084                           ;Called with:
  1085                           ;	high address of idata address in btemp 
  1086                           ;	low address of idata address in btemp+1 
  1087                           ;	low address of data in FSR
  1088                           ;	high address + 1 of data in btemp-1
  1089                           
  1090  1BA5  160A  158A  23A1  160A  158A  	fcall	init_fetch0
  1091  1BAA  0080               	movwf	0
  1092  1BAB  0A84               	incf	4,f
  1093  1BAC  0804               	movf	4,w
  1094  1BAD  067D               	xorwf	btemp+-1,w
  1095  1BAE  1903               	btfsc	3,2
  1096  1BAF  3400               	retlw	0
  1097  1BB0  0AFF               	incf	btemp+1,f
  1098  1BB1  1903               	btfsc	3,2
  1099  1BB2  0AFE               	incf	btemp,f
  1100  1BB3  2BA5               	goto	init_ram0
  1101                           
  1102                           	psect	clrtext
  1103  1B32                     clear_ram0:	
  1104                           ;	Called with FSR containing the base address, and
  1105                           ;	W with the last address+1
  1106                           
  1107  1B32  0064               	clrwdt	;clear the watchdog before getting into this loop
  1108  1B33                     clrloop0:
  1109  1B33  0180               	clrf	0	;clear RAM location pointed to by FSR
  1110  1B34  0A84               	incf	4,f	;increment pointer
  1111  1B35  0604               	xorwf	4,w	;XOR with final address
  1112  1B36  1903               	btfsc	3,2	;have we reached the end yet?
  1113  1B37  3400               	retlw	0	;all done for this memory range, return
  1114  1B38  0604               	xorwf	4,w	;XOR again to restore value
  1115  1B39  2B33               	goto	clrloop0	;do the next byte
  1116                           
  1117                           	psect	cstackBANK3
  1118  0190                     __pcstackBANK3:
  1119  0190                     ??_tmr0_reload:
  1120  0190                     ?_pulse_step:	
  1121                           ; 1 bytes @ 0x0
  1122                           
  1123  0190                     ??_adc_ch_switch:	
  1124                           ; 1 bytes @ 0x0
  1125                           
  1126  0190                     ??_USART_send:	
  1127                           ; 1 bytes @ 0x0
  1128                           
  1129  0190                     ?_pwm_duty_cycle:	
  1130                           ; 1 bytes @ 0x0
  1131                           
  1132  0190                     ??_I2C_Master_Start:	
  1133                           ; 1 bytes @ 0x0
  1134                           
  1135  0190                     ?_I2C_Master_Write:	
  1136                           ; 1 bytes @ 0x0
  1137                           
  1138  0190                     ??_I2C_Master_RepeatedStart:	
  1139                           ; 1 bytes @ 0x0
  1140                           
  1141  0190                     ??_I2C_Master_Stop:	
  1142                           ; 1 bytes @ 0x0
  1143                           
  1144  0190                     ??_int_osc_MHz:	
  1145                           ; 1 bytes @ 0x0
  1146                           
  1147  0190                     ??_pwm_init:	
  1148                           ; 1 bytes @ 0x0
  1149                           
  1150  0190                     ?_adc_init:	
  1151                           ; 1 bytes @ 0x0
  1152                           
  1153  0190                     ??_tmr0_init:	
  1154                           ; 1 bytes @ 0x0
  1155                           
  1156  0190                     ??_I2C_Master_Wait:	
  1157                           ; 1 bytes @ 0x0
  1158                           
  1159  0190                     ?___bmul:	
  1160                           ; 1 bytes @ 0x0
  1161                           
  1162  0190                     ?_I2C_Master_Read:	
  1163                           ; 1 bytes @ 0x0
  1164                           
  1165  0190                     ?___lmul:	
  1166                           ; 2 bytes @ 0x0
  1167                           
  1168  0190                     ?___lldiv:	
  1169                           ; 4 bytes @ 0x0
  1170                           
  1171  0190                     ?___fltol:	
  1172                           ; 4 bytes @ 0x0
  1173                           
  1174  0190                     USART_send@data:	
  1175                           ; 4 bytes @ 0x0
  1176                           
  1177  0190                     adc_init@vref_plus:	
  1178                           ; 1 bytes @ 0x0
  1179                           
  1180  0190                     ___bmul@multiplicand:	
  1181                           ; 1 bytes @ 0x0
  1182                           
  1183  0190                     pulse_step@bt:	
  1184                           ; 1 bytes @ 0x0
  1185                           
  1186  0190                     pwm_duty_cycle@duty_cycle:	
  1187                           ; 2 bytes @ 0x0
  1188                           
  1189  0190                     I2C_Master_Write@d:	
  1190                           ; 2 bytes @ 0x0
  1191                           
  1192  0190                     I2C_Master_Read@a:	
  1193                           ; 2 bytes @ 0x0
  1194                           
  1195  0190                     ___lmul@multiplier:	
  1196                           ; 2 bytes @ 0x0
  1197                           
  1198  0190                     ___lldiv@divisor:	
  1199                           ; 4 bytes @ 0x0
  1200                           
  1201  0190                     ___fltol@f1:	
  1202                           ; 4 bytes @ 0x0
  1203                           
  1204                           
  1205                           ; 4 bytes @ 0x0
  1206  0190                     	ds	1
  1207  0191                     ??___bmul:
  1208  0191                     adc_init@vref_minus:	
  1209                           ; 1 bytes @ 0x1
  1210                           
  1211                           
  1212                           ; 1 bytes @ 0x1
  1213  0191                     	ds	1
  1214  0192                     ??_LUX_config:
  1215  0192                     ??_pwm_duty_cycle:	
  1216                           ; 1 bytes @ 0x2
  1217                           
  1218  0192                     ??_I2C_Master_Write:	
  1219                           ; 1 bytes @ 0x2
  1220                           
  1221  0192                     ??_I2C_Master_Read:	
  1222                           ; 1 bytes @ 0x2
  1223                           
  1224  0192                     ??_adc_init:	
  1225                           ; 1 bytes @ 0x2
  1226                           
  1227  0192                     int_osc_MHz@freq:	
  1228                           ; 1 bytes @ 0x2
  1229                           
  1230  0192                     adc_ch_switch@channels:	
  1231                           ; 1 bytes @ 0x2
  1232                           
  1233  0192                     pwm_init@channel:	
  1234                           ; 1 bytes @ 0x2
  1235                           
  1236  0192                     tmr0_init@prescaler:	
  1237                           ; 1 bytes @ 0x2
  1238                           
  1239  0192                     ___bmul@product:	
  1240                           ; 1 bytes @ 0x2
  1241                           
  1242  0192                     pulse_step@signal:	
  1243                           ; 1 bytes @ 0x2
  1244                           
  1245                           
  1246                           ; 2 bytes @ 0x2
  1247  0192                     	ds	1
  1248  0193                     ___bmul@multiplier:
  1249                           
  1250                           ; 1 bytes @ 0x3
  1251  0193                     	ds	1
  1252  0194                     ??_pulse_step:
  1253  0194                     ?_servo:	
  1254                           ; 1 bytes @ 0x4
  1255                           
  1256  0194                     ??_bcd_dec:	
  1257                           ; 1 bytes @ 0x4
  1258                           
  1259  0194                     ??___fltol:	
  1260                           ; 1 bytes @ 0x4
  1261                           
  1262  0194                     adc_init@adc_cs:	
  1263                           ; 1 bytes @ 0x4
  1264                           
  1265  0194                     servo@mov:	
  1266                           ; 1 bytes @ 0x4
  1267                           
  1268  0194                     I2C_Master_Read@temp:	
  1269                           ; 2 bytes @ 0x4
  1270                           
  1271  0194                     ___lmul@multiplicand:	
  1272                           ; 2 bytes @ 0x4
  1273                           
  1274  0194                     ___lldiv@dividend:	
  1275                           ; 4 bytes @ 0x4
  1276                           
  1277                           
  1278                           ; 4 bytes @ 0x4
  1279  0194                     	ds	2
  1280  0196                     ??_servo:
  1281                           
  1282                           ; 1 bytes @ 0x6
  1283  0196                     	ds	1
  1284  0197                     bcd_dec@no:
  1285                           
  1286                           ; 1 bytes @ 0x7
  1287  0197                     	ds	1
  1288  0198                     ??_RTC_read:
  1289  0198                     ??___lmul:	
  1290                           ; 1 bytes @ 0x8
  1291                           
  1292  0198                     ??___lldiv:	
  1293                           ; 1 bytes @ 0x8
  1294                           
  1295                           
  1296                           ; 1 bytes @ 0x8
  1297  0198                     	ds	1
  1298  0199                     ___fltol@sign1:
  1299  0199                     ___lmul@product:	
  1300                           ; 1 bytes @ 0x9
  1301                           
  1302  0199                     ___lldiv@quotient:	
  1303                           ; 4 bytes @ 0x9
  1304                           
  1305                           
  1306                           ; 4 bytes @ 0x9
  1307  0199                     	ds	1
  1308  019A                     ___fltol@exp1:
  1309                           
  1310                           ; 1 bytes @ 0xA
  1311  019A                     	ds	1
  1312  019B                     ?_motor_dc:
  1313  019B                     motor_dc@temp:	
  1314                           ; 1 bytes @ 0xB
  1315                           
  1316                           
  1317                           ; 2 bytes @ 0xB
  1318  019B                     	ds	2
  1319  019D                     ??_motor_dc:
  1320  019D                     ___lldiv@counter:	
  1321                           ; 1 bytes @ 0xD
  1322                           
  1323                           
  1324                           ; 1 bytes @ 0xD
  1325  019D                     	ds	1
  1326  019E                     ?_USART_set:
  1327  019E                     ?_I2C_Master_Init:	
  1328                           ; 1 bytes @ 0xE
  1329                           
  1330  019E                     ?_calculateLux:	
  1331                           ; 1 bytes @ 0xE
  1332                           
  1333  019E                     calculateLux@broadband:	
  1334                           ; 4 bytes @ 0xE
  1335                           
  1336  019E                     USART_set@baudrate:	
  1337                           ; 2 bytes @ 0xE
  1338                           
  1339  019E                     I2C_Master_Init@c:	
  1340                           ; 4 bytes @ 0xE
  1341                           
  1342                           
  1343                           ; 4 bytes @ 0xE
  1344  019E                     	ds	2
  1345  01A0                     calculateLux@ir:
  1346                           
  1347                           ; 2 bytes @ 0x10
  1348  01A0                     	ds	2
  1349  01A2                     ??_calculateLux:
  1350  01A2                     ??_USART_set:	
  1351                           ; 1 bytes @ 0x12
  1352                           
  1353  01A2                     ??_I2C_Master_Init:	
  1354                           ; 1 bytes @ 0x12
  1355                           
  1356                           
  1357                           ; 1 bytes @ 0x12
  1358  01A2                     	ds	4
  1359  01A6                     calculateLux@lux:
  1360                           
  1361                           ; 4 bytes @ 0x16
  1362  01A6                     	ds	4
  1363  01AA                     calculateLux@ratio1:
  1364                           
  1365                           ; 4 bytes @ 0x1A
  1366  01AA                     	ds	4
  1367  01AE                     ??_setup:
  1368  01AE                     calculateLux@temp:	
  1369                           ; 1 bytes @ 0x1E
  1370                           
  1371                           
  1372                           ; 4 bytes @ 0x1E
  1373  01AE                     	ds	4
  1374  01B2                     calculateLux@b:
  1375                           
  1376                           ; 2 bytes @ 0x22
  1377  01B2                     	ds	2
  1378  01B4                     calculateLux@m:
  1379                           
  1380                           ; 2 bytes @ 0x24
  1381  01B4                     	ds	2
  1382  01B6                     calculateLux@chScale:
  1383                           
  1384                           ; 4 bytes @ 0x26
  1385  01B6                     	ds	4
  1386  01BA                     calculateLux@channel1:
  1387                           
  1388                           ; 4 bytes @ 0x2A
  1389  01BA                     	ds	4
  1390  01BE                     calculateLux@channel0:
  1391                           
  1392                           ; 4 bytes @ 0x2E
  1393  01BE                     	ds	4
  1394  01C2                     calculateLux@ratio:
  1395                           
  1396                           ; 4 bytes @ 0x32
  1397  01C2                     	ds	4
  1398  01C6                     ??_LUX_read:
  1399                           
  1400                           ; 1 bytes @ 0x36
  1401  01C6                     	ds	2
  1402  01C8                     _LUX_read$1784:
  1403                           
  1404                           ; 4 bytes @ 0x38
  1405  01C8                     	ds	4
  1406  01CC                     ??_main:
  1407                           
  1408                           ; 1 bytes @ 0x3C
  1409  01CC                     	ds	4
  1410                           
  1411                           	psect	cstackBANK1
  1412  00A0                     __pcstackBANK1:
  1413  00A0                     ___fldiv@rem:
  1414                           
  1415                           ; 4 bytes @ 0x0
  1416  00A0                     	ds	4
  1417  00A4                     ___fldiv@sign:
  1418                           
  1419                           ; 1 bytes @ 0x4
  1420  00A4                     	ds	1
  1421  00A5                     ___fldiv@new_exp:
  1422                           
  1423                           ; 2 bytes @ 0x5
  1424  00A5                     	ds	2
  1425  00A7                     ___fldiv@grs:
  1426                           
  1427                           ; 4 bytes @ 0x7
  1428  00A7                     	ds	4
  1429  00AB                     ___fldiv@bexp:
  1430                           
  1431                           ; 1 bytes @ 0xB
  1432  00AB                     	ds	1
  1433  00AC                     ___fldiv@aexp:
  1434                           
  1435                           ; 1 bytes @ 0xC
  1436  00AC                     	ds	1
  1437  00AD                     ?i1___fltol:
  1438  00AD                     i1___fltol@f1:	
  1439                           ; 4 bytes @ 0xD
  1440                           
  1441                           
  1442                           ; 4 bytes @ 0xD
  1443  00AD                     	ds	4
  1444  00B1                     ??i1___fltol:
  1445                           
  1446                           ; 1 bytes @ 0x11
  1447  00B1                     	ds	5
  1448  00B6                     ?_map:
  1449  00B6                     map@x:	
  1450                           ; 2 bytes @ 0x16
  1451                           
  1452                           
  1453                           ; 2 bytes @ 0x16
  1454  00B6                     	ds	2
  1455  00B8                     map@x0:
  1456                           
  1457                           ; 2 bytes @ 0x18
  1458  00B8                     	ds	2
  1459  00BA                     map@x1:
  1460                           
  1461                           ; 2 bytes @ 0x1A
  1462  00BA                     	ds	2
  1463  00BC                     map@y0:
  1464                           
  1465                           ; 2 bytes @ 0x1C
  1466  00BC                     	ds	2
  1467  00BE                     map@y1:
  1468                           
  1469                           ; 2 bytes @ 0x1E
  1470  00BE                     	ds	2
  1471  00C0                     ??_slave:
  1472                           
  1473                           ; 1 bytes @ 0x20
  1474  00C0                     	ds	8
  1475  00C8                     _slave$1780:
  1476                           
  1477                           ; 4 bytes @ 0x28
  1478  00C8                     	ds	4
  1479  00CC                     _slave$1781:
  1480                           
  1481                           ; 4 bytes @ 0x2C
  1482  00CC                     	ds	4
  1483  00D0                     _slave$1782:
  1484                           
  1485                           ; 4 bytes @ 0x30
  1486  00D0                     	ds	4
  1487  00D4                     _slave$1783:
  1488                           
  1489                           ; 4 bytes @ 0x34
  1490  00D4                     	ds	4
  1491                           
  1492                           	psect	cstackCOMMON
  1493  0070                     __pcstackCOMMON:
  1494  0070                     ?___fleq:
  1495  0070                     ?___flge:	
  1496                           ; 1 bit 
  1497                           
  1498  0070                     ?_tmr0_reload:	
  1499                           ; 1 bit 
  1500                           
  1501  0070                     ?_setup:	
  1502                           ; 1 bytes @ 0x0
  1503                           
  1504  0070                     ?_LUX_config:	
  1505                           ; 1 bytes @ 0x0
  1506                           
  1507  0070                     ?_adc_ch_switch:	
  1508                           ; 1 bytes @ 0x0
  1509                           
  1510  0070                     ?_RTC_read:	
  1511                           ; 1 bytes @ 0x0
  1512                           
  1513  0070                     ?_LUX_read:	
  1514                           ; 1 bytes @ 0x0
  1515                           
  1516  0070                     ?_USART_send:	
  1517                           ; 1 bytes @ 0x0
  1518                           
  1519  0070                     ?_I2C_Master_Start:	
  1520                           ; 1 bytes @ 0x0
  1521                           
  1522  0070                     ?_I2C_Master_RepeatedStart:	
  1523                           ; 1 bytes @ 0x0
  1524                           
  1525  0070                     ?_bcd_dec:	
  1526                           ; 1 bytes @ 0x0
  1527                           
  1528  0070                     ?_I2C_Master_Stop:	
  1529                           ; 1 bytes @ 0x0
  1530                           
  1531  0070                     ?_int_osc_MHz:	
  1532                           ; 1 bytes @ 0x0
  1533                           
  1534  0070                     ?_pwm_init:	
  1535                           ; 1 bytes @ 0x0
  1536                           
  1537  0070                     ?_tmr0_init:	
  1538                           ; 1 bytes @ 0x0
  1539                           
  1540  0070                     ?_slave:	
  1541                           ; 1 bytes @ 0x0
  1542                           
  1543  0070                     ?_main:	
  1544                           ; 1 bytes @ 0x0
  1545                           
  1546  0070                     ?_I2C_Master_Wait:	
  1547                           ; 1 bytes @ 0x0
  1548                           
  1549  0070                     ?i1_tmr0_reload:	
  1550                           ; 1 bytes @ 0x0
  1551                           
  1552  0070                     ??i1_tmr0_reload:	
  1553                           ; 1 bytes @ 0x0
  1554                           
  1555  0070                     ?_adc_read:	
  1556                           ; 1 bytes @ 0x0
  1557                           
  1558  0070                     ?__Umul8_16:	
  1559                           ; 2 bytes @ 0x0
  1560                           
  1561  0070                     ?___lwdiv:	
  1562                           ; 2 bytes @ 0x0
  1563                           
  1564  0070                     __Umul8_16@multiplicand:	
  1565                           ; 2 bytes @ 0x0
  1566                           
  1567  0070                     ___lwdiv@divisor:	
  1568                           ; 1 bytes @ 0x0
  1569                           
  1570  0070                     ___fleq@ff1:	
  1571                           ; 2 bytes @ 0x0
  1572                           
  1573  0070                     ___flge@ff1:	
  1574                           ; 4 bytes @ 0x0
  1575                           
  1576                           
  1577                           ; 4 bytes @ 0x0
  1578  0070                     	ds	2
  1579  0072                     ??_adc_read:
  1580  0072                     ??__Umul8_16:	
  1581                           ; 1 bytes @ 0x2
  1582                           
  1583  0072                     ___lwdiv@dividend:	
  1584                           ; 1 bytes @ 0x2
  1585                           
  1586                           
  1587                           ; 2 bytes @ 0x2
  1588  0072                     	ds	2
  1589  0074                     ??___lwdiv:
  1590  0074                     __Umul8_16@product:	
  1591                           ; 1 bytes @ 0x4
  1592                           
  1593  0074                     ___fleq@ff2:	
  1594                           ; 2 bytes @ 0x4
  1595                           
  1596  0074                     ___flge@ff2:	
  1597                           ; 4 bytes @ 0x4
  1598                           
  1599                           
  1600                           ; 4 bytes @ 0x4
  1601  0074                     	ds	1
  1602  0075                     ___lwdiv@quotient:
  1603                           
  1604                           ; 2 bytes @ 0x5
  1605  0075                     	ds	1
  1606  0076                     __Umul8_16@word_mpld:
  1607                           
  1608                           ; 2 bytes @ 0x6
  1609  0076                     	ds	1
  1610  0077                     ___lwdiv@counter:
  1611                           
  1612                           ; 1 bytes @ 0x7
  1613  0077                     	ds	1
  1614  0078                     ??___fleq:
  1615  0078                     ??___flge:	
  1616                           ; 1 bytes @ 0x8
  1617                           
  1618  0078                     __Umul8_16@multiplier:	
  1619                           ; 1 bytes @ 0x8
  1620                           
  1621                           
  1622                           ; 1 bytes @ 0x8
  1623  0078                     	ds	1
  1624  0079                     ?___xxtofl:
  1625  0079                     ___xxtofl@val:	
  1626                           ; 4 bytes @ 0x9
  1627                           
  1628                           
  1629                           ; 4 bytes @ 0x9
  1630  0079                     	ds	3
  1631  007C                     ??_frexp:
  1632                           
  1633                           ; 1 bytes @ 0xC
  1634  007C                     	ds	2
  1635  007E                     ??_map:
  1636  007E                     ??___flsub:	
  1637                           ; 1 bytes @ 0xE
  1638                           
  1639                           
  1640                           	psect	cstackBANK0
  1641  0020                     __pcstackBANK0:	
  1642                           ; 1 bytes @ 0xE
  1643                           
  1644  0020                     ??___xxtofl:
  1645  0020                     ?_frexp:	
  1646                           ; 1 bytes @ 0x0
  1647                           
  1648  0020                     frexp@value:	
  1649                           ; 4 bytes @ 0x0
  1650                           
  1651                           
  1652                           ; 4 bytes @ 0x0
  1653  0020                     	ds	4
  1654  0024                     ___xxtofl@sign:
  1655  0024                     frexp@eptr:	
  1656                           ; 1 bytes @ 0x4
  1657                           
  1658                           
  1659                           ; 1 bytes @ 0x4
  1660  0024                     	ds	1
  1661  0025                     ___xxtofl@exp:
  1662                           
  1663                           ; 1 bytes @ 0x5
  1664  0025                     	ds	1
  1665  0026                     ___xxtofl@arg:
  1666                           
  1667                           ; 4 bytes @ 0x6
  1668  0026                     	ds	4
  1669  002A                     ?___fladd:
  1670  002A                     ___fladd@b:	
  1671                           ; 4 bytes @ 0xA
  1672                           
  1673                           
  1674                           ; 4 bytes @ 0xA
  1675  002A                     	ds	4
  1676  002E                     ___fladd@a:
  1677                           
  1678                           ; 4 bytes @ 0xE
  1679  002E                     	ds	4
  1680  0032                     ??___fladd:
  1681                           
  1682                           ; 1 bytes @ 0x12
  1683  0032                     	ds	8
  1684  003A                     ___fladd@signs:
  1685                           
  1686                           ; 1 bytes @ 0x1A
  1687  003A                     	ds	1
  1688  003B                     ___fladd@aexp:
  1689                           
  1690                           ; 1 bytes @ 0x1B
  1691  003B                     	ds	1
  1692  003C                     ___fladd@bexp:
  1693                           
  1694                           ; 1 bytes @ 0x1C
  1695  003C                     	ds	1
  1696  003D                     ___fladd@grs:
  1697                           
  1698                           ; 1 bytes @ 0x1D
  1699  003D                     	ds	1
  1700  003E                     ?___flmul:
  1701  003E                     ___flmul@b:	
  1702                           ; 4 bytes @ 0x1E
  1703                           
  1704                           
  1705                           ; 4 bytes @ 0x1E
  1706  003E                     	ds	4
  1707  0042                     ___flmul@a:
  1708                           
  1709                           ; 4 bytes @ 0x22
  1710  0042                     	ds	4
  1711  0046                     ??___flmul:
  1712                           
  1713                           ; 1 bytes @ 0x26
  1714  0046                     	ds	5
  1715  004B                     ___flmul@sign:
  1716                           
  1717                           ; 1 bytes @ 0x2B
  1718  004B                     	ds	1
  1719  004C                     ___flmul@grs:
  1720                           
  1721                           ; 4 bytes @ 0x2C
  1722  004C                     	ds	4
  1723  0050                     ___flmul@aexp:
  1724                           
  1725                           ; 1 bytes @ 0x30
  1726  0050                     	ds	1
  1727  0051                     ___flmul@bexp:
  1728                           
  1729                           ; 1 bytes @ 0x31
  1730  0051                     	ds	1
  1731  0052                     ___flmul@prod:
  1732                           
  1733                           ; 4 bytes @ 0x32
  1734  0052                     	ds	4
  1735  0056                     ___flmul@temp:
  1736                           
  1737                           ; 2 bytes @ 0x36
  1738  0056                     	ds	2
  1739  0058                     ?_eval_poly:
  1740  0058                     ?___fldiv:	
  1741                           ; 4 bytes @ 0x38
  1742                           
  1743  0058                     ___fldiv@a:	
  1744                           ; 4 bytes @ 0x38
  1745                           
  1746  0058                     eval_poly@x:	
  1747                           ; 4 bytes @ 0x38
  1748                           
  1749                           
  1750                           ; 4 bytes @ 0x38
  1751  0058                     	ds	4
  1752  005C                     eval_poly@d:
  1753  005C                     ___fldiv@b:	
  1754                           ; 1 bytes @ 0x3C
  1755                           
  1756                           
  1757                           ; 4 bytes @ 0x3C
  1758  005C                     	ds	1
  1759  005D                     eval_poly@n:
  1760                           
  1761                           ; 2 bytes @ 0x3D
  1762  005D                     	ds	2
  1763  005F                     ??_eval_poly:
  1764                           
  1765                           ; 1 bytes @ 0x3F
  1766  005F                     	ds	1
  1767  0060                     ??___fldiv:
  1768                           
  1769                           ; 1 bytes @ 0x40
  1770  0060                     	ds	4
  1771  0064                     eval_poly@res:
  1772                           
  1773                           ; 4 bytes @ 0x44
  1774  0064                     	ds	1
  1775  0065                     ?___flsub:
  1776  0065                     ___flsub@a:	
  1777                           ; 4 bytes @ 0x45
  1778                           
  1779                           
  1780                           ; 4 bytes @ 0x45
  1781  0065                     	ds	3
  1782  0068                     ?_log:
  1783  0068                     log@x:	
  1784                           ; 4 bytes @ 0x48
  1785                           
  1786                           
  1787                           ; 4 bytes @ 0x48
  1788  0068                     	ds	1
  1789  0069                     ___flsub@b:
  1790                           
  1791                           ; 4 bytes @ 0x49
  1792  0069                     	ds	3
  1793  006C                     ??_log:
  1794                           
  1795                           ; 1 bytes @ 0x4C
  1796  006C                     	ds	1
  1797  006D                     i1___fltol@sign1:
  1798  006D                     log@exponent:	
  1799                           ; 1 bytes @ 0x4D
  1800                           
  1801                           
  1802                           ; 2 bytes @ 0x4D
  1803  006D                     	ds	1
  1804  006E                     i1___fltol@exp1:
  1805                           
  1806                           ; 1 bytes @ 0x4E
  1807  006E                     	ds	1
  1808                           
  1809                           	psect	maintext
  1810  1F29                     __pmaintext:	
  1811 ;;
  1812 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1813 ;;
  1814 ;; *************** function _main *****************
  1815 ;; Defined at:
  1816 ;;		line 126 in file "main_slave_p1.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;		None
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;		None
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1825 ;; Tracked objects:
  1826 ;;		On entry : B00/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1830 ;;      Params:         0       0       0       0       0
  1831 ;;      Locals:         0       0       0       0       0
  1832 ;;      Temps:          0       0       0       4       0
  1833 ;;      Totals:         0       0       0       4       0
  1834 ;;Total ram usage:        4 bytes
  1835 ;; Hardware stack levels required when called: 8
  1836 ;; This function calls:
  1837 ;;		_LUX_config
  1838 ;;		_LUX_read
  1839 ;;		_RTC_read
  1840 ;;		___fltol
  1841 ;;		_adc_ch_switch
  1842 ;;		_motor_dc
  1843 ;;		_pulse_step
  1844 ;;		_servo
  1845 ;;		_setup
  1846 ;; This function is called by:
  1847 ;;		Startup code after reset
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851  1F29                     _main:	
  1852                           ;psect for function _main
  1853                           
  1854  1F29                     l3993:	
  1855                           ;incstack = 0
  1856                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1857                           
  1858                           
  1859                           ;main_slave_p1.c: 127:     setup();
  1860  1F29  160A  118A  21DC  160A  158A  	fcall	_setup
  1861  1F2E                     l3995:
  1862                           
  1863                           ;main_slave_p1.c: 128:     LUX_config();
  1864  1F2E  160A  158A  266B  160A  158A  	fcall	_LUX_config
  1865  1F33                     l3997:
  1866                           
  1867                           ;main_slave_p1.c: 130:         PORTDbits.RD2 = dir & 0x01;
  1868  1F33  1683               	bsf	3,5	;RP0=1, select bank3
  1869  1F34  1703               	bsf	3,6	;RP1=1, select bank3
  1870  1F35  086B               	movf	_dir^(0+384),w
  1871  1F36  3901               	andlw	1
  1872  1F37  00CC               	movwf	??_main^(0+384)
  1873  1F38  0DCC               	rlf	??_main^(0+384),f
  1874  1F39  0DCC               	rlf	??_main^(0+384),f
  1875  1F3A  1283               	bcf	3,5	;RP0=0, select bank0
  1876  1F3B  1303               	bcf	3,6	;RP1=0, select bank0
  1877  1F3C  0808               	movf	8,w	;volatile
  1878  1F3D  1683               	bsf	3,5	;RP0=1, select bank3
  1879  1F3E  1703               	bsf	3,6	;RP1=1, select bank3
  1880  1F3F  064C               	xorwf	??_main^(0+384),w
  1881  1F40  39FB               	andlw	-5
  1882  1F41  064C               	xorwf	??_main^(0+384),w
  1883  1F42  1283               	bcf	3,5	;RP0=0, select bank0
  1884  1F43  1303               	bcf	3,6	;RP1=0, select bank0
  1885  1F44  0088               	movwf	8	;volatile
  1886  1F45                     l3999:
  1887                           
  1888                           ;main_slave_p1.c: 131:         pulse_step(dir, pulso);
  1889  1F45  1683               	bsf	3,5	;RP0=1, select bank3
  1890  1F46  1703               	bsf	3,6	;RP1=1, select bank3
  1891  1F47  086B               	movf	_dir^(0+384),w
  1892  1F48  00CC               	movwf	??_main^(0+384)
  1893  1F49  01CD               	clrf	(??_main^(0+384)+1)
  1894  1F4A  084C               	movf	??_main^(0+384),w
  1895  1F4B  0090               	movwf	pulse_step@bt^(0+384)
  1896  1F4C  084D               	movf	(??_main+1)^(0+384),w
  1897  1F4D  0091               	movwf	(pulse_step@bt+1)^(0+384)
  1898  1F4E  086C               	movf	_pulso^(0+384),w
  1899  1F4F  00CE               	movwf	(??_main+2)^(0+384)
  1900  1F50  01CF               	clrf	((??_main+2)^(0+384)+1)
  1901  1F51  084E               	movf	(??_main+2)^(0+384),w
  1902  1F52  0092               	movwf	pulse_step@signal^(0+384)
  1903  1F53  084F               	movf	(??_main+3)^(0+384),w
  1904  1F54  0093               	movwf	(pulse_step@signal+1)^(0+384)
  1905  1F55  160A  158A  23E7  160A  158A  	fcall	_pulse_step
  1906  1F5A                     l4001:
  1907                           
  1908                           ;main_slave_p1.c: 132:         adc_ch_switch(1);
  1909  1F5A  3001               	movlw	1
  1910  1F5B  160A  118A  2430  160A  158A  	fcall	_adc_ch_switch
  1911  1F60                     l4003:
  1912                           
  1913                           ;main_slave_p1.c: 133:         motor_dc(TC);
  1914  1F60  1683               	bsf	3,5	;RP0=1, select bank3
  1915  1F61  1703               	bsf	3,6	;RP1=1, select bank3
  1916  1F62  0853               	movf	(_TC+3)^(0+384),w
  1917  1F63  0093               	movwf	(___fltol@f1+3)^(0+384)
  1918  1F64  0852               	movf	(_TC+2)^(0+384),w
  1919  1F65  0092               	movwf	(___fltol@f1+2)^(0+384)
  1920  1F66  0851               	movf	(_TC+1)^(0+384),w
  1921  1F67  0091               	movwf	(___fltol@f1+1)^(0+384)
  1922  1F68  0850               	movf	_TC^(0+384),w
  1923  1F69  0090               	movwf	___fltol@f1^(0+384)
  1924  1F6A  160A  118A  205E  160A  158A  	fcall	___fltol
  1925  1F6F  1683               	bsf	3,5	;RP0=1, select bank3
  1926  1F70  1703               	bsf	3,6	;RP1=1, select bank3
  1927  1F71  0811               	movf	(?___fltol+1)^(0+384),w
  1928  1F72  009C               	movwf	(motor_dc@temp+1)^(0+384)
  1929  1F73  0810               	movf	?___fltol^(0+384),w
  1930  1F74  009B               	movwf	motor_dc@temp^(0+384)
  1931  1F75  160A  158A  2476  160A  158A  	fcall	_motor_dc
  1932  1F7A                     l4005:
  1933                           
  1934                           ;main_slave_p1.c: 134:         servo(switch_servo);
  1935  1F7A  1683               	bsf	3,5	;RP0=1, select bank3
  1936  1F7B  1703               	bsf	3,6	;RP1=1, select bank3
  1937  1F7C  0859               	movf	(_switch_servo+1)^(0+384),w
  1938  1F7D  0095               	movwf	(servo@mov+1)^(0+384)
  1939  1F7E  0858               	movf	_switch_servo^(0+384),w
  1940  1F7F  0094               	movwf	servo@mov^(0+384)
  1941  1F80  160A  158A  24D9  160A  158A  	fcall	_servo
  1942  1F85                     l4007:
  1943                           
  1944                           ;main_slave_p1.c: 135:         RTC_read();
  1945  1F85  160A  118A  265C  160A  158A  	fcall	_RTC_read
  1946  1F8A                     l4009:
  1947                           
  1948                           ;main_slave_p1.c: 136:         LUX_read();
  1949  1F8A  160A  118A  2723  160A  158A  	fcall	_LUX_read
  1950  1F8F  2F33               	goto	l3997
  1951  1F90  120A  118A  2812   	ljmp	start
  1952  1F93                     __end_of_main:
  1953                           
  1954                           	psect	text1
  1955  11DC                     __ptext1:	
  1956 ;; *************** function _setup *****************
  1957 ;; Defined at:
  1958 ;;		line 269 in file "main_slave_p1.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;		None
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;		None
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  1    wreg      void 
  1965 ;; Registers used:
  1966 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1972 ;;      Params:         0       0       0       0       0
  1973 ;;      Locals:         0       0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0
  1975 ;;      Totals:         0       0       0       0       0
  1976 ;;Total ram usage:        0 bytes
  1977 ;; Hardware stack levels used: 1
  1978 ;; Hardware stack levels required when called: 7
  1979 ;; This function calls:
  1980 ;;		_I2C_Master_Init
  1981 ;;		_USART_set
  1982 ;;		_adc_init
  1983 ;;		_int_osc_MHz
  1984 ;;		_pwm_init
  1985 ;;		_tmr0_init
  1986 ;;		_tmr0_reload
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992  11DC                     _setup:	
  1993                           ;psect for function _setup
  1994                           
  1995  11DC                     l3657:	
  1996                           ;incstack = 0
  1997                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1998                           
  1999                           
  2000                           ;main_slave_p1.c: 270:     int_osc_MHz(1);
  2001  11DC  3001               	movlw	1
  2002  11DD  160A  158A  2513  160A  118A  	fcall	_int_osc_MHz
  2003  11E2                     l3659:
  2004                           
  2005                           ;main_slave_p1.c: 273:     ANSEL = 0x01;
  2006  11E2  3001               	movlw	1
  2007  11E3  1683               	bsf	3,5	;RP0=1, select bank3
  2008  11E4  1703               	bsf	3,6	;RP1=1, select bank3
  2009  11E5  0088               	movwf	8	;volatile
  2010  11E6                     l3661:
  2011                           
  2012                           ;main_slave_p1.c: 274:     ANSELH = 0;
  2013  11E6  0189               	clrf	9	;volatile
  2014  11E7                     l3663:
  2015                           
  2016                           ;main_slave_p1.c: 276:     TRISAbits.TRISA0 = 1;
  2017  11E7  1683               	bsf	3,5	;RP0=1, select bank1
  2018  11E8  1303               	bcf	3,6	;RP1=0, select bank1
  2019  11E9  1405               	bsf	5,0	;volatile
  2020  11EA                     l3665:
  2021                           
  2022                           ;main_slave_p1.c: 278:     TRISAbits.TRISA4 = 0;
  2023  11EA  1205               	bcf	5,4	;volatile
  2024  11EB                     l3667:
  2025                           
  2026                           ;main_slave_p1.c: 279:     PORTAbits.RA4 = 0;
  2027  11EB  1283               	bcf	3,5	;RP0=0, select bank0
  2028  11EC  1303               	bcf	3,6	;RP1=0, select bank0
  2029  11ED  1205               	bcf	5,4	;volatile
  2030  11EE                     l3669:
  2031                           
  2032                           ;main_slave_p1.c: 281:     TRISBbits.TRISB0 = 0;
  2033  11EE  1683               	bsf	3,5	;RP0=1, select bank1
  2034  11EF  1303               	bcf	3,6	;RP1=0, select bank1
  2035  11F0  1006               	bcf	6,0	;volatile
  2036  11F1                     l3671:
  2037                           
  2038                           ;main_slave_p1.c: 282:     PORTBbits.RB0 = 0;
  2039  11F1  1283               	bcf	3,5	;RP0=0, select bank0
  2040  11F2  1303               	bcf	3,6	;RP1=0, select bank0
  2041  11F3  1006               	bcf	6,0	;volatile
  2042  11F4                     l3673:
  2043                           
  2044                           ;main_slave_p1.c: 283:     TRISBbits.TRISB1 = 1;
  2045  11F4  1683               	bsf	3,5	;RP0=1, select bank1
  2046  11F5  1303               	bcf	3,6	;RP1=0, select bank1
  2047  11F6  1486               	bsf	6,1	;volatile
  2048  11F7                     l3675:
  2049                           
  2050                           ;main_slave_p1.c: 284:     PORTBbits.RB1 = 0;
  2051  11F7  1283               	bcf	3,5	;RP0=0, select bank0
  2052  11F8  1303               	bcf	3,6	;RP1=0, select bank0
  2053  11F9  1086               	bcf	6,1	;volatile
  2054  11FA                     l3677:
  2055                           
  2056                           ;main_slave_p1.c: 285:     TRISBbits.TRISB2 = 1;
  2057  11FA  1683               	bsf	3,5	;RP0=1, select bank1
  2058  11FB  1303               	bcf	3,6	;RP1=0, select bank1
  2059  11FC  1506               	bsf	6,2	;volatile
  2060  11FD                     l3679:
  2061                           
  2062                           ;main_slave_p1.c: 286:     PORTBbits.RB2 = 0;
  2063  11FD  1283               	bcf	3,5	;RP0=0, select bank0
  2064  11FE  1303               	bcf	3,6	;RP1=0, select bank0
  2065  11FF  1106               	bcf	6,2	;volatile
  2066  1200                     l3681:
  2067                           
  2068                           ;main_slave_p1.c: 287:     TRISBbits.TRISB7 = 1;
  2069  1200  1683               	bsf	3,5	;RP0=1, select bank1
  2070  1201  1303               	bcf	3,6	;RP1=0, select bank1
  2071  1202  1786               	bsf	6,7	;volatile
  2072  1203                     l3683:
  2073                           
  2074                           ;main_slave_p1.c: 288:     PORTBbits.RB7 = 0;
  2075  1203  1283               	bcf	3,5	;RP0=0, select bank0
  2076  1204  1303               	bcf	3,6	;RP1=0, select bank0
  2077  1205  1386               	bcf	6,7	;volatile
  2078  1206                     l3685:
  2079                           
  2080                           ;main_slave_p1.c: 289:     OPTION_REGbits.nRBPU = 0;
  2081  1206  1683               	bsf	3,5	;RP0=1, select bank1
  2082  1207  1303               	bcf	3,6	;RP1=0, select bank1
  2083  1208  1381               	bcf	1,7	;volatile
  2084  1209                     l3687:
  2085                           
  2086                           ;main_slave_p1.c: 290:     WPUBbits.WPUB = 0x86;
  2087  1209  3086               	movlw	134
  2088  120A  0095               	movwf	21	;volatile
  2089  120B                     l3689:
  2090                           
  2091                           ;main_slave_p1.c: 292:     TRISDbits.TRISD1 = 0;
  2092  120B  1088               	bcf	8,1	;volatile
  2093  120C                     l3691:
  2094                           
  2095                           ;main_slave_p1.c: 293:     PORTDbits.RD1 = 0;
  2096  120C  1283               	bcf	3,5	;RP0=0, select bank0
  2097  120D  1303               	bcf	3,6	;RP1=0, select bank0
  2098  120E  1088               	bcf	8,1	;volatile
  2099  120F                     l3693:
  2100                           
  2101                           ;main_slave_p1.c: 294:     TRISDbits.TRISD2 = 0;
  2102  120F  1683               	bsf	3,5	;RP0=1, select bank1
  2103  1210  1303               	bcf	3,6	;RP1=0, select bank1
  2104  1211  1108               	bcf	8,2	;volatile
  2105  1212                     l3695:
  2106                           
  2107                           ;main_slave_p1.c: 295:     PORTDbits.RD2 = 0;
  2108  1212  1283               	bcf	3,5	;RP0=0, select bank0
  2109  1213  1303               	bcf	3,6	;RP1=0, select bank0
  2110  1214  1108               	bcf	8,2	;volatile
  2111  1215                     l3697:
  2112                           
  2113                           ;main_slave_p1.c: 296:     TRISDbits.TRISD6 = 0;
  2114  1215  1683               	bsf	3,5	;RP0=1, select bank1
  2115  1216  1303               	bcf	3,6	;RP1=0, select bank1
  2116  1217  1308               	bcf	8,6	;volatile
  2117  1218                     l3699:
  2118                           
  2119                           ;main_slave_p1.c: 297:     PORTDbits.RD6 = 0;
  2120  1218  1283               	bcf	3,5	;RP0=0, select bank0
  2121  1219  1303               	bcf	3,6	;RP1=0, select bank0
  2122  121A  1308               	bcf	8,6	;volatile
  2123  121B                     l3701:
  2124                           
  2125                           ;main_slave_p1.c: 299:     pwm_init(1);
  2126  121B  3001               	movlw	1
  2127  121C  160A  158A  2550  160A  118A  	fcall	_pwm_init
  2128  1221                     l3703:
  2129                           
  2130                           ;main_slave_p1.c: 300:     USART_set(9600);
  2131  1221  3000               	movlw	0
  2132  1222  1683               	bsf	3,5	;RP0=1, select bank3
  2133  1223  1703               	bsf	3,6	;RP1=1, select bank3
  2134  1224  00A1               	movwf	(USART_set@baudrate+3)^(0+384)
  2135  1225  3000               	movlw	0
  2136  1226  00A0               	movwf	(USART_set@baudrate+2)^(0+384)
  2137  1227  3025               	movlw	37
  2138  1228  009F               	movwf	(USART_set@baudrate+1)^(0+384)
  2139  1229  3080               	movlw	128
  2140  122A  009E               	movwf	USART_set@baudrate^(0+384)
  2141  122B  160A  158A  2793  160A  118A  	fcall	_USART_set
  2142  1230                     l3705:
  2143                           
  2144                           ;main_slave_p1.c: 301:     adc_init(0,0,0);
  2145  1230  1683               	bsf	3,5	;RP0=1, select bank3
  2146  1231  1703               	bsf	3,6	;RP1=1, select bank3
  2147  1232  0190               	clrf	adc_init@vref_plus^(0+384)
  2148  1233  0191               	clrf	adc_init@vref_minus^(0+384)
  2149  1234  3000               	movlw	0
  2150  1235  160A  118A  20DA  160A  118A  	fcall	_adc_init
  2151  123A                     l3707:
  2152                           
  2153                           ;main_slave_p1.c: 302:     tmr0_init(16);
  2154  123A  3010               	movlw	16
  2155  123B  160A  118A  215A  160A  118A  	fcall	_tmr0_init
  2156  1240                     l3709:
  2157                           
  2158                           ;main_slave_p1.c: 303:     tmr0_reload();
  2159  1240  120A  118A  27F9  160A  118A  	fcall	_tmr0_reload
  2160  1245                     l3711:
  2161                           
  2162                           ;main_slave_p1.c: 304:     I2C_Master_Init(100000);
  2163  1245  3000               	movlw	0
  2164  1246  1683               	bsf	3,5	;RP0=1, select bank3
  2165  1247  1703               	bsf	3,6	;RP1=1, select bank3
  2166  1248  00A1               	movwf	(I2C_Master_Init@c+3)^(0+384)
  2167  1249  3001               	movlw	1
  2168  124A  00A0               	movwf	(I2C_Master_Init@c+2)^(0+384)
  2169  124B  3086               	movlw	134
  2170  124C  009F               	movwf	(I2C_Master_Init@c+1)^(0+384)
  2171  124D  30A0               	movlw	160
  2172  124E  009E               	movwf	I2C_Master_Init@c^(0+384)
  2173  124F  120A  158A  2000  160A  118A  	fcall	_I2C_Master_Init
  2174  1254                     l3713:
  2175                           
  2176                           ;main_slave_p1.c: 307:     INTCONbits.GIE = 1;
  2177  1254  178B               	bsf	11,7	;volatile
  2178  1255                     l3715:
  2179                           
  2180                           ;main_slave_p1.c: 308:     INTCONbits.PEIE = 1;
  2181  1255  170B               	bsf	11,6	;volatile
  2182  1256                     l3717:
  2183                           
  2184                           ;main_slave_p1.c: 309:     INTCONbits.RBIE = 1;
  2185  1256  158B               	bsf	11,3	;volatile
  2186  1257                     l3719:
  2187                           
  2188                           ;main_slave_p1.c: 310:     IOCBbits.IOCB1 = 1;
  2189  1257  1683               	bsf	3,5	;RP0=1, select bank1
  2190  1258  1303               	bcf	3,6	;RP1=0, select bank1
  2191  1259  1496               	bsf	22,1	;volatile
  2192  125A                     l3721:
  2193                           
  2194                           ;main_slave_p1.c: 311:     IOCBbits.IOCB2 = 1;
  2195  125A  1516               	bsf	22,2	;volatile
  2196  125B                     l3723:
  2197                           
  2198                           ;main_slave_p1.c: 312:     IOCBbits.IOCB7 = 1;
  2199  125B  1796               	bsf	22,7	;volatile
  2200  125C                     l3725:
  2201                           
  2202                           ;main_slave_p1.c: 313:     INTCONbits.RBIF = 0;
  2203  125C  100B               	bcf	11,0	;volatile
  2204  125D                     l205:
  2205  125D  0008               	return
  2206  125E                     __end_of_setup:
  2207                           
  2208                           	psect	text2
  2209  07F9                     __ptext2:	
  2210 ;; *************** function _tmr0_reload *****************
  2211 ;; Defined at:
  2212 ;;		line 57 in file "tmr0.c"
  2213 ;; Parameters:    Size  Location     Type
  2214 ;;		None
  2215 ;; Auto vars:     Size  Location     Type
  2216 ;;		None
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  1    wreg      void 
  2219 ;; Registers used:
  2220 ;;		wreg
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2226 ;;      Params:         0       0       0       0       0
  2227 ;;      Locals:         0       0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0
  2229 ;;      Totals:         0       0       0       0       0
  2230 ;;Total ram usage:        0 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 5
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_setup
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240  07F9                     _tmr0_reload:	
  2241                           ;psect for function _tmr0_reload
  2242                           
  2243  07F9                     l3077:	
  2244                           ;incstack = 0
  2245                           ; Regs used in _tmr0_reload: [wreg]
  2246                           
  2247                           
  2248                           ;tmr0.c: 58:     TMR0 = 178;
  2249  07F9  30B2               	movlw	178
  2250  07FA  1283               	bcf	3,5	;RP0=0, select bank0
  2251  07FB  1303               	bcf	3,6	;RP1=0, select bank0
  2252  07FC  0081               	movwf	1	;volatile
  2253  07FD                     l3079:
  2254                           
  2255                           ;tmr0.c: 59:     INTCONbits.T0IF = 0;
  2256  07FD  110B               	bcf	11,2	;volatile
  2257  07FE                     l404:
  2258  07FE  0008               	return
  2259  07FF                     __end_of_tmr0_reload:
  2260                           
  2261                           	psect	text3
  2262  115A                     __ptext3:	
  2263 ;; *************** function _tmr0_init *****************
  2264 ;; Defined at:
  2265 ;;		line 13 in file "tmr0.c"
  2266 ;; Parameters:    Size  Location     Type
  2267 ;;  prescaler       1    wreg     unsigned char 
  2268 ;; Auto vars:     Size  Location     Type
  2269 ;;  prescaler       1    2[BANK3 ] unsigned char 
  2270 ;; Return value:  Size  Location     Type
  2271 ;;                  1    wreg      void 
  2272 ;; Registers used:
  2273 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2274 ;; Tracked objects:
  2275 ;;		On entry : 0/0
  2276 ;;		On exit  : 0/0
  2277 ;;		Unchanged: 0/0
  2278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2279 ;;      Params:         0       0       0       0       0
  2280 ;;      Locals:         0       0       0       1       0
  2281 ;;      Temps:          0       0       0       2       0
  2282 ;;      Totals:         0       0       0       3       0
  2283 ;;Total ram usage:        3 bytes
  2284 ;; Hardware stack levels used: 1
  2285 ;; Hardware stack levels required when called: 5
  2286 ;; This function calls:
  2287 ;;		Nothing
  2288 ;; This function is called by:
  2289 ;;		_setup
  2290 ;; This function uses a non-reentrant model
  2291 ;;
  2292                           
  2293  115A                     _tmr0_init:	
  2294                           ;psect for function _tmr0_init
  2295                           
  2296                           
  2297                           ;incstack = 0
  2298                           ; Regs used in _tmr0_init: [wreg-fsr0h+status,2+status,0]
  2299                           ;tmr0_init@prescaler stored from wreg
  2300  115A  1683               	bsf	3,5	;RP0=1, select bank3
  2301  115B  1703               	bsf	3,6	;RP1=1, select bank3
  2302  115C  0092               	movwf	tmr0_init@prescaler^(0+384)
  2303  115D                     l3303:
  2304                           
  2305                           ;tmr0.c: 14:     OPTION_REGbits.T0CS = 0;
  2306  115D  1683               	bsf	3,5	;RP0=1, select bank1
  2307  115E  1303               	bcf	3,6	;RP1=0, select bank1
  2308  115F  1281               	bcf	1,5	;volatile
  2309  1160                     l3305:
  2310                           
  2311                           ;tmr0.c: 15:     if(prescaler != 0){
  2312  1160  1683               	bsf	3,5	;RP0=1, select bank3
  2313  1161  1703               	bsf	3,6	;RP1=1, select bank3
  2314  1162  0812               	movf	tmr0_init@prescaler^(0+384),w
  2315  1163  1903               	btfsc	3,2
  2316  1164  2966               	goto	u3881
  2317  1165  2967               	goto	u3880
  2318  1166                     u3881:
  2319  1166  296B               	goto	l3309
  2320  1167                     u3880:
  2321  1167                     l3307:
  2322                           
  2323                           ;tmr0.c: 16:        OPTION_REGbits.PSA = 0;
  2324  1167  1683               	bsf	3,5	;RP0=1, select bank1
  2325  1168  1303               	bcf	3,6	;RP1=0, select bank1
  2326  1169  1181               	bcf	1,3	;volatile
  2327                           
  2328                           ;tmr0.c: 17:     }
  2329  116A  29B2               	goto	l3335
  2330  116B                     l3309:
  2331  116B  0812               	movf	tmr0_init@prescaler^(0+384),w
  2332  116C  1D03               	btfss	3,2
  2333  116D  296F               	goto	u3891
  2334  116E  2970               	goto	u3890
  2335  116F                     u3891:
  2336  116F  29B2               	goto	l3335
  2337  1170                     u3890:
  2338  1170                     l3311:
  2339                           
  2340                           ;tmr0.c: 19:         OPTION_REGbits.PSA = 1;
  2341  1170  1683               	bsf	3,5	;RP0=1, select bank1
  2342  1171  1303               	bcf	3,6	;RP1=0, select bank1
  2343  1172  1581               	bsf	1,3	;volatile
  2344  1173  29B2               	goto	l3335
  2345  1174                     l3313:
  2346                           
  2347                           ;tmr0.c: 23:             OPTION_REGbits.PS = 0b000;
  2348  1174  30F8               	movlw	-8
  2349  1175  1683               	bsf	3,5	;RP0=1, select bank1
  2350  1176  1303               	bcf	3,6	;RP1=0, select bank1
  2351  1177  0581               	andwf	1,f	;volatile
  2352                           
  2353                           ;tmr0.c: 24:             break;
  2354  1178  29D9               	goto	l391
  2355  1179                     l3315:
  2356                           
  2357                           ;tmr0.c: 26:             OPTION_REGbits.PS = 0b000;
  2358  1179  30F8               	movlw	-8
  2359  117A  1683               	bsf	3,5	;RP0=1, select bank1
  2360  117B  1303               	bcf	3,6	;RP1=0, select bank1
  2361  117C  0581               	andwf	1,f	;volatile
  2362                           
  2363                           ;tmr0.c: 27:             break;
  2364  117D  29D9               	goto	l391
  2365  117E                     l3317:
  2366                           
  2367                           ;tmr0.c: 29:             OPTION_REGbits.PS = 0b001;
  2368  117E  1683               	bsf	3,5	;RP0=1, select bank1
  2369  117F  1303               	bcf	3,6	;RP1=0, select bank1
  2370  1180  0801               	movf	1,w	;volatile
  2371  1181  39F8               	andlw	-8
  2372  1182  3801               	iorlw	1
  2373  1183  0081               	movwf	1	;volatile
  2374                           
  2375                           ;tmr0.c: 30:             break;
  2376  1184  29D9               	goto	l391
  2377  1185                     l3319:
  2378                           
  2379                           ;tmr0.c: 32:             OPTION_REGbits.PS = 0b010;
  2380  1185  1683               	bsf	3,5	;RP0=1, select bank1
  2381  1186  1303               	bcf	3,6	;RP1=0, select bank1
  2382  1187  0801               	movf	1,w	;volatile
  2383  1188  39F8               	andlw	-8
  2384  1189  3802               	iorlw	2
  2385  118A  0081               	movwf	1	;volatile
  2386                           
  2387                           ;tmr0.c: 33:             break;
  2388  118B  29D9               	goto	l391
  2389  118C                     l3321:
  2390                           
  2391                           ;tmr0.c: 35:             OPTION_REGbits.PS = 0b011;
  2392  118C  1683               	bsf	3,5	;RP0=1, select bank1
  2393  118D  1303               	bcf	3,6	;RP1=0, select bank1
  2394  118E  0801               	movf	1,w	;volatile
  2395  118F  39F8               	andlw	-8
  2396  1190  3803               	iorlw	3
  2397  1191  0081               	movwf	1	;volatile
  2398                           
  2399                           ;tmr0.c: 36:             break;
  2400  1192  29D9               	goto	l391
  2401  1193                     l3323:
  2402                           
  2403                           ;tmr0.c: 38:             OPTION_REGbits.PS = 0b100;
  2404  1193  1683               	bsf	3,5	;RP0=1, select bank1
  2405  1194  1303               	bcf	3,6	;RP1=0, select bank1
  2406  1195  0801               	movf	1,w	;volatile
  2407  1196  39F8               	andlw	-8
  2408  1197  3804               	iorlw	4
  2409  1198  0081               	movwf	1	;volatile
  2410                           
  2411                           ;tmr0.c: 39:             break;
  2412  1199  29D9               	goto	l391
  2413  119A                     l3325:
  2414                           
  2415                           ;tmr0.c: 41:             OPTION_REGbits.PS = 0b101;
  2416  119A  1683               	bsf	3,5	;RP0=1, select bank1
  2417  119B  1303               	bcf	3,6	;RP1=0, select bank1
  2418  119C  0801               	movf	1,w	;volatile
  2419  119D  39F8               	andlw	-8
  2420  119E  3805               	iorlw	5
  2421  119F  0081               	movwf	1	;volatile
  2422                           
  2423                           ;tmr0.c: 42:             break;
  2424  11A0  29D9               	goto	l391
  2425  11A1                     l3327:
  2426                           
  2427                           ;tmr0.c: 44:             OPTION_REGbits.PS = 0b110;
  2428  11A1  1683               	bsf	3,5	;RP0=1, select bank1
  2429  11A2  1303               	bcf	3,6	;RP1=0, select bank1
  2430  11A3  0801               	movf	1,w	;volatile
  2431  11A4  39F8               	andlw	-8
  2432  11A5  3806               	iorlw	6
  2433  11A6  0081               	movwf	1	;volatile
  2434                           
  2435                           ;tmr0.c: 45:             break;
  2436  11A7  29D9               	goto	l391
  2437  11A8                     l3329:
  2438                           
  2439                           ;tmr0.c: 47:             OPTION_REGbits.PS = 0b111;
  2440  11A8  3007               	movlw	7
  2441  11A9  1683               	bsf	3,5	;RP0=1, select bank1
  2442  11AA  1303               	bcf	3,6	;RP1=0, select bank1
  2443  11AB  0481               	iorwf	1,f	;volatile
  2444                           
  2445                           ;tmr0.c: 48:             break;
  2446  11AC  29D9               	goto	l391
  2447  11AD                     l3331:
  2448                           
  2449                           ;tmr0.c: 50:             OPTION_REGbits.PS = 0b000;
  2450  11AD  30F8               	movlw	-8
  2451  11AE  1683               	bsf	3,5	;RP0=1, select bank1
  2452  11AF  1303               	bcf	3,6	;RP1=0, select bank1
  2453  11B0  0581               	andwf	1,f	;volatile
  2454                           
  2455                           ;tmr0.c: 51:             break;
  2456  11B1  29D9               	goto	l391
  2457  11B2                     l3335:
  2458  11B2  1683               	bsf	3,5	;RP0=1, select bank3
  2459  11B3  1703               	bsf	3,6	;RP1=1, select bank3
  2460  11B4  0812               	movf	tmr0_init@prescaler^(0+384),w
  2461  11B5  0090               	movwf	??_tmr0_init^(0+384)
  2462  11B6  0191               	clrf	(??_tmr0_init^(0+384)+1)
  2463                           
  2464                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2465                           ; Switch size 1, requested type "simple"
  2466                           ; Number of cases is 1, Range of values is 0 to 0
  2467                           ; switch strategies available:
  2468                           ; Name         Instructions Cycles
  2469                           ; simple_byte            4     3 (average)
  2470                           ; direct_byte           11     8 (fixed)
  2471                           ; jumptable            260     6 (fixed)
  2472                           ;	Chosen strategy is simple_byte
  2473  11B7  0811               	movf	(??_tmr0_init+1)^(0+384),w
  2474  11B8  3A00               	xorlw	0	; case 0
  2475  11B9  1903               	skipnz
  2476  11BA  29BC               	goto	l4219
  2477  11BB  29AD               	goto	l3331
  2478  11BC                     l4219:
  2479                           
  2480                           ; Switch size 1, requested type "simple"
  2481                           ; Number of cases is 9, Range of values is 0 to 255
  2482                           ; switch strategies available:
  2483                           ; Name         Instructions Cycles
  2484                           ; simple_byte           28    15 (average)
  2485                           ; jumptable            260     6 (fixed)
  2486                           ;	Chosen strategy is simple_byte
  2487  11BC  0810               	movf	??_tmr0_init^(0+384),w
  2488  11BD  3A00               	xorlw	0	; case 0
  2489  11BE  1903               	skipnz
  2490  11BF  2974               	goto	l3313
  2491  11C0  3A02               	xorlw	2	; case 2
  2492  11C1  1903               	skipnz
  2493  11C2  2979               	goto	l3315
  2494  11C3  3A06               	xorlw	6	; case 4
  2495  11C4  1903               	skipnz
  2496  11C5  297E               	goto	l3317
  2497  11C6  3A0C               	xorlw	12	; case 8
  2498  11C7  1903               	skipnz
  2499  11C8  2985               	goto	l3319
  2500  11C9  3A18               	xorlw	24	; case 16
  2501  11CA  1903               	skipnz
  2502  11CB  298C               	goto	l3321
  2503  11CC  3A30               	xorlw	48	; case 32
  2504  11CD  1903               	skipnz
  2505  11CE  2993               	goto	l3323
  2506  11CF  3A60               	xorlw	96	; case 64
  2507  11D0  1903               	skipnz
  2508  11D1  299A               	goto	l3325
  2509  11D2  3AC0               	xorlw	192	; case 128
  2510  11D3  1903               	skipnz
  2511  11D4  29A1               	goto	l3327
  2512  11D5  3A7F               	xorlw	127	; case 255
  2513  11D6  1903               	skipnz
  2514  11D7  29A8               	goto	l3329
  2515  11D8  29AD               	goto	l3331
  2516  11D9                     l391:
  2517                           
  2518                           ;tmr0.c: 53:     INTCONbits.T0IE = 1;
  2519  11D9  168B               	bsf	11,5	;volatile
  2520                           
  2521                           ;tmr0.c: 54:     INTCONbits.T0IF = 0;
  2522  11DA  110B               	bcf	11,2	;volatile
  2523  11DB                     l401:
  2524  11DB  0008               	return
  2525  11DC                     __end_of_tmr0_init:
  2526                           
  2527                           	psect	text4
  2528  1D50                     __ptext4:	
  2529 ;; *************** function _pwm_init *****************
  2530 ;; Defined at:
  2531 ;;		line 12 in file "pwm.c"
  2532 ;; Parameters:    Size  Location     Type
  2533 ;;  channel         1    wreg     unsigned char 
  2534 ;; Auto vars:     Size  Location     Type
  2535 ;;  channel         1    2[BANK3 ] unsigned char 
  2536 ;; Return value:  Size  Location     Type
  2537 ;;                  1    wreg      void 
  2538 ;; Registers used:
  2539 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2540 ;; Tracked objects:
  2541 ;;		On entry : 0/0
  2542 ;;		On exit  : 0/0
  2543 ;;		Unchanged: 0/0
  2544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2545 ;;      Params:         0       0       0       0       0
  2546 ;;      Locals:         0       0       0       1       0
  2547 ;;      Temps:          0       0       0       2       0
  2548 ;;      Totals:         0       0       0       3       0
  2549 ;;Total ram usage:        3 bytes
  2550 ;; Hardware stack levels used: 1
  2551 ;; Hardware stack levels required when called: 5
  2552 ;; This function calls:
  2553 ;;		Nothing
  2554 ;; This function is called by:
  2555 ;;		_setup
  2556 ;; This function uses a non-reentrant model
  2557 ;;
  2558                           
  2559  1D50                     _pwm_init:	
  2560                           ;psect for function _pwm_init
  2561                           
  2562                           
  2563                           ;incstack = 0
  2564                           ; Regs used in _pwm_init: [wreg-fsr0h+status,2+status,0]
  2565                           ;pwm_init@channel stored from wreg
  2566  1D50  1683               	bsf	3,5	;RP0=1, select bank3
  2567  1D51  1703               	bsf	3,6	;RP1=1, select bank3
  2568  1D52  0092               	movwf	pwm_init@channel^(0+384)
  2569  1D53                     l3217:
  2570                           
  2571                           ;pwm.c: 13:     switch(channel) {
  2572  1D53  2D6C               	goto	l3231
  2573  1D54                     l327:	
  2574                           ;pwm.c: 14:         case 1:
  2575                           
  2576                           
  2577                           ;pwm.c: 15:             TRISCbits.TRISC2 = 1;
  2578  1D54  1683               	bsf	3,5	;RP0=1, select bank1
  2579  1D55  1303               	bcf	3,6	;RP1=0, select bank1
  2580  1D56  1507               	bsf	7,2	;volatile
  2581  1D57                     l3219:
  2582                           
  2583                           ;pwm.c: 16:             CCP1CON = 0;
  2584  1D57  1283               	bcf	3,5	;RP0=0, select bank0
  2585  1D58  1303               	bcf	3,6	;RP1=0, select bank0
  2586  1D59  0197               	clrf	23	;volatile
  2587  1D5A                     l3221:
  2588                           
  2589                           ;pwm.c: 17:             CCP1CONbits.P1M = 0;
  2590  1D5A  303F               	movlw	-193
  2591  1D5B  0597               	andwf	23,f	;volatile
  2592  1D5C                     l3223:
  2593                           
  2594                           ;pwm.c: 18:             CCP1CONbits.CCP1M = 0b1100;
  2595  1D5C  0817               	movf	23,w	;volatile
  2596  1D5D  39F0               	andlw	-16
  2597  1D5E  380C               	iorlw	12
  2598  1D5F  0097               	movwf	23	;volatile
  2599                           
  2600                           ;pwm.c: 19:             break;
  2601  1D60  2D7C               	goto	l3233
  2602  1D61                     l329:	
  2603                           ;pwm.c: 20:         case 2:
  2604                           
  2605                           
  2606                           ;pwm.c: 21:             TRISCbits.TRISC1 = 1;
  2607  1D61  1683               	bsf	3,5	;RP0=1, select bank1
  2608  1D62  1303               	bcf	3,6	;RP1=0, select bank1
  2609  1D63  1487               	bsf	7,1	;volatile
  2610  1D64                     l3225:
  2611                           
  2612                           ;pwm.c: 22:             CCP2CON = 0;
  2613  1D64  1283               	bcf	3,5	;RP0=0, select bank0
  2614  1D65  1303               	bcf	3,6	;RP1=0, select bank0
  2615  1D66  019D               	clrf	29	;volatile
  2616  1D67                     l3227:
  2617                           
  2618                           ;pwm.c: 23:             CCP2CONbits.CCP2M = 0b1100;
  2619  1D67  081D               	movf	29,w	;volatile
  2620  1D68  39F0               	andlw	-16
  2621  1D69  380C               	iorlw	12
  2622  1D6A  009D               	movwf	29	;volatile
  2623                           
  2624                           ;pwm.c: 24:             break;
  2625  1D6B  2D7C               	goto	l3233
  2626  1D6C                     l3231:
  2627  1D6C  0812               	movf	pwm_init@channel^(0+384),w
  2628  1D6D  0090               	movwf	??_pwm_init^(0+384)
  2629  1D6E  0191               	clrf	(??_pwm_init^(0+384)+1)
  2630                           
  2631                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2632                           ; Switch size 1, requested type "simple"
  2633                           ; Number of cases is 1, Range of values is 0 to 0
  2634                           ; switch strategies available:
  2635                           ; Name         Instructions Cycles
  2636                           ; simple_byte            4     3 (average)
  2637                           ; direct_byte           11     8 (fixed)
  2638                           ; jumptable            260     6 (fixed)
  2639                           ;	Chosen strategy is simple_byte
  2640  1D6F  0811               	movf	(??_pwm_init+1)^(0+384),w
  2641  1D70  3A00               	xorlw	0	; case 0
  2642  1D71  1903               	skipnz
  2643  1D72  2D74               	goto	l4221
  2644  1D73  2D7C               	goto	l3233
  2645  1D74                     l4221:
  2646                           
  2647                           ; Switch size 1, requested type "simple"
  2648                           ; Number of cases is 2, Range of values is 1 to 2
  2649                           ; switch strategies available:
  2650                           ; Name         Instructions Cycles
  2651                           ; simple_byte            7     4 (average)
  2652                           ; direct_byte           17    11 (fixed)
  2653                           ; jumptable            263     9 (fixed)
  2654                           ;	Chosen strategy is simple_byte
  2655  1D74  0810               	movf	??_pwm_init^(0+384),w
  2656  1D75  3A01               	xorlw	1	; case 1
  2657  1D76  1903               	skipnz
  2658  1D77  2D54               	goto	l327
  2659  1D78  3A03               	xorlw	3	; case 2
  2660  1D79  1903               	skipnz
  2661  1D7A  2D61               	goto	l329
  2662  1D7B  2D7C               	goto	l3233
  2663  1D7C                     l3233:
  2664                           
  2665                           ;pwm.c: 28:     T2CONbits.T2CKPS = 0b11;
  2666  1D7C  3003               	movlw	3
  2667  1D7D  1283               	bcf	3,5	;RP0=0, select bank0
  2668  1D7E  1303               	bcf	3,6	;RP1=0, select bank0
  2669  1D7F  0492               	iorwf	18,f	;volatile
  2670  1D80                     l3235:
  2671                           
  2672                           ;pwm.c: 29:     PR2 = 255;
  2673  1D80  30FF               	movlw	255
  2674  1D81  1683               	bsf	3,5	;RP0=1, select bank1
  2675  1D82  1303               	bcf	3,6	;RP1=0, select bank1
  2676  1D83  0092               	movwf	18	;volatile
  2677  1D84                     l3237:
  2678                           
  2679                           ;pwm.c: 32:     PIR1bits.TMR2IF = 0;
  2680  1D84  1283               	bcf	3,5	;RP0=0, select bank0
  2681  1D85  1303               	bcf	3,6	;RP1=0, select bank0
  2682  1D86  108C               	bcf	12,1	;volatile
  2683  1D87                     l3239:
  2684                           
  2685                           ;pwm.c: 33:     T2CONbits.TMR2ON = 1;
  2686  1D87  1512               	bsf	18,2	;volatile
  2687  1D88                     l331:	
  2688                           ;pwm.c: 34:     while(!PIR1bits.TMR2IF);
  2689                           
  2690  1D88  1C8C               	btfss	12,1	;volatile
  2691  1D89  2D8B               	goto	u3841
  2692  1D8A  2D8C               	goto	u3840
  2693  1D8B                     u3841:
  2694  1D8B  2D88               	goto	l331
  2695  1D8C                     u3840:
  2696  1D8C                     l333:
  2697                           
  2698                           ;pwm.c: 35:     PIR1bits.TMR2IF = 0;
  2699  1D8C  108C               	bcf	12,1	;volatile
  2700                           
  2701                           ;pwm.c: 36:     TRISCbits.TRISC2 = 0;
  2702  1D8D  1683               	bsf	3,5	;RP0=1, select bank1
  2703  1D8E  1303               	bcf	3,6	;RP1=0, select bank1
  2704  1D8F  1107               	bcf	7,2	;volatile
  2705  1D90                     l334:
  2706  1D90  0008               	return
  2707  1D91                     __end_of_pwm_init:
  2708                           
  2709                           	psect	text5
  2710  1D13                     __ptext5:	
  2711 ;; *************** function _int_osc_MHz *****************
  2712 ;; Defined at:
  2713 ;;		line 13 in file "osc.c"
  2714 ;; Parameters:    Size  Location     Type
  2715 ;;  freq            1    wreg     unsigned char 
  2716 ;; Auto vars:     Size  Location     Type
  2717 ;;  freq            1    2[BANK3 ] unsigned char 
  2718 ;; Return value:  Size  Location     Type
  2719 ;;                  1    wreg      void 
  2720 ;; Registers used:
  2721 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2722 ;; Tracked objects:
  2723 ;;		On entry : 0/0
  2724 ;;		On exit  : 0/0
  2725 ;;		Unchanged: 0/0
  2726 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2727 ;;      Params:         0       0       0       0       0
  2728 ;;      Locals:         0       0       0       1       0
  2729 ;;      Temps:          0       0       0       2       0
  2730 ;;      Totals:         0       0       0       3       0
  2731 ;;Total ram usage:        3 bytes
  2732 ;; Hardware stack levels used: 1
  2733 ;; Hardware stack levels required when called: 5
  2734 ;; This function calls:
  2735 ;;		Nothing
  2736 ;; This function is called by:
  2737 ;;		_setup
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741  1D13                     _int_osc_MHz:	
  2742                           ;psect for function _int_osc_MHz
  2743                           
  2744                           
  2745                           ;incstack = 0
  2746                           ; Regs used in _int_osc_MHz: [wreg-fsr0h+status,2+status,0]
  2747                           ;int_osc_MHz@freq stored from wreg
  2748  1D13  1683               	bsf	3,5	;RP0=1, select bank3
  2749  1D14  1703               	bsf	3,6	;RP1=1, select bank3
  2750  1D15  0092               	movwf	int_osc_MHz@freq^(0+384)
  2751  1D16                     l3195:
  2752                           
  2753                           ;osc.c: 14:     switch(freq){
  2754  1D16  2D38               	goto	l3209
  2755  1D17                     l3197:
  2756                           
  2757                           ;osc.c: 16:             OSCCONbits.IRCF = 0b100;
  2758  1D17  1683               	bsf	3,5	;RP0=1, select bank1
  2759  1D18  1303               	bcf	3,6	;RP1=0, select bank1
  2760  1D19  080F               	movf	15,w	;volatile
  2761  1D1A  398F               	andlw	-113
  2762  1D1B  3840               	iorlw	64
  2763  1D1C  008F               	movwf	15	;volatile
  2764                           
  2765                           ;osc.c: 17:             break;
  2766  1D1D  2D4E               	goto	l212
  2767  1D1E                     l3199:
  2768                           
  2769                           ;osc.c: 19:             OSCCONbits.IRCF = 0b101;
  2770  1D1E  1683               	bsf	3,5	;RP0=1, select bank1
  2771  1D1F  1303               	bcf	3,6	;RP1=0, select bank1
  2772  1D20  080F               	movf	15,w	;volatile
  2773  1D21  398F               	andlw	-113
  2774  1D22  3850               	iorlw	80
  2775  1D23  008F               	movwf	15	;volatile
  2776                           
  2777                           ;osc.c: 20:             break;
  2778  1D24  2D4E               	goto	l212
  2779  1D25                     l3201:
  2780                           
  2781                           ;osc.c: 22:             OSCCONbits.IRCF = 0b110;
  2782  1D25  1683               	bsf	3,5	;RP0=1, select bank1
  2783  1D26  1303               	bcf	3,6	;RP1=0, select bank1
  2784  1D27  080F               	movf	15,w	;volatile
  2785  1D28  398F               	andlw	-113
  2786  1D29  3860               	iorlw	96
  2787  1D2A  008F               	movwf	15	;volatile
  2788                           
  2789                           ;osc.c: 23:             break;
  2790  1D2B  2D4E               	goto	l212
  2791  1D2C                     l3203:
  2792                           
  2793                           ;osc.c: 25:             OSCCONbits.IRCF = 0b111;
  2794  1D2C  3070               	movlw	112
  2795  1D2D  1683               	bsf	3,5	;RP0=1, select bank1
  2796  1D2E  1303               	bcf	3,6	;RP1=0, select bank1
  2797  1D2F  048F               	iorwf	15,f	;volatile
  2798                           
  2799                           ;osc.c: 26:             break;
  2800  1D30  2D4E               	goto	l212
  2801  1D31                     l3205:
  2802                           
  2803                           ;osc.c: 28:             OSCCONbits.IRCF = 0b110;
  2804  1D31  1683               	bsf	3,5	;RP0=1, select bank1
  2805  1D32  1303               	bcf	3,6	;RP1=0, select bank1
  2806  1D33  080F               	movf	15,w	;volatile
  2807  1D34  398F               	andlw	-113
  2808  1D35  3860               	iorlw	96
  2809  1D36  008F               	movwf	15	;volatile
  2810                           
  2811                           ;osc.c: 29:             break;
  2812  1D37  2D4E               	goto	l212
  2813  1D38                     l3209:
  2814  1D38  0812               	movf	int_osc_MHz@freq^(0+384),w
  2815  1D39  0090               	movwf	??_int_osc_MHz^(0+384)
  2816  1D3A  0191               	clrf	(??_int_osc_MHz^(0+384)+1)
  2817                           
  2818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2819                           ; Switch size 1, requested type "simple"
  2820                           ; Number of cases is 1, Range of values is 0 to 0
  2821                           ; switch strategies available:
  2822                           ; Name         Instructions Cycles
  2823                           ; simple_byte            4     3 (average)
  2824                           ; direct_byte           11     8 (fixed)
  2825                           ; jumptable            260     6 (fixed)
  2826                           ;	Chosen strategy is simple_byte
  2827  1D3B  0811               	movf	(??_int_osc_MHz+1)^(0+384),w
  2828  1D3C  3A00               	xorlw	0	; case 0
  2829  1D3D  1903               	skipnz
  2830  1D3E  2D40               	goto	l4223
  2831  1D3F  2D31               	goto	l3205
  2832  1D40                     l4223:
  2833                           
  2834                           ; Switch size 1, requested type "simple"
  2835                           ; Number of cases is 4, Range of values is 1 to 8
  2836                           ; switch strategies available:
  2837                           ; Name         Instructions Cycles
  2838                           ; simple_byte           13     7 (average)
  2839                           ; direct_byte           35    11 (fixed)
  2840                           ; jumptable            263     9 (fixed)
  2841                           ;	Chosen strategy is simple_byte
  2842  1D40  0810               	movf	??_int_osc_MHz^(0+384),w
  2843  1D41  3A01               	xorlw	1	; case 1
  2844  1D42  1903               	skipnz
  2845  1D43  2D17               	goto	l3197
  2846  1D44  3A03               	xorlw	3	; case 2
  2847  1D45  1903               	skipnz
  2848  1D46  2D1E               	goto	l3199
  2849  1D47  3A06               	xorlw	6	; case 4
  2850  1D48  1903               	skipnz
  2851  1D49  2D25               	goto	l3201
  2852  1D4A  3A0C               	xorlw	12	; case 8
  2853  1D4B  1903               	skipnz
  2854  1D4C  2D2C               	goto	l3203
  2855  1D4D  2D31               	goto	l3205
  2856  1D4E                     l212:
  2857                           
  2858                           ;osc.c: 31:     OSCCONbits.SCS = 1;
  2859  1D4E  140F               	bsf	15,0	;volatile
  2860  1D4F                     l217:
  2861  1D4F  0008               	return
  2862  1D50                     __end_of_int_osc_MHz:
  2863                           
  2864                           	psect	text6
  2865  10DA                     __ptext6:	
  2866 ;; *************** function _adc_init *****************
  2867 ;; Defined at:
  2868 ;;		line 14 in file "adc.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  adc_cs          1    wreg     unsigned char 
  2871 ;;  vref_plus       1    0[BANK3 ] unsigned char 
  2872 ;;  vref_minus      1    1[BANK3 ] unsigned char 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  adc_cs          1    4[BANK3 ] unsigned char 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  1    wreg      void 
  2877 ;; Registers used:
  2878 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         0       0       0       2       0
  2885 ;;      Locals:         0       0       0       1       0
  2886 ;;      Temps:          0       0       0       2       0
  2887 ;;      Totals:         0       0       0       5       0
  2888 ;;Total ram usage:        5 bytes
  2889 ;; Hardware stack levels used: 1
  2890 ;; Hardware stack levels required when called: 5
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_setup
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898  10DA                     _adc_init:	
  2899                           ;psect for function _adc_init
  2900                           
  2901                           
  2902                           ;incstack = 0
  2903                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
  2904                           ;adc_init@adc_cs stored from wreg
  2905  10DA  1683               	bsf	3,5	;RP0=1, select bank3
  2906  10DB  1703               	bsf	3,6	;RP1=1, select bank3
  2907  10DC  0094               	movwf	adc_init@adc_cs^(0+384)
  2908  10DD                     l3261:
  2909                           
  2910                           ;adc.c: 15:     switch(adc_cs){
  2911  10DD  28FD               	goto	l3275
  2912  10DE                     l3263:
  2913                           
  2914                           ;adc.c: 17:             ADCON0bits.ADCS = 0b00;
  2915  10DE  303F               	movlw	-193
  2916  10DF  1283               	bcf	3,5	;RP0=0, select bank0
  2917  10E0  1303               	bcf	3,6	;RP1=0, select bank0
  2918  10E1  059F               	andwf	31,f	;volatile
  2919                           
  2920                           ;adc.c: 18:             break;
  2921  10E2  291F               	goto	l3279
  2922  10E3                     l3265:
  2923                           
  2924                           ;adc.c: 20:             ADCON0bits.ADCS = 0b01;
  2925  10E3  1283               	bcf	3,5	;RP0=0, select bank0
  2926  10E4  1303               	bcf	3,6	;RP1=0, select bank0
  2927  10E5  081F               	movf	31,w	;volatile
  2928  10E6  393F               	andlw	-193
  2929  10E7  3840               	iorlw	64
  2930  10E8  009F               	movwf	31	;volatile
  2931                           
  2932                           ;adc.c: 21:             break;
  2933  10E9  291F               	goto	l3279
  2934  10EA                     l3267:
  2935                           
  2936                           ;adc.c: 23:             ADCON0bits.ADCS = 0b10;
  2937  10EA  1283               	bcf	3,5	;RP0=0, select bank0
  2938  10EB  1303               	bcf	3,6	;RP1=0, select bank0
  2939  10EC  081F               	movf	31,w	;volatile
  2940  10ED  393F               	andlw	-193
  2941  10EE  3880               	iorlw	128
  2942  10EF  009F               	movwf	31	;volatile
  2943                           
  2944                           ;adc.c: 24:             break;
  2945  10F0  291F               	goto	l3279
  2946  10F1                     l3269:
  2947                           
  2948                           ;adc.c: 26:             ADCON0bits.ADCS = 0b11;
  2949  10F1  30C0               	movlw	192
  2950  10F2  1283               	bcf	3,5	;RP0=0, select bank0
  2951  10F3  1303               	bcf	3,6	;RP1=0, select bank0
  2952  10F4  049F               	iorwf	31,f	;volatile
  2953                           
  2954                           ;adc.c: 27:             break;
  2955  10F5  291F               	goto	l3279
  2956  10F6                     l3271:
  2957                           
  2958                           ;adc.c: 29:             ADCON0bits.ADCS = 0b01;
  2959  10F6  1283               	bcf	3,5	;RP0=0, select bank0
  2960  10F7  1303               	bcf	3,6	;RP1=0, select bank0
  2961  10F8  081F               	movf	31,w	;volatile
  2962  10F9  393F               	andlw	-193
  2963  10FA  3840               	iorlw	64
  2964  10FB  009F               	movwf	31	;volatile
  2965                           
  2966                           ;adc.c: 30:             break;
  2967  10FC  291F               	goto	l3279
  2968  10FD                     l3275:
  2969  10FD  0814               	movf	adc_init@adc_cs^(0+384),w
  2970  10FE  0092               	movwf	??_adc_init^(0+384)
  2971  10FF  0193               	clrf	(??_adc_init^(0+384)+1)
  2972                           
  2973                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2974                           ; Switch size 1, requested type "simple"
  2975                           ; Number of cases is 1, Range of values is 0 to 0
  2976                           ; switch strategies available:
  2977                           ; Name         Instructions Cycles
  2978                           ; simple_byte            4     3 (average)
  2979                           ; direct_byte           11     8 (fixed)
  2980                           ; jumptable            260     6 (fixed)
  2981                           ;	Chosen strategy is simple_byte
  2982  1100  0813               	movf	(??_adc_init+1)^(0+384),w
  2983  1101  3A00               	xorlw	0	; case 0
  2984  1102  1903               	skipnz
  2985  1103  2905               	goto	l4225
  2986  1104  28F6               	goto	l3271
  2987  1105                     l4225:
  2988                           
  2989                           ; Switch size 1, requested type "simple"
  2990                           ; Number of cases is 4, Range of values is 0 to 3
  2991                           ; switch strategies available:
  2992                           ; Name         Instructions Cycles
  2993                           ; simple_byte           13     7 (average)
  2994                           ; direct_byte           20     8 (fixed)
  2995                           ; jumptable            260     6 (fixed)
  2996                           ;	Chosen strategy is simple_byte
  2997  1105  0812               	movf	??_adc_init^(0+384),w
  2998  1106  3A00               	xorlw	0	; case 0
  2999  1107  1903               	skipnz
  3000  1108  28DE               	goto	l3263
  3001  1109  3A01               	xorlw	1	; case 1
  3002  110A  1903               	skipnz
  3003  110B  28E3               	goto	l3265
  3004  110C  3A03               	xorlw	3	; case 2
  3005  110D  1903               	skipnz
  3006  110E  28EA               	goto	l3267
  3007  110F  3A01               	xorlw	1	; case 3
  3008  1110  1903               	skipnz
  3009  1111  28F1               	goto	l3269
  3010  1112  28F6               	goto	l3271
  3011  1113                     l269:	
  3012                           ;adc.c: 33:         case 0:
  3013                           
  3014                           
  3015                           ;adc.c: 34:             ADCON1bits.VCFG0 = 0;
  3016  1113  1683               	bsf	3,5	;RP0=1, select bank1
  3017  1114  1303               	bcf	3,6	;RP1=0, select bank1
  3018  1115  121F               	bcf	31,4	;volatile
  3019                           
  3020                           ;adc.c: 35:             break;
  3021  1116  293D               	goto	l3283
  3022  1117                     l271:	
  3023                           ;adc.c: 36:         case 1:
  3024                           
  3025                           
  3026                           ;adc.c: 37:             ADCON1bits.VCFG0 = 1;
  3027  1117  1683               	bsf	3,5	;RP0=1, select bank1
  3028  1118  1303               	bcf	3,6	;RP1=0, select bank1
  3029  1119  161F               	bsf	31,4	;volatile
  3030                           
  3031                           ;adc.c: 38:             break;
  3032  111A  293D               	goto	l3283
  3033  111B                     l272:	
  3034                           ;adc.c: 39:         default:
  3035                           
  3036                           
  3037                           ;adc.c: 40:             ADCON1bits.VCFG0 = 0;
  3038  111B  1683               	bsf	3,5	;RP0=1, select bank1
  3039  111C  1303               	bcf	3,6	;RP1=0, select bank1
  3040  111D  121F               	bcf	31,4	;volatile
  3041                           
  3042                           ;adc.c: 41:             break;
  3043  111E  293D               	goto	l3283
  3044  111F                     l3279:
  3045  111F  1683               	bsf	3,5	;RP0=1, select bank3
  3046  1120  1703               	bsf	3,6	;RP1=1, select bank3
  3047  1121  0810               	movf	adc_init@vref_plus^(0+384),w
  3048  1122  0092               	movwf	??_adc_init^(0+384)
  3049  1123  0193               	clrf	(??_adc_init^(0+384)+1)
  3050                           
  3051                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3052                           ; Switch size 1, requested type "simple"
  3053                           ; Number of cases is 1, Range of values is 0 to 0
  3054                           ; switch strategies available:
  3055                           ; Name         Instructions Cycles
  3056                           ; simple_byte            4     3 (average)
  3057                           ; direct_byte           11     8 (fixed)
  3058                           ; jumptable            260     6 (fixed)
  3059                           ;	Chosen strategy is simple_byte
  3060  1124  0813               	movf	(??_adc_init+1)^(0+384),w
  3061  1125  3A00               	xorlw	0	; case 0
  3062  1126  1903               	skipnz
  3063  1127  2929               	goto	l4227
  3064  1128  291B               	goto	l272
  3065  1129                     l4227:
  3066                           
  3067                           ; Switch size 1, requested type "simple"
  3068                           ; Number of cases is 2, Range of values is 0 to 1
  3069                           ; switch strategies available:
  3070                           ; Name         Instructions Cycles
  3071                           ; simple_byte            7     4 (average)
  3072                           ; direct_byte           14     8 (fixed)
  3073                           ; jumptable            260     6 (fixed)
  3074                           ;	Chosen strategy is simple_byte
  3075  1129  0812               	movf	??_adc_init^(0+384),w
  3076  112A  3A00               	xorlw	0	; case 0
  3077  112B  1903               	skipnz
  3078  112C  2913               	goto	l269
  3079  112D  3A01               	xorlw	1	; case 1
  3080  112E  1903               	skipnz
  3081  112F  2917               	goto	l271
  3082  1130  291B               	goto	l272
  3083  1131                     l274:	
  3084                           ;adc.c: 44:         case 0:
  3085                           
  3086                           
  3087                           ;adc.c: 45:             ADCON1bits.VCFG1 = 0;
  3088  1131  1683               	bsf	3,5	;RP0=1, select bank1
  3089  1132  1303               	bcf	3,6	;RP1=0, select bank1
  3090  1133  129F               	bcf	31,5	;volatile
  3091                           
  3092                           ;adc.c: 46:             break;
  3093  1134  294F               	goto	l275
  3094  1135                     l276:	
  3095                           ;adc.c: 47:         case 1:
  3096                           
  3097                           
  3098                           ;adc.c: 48:             ADCON1bits.VCFG1 = 1;
  3099  1135  1683               	bsf	3,5	;RP0=1, select bank1
  3100  1136  1303               	bcf	3,6	;RP1=0, select bank1
  3101  1137  169F               	bsf	31,5	;volatile
  3102                           
  3103                           ;adc.c: 49:             break;
  3104  1138  294F               	goto	l275
  3105  1139                     l277:	
  3106                           ;adc.c: 50:         default:
  3107                           
  3108                           
  3109                           ;adc.c: 51:             ADCON1bits.VCFG1 = 0;
  3110  1139  1683               	bsf	3,5	;RP0=1, select bank1
  3111  113A  1303               	bcf	3,6	;RP1=0, select bank1
  3112  113B  129F               	bcf	31,5	;volatile
  3113                           
  3114                           ;adc.c: 52:             break;
  3115  113C  294F               	goto	l275
  3116  113D                     l3283:
  3117  113D  1683               	bsf	3,5	;RP0=1, select bank3
  3118  113E  1703               	bsf	3,6	;RP1=1, select bank3
  3119  113F  0811               	movf	adc_init@vref_minus^(0+384),w
  3120  1140  0092               	movwf	??_adc_init^(0+384)
  3121  1141  0193               	clrf	(??_adc_init^(0+384)+1)
  3122                           
  3123                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3124                           ; Switch size 1, requested type "simple"
  3125                           ; Number of cases is 1, Range of values is 0 to 0
  3126                           ; switch strategies available:
  3127                           ; Name         Instructions Cycles
  3128                           ; simple_byte            4     3 (average)
  3129                           ; direct_byte           11     8 (fixed)
  3130                           ; jumptable            260     6 (fixed)
  3131                           ;	Chosen strategy is simple_byte
  3132  1142  0813               	movf	(??_adc_init+1)^(0+384),w
  3133  1143  3A00               	xorlw	0	; case 0
  3134  1144  1903               	skipnz
  3135  1145  2947               	goto	l4229
  3136  1146  2939               	goto	l277
  3137  1147                     l4229:
  3138                           
  3139                           ; Switch size 1, requested type "simple"
  3140                           ; Number of cases is 2, Range of values is 0 to 1
  3141                           ; switch strategies available:
  3142                           ; Name         Instructions Cycles
  3143                           ; simple_byte            7     4 (average)
  3144                           ; direct_byte           14     8 (fixed)
  3145                           ; jumptable            260     6 (fixed)
  3146                           ;	Chosen strategy is simple_byte
  3147  1147  0812               	movf	??_adc_init^(0+384),w
  3148  1148  3A00               	xorlw	0	; case 0
  3149  1149  1903               	skipnz
  3150  114A  2931               	goto	l274
  3151  114B  3A01               	xorlw	1	; case 1
  3152  114C  1903               	skipnz
  3153  114D  2935               	goto	l276
  3154  114E  2939               	goto	l277
  3155  114F                     l275:
  3156                           
  3157                           ;adc.c: 54:     ADCON1bits.ADFM = 1;
  3158  114F  179F               	bsf	31,7	;volatile
  3159                           
  3160                           ;adc.c: 55:     ADCON0bits.ADON = 1;
  3161  1150  1283               	bcf	3,5	;RP0=0, select bank0
  3162  1151  1303               	bcf	3,6	;RP1=0, select bank0
  3163  1152  141F               	bsf	31,0	;volatile
  3164                           
  3165                           ;adc.c: 56:     PIE1bits.ADIE = 1;
  3166  1153  1683               	bsf	3,5	;RP0=1, select bank1
  3167  1154  1303               	bcf	3,6	;RP1=0, select bank1
  3168  1155  170C               	bsf	12,6	;volatile
  3169                           
  3170                           ;adc.c: 57:     PIR1bits.ADIF = 0;
  3171  1156  1283               	bcf	3,5	;RP0=0, select bank0
  3172  1157  1303               	bcf	3,6	;RP1=0, select bank0
  3173  1158  130C               	bcf	12,6	;volatile
  3174  1159                     l278:
  3175  1159  0008               	return
  3176  115A                     __end_of_adc_init:
  3177                           
  3178                           	psect	text7
  3179  1F93                     __ptext7:	
  3180 ;; *************** function _USART_set *****************
  3181 ;; Defined at:
  3182 ;;		line 12 in file "USART.c"
  3183 ;; Parameters:    Size  Location     Type
  3184 ;;  baudrate        4   14[BANK3 ] const unsigned long 
  3185 ;; Auto vars:     Size  Location     Type
  3186 ;;		None
  3187 ;; Return value:  Size  Location     Type
  3188 ;;                  1    wreg      void 
  3189 ;; Registers used:
  3190 ;;		wreg, status,2, status,0, pclath, cstack
  3191 ;; Tracked objects:
  3192 ;;		On entry : 0/0
  3193 ;;		On exit  : 0/0
  3194 ;;		Unchanged: 0/0
  3195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3196 ;;      Params:         0       0       0       4       0
  3197 ;;      Locals:         0       0       0       0       0
  3198 ;;      Temps:          0       0       0      12       0
  3199 ;;      Totals:         0       0       0      16       0
  3200 ;;Total ram usage:       16 bytes
  3201 ;; Hardware stack levels used: 1
  3202 ;; Hardware stack levels required when called: 6
  3203 ;; This function calls:
  3204 ;;		___lldiv
  3205 ;; This function is called by:
  3206 ;;		_setup
  3207 ;; This function uses a non-reentrant model
  3208 ;;
  3209                           
  3210  1F93                     _USART_set:	
  3211                           ;psect for function _USART_set
  3212                           
  3213  1F93                     l3247:	
  3214                           ;incstack = 0
  3215                           ; Regs used in _USART_set: [wreg+status,2+status,0+pclath+cstack]
  3216                           
  3217                           
  3218                           ;USART.c: 12: void USART_set(const unsigned long int baudrate);USART.c: 13: {;USART.c: 1
      +                          4:     TXSTAbits.BRGH = 1;
  3219  1F93  1683               	bsf	3,5	;RP0=1, select bank1
  3220  1F94  1303               	bcf	3,6	;RP1=0, select bank1
  3221  1F95  1518               	bsf	24,2	;volatile
  3222                           
  3223                           ;USART.c: 15:     BAUDCTLbits.BRG16 = 1;
  3224  1F96  1683               	bsf	3,5	;RP0=1, select bank3
  3225  1F97  1703               	bsf	3,6	;RP1=1, select bank3
  3226  1F98  1587               	bsf	7,3	;volatile
  3227  1F99                     l3249:
  3228                           
  3229                           ;USART.c: 16:     SPBRGH = 0;
  3230  1F99  1683               	bsf	3,5	;RP0=1, select bank1
  3231  1F9A  1303               	bcf	3,6	;RP1=0, select bank1
  3232  1F9B  019A               	clrf	26	;volatile
  3233  1F9C                     l3251:
  3234                           
  3235                           ;USART.c: 17:     SPBRG = (1000000 - baudrate * 4) / (baudrate * 4);
  3236  1F9C  1683               	bsf	3,5	;RP0=1, select bank3
  3237  1F9D  1703               	bsf	3,6	;RP1=1, select bank3
  3238  1F9E  081E               	movf	USART_set@baudrate^(0+384),w
  3239  1F9F  00A2               	movwf	??_USART_set^(0+384)
  3240  1FA0  081F               	movf	(USART_set@baudrate+1)^(0+384),w
  3241  1FA1  00A3               	movwf	(??_USART_set^(0+384)+1)
  3242  1FA2  0820               	movf	(USART_set@baudrate+2)^(0+384),w
  3243  1FA3  00A4               	movwf	(??_USART_set^(0+384)+2)
  3244  1FA4  0821               	movf	(USART_set@baudrate+3)^(0+384),w
  3245  1FA5  00A5               	movwf	(??_USART_set^(0+384)+3)
  3246  1FA6  3002               	movlw	2
  3247  1FA7                     u3855:
  3248  1FA7  1003               	clrc
  3249  1FA8  0DA2               	rlf	??_USART_set^(0+384),f
  3250  1FA9  0DA3               	rlf	(??_USART_set^(0+384)+1),f
  3251  1FAA  0DA4               	rlf	(??_USART_set^(0+384)+2),f
  3252  1FAB  0DA5               	rlf	(??_USART_set^(0+384)+3),f
  3253  1FAC                     u3850:
  3254  1FAC  3EFF               	addlw	-1
  3255  1FAD  1D03               	skipz
  3256  1FAE  2FA7               	goto	u3855
  3257  1FAF  0825               	movf	(??_USART_set+3)^(0+384),w
  3258  1FB0  0093               	movwf	(___lldiv@divisor+3)^(0+384)
  3259  1FB1  0824               	movf	(??_USART_set+2)^(0+384),w
  3260  1FB2  0092               	movwf	(___lldiv@divisor+2)^(0+384)
  3261  1FB3  0823               	movf	(??_USART_set+1)^(0+384),w
  3262  1FB4  0091               	movwf	(___lldiv@divisor+1)^(0+384)
  3263  1FB5  0822               	movf	??_USART_set^(0+384),w
  3264  1FB6  0090               	movwf	___lldiv@divisor^(0+384)
  3265  1FB7  081E               	movf	USART_set@baudrate^(0+384),w
  3266  1FB8  00A6               	movwf	(??_USART_set+4)^(0+384)
  3267  1FB9  081F               	movf	(USART_set@baudrate+1)^(0+384),w
  3268  1FBA  00A7               	movwf	((??_USART_set+4)^(0+384)+1)
  3269  1FBB  0820               	movf	(USART_set@baudrate+2)^(0+384),w
  3270  1FBC  00A8               	movwf	((??_USART_set+4)^(0+384)+2)
  3271  1FBD  0821               	movf	(USART_set@baudrate+3)^(0+384),w
  3272  1FBE  00A9               	movwf	((??_USART_set+4)^(0+384)+3)
  3273  1FBF  3002               	movlw	2
  3274  1FC0                     u3865:
  3275  1FC0  1003               	clrc
  3276  1FC1  0DA6               	rlf	(??_USART_set+4)^(0+384),f
  3277  1FC2  0DA7               	rlf	((??_USART_set+4)^(0+384)+1),f
  3278  1FC3  0DA8               	rlf	((??_USART_set+4)^(0+384)+2),f
  3279  1FC4  0DA9               	rlf	((??_USART_set+4)^(0+384)+3),f
  3280  1FC5                     u3860:
  3281  1FC5  3EFF               	addlw	-1
  3282  1FC6  1D03               	skipz
  3283  1FC7  2FC0               	goto	u3865
  3284  1FC8  3040               	movlw	64
  3285  1FC9  00AA               	movwf	(??_USART_set+8)^(0+384)
  3286  1FCA  3042               	movlw	66
  3287  1FCB  00AB               	movwf	((??_USART_set+8)^(0+384)+1)
  3288  1FCC  300F               	movlw	15
  3289  1FCD  00AC               	movwf	((??_USART_set+8)^(0+384)+2)
  3290  1FCE  3000               	movlw	0
  3291  1FCF  00AD               	movwf	((??_USART_set+8)^(0+384)+3)
  3292  1FD0  0826               	movf	(??_USART_set+4)^(0+384),w
  3293  1FD1  02AA               	subwf	(??_USART_set+8)^(0+384),f
  3294  1FD2  0827               	movf	(??_USART_set+5)^(0+384),w
  3295  1FD3  1C03               	skipc
  3296  1FD4  0F27               	incfsz	(??_USART_set+5)^(0+384),w
  3297  1FD5  2FD7               	goto	u3871
  3298  1FD6  2FD8               	goto	u3872
  3299  1FD7                     u3871:
  3300  1FD7  02AB               	subwf	((??_USART_set+8)^(0+384)+1),f
  3301  1FD8                     u3872:
  3302  1FD8  0828               	movf	(??_USART_set+6)^(0+384),w
  3303  1FD9  1C03               	skipc
  3304  1FDA  0F28               	incfsz	(??_USART_set+6)^(0+384),w
  3305  1FDB  2FDD               	goto	u3873
  3306  1FDC  2FDE               	goto	u3874
  3307  1FDD                     u3873:
  3308  1FDD  02AC               	subwf	((??_USART_set+8)^(0+384)+2),f
  3309  1FDE                     u3874:
  3310  1FDE  0829               	movf	(??_USART_set+7)^(0+384),w
  3311  1FDF  1C03               	skipc
  3312  1FE0  0F29               	incfsz	(??_USART_set+7)^(0+384),w
  3313  1FE1  2FE3               	goto	u3875
  3314  1FE2  2FE4               	goto	u3876
  3315  1FE3                     u3875:
  3316  1FE3  02AD               	subwf	((??_USART_set+8)^(0+384)+3),f
  3317  1FE4                     u3876:
  3318  1FE4  082D               	movf	(??_USART_set+11)^(0+384),w
  3319  1FE5  0097               	movwf	(___lldiv@dividend+3)^(0+384)
  3320  1FE6  082C               	movf	(??_USART_set+10)^(0+384),w
  3321  1FE7  0096               	movwf	(___lldiv@dividend+2)^(0+384)
  3322  1FE8  082B               	movf	(??_USART_set+9)^(0+384),w
  3323  1FE9  0095               	movwf	(___lldiv@dividend+1)^(0+384)
  3324  1FEA  082A               	movf	(??_USART_set+8)^(0+384),w
  3325  1FEB  0094               	movwf	___lldiv@dividend^(0+384)
  3326  1FEC  160A  158A  26C1  160A  158A  	fcall	___lldiv
  3327  1FF1  1683               	bsf	3,5	;RP0=1, select bank3
  3328  1FF2  1703               	bsf	3,6	;RP1=1, select bank3
  3329  1FF3  0810               	movf	?___lldiv^(0+384),w
  3330  1FF4  1683               	bsf	3,5	;RP0=1, select bank1
  3331  1FF5  1303               	bcf	3,6	;RP1=0, select bank1
  3332  1FF6  0099               	movwf	25	;volatile
  3333  1FF7                     l3253:
  3334                           
  3335                           ;USART.c: 18:     TXSTAbits.SYNC = 0;
  3336  1FF7  1218               	bcf	24,4	;volatile
  3337  1FF8                     l3255:
  3338                           
  3339                           ;USART.c: 19:     RCSTAbits.SPEN = 1;
  3340  1FF8  1283               	bcf	3,5	;RP0=0, select bank0
  3341  1FF9  1303               	bcf	3,6	;RP1=0, select bank0
  3342  1FFA  1798               	bsf	24,7	;volatile
  3343  1FFB                     l3257:
  3344                           
  3345                           ;USART.c: 22:     TXSTAbits.TX9 = 0;
  3346  1FFB  1683               	bsf	3,5	;RP0=1, select bank1
  3347  1FFC  1303               	bcf	3,6	;RP1=0, select bank1
  3348  1FFD  1318               	bcf	24,6	;volatile
  3349  1FFE                     l3259:
  3350                           
  3351                           ;USART.c: 24:     TXSTAbits.TXEN = 1;
  3352  1FFE  1698               	bsf	24,5	;volatile
  3353  1FFF                     l232:
  3354  1FFF  0008               	return
  3355  2000                     __end_of_USART_set:
  3356                           
  3357                           	psect	text8
  3358  0800                     __ptext8:	
  3359 ;; *************** function _I2C_Master_Init *****************
  3360 ;; Defined at:
  3361 ;;		line 14 in file "I2C.c"
  3362 ;; Parameters:    Size  Location     Type
  3363 ;;  c               4   14[BANK3 ] const unsigned long 
  3364 ;; Auto vars:     Size  Location     Type
  3365 ;;		None
  3366 ;; Return value:  Size  Location     Type
  3367 ;;                  1    wreg      void 
  3368 ;; Registers used:
  3369 ;;		wreg, status,2, status,0, pclath, cstack
  3370 ;; Tracked objects:
  3371 ;;		On entry : 0/0
  3372 ;;		On exit  : 0/0
  3373 ;;		Unchanged: 0/0
  3374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3375 ;;      Params:         0       0       0       4       0
  3376 ;;      Locals:         0       0       0       0       0
  3377 ;;      Temps:          0       0       0       4       0
  3378 ;;      Totals:         0       0       0       8       0
  3379 ;;Total ram usage:        8 bytes
  3380 ;; Hardware stack levels used: 1
  3381 ;; Hardware stack levels required when called: 6
  3382 ;; This function calls:
  3383 ;;		___lldiv
  3384 ;; This function is called by:
  3385 ;;		_setup
  3386 ;; This function uses a non-reentrant model
  3387 ;;
  3388                           
  3389  0800                     _I2C_Master_Init:	
  3390                           ;psect for function _I2C_Master_Init
  3391                           
  3392  0800                     l3341:	
  3393                           ;incstack = 0
  3394                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3395                           
  3396                           
  3397                           ;I2C.c: 14: void I2C_Master_Init(const unsigned long c);I2C.c: 15: {;I2C.c: 16:     SSPC
      +                          ON = 0b00101000;
  3398  0800  3028               	movlw	40
  3399  0801  1283               	bcf	3,5	;RP0=0, select bank0
  3400  0802  1303               	bcf	3,6	;RP1=0, select bank0
  3401  0803  0094               	movwf	20	;volatile
  3402  0804                     l3343:
  3403                           
  3404                           ;I2C.c: 17:     SSPCON2 = 0;
  3405  0804  1683               	bsf	3,5	;RP0=1, select bank1
  3406  0805  1303               	bcf	3,6	;RP1=0, select bank1
  3407  0806  0191               	clrf	17	;volatile
  3408  0807                     l3345:
  3409                           
  3410                           ;I2C.c: 18:     SSPADD = (1000000/(4*c))-1;
  3411  0807  1683               	bsf	3,5	;RP0=1, select bank3
  3412  0808  1703               	bsf	3,6	;RP1=1, select bank3
  3413  0809  081E               	movf	I2C_Master_Init@c^(0+384),w
  3414  080A  00A2               	movwf	??_I2C_Master_Init^(0+384)
  3415  080B  081F               	movf	(I2C_Master_Init@c+1)^(0+384),w
  3416  080C  00A3               	movwf	(??_I2C_Master_Init^(0+384)+1)
  3417  080D  0820               	movf	(I2C_Master_Init@c+2)^(0+384),w
  3418  080E  00A4               	movwf	(??_I2C_Master_Init^(0+384)+2)
  3419  080F  0821               	movf	(I2C_Master_Init@c+3)^(0+384),w
  3420  0810  00A5               	movwf	(??_I2C_Master_Init^(0+384)+3)
  3421  0811  3002               	movlw	2
  3422  0812                     u3905:
  3423  0812  1003               	clrc
  3424  0813  0DA2               	rlf	??_I2C_Master_Init^(0+384),f
  3425  0814  0DA3               	rlf	(??_I2C_Master_Init^(0+384)+1),f
  3426  0815  0DA4               	rlf	(??_I2C_Master_Init^(0+384)+2),f
  3427  0816  0DA5               	rlf	(??_I2C_Master_Init^(0+384)+3),f
  3428  0817                     u3900:
  3429  0817  3EFF               	addlw	-1
  3430  0818  1D03               	skipz
  3431  0819  2812               	goto	u3905
  3432  081A  0825               	movf	(??_I2C_Master_Init+3)^(0+384),w
  3433  081B  0093               	movwf	(___lldiv@divisor+3)^(0+384)
  3434  081C  0824               	movf	(??_I2C_Master_Init+2)^(0+384),w
  3435  081D  0092               	movwf	(___lldiv@divisor+2)^(0+384)
  3436  081E  0823               	movf	(??_I2C_Master_Init+1)^(0+384),w
  3437  081F  0091               	movwf	(___lldiv@divisor+1)^(0+384)
  3438  0820  0822               	movf	??_I2C_Master_Init^(0+384),w
  3439  0821  0090               	movwf	___lldiv@divisor^(0+384)
  3440  0822  3000               	movlw	0
  3441  0823  0097               	movwf	(___lldiv@dividend+3)^(0+384)
  3442  0824  300F               	movlw	15
  3443  0825  0096               	movwf	(___lldiv@dividend+2)^(0+384)
  3444  0826  3042               	movlw	66
  3445  0827  0095               	movwf	(___lldiv@dividend+1)^(0+384)
  3446  0828  3040               	movlw	64
  3447  0829  0094               	movwf	___lldiv@dividend^(0+384)
  3448  082A  160A  158A  26C1  120A  158A  	fcall	___lldiv
  3449  082F  1683               	bsf	3,5	;RP0=1, select bank3
  3450  0830  1703               	bsf	3,6	;RP1=1, select bank3
  3451  0831  0810               	movf	?___lldiv^(0+384),w
  3452  0832  3EFF               	addlw	255
  3453  0833  1683               	bsf	3,5	;RP0=1, select bank1
  3454  0834  1303               	bcf	3,6	;RP1=0, select bank1
  3455  0835  0093               	movwf	19	;volatile
  3456  0836                     l3347:
  3457                           
  3458                           ;I2C.c: 19:     SSPSTAT = 0;
  3459  0836  0194               	clrf	20	;volatile
  3460  0837                     l3349:
  3461                           
  3462                           ;I2C.c: 20:     TRISCbits.TRISC3 = 1;
  3463  0837  1587               	bsf	7,3	;volatile
  3464  0838                     l3351:
  3465                           
  3466                           ;I2C.c: 21:     TRISCbits.TRISC4 = 1;
  3467  0838  1607               	bsf	7,4	;volatile
  3468  0839                     l354:
  3469  0839  0008               	return
  3470  083A                     __end_of_I2C_Master_Init:
  3471                           
  3472                           	psect	text9
  3473  1CD9                     __ptext9:	
  3474 ;; *************** function _servo *****************
  3475 ;; Defined at:
  3476 ;;		line 163 in file "main_slave_p1.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  mov             2    4[BANK3 ] unsigned short 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		wreg, status,2, status,0, pclath, cstack
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3490 ;;      Params:         0       0       0       2       0
  3491 ;;      Locals:         0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0
  3493 ;;      Totals:         0       0       0       2       0
  3494 ;;Total ram usage:        2 bytes
  3495 ;; Hardware stack levels used: 1
  3496 ;; Hardware stack levels required when called: 6
  3497 ;; This function calls:
  3498 ;;		_USART_send
  3499 ;;		_pwm_duty_cycle
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505  1CD9                     _servo:	
  3506                           ;psect for function _servo
  3507                           
  3508  1CD9                     l3809:	
  3509                           ;incstack = 0
  3510                           ; Regs used in _servo: [wreg+status,2+status,0+pclath+cstack]
  3511                           
  3512                           
  3513                           ;main_slave_p1.c: 164:     if (mov == 1){
  3514  1CD9  1683               	bsf	3,5	;RP0=1, select bank3
  3515  1CDA  1703               	bsf	3,6	;RP1=1, select bank3
  3516  1CDB  0314               	decf	servo@mov^(0+384),w
  3517  1CDC  0415               	iorwf	(servo@mov+1)^(0+384),w
  3518  1CDD  1D03               	btfss	3,2
  3519  1CDE  2CE0               	goto	u4701
  3520  1CDF  2CE1               	goto	u4700
  3521  1CE0                     u4701:
  3522  1CE0  2CEB               	goto	l3813
  3523  1CE1                     u4700:
  3524  1CE1                     l3811:
  3525                           
  3526                           ;main_slave_p1.c: 165:         pwm_duty_cycle(94);
  3527  1CE1  305E               	movlw	94
  3528  1CE2  0090               	movwf	pwm_duty_cycle@duty_cycle^(0+384)
  3529  1CE3  3000               	movlw	0
  3530  1CE4  0091               	movwf	(pwm_duty_cycle@duty_cycle^(0+384)+1)
  3531  1CE5  160A  158A  2409  160A  158A  	fcall	_pwm_duty_cycle
  3532                           
  3533                           ;main_slave_p1.c: 166:     }
  3534  1CEA  2CF4               	goto	l3815
  3535  1CEB                     l3813:
  3536                           
  3537                           ;main_slave_p1.c: 168:         pwm_duty_cycle(31);
  3538  1CEB  301F               	movlw	31
  3539  1CEC  0090               	movwf	pwm_duty_cycle@duty_cycle^(0+384)
  3540  1CED  3000               	movlw	0
  3541  1CEE  0091               	movwf	(pwm_duty_cycle@duty_cycle^(0+384)+1)
  3542  1CEF  160A  158A  2409  160A  158A  	fcall	_pwm_duty_cycle
  3543  1CF4                     l3815:
  3544                           
  3545                           ;main_slave_p1.c: 171:     if (mov != last_mov){
  3546  1CF4  1683               	bsf	3,5	;RP0=1, select bank3
  3547  1CF5  1703               	bsf	3,6	;RP1=1, select bank3
  3548  1CF6  0868               	movf	(_last_mov+1)^(0+384),w
  3549  1CF7  0615               	xorwf	(servo@mov+1)^(0+384),w
  3550  1CF8  1D03               	skipz
  3551  1CF9  2CFC               	goto	u4715
  3552  1CFA  0867               	movf	_last_mov^(0+384),w
  3553  1CFB  0614               	xorwf	servo@mov^(0+384),w
  3554  1CFC                     u4715:
  3555  1CFC  1903               	skipnz
  3556  1CFD  2CFF               	goto	u4711
  3557  1CFE  2D00               	goto	u4710
  3558  1CFF                     u4711:
  3559  1CFF  2D12               	goto	l174
  3560  1D00                     u4710:
  3561  1D00                     l3817:
  3562                           
  3563                           ;main_slave_p1.c: 172:         last_mov = mov;
  3564  1D00  0815               	movf	(servo@mov+1)^(0+384),w
  3565  1D01  00E8               	movwf	(_last_mov+1)^(0+384)
  3566  1D02  0814               	movf	servo@mov^(0+384),w
  3567  1D03  00E7               	movwf	_last_mov^(0+384)
  3568  1D04                     l3819:
  3569                           
  3570                           ;main_slave_p1.c: 173:         USART_send(!mov + 128);
  3571  1D04  0814               	movf	servo@mov^(0+384),w
  3572  1D05  0415               	iorwf	(servo@mov+1)^(0+384),w
  3573  1D06  1903               	btfsc	3,2
  3574  1D07  2D09               	goto	u4721
  3575  1D08  2D0B               	goto	u4720
  3576  1D09                     u4721:
  3577  1D09  3001               	movlw	1
  3578  1D0A  2D0C               	goto	u4730
  3579  1D0B                     u4720:
  3580  1D0B  3000               	movlw	0
  3581  1D0C                     u4730:
  3582  1D0C  3E80               	addlw	128
  3583  1D0D  160A  158A  2392  160A  158A  	fcall	_USART_send
  3584  1D12                     l174:
  3585  1D12  0008               	return
  3586  1D13                     __end_of_servo:
  3587                           
  3588                           	psect	text10
  3589  1C09                     __ptext10:	
  3590 ;; *************** function _pwm_duty_cycle *****************
  3591 ;; Defined at:
  3592 ;;		line 40 in file "pwm.c"
  3593 ;; Parameters:    Size  Location     Type
  3594 ;;  duty_cycle      2    0[BANK3 ] unsigned int 
  3595 ;; Auto vars:     Size  Location     Type
  3596 ;;		None
  3597 ;; Return value:  Size  Location     Type
  3598 ;;                  1    wreg      void 
  3599 ;; Registers used:
  3600 ;;		wreg, status,2, status,0
  3601 ;; Tracked objects:
  3602 ;;		On entry : 0/0
  3603 ;;		On exit  : 0/0
  3604 ;;		Unchanged: 0/0
  3605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3606 ;;      Params:         0       0       0       2       0
  3607 ;;      Locals:         0       0       0       0       0
  3608 ;;      Temps:          0       0       0       2       0
  3609 ;;      Totals:         0       0       0       4       0
  3610 ;;Total ram usage:        4 bytes
  3611 ;; Hardware stack levels used: 1
  3612 ;; Hardware stack levels required when called: 5
  3613 ;; This function calls:
  3614 ;;		Nothing
  3615 ;; This function is called by:
  3616 ;;		_servo
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620  1C09                     _pwm_duty_cycle:	
  3621                           ;psect for function _pwm_duty_cycle
  3622                           
  3623  1C09                     l3085:	
  3624                           ;incstack = 0
  3625                           ; Regs used in _pwm_duty_cycle: [wreg+status,2+status,0]
  3626                           
  3627                           
  3628                           ;pwm.c: 41:     CCPR1L = (uint8_t)(duty_cycle>>2);
  3629  1C09  1683               	bsf	3,5	;RP0=1, select bank3
  3630  1C0A  1703               	bsf	3,6	;RP1=1, select bank3
  3631  1C0B  0811               	movf	(pwm_duty_cycle@duty_cycle+1)^(0+384),w
  3632  1C0C  0093               	movwf	(??_pwm_duty_cycle^(0+384)+1)
  3633  1C0D  0810               	movf	pwm_duty_cycle@duty_cycle^(0+384),w
  3634  1C0E  0092               	movwf	??_pwm_duty_cycle^(0+384)
  3635  1C0F  1003               	clrc
  3636  1C10  0C93               	rrf	(??_pwm_duty_cycle^(0+384)+1),f
  3637  1C11  0C92               	rrf	??_pwm_duty_cycle^(0+384),f
  3638  1C12  1003               	clrc
  3639  1C13  0C93               	rrf	(??_pwm_duty_cycle^(0+384)+1),f
  3640  1C14  0C92               	rrf	??_pwm_duty_cycle^(0+384),f
  3641  1C15  0812               	movf	??_pwm_duty_cycle^(0+384),w
  3642  1C16  1283               	bcf	3,5	;RP0=0, select bank0
  3643  1C17  1303               	bcf	3,6	;RP1=0, select bank0
  3644  1C18  0095               	movwf	21	;volatile
  3645                           
  3646                           ;pwm.c: 42:     CCP1CONbits.DC1B = duty_cycle & 0b11;
  3647  1C19  1683               	bsf	3,5	;RP0=1, select bank3
  3648  1C1A  1703               	bsf	3,6	;RP1=1, select bank3
  3649  1C1B  0810               	movf	pwm_duty_cycle@duty_cycle^(0+384),w
  3650  1C1C  3903               	andlw	3
  3651  1C1D  0092               	movwf	??_pwm_duty_cycle^(0+384)
  3652  1C1E  0E92               	swapf	??_pwm_duty_cycle^(0+384),f
  3653  1C1F  1283               	bcf	3,5	;RP0=0, select bank0
  3654  1C20  1303               	bcf	3,6	;RP1=0, select bank0
  3655  1C21  0817               	movf	23,w	;volatile
  3656  1C22  1683               	bsf	3,5	;RP0=1, select bank3
  3657  1C23  1703               	bsf	3,6	;RP1=1, select bank3
  3658  1C24  0612               	xorwf	??_pwm_duty_cycle^(0+384),w
  3659  1C25  39CF               	andlw	-49
  3660  1C26  0612               	xorwf	??_pwm_duty_cycle^(0+384),w
  3661  1C27  1283               	bcf	3,5	;RP0=0, select bank0
  3662  1C28  1303               	bcf	3,6	;RP1=0, select bank0
  3663  1C29  0097               	movwf	23	;volatile
  3664  1C2A                     l337:
  3665  1C2A  0008               	return
  3666  1C2B                     __end_of_pwm_duty_cycle:
  3667                           
  3668                           	psect	text11
  3669  1BE7                     __ptext11:	
  3670 ;; *************** function _pulse_step *****************
  3671 ;; Defined at:
  3672 ;;		line 177 in file "main_slave_p1.c"
  3673 ;; Parameters:    Size  Location     Type
  3674 ;;  bt              2    0[BANK3 ] unsigned short 
  3675 ;;  signal          2    2[BANK3 ] unsigned short 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;		None
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, status,2, status,0
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3687 ;;      Params:         0       0       0       4       0
  3688 ;;      Locals:         0       0       0       0       0
  3689 ;;      Temps:          0       0       0       0       0
  3690 ;;      Totals:         0       0       0       4       0
  3691 ;;Total ram usage:        4 bytes
  3692 ;; Hardware stack levels used: 1
  3693 ;; Hardware stack levels required when called: 5
  3694 ;; This function calls:
  3695 ;;		Nothing
  3696 ;; This function is called by:
  3697 ;;		_main
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701  1BE7                     _pulse_step:	
  3702                           ;psect for function _pulse_step
  3703                           
  3704  1BE7                     l3733:	
  3705                           ;incstack = 0
  3706                           ; Regs used in _pulse_step: [wreg+status,2+status,0]
  3707                           
  3708                           
  3709                           ;main_slave_p1.c: 178:     if (bt == 1){
  3710  1BE7  1683               	bsf	3,5	;RP0=1, select bank3
  3711  1BE8  1703               	bsf	3,6	;RP1=1, select bank3
  3712  1BE9  0310               	decf	pulse_step@bt^(0+384),w
  3713  1BEA  0411               	iorwf	(pulse_step@bt+1)^(0+384),w
  3714  1BEB  1D03               	btfss	3,2
  3715  1BEC  2BEE               	goto	u4581
  3716  1BED  2BEF               	goto	u4580
  3717  1BEE                     u4581:
  3718  1BEE  2BF7               	goto	l3737
  3719  1BEF                     u4580:
  3720  1BEF                     l3735:
  3721                           
  3722                           ;main_slave_p1.c: 179:         PORTDbits.RD1 = signal;
  3723  1BEF  0C12               	rrf	pulse_step@signal^(0+384),w
  3724  1BF0  1283               	bcf	3,5	;RP0=0, select bank0
  3725  1BF1  1303               	bcf	3,6	;RP1=0, select bank0
  3726  1BF2  1C03               	skipc
  3727  1BF3  1088               	bcf	8,1	;volatile
  3728  1BF4  1803               	skipnc
  3729  1BF5  1488               	bsf	8,1	;volatile
  3730                           
  3731                           ;main_slave_p1.c: 180:     }
  3732  1BF6  2C08               	goto	l181
  3733  1BF7                     l3737:
  3734  1BF7  0810               	movf	pulse_step@bt^(0+384),w
  3735  1BF8  0411               	iorwf	(pulse_step@bt+1)^(0+384),w
  3736  1BF9  1D03               	btfss	3,2
  3737  1BFA  2BFC               	goto	u4591
  3738  1BFB  2BFD               	goto	u4590
  3739  1BFC                     u4591:
  3740  1BFC  2C05               	goto	l179
  3741  1BFD                     u4590:
  3742  1BFD                     l3739:
  3743                           
  3744                           ;main_slave_p1.c: 182:         PORTDbits.RD1 = signal;
  3745  1BFD  0C12               	rrf	pulse_step@signal^(0+384),w
  3746  1BFE  1283               	bcf	3,5	;RP0=0, select bank0
  3747  1BFF  1303               	bcf	3,6	;RP1=0, select bank0
  3748  1C00  1C03               	skipc
  3749  1C01  1088               	bcf	8,1	;volatile
  3750  1C02  1803               	skipnc
  3751  1C03  1488               	bsf	8,1	;volatile
  3752                           
  3753                           ;main_slave_p1.c: 183:     }
  3754  1C04  2C08               	goto	l181
  3755  1C05                     l179:	
  3756                           ;main_slave_p1.c: 184:     else {PORTDbits.RD1 = 0;}
  3757                           
  3758  1C05  1283               	bcf	3,5	;RP0=0, select bank0
  3759  1C06  1303               	bcf	3,6	;RP1=0, select bank0
  3760  1C07  1088               	bcf	8,1	;volatile
  3761  1C08                     l181:
  3762  1C08  0008               	return
  3763  1C09                     __end_of_pulse_step:
  3764                           
  3765                           	psect	text12
  3766  1C76                     __ptext12:	
  3767 ;; *************** function _motor_dc *****************
  3768 ;; Defined at:
  3769 ;;		line 149 in file "main_slave_p1.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  temp            2   11[BANK3 ] int 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;		None
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  1    wreg      void 
  3776 ;; Registers used:
  3777 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3783 ;;      Params:         0       0       0       2       0
  3784 ;;      Locals:         0       0       0       0       0
  3785 ;;      Temps:          0       0       0       0       0
  3786 ;;      Totals:         0       0       0       2       0
  3787 ;;Total ram usage:        2 bytes
  3788 ;; Hardware stack levels used: 1
  3789 ;; Hardware stack levels required when called: 6
  3790 ;; This function calls:
  3791 ;;		_USART_send
  3792 ;; This function is called by:
  3793 ;;		_main
  3794 ;; This function uses a non-reentrant model
  3795 ;;
  3796                           
  3797  1C76                     _motor_dc:	
  3798                           ;psect for function _motor_dc
  3799                           
  3800  1C76                     l3797:	
  3801                           ;incstack = 0
  3802                           ; Regs used in _motor_dc: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  3803                           
  3804                           
  3805                           ;main_slave_p1.c: 150:     if(temp >= 22){
  3806  1C76  1683               	bsf	3,5	;RP0=1, select bank3
  3807  1C77  1703               	bsf	3,6	;RP1=1, select bank3
  3808  1C78  081C               	movf	(motor_dc@temp+1)^(0+384),w
  3809  1C79  3A80               	xorlw	128
  3810  1C7A  00FF               	movwf	btemp+1
  3811  1C7B  3080               	movlw	128
  3812  1C7C  027F               	subwf	btemp+1,w
  3813  1C7D  1D03               	skipz
  3814  1C7E  2C81               	goto	u4685
  3815  1C7F  3016               	movlw	22
  3816  1C80  021B               	subwf	motor_dc@temp^(0+384),w
  3817  1C81                     u4685:
  3818  1C81  1C03               	skipc
  3819  1C82  2C84               	goto	u4681
  3820  1C83  2C85               	goto	u4680
  3821  1C84                     u4681:
  3822  1C84  2C89               	goto	l165
  3823  1C85                     u4680:
  3824  1C85                     l3799:
  3825                           
  3826                           ;main_slave_p1.c: 151:         PORTBbits.RB0 = 1;
  3827  1C85  1283               	bcf	3,5	;RP0=0, select bank0
  3828  1C86  1303               	bcf	3,6	;RP1=0, select bank0
  3829  1C87  1406               	bsf	6,0	;volatile
  3830                           
  3831                           ;main_slave_p1.c: 152:     }
  3832  1C88  2C8C               	goto	l3801
  3833  1C89                     l165:	
  3834                           ;main_slave_p1.c: 153:     else{
  3835                           
  3836                           
  3837                           ;main_slave_p1.c: 154:         PORTBbits.RB0 = 0;
  3838  1C89  1283               	bcf	3,5	;RP0=0, select bank0
  3839  1C8A  1303               	bcf	3,6	;RP1=0, select bank0
  3840  1C8B  1006               	bcf	6,0	;volatile
  3841  1C8C                     l3801:
  3842                           
  3843                           ;main_slave_p1.c: 157:     if (temp != OLD_TEMP){
  3844  1C8C  1683               	bsf	3,5	;RP0=1, select bank3
  3845  1C8D  1703               	bsf	3,6	;RP1=1, select bank3
  3846  1C8E  0866               	movf	(_OLD_TEMP+1)^(0+384),w
  3847  1C8F  061C               	xorwf	(motor_dc@temp+1)^(0+384),w
  3848  1C90  1D03               	skipz
  3849  1C91  2C94               	goto	u4695
  3850  1C92  0865               	movf	_OLD_TEMP^(0+384),w
  3851  1C93  061B               	xorwf	motor_dc@temp^(0+384),w
  3852  1C94                     u4695:
  3853  1C94  1903               	skipnz
  3854  1C95  2C97               	goto	u4691
  3855  1C96  2C98               	goto	u4690
  3856  1C97                     u4691:
  3857  1C97  2CA4               	goto	l168
  3858  1C98                     u4690:
  3859  1C98                     l3803:
  3860                           
  3861                           ;main_slave_p1.c: 158:         OLD_TEMP = temp;
  3862  1C98  081C               	movf	(motor_dc@temp+1)^(0+384),w
  3863  1C99  00E6               	movwf	(_OLD_TEMP+1)^(0+384)
  3864  1C9A  081B               	movf	motor_dc@temp^(0+384),w
  3865  1C9B  00E5               	movwf	_OLD_TEMP^(0+384)
  3866  1C9C                     l3805:
  3867                           
  3868                           ;main_slave_p1.c: 159:         USART_send(160 + (temp & 31));
  3869  1C9C  081B               	movf	motor_dc@temp^(0+384),w
  3870  1C9D  391F               	andlw	31
  3871  1C9E  3EA0               	addlw	160
  3872  1C9F  160A  158A  2392  160A  158A  	fcall	_USART_send
  3873  1CA4                     l168:
  3874  1CA4  0008               	return
  3875  1CA5                     __end_of_motor_dc:
  3876                           
  3877                           	psect	text13
  3878  1430                     __ptext13:	
  3879 ;; *************** function _adc_ch_switch *****************
  3880 ;; Defined at:
  3881 ;;		line 71 in file "adc.c"
  3882 ;; Parameters:    Size  Location     Type
  3883 ;;  channels        1    wreg     unsigned char 
  3884 ;; Auto vars:     Size  Location     Type
  3885 ;;  channels        1    2[BANK3 ] unsigned char 
  3886 ;; Return value:  Size  Location     Type
  3887 ;;                  1    wreg      void 
  3888 ;; Registers used:
  3889 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3890 ;; Tracked objects:
  3891 ;;		On entry : 0/0
  3892 ;;		On exit  : 0/0
  3893 ;;		Unchanged: 0/0
  3894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3895 ;;      Params:         0       0       0       0       0
  3896 ;;      Locals:         0       0       0       1       0
  3897 ;;      Temps:          0       0       0       2       0
  3898 ;;      Totals:         0       0       0       3       0
  3899 ;;Total ram usage:        3 bytes
  3900 ;; Hardware stack levels used: 1
  3901 ;; Hardware stack levels required when called: 5
  3902 ;; This function calls:
  3903 ;;		Nothing
  3904 ;; This function is called by:
  3905 ;;		_main
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909  1430                     _adc_ch_switch:	
  3910                           ;psect for function _adc_ch_switch
  3911                           
  3912                           
  3913                           ;incstack = 0
  3914                           ; Regs used in _adc_ch_switch: [wreg-fsr0h+status,2+status,0]
  3915                           ;adc_ch_switch@channels stored from wreg
  3916  1430  1683               	bsf	3,5	;RP0=1, select bank3
  3917  1431  1703               	bsf	3,6	;RP1=1, select bank3
  3918  1432  0092               	movwf	adc_ch_switch@channels^(0+384)
  3919  1433                     l3741:
  3920                           
  3921                           ;adc.c: 72:     switch(channels){
  3922  1433  2CD3               	goto	l3789
  3923  1434                     l289:	
  3924                           ;adc.c: 73:         case 1:
  3925                           
  3926                           
  3927                           ;adc.c: 74:             if (ADCON0bits.GO == 0){
  3928  1434  1283               	bcf	3,5	;RP0=0, select bank0
  3929  1435  1303               	bcf	3,6	;RP1=0, select bank0
  3930  1436  189F               	btfsc	31,1	;volatile
  3931  1437  2C39               	goto	u4601
  3932  1438  2C3A               	goto	u4600
  3933  1439                     u4601:
  3934  1439  2CE6               	goto	l305
  3935  143A                     u4600:
  3936  143A                     l3743:
  3937                           
  3938                           ;adc.c: 75:                 ADCON0bits.CHS = 0;
  3939  143A  30C3               	movlw	-61
  3940  143B  059F               	andwf	31,f	;volatile
  3941  143C                     l3745:
  3942                           
  3943                           ;adc.c: 76:                 _delay((unsigned long)((40)*(1000000/4000000.0)));
  3944  143C  3002               	movlw	2
  3945  143D  1683               	bsf	3,5	;RP0=1, select bank3
  3946  143E  1703               	bsf	3,6	;RP1=1, select bank3
  3947  143F  0090               	movwf	??_adc_ch_switch^(0+384)
  3948  1440                     u5117:
  3949  1440  0B90               	decfsz	??_adc_ch_switch^(0+384),f
  3950  1441  2C40               	goto	u5117
  3951  1442  0000               	nop
  3952  1443                     l3747:
  3953                           
  3954                           ;adc.c: 77:                 ADCON0bits.GO = 1;
  3955  1443  1283               	bcf	3,5	;RP0=0, select bank0
  3956  1444  1303               	bcf	3,6	;RP1=0, select bank0
  3957  1445  149F               	bsf	31,1	;volatile
  3958  1446  2CE6               	goto	l305
  3959  1447                     l292:	
  3960                           ;adc.c: 80:         case 2:
  3961                           
  3962                           
  3963                           ;adc.c: 81:             if (ADCON0bits.GO == 0){
  3964  1447  1283               	bcf	3,5	;RP0=0, select bank0
  3965  1448  1303               	bcf	3,6	;RP1=0, select bank0
  3966  1449  189F               	btfsc	31,1	;volatile
  3967  144A  2C4C               	goto	u4611
  3968  144B  2C4D               	goto	u4610
  3969  144C                     u4611:
  3970  144C  2CE6               	goto	l305
  3971  144D                     u4610:
  3972  144D                     l3749:
  3973                           
  3974                           ;adc.c: 82:                 if (ADCON0bits.CHS == 0){
  3975  144D  0C1F               	rrf	31,w	;volatile
  3976  144E  1683               	bsf	3,5	;RP0=1, select bank3
  3977  144F  1703               	bsf	3,6	;RP1=1, select bank3
  3978  1450  0090               	movwf	??_adc_ch_switch^(0+384)
  3979  1451  0C10               	rrf	??_adc_ch_switch^(0+384),w
  3980  1452  390F               	andlw	15
  3981  1453  3A00               	xorlw	0
  3982  1454  1D03               	skipz
  3983  1455  2C57               	goto	u4621
  3984  1456  2C58               	goto	u4620
  3985  1457                     u4621:
  3986  1457  2C66               	goto	l3755
  3987  1458                     u4620:
  3988  1458                     l3751:
  3989                           
  3990                           ;adc.c: 83:                     ADCON0bits.CHS = 1;
  3991  1458  1283               	bcf	3,5	;RP0=0, select bank0
  3992  1459  1303               	bcf	3,6	;RP1=0, select bank0
  3993  145A  081F               	movf	31,w	;volatile
  3994  145B  39C3               	andlw	-61
  3995  145C  3804               	iorlw	4
  3996  145D  009F               	movwf	31	;volatile
  3997  145E                     l3753:
  3998                           
  3999                           ;adc.c: 84:                     _delay((unsigned long)((40)*(1000000/4000000.0)));
  4000  145E  3002               	movlw	2
  4001  145F  1683               	bsf	3,5	;RP0=1, select bank3
  4002  1460  1703               	bsf	3,6	;RP1=1, select bank3
  4003  1461  0090               	movwf	??_adc_ch_switch^(0+384)
  4004  1462                     u5127:
  4005  1462  0B90               	decfsz	??_adc_ch_switch^(0+384),f
  4006  1463  2C62               	goto	u5127
  4007  1464  0000               	nop
  4008                           
  4009                           ;adc.c: 85:                 }
  4010  1465  2C78               	goto	l3761
  4011  1466                     l3755:
  4012  1466  1283               	bcf	3,5	;RP0=0, select bank0
  4013  1467  1303               	bcf	3,6	;RP1=0, select bank0
  4014  1468  0C1F               	rrf	31,w	;volatile
  4015  1469  1683               	bsf	3,5	;RP0=1, select bank3
  4016  146A  1703               	bsf	3,6	;RP1=1, select bank3
  4017  146B  0090               	movwf	??_adc_ch_switch^(0+384)
  4018  146C  0C10               	rrf	??_adc_ch_switch^(0+384),w
  4019  146D  390F               	andlw	15
  4020  146E  3A01               	xorlw	1
  4021  146F  1D03               	skipz
  4022  1470  2C72               	goto	u4631
  4023  1471  2C73               	goto	u4630
  4024  1472                     u4631:
  4025  1472  2C78               	goto	l3761
  4026  1473                     u4630:
  4027  1473                     l3757:
  4028                           
  4029                           ;adc.c: 87:                     ADCON0bits.CHS = 0;
  4030  1473  30C3               	movlw	-61
  4031  1474  1283               	bcf	3,5	;RP0=0, select bank0
  4032  1475  1303               	bcf	3,6	;RP1=0, select bank0
  4033  1476  059F               	andwf	31,f	;volatile
  4034  1477  2C5E               	goto	l3753
  4035  1478                     l3761:
  4036                           
  4037                           ;adc.c: 90:                 _delay((unsigned long)((40)*(1000000/4000000.0)));
  4038  1478  3002               	movlw	2
  4039  1479  1683               	bsf	3,5	;RP0=1, select bank3
  4040  147A  1703               	bsf	3,6	;RP1=1, select bank3
  4041  147B  0090               	movwf	??_adc_ch_switch^(0+384)
  4042  147C                     u5137:
  4043  147C  0B90               	decfsz	??_adc_ch_switch^(0+384),f
  4044  147D  2C7C               	goto	u5137
  4045  147E  0000               	nop
  4046  147F                     l3763:
  4047                           
  4048                           ;adc.c: 91:                 ADCON0bits.GO = 1;
  4049  147F  1283               	bcf	3,5	;RP0=0, select bank0
  4050  1480  1303               	bcf	3,6	;RP1=0, select bank0
  4051  1481  149F               	bsf	31,1	;volatile
  4052  1482  2CE6               	goto	l305
  4053  1483                     l297:	
  4054                           ;adc.c: 94:         case 3:
  4055                           
  4056                           
  4057                           ;adc.c: 95:             if (ADCON0bits.GO == 0){
  4058  1483  1283               	bcf	3,5	;RP0=0, select bank0
  4059  1484  1303               	bcf	3,6	;RP1=0, select bank0
  4060  1485  189F               	btfsc	31,1	;volatile
  4061  1486  2C88               	goto	u4641
  4062  1487  2C89               	goto	u4640
  4063  1488                     u4641:
  4064  1488  2CE6               	goto	l305
  4065  1489                     u4640:
  4066  1489                     l3765:
  4067                           
  4068                           ;adc.c: 96:                 if (ADCON0bits.CHS == 0){
  4069  1489  0C1F               	rrf	31,w	;volatile
  4070  148A  1683               	bsf	3,5	;RP0=1, select bank3
  4071  148B  1703               	bsf	3,6	;RP1=1, select bank3
  4072  148C  0090               	movwf	??_adc_ch_switch^(0+384)
  4073  148D  0C10               	rrf	??_adc_ch_switch^(0+384),w
  4074  148E  390F               	andlw	15
  4075  148F  3A00               	xorlw	0
  4076  1490  1D03               	skipz
  4077  1491  2C93               	goto	u4651
  4078  1492  2C94               	goto	u4650
  4079  1493                     u4651:
  4080  1493  2CA2               	goto	l3771
  4081  1494                     u4650:
  4082  1494                     l3767:
  4083                           
  4084                           ;adc.c: 97:                     ADCON0bits.CHS = 1;
  4085  1494  1283               	bcf	3,5	;RP0=0, select bank0
  4086  1495  1303               	bcf	3,6	;RP1=0, select bank0
  4087  1496  081F               	movf	31,w	;volatile
  4088  1497  39C3               	andlw	-61
  4089  1498  3804               	iorlw	4
  4090  1499  009F               	movwf	31	;volatile
  4091  149A                     l3769:
  4092                           
  4093                           ;adc.c: 98:                     _delay((unsigned long)((40)*(1000000/4000000.0)));
  4094  149A  3002               	movlw	2
  4095  149B  1683               	bsf	3,5	;RP0=1, select bank3
  4096  149C  1703               	bsf	3,6	;RP1=1, select bank3
  4097  149D  0090               	movwf	??_adc_ch_switch^(0+384)
  4098  149E                     u5147:
  4099  149E  0B90               	decfsz	??_adc_ch_switch^(0+384),f
  4100  149F  2C9E               	goto	u5147
  4101  14A0  0000               	nop
  4102                           
  4103                           ;adc.c: 99:                 }
  4104  14A1  2CC8               	goto	l3783
  4105  14A2                     l3771:
  4106  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  4107  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  4108  14A4  0C1F               	rrf	31,w	;volatile
  4109  14A5  1683               	bsf	3,5	;RP0=1, select bank3
  4110  14A6  1703               	bsf	3,6	;RP1=1, select bank3
  4111  14A7  0090               	movwf	??_adc_ch_switch^(0+384)
  4112  14A8  0C10               	rrf	??_adc_ch_switch^(0+384),w
  4113  14A9  390F               	andlw	15
  4114  14AA  3A01               	xorlw	1
  4115  14AB  1D03               	skipz
  4116  14AC  2CAE               	goto	u4661
  4117  14AD  2CAF               	goto	u4660
  4118  14AE                     u4661:
  4119  14AE  2CB6               	goto	l3777
  4120  14AF                     u4660:
  4121  14AF                     l3773:
  4122                           
  4123                           ;adc.c: 101:                     ADCON0bits.CHS = 2;
  4124  14AF  1283               	bcf	3,5	;RP0=0, select bank0
  4125  14B0  1303               	bcf	3,6	;RP1=0, select bank0
  4126  14B1  081F               	movf	31,w	;volatile
  4127  14B2  39C3               	andlw	-61
  4128  14B3  3808               	iorlw	8
  4129  14B4  009F               	movwf	31	;volatile
  4130  14B5  2C9A               	goto	l3769
  4131  14B6                     l3777:
  4132  14B6  1283               	bcf	3,5	;RP0=0, select bank0
  4133  14B7  1303               	bcf	3,6	;RP1=0, select bank0
  4134  14B8  0C1F               	rrf	31,w	;volatile
  4135  14B9  1683               	bsf	3,5	;RP0=1, select bank3
  4136  14BA  1703               	bsf	3,6	;RP1=1, select bank3
  4137  14BB  0090               	movwf	??_adc_ch_switch^(0+384)
  4138  14BC  0C10               	rrf	??_adc_ch_switch^(0+384),w
  4139  14BD  390F               	andlw	15
  4140  14BE  3A02               	xorlw	2
  4141  14BF  1D03               	skipz
  4142  14C0  2CC2               	goto	u4671
  4143  14C1  2CC3               	goto	u4670
  4144  14C2                     u4671:
  4145  14C2  2CC8               	goto	l3783
  4146  14C3                     u4670:
  4147  14C3                     l3779:
  4148                           
  4149                           ;adc.c: 105:                     ADCON0bits.CHS = 0;
  4150  14C3  30C3               	movlw	-61
  4151  14C4  1283               	bcf	3,5	;RP0=0, select bank0
  4152  14C5  1303               	bcf	3,6	;RP1=0, select bank0
  4153  14C6  059F               	andwf	31,f	;volatile
  4154  14C7  2C9A               	goto	l3769
  4155  14C8                     l3783:
  4156                           
  4157                           ;adc.c: 108:                 _delay((unsigned long)((40)*(1000000/4000000.0)));
  4158  14C8  3002               	movlw	2
  4159  14C9  1683               	bsf	3,5	;RP0=1, select bank3
  4160  14CA  1703               	bsf	3,6	;RP1=1, select bank3
  4161  14CB  0090               	movwf	??_adc_ch_switch^(0+384)
  4162  14CC                     u5157:
  4163  14CC  0B90               	decfsz	??_adc_ch_switch^(0+384),f
  4164  14CD  2CCC               	goto	u5157
  4165  14CE  0000               	nop
  4166  14CF                     l3785:
  4167                           
  4168                           ;adc.c: 109:                 ADCON0bits.GO = 1;
  4169  14CF  1283               	bcf	3,5	;RP0=0, select bank0
  4170  14D0  1303               	bcf	3,6	;RP1=0, select bank0
  4171  14D1  149F               	bsf	31,1	;volatile
  4172  14D2  2CE6               	goto	l305
  4173  14D3                     l3789:
  4174  14D3  0812               	movf	adc_ch_switch@channels^(0+384),w
  4175  14D4  0090               	movwf	??_adc_ch_switch^(0+384)
  4176  14D5  0191               	clrf	(??_adc_ch_switch^(0+384)+1)
  4177                           
  4178                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4179                           ; Switch size 1, requested type "simple"
  4180                           ; Number of cases is 1, Range of values is 0 to 0
  4181                           ; switch strategies available:
  4182                           ; Name         Instructions Cycles
  4183                           ; simple_byte            4     3 (average)
  4184                           ; direct_byte           11     8 (fixed)
  4185                           ; jumptable            260     6 (fixed)
  4186                           ;	Chosen strategy is simple_byte
  4187  14D6  0811               	movf	(??_adc_ch_switch+1)^(0+384),w
  4188  14D7  3A00               	xorlw	0	; case 0
  4189  14D8  1903               	skipnz
  4190  14D9  2CDB               	goto	l4231
  4191  14DA  2CE6               	goto	l305
  4192  14DB                     l4231:
  4193                           
  4194                           ; Switch size 1, requested type "simple"
  4195                           ; Number of cases is 3, Range of values is 1 to 3
  4196                           ; switch strategies available:
  4197                           ; Name         Instructions Cycles
  4198                           ; simple_byte           10     6 (average)
  4199                           ; direct_byte           20    11 (fixed)
  4200                           ; jumptable            263     9 (fixed)
  4201                           ;	Chosen strategy is simple_byte
  4202  14DB  0810               	movf	??_adc_ch_switch^(0+384),w
  4203  14DC  3A01               	xorlw	1	; case 1
  4204  14DD  1903               	skipnz
  4205  14DE  2C34               	goto	l289
  4206  14DF  3A03               	xorlw	3	; case 2
  4207  14E0  1903               	skipnz
  4208  14E1  2C47               	goto	l292
  4209  14E2  3A01               	xorlw	1	; case 3
  4210  14E3  1903               	skipnz
  4211  14E4  2C83               	goto	l297
  4212  14E5  2CE6               	goto	l305
  4213  14E6                     l305:
  4214  14E6  0008               	return
  4215  14E7                     __end_of_adc_ch_switch:
  4216                           
  4217                           	psect	text14
  4218  105E                     __ptext14:	
  4219 ;; *************** function ___fltol *****************
  4220 ;; Defined at:
  4221 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fltol.c"
  4222 ;; Parameters:    Size  Location     Type
  4223 ;;  f1              4    0[BANK3 ] void 
  4224 ;; Auto vars:     Size  Location     Type
  4225 ;;  exp1            1   10[BANK3 ] unsigned char 
  4226 ;;  sign1           1    9[BANK3 ] unsigned char 
  4227 ;; Return value:  Size  Location     Type
  4228 ;;                  4    0[BANK3 ] long 
  4229 ;; Registers used:
  4230 ;;		wreg, status,2, status,0
  4231 ;; Tracked objects:
  4232 ;;		On entry : 0/0
  4233 ;;		On exit  : 0/0
  4234 ;;		Unchanged: 0/0
  4235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4236 ;;      Params:         0       0       0       4       0
  4237 ;;      Locals:         0       0       0       2       0
  4238 ;;      Temps:          0       0       0       5       0
  4239 ;;      Totals:         0       0       0      11       0
  4240 ;;Total ram usage:       11 bytes
  4241 ;; Hardware stack levels used: 1
  4242 ;; Hardware stack levels required when called: 5
  4243 ;; This function calls:
  4244 ;;		Nothing
  4245 ;; This function is called by:
  4246 ;;		_main
  4247 ;; This function uses a non-reentrant model
  4248 ;;
  4249                           
  4250  105E                     ___fltol:	
  4251                           ;psect for function ___fltol
  4252                           
  4253  105E                     l3869:	
  4254                           ;incstack = 0
  4255                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4256                           
  4257  105E  1003               	clrc
  4258  105F  1683               	bsf	3,5	;RP0=1, select bank3
  4259  1060  1703               	bsf	3,6	;RP1=1, select bank3
  4260  1061  0D12               	rlf	(___fltol@f1+2)^(0+384),w
  4261  1062  0D13               	rlf	(___fltol@f1+3)^(0+384),w
  4262  1063  0094               	movwf	??___fltol^(0+384)
  4263  1064  0814               	movf	??___fltol^(0+384),w
  4264  1065  009A               	movwf	___fltol@exp1^(0+384)
  4265  1066  081A               	movf	___fltol@exp1^(0+384),w
  4266  1067  1D03               	btfss	3,2
  4267  1068  286A               	goto	u4831
  4268  1069  286B               	goto	u4830
  4269  106A                     u4831:
  4270  106A  2874               	goto	l3875
  4271  106B                     u4830:
  4272  106B                     l3871:
  4273  106B  3000               	movlw	0
  4274  106C  0093               	movwf	(?___fltol+3)^(0+384)
  4275  106D  3000               	movlw	0
  4276  106E  0092               	movwf	(?___fltol+2)^(0+384)
  4277  106F  3000               	movlw	0
  4278  1070  0091               	movwf	(?___fltol+1)^(0+384)
  4279  1071  3000               	movlw	0
  4280  1072  0090               	movwf	?___fltol^(0+384)
  4281  1073  28D9               	goto	l699
  4282  1074                     l3875:
  4283  1074  0810               	movf	___fltol@f1^(0+384),w
  4284  1075  0094               	movwf	??___fltol^(0+384)
  4285  1076  0811               	movf	(___fltol@f1+1)^(0+384),w
  4286  1077  0095               	movwf	(??___fltol^(0+384)+1)
  4287  1078  0812               	movf	(___fltol@f1+2)^(0+384),w
  4288  1079  0096               	movwf	(??___fltol^(0+384)+2)
  4289  107A  0813               	movf	(___fltol@f1+3)^(0+384),w
  4290  107B  0097               	movwf	(??___fltol^(0+384)+3)
  4291  107C  301F               	movlw	31
  4292  107D                     u4845:
  4293  107D  1003               	clrc
  4294  107E  0C97               	rrf	(??___fltol^(0+384)+3),f
  4295  107F  0C96               	rrf	(??___fltol^(0+384)+2),f
  4296  1080  0C95               	rrf	(??___fltol^(0+384)+1),f
  4297  1081  0C94               	rrf	??___fltol^(0+384),f
  4298  1082                     u4840:
  4299  1082  3EFF               	addlw	-1
  4300  1083  1D03               	skipz
  4301  1084  287D               	goto	u4845
  4302  1085  0814               	movf	??___fltol^(0+384),w
  4303  1086  0098               	movwf	(??___fltol+4)^(0+384)
  4304  1087  0818               	movf	(??___fltol+4)^(0+384),w
  4305  1088  0099               	movwf	___fltol@sign1^(0+384)
  4306  1089                     l3877:
  4307  1089  1792               	bsf	(___fltol@f1^(0+384)+2),7
  4308  108A                     l3879:
  4309  108A  30FF               	movlw	255
  4310  108B  0590               	andwf	___fltol@f1^(0+384),f
  4311  108C  30FF               	movlw	255
  4312  108D  0591               	andwf	(___fltol@f1+1)^(0+384),f
  4313  108E  30FF               	movlw	255
  4314  108F  0592               	andwf	(___fltol@f1+2)^(0+384),f
  4315  1090  3000               	movlw	0
  4316  1091  0593               	andwf	(___fltol@f1+3)^(0+384),f
  4317  1092                     l3881:
  4318  1092  3096               	movlw	150
  4319  1093  029A               	subwf	___fltol@exp1^(0+384),f
  4320  1094                     l3883:
  4321  1094  1F9A               	btfss	___fltol@exp1^(0+384),7
  4322  1095  2897               	goto	u4851
  4323  1096  2898               	goto	u4850
  4324  1097                     u4851:
  4325  1097  28B2               	goto	l3893
  4326  1098                     u4850:
  4327  1098                     l3885:
  4328  1098  081A               	movf	___fltol@exp1^(0+384),w
  4329  1099  3A80               	xorlw	128
  4330  109A  3E97               	addlw	151
  4331  109B  1803               	skipnc
  4332  109C  289E               	goto	u4861
  4333  109D  289F               	goto	u4860
  4334  109E                     u4861:
  4335  109E  28A0               	goto	l3891
  4336  109F                     u4860:
  4337  109F  286B               	goto	l3871
  4338  10A0                     l3891:
  4339  10A0  3001               	movlw	1
  4340  10A1                     u4875:
  4341  10A1  1003               	clrc
  4342  10A2  0C93               	rrf	(___fltol@f1+3)^(0+384),f
  4343  10A3  0C92               	rrf	(___fltol@f1+2)^(0+384),f
  4344  10A4  0C91               	rrf	(___fltol@f1+1)^(0+384),f
  4345  10A5  0C90               	rrf	___fltol@f1^(0+384),f
  4346  10A6  3EFF               	addlw	-1
  4347  10A7  1D03               	skipz
  4348  10A8  28A1               	goto	u4875
  4349  10A9  3001               	movlw	1
  4350  10AA  0094               	movwf	??___fltol^(0+384)
  4351  10AB  0814               	movf	??___fltol^(0+384),w
  4352  10AC  079A               	addwf	___fltol@exp1^(0+384),f
  4353  10AD  1D03               	btfss	3,2
  4354  10AE  28B0               	goto	u4881
  4355  10AF  28B1               	goto	u4880
  4356  10B0                     u4881:
  4357  10B0  28A0               	goto	l3891
  4358  10B1                     u4880:
  4359  10B1  28C9               	goto	l3901
  4360  10B2                     l3893:
  4361  10B2  3020               	movlw	32
  4362  10B3  021A               	subwf	___fltol@exp1^(0+384),w
  4363  10B4  1C03               	skipc
  4364  10B5  28B7               	goto	u4891
  4365  10B6  28B8               	goto	u4890
  4366  10B7                     u4891:
  4367  10B7  28C4               	goto	l706
  4368  10B8                     u4890:
  4369  10B8  286B               	goto	l3871
  4370  10B9                     l3899:
  4371  10B9  3001               	movlw	1
  4372  10BA  0094               	movwf	??___fltol^(0+384)
  4373  10BB                     u4905:
  4374  10BB  1003               	clrc
  4375  10BC  0D90               	rlf	___fltol@f1^(0+384),f
  4376  10BD  0D91               	rlf	(___fltol@f1+1)^(0+384),f
  4377  10BE  0D92               	rlf	(___fltol@f1+2)^(0+384),f
  4378  10BF  0D93               	rlf	(___fltol@f1+3)^(0+384),f
  4379  10C0  0B94               	decfsz	??___fltol^(0+384),f
  4380  10C1  28BB               	goto	u4905
  4381  10C2  3001               	movlw	1
  4382  10C3  029A               	subwf	___fltol@exp1^(0+384),f
  4383  10C4                     l706:
  4384  10C4  081A               	movf	___fltol@exp1^(0+384),w
  4385  10C5  1D03               	btfss	3,2
  4386  10C6  28C8               	goto	u4911
  4387  10C7  28C9               	goto	u4910
  4388  10C8                     u4911:
  4389  10C8  28B9               	goto	l3899
  4390  10C9                     u4910:
  4391  10C9                     l3901:
  4392  10C9  0819               	movf	___fltol@sign1^(0+384),w
  4393  10CA  1903               	btfsc	3,2
  4394  10CB  28CD               	goto	u4921
  4395  10CC  28CE               	goto	u4920
  4396  10CD                     u4921:
  4397  10CD  28D9               	goto	l709
  4398  10CE                     u4920:
  4399  10CE                     l3903:
  4400  10CE  0990               	comf	___fltol@f1^(0+384),f
  4401  10CF  0991               	comf	(___fltol@f1+1)^(0+384),f
  4402  10D0  0992               	comf	(___fltol@f1+2)^(0+384),f
  4403  10D1  0993               	comf	(___fltol@f1+3)^(0+384),f
  4404  10D2  0A90               	incf	___fltol@f1^(0+384),f
  4405  10D3  1903               	skipnz
  4406  10D4  0A91               	incf	(___fltol@f1+1)^(0+384),f
  4407  10D5  1903               	skipnz
  4408  10D6  0A92               	incf	(___fltol@f1+2)^(0+384),f
  4409  10D7  1903               	skipnz
  4410  10D8  0A93               	incf	(___fltol@f1+3)^(0+384),f
  4411  10D9                     l709:
  4412  10D9                     l699:
  4413  10D9  0008               	return
  4414  10DA                     __end_of___fltol:
  4415                           
  4416                           	psect	text15
  4417  165C                     __ptext15:	
  4418 ;; *************** function _RTC_read *****************
  4419 ;; Defined at:
  4420 ;;		line 187 in file "main_slave_p1.c"
  4421 ;; Parameters:    Size  Location     Type
  4422 ;;		None
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;		None
  4425 ;; Return value:  Size  Location     Type
  4426 ;;                  1    wreg      void 
  4427 ;; Registers used:
  4428 ;;		wreg, status,2, status,0, pclath, cstack
  4429 ;; Tracked objects:
  4430 ;;		On entry : 0/0
  4431 ;;		On exit  : 0/0
  4432 ;;		Unchanged: 0/0
  4433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4434 ;;      Params:         0       0       0       0       0
  4435 ;;      Locals:         0       0       0       0       0
  4436 ;;      Temps:          0       0       0       2       0
  4437 ;;      Totals:         0       0       0       2       0
  4438 ;;Total ram usage:        2 bytes
  4439 ;; Hardware stack levels used: 1
  4440 ;; Hardware stack levels required when called: 7
  4441 ;; This function calls:
  4442 ;;		_I2C_Master_Read
  4443 ;;		_I2C_Master_RepeatedStart
  4444 ;;		_I2C_Master_Start
  4445 ;;		_I2C_Master_Stop
  4446 ;;		_I2C_Master_Write
  4447 ;;		_USART_send
  4448 ;;		_bcd_dec
  4449 ;; This function is called by:
  4450 ;;		_main
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454  165C                     _RTC_read:	
  4455                           ;psect for function _RTC_read
  4456                           
  4457  165C                     l3823:	
  4458                           ;incstack = 0
  4459                           ; Regs used in _RTC_read: [wreg+status,2+status,0+pclath+cstack]
  4460                           
  4461                           
  4462                           ;main_slave_p1.c: 188:     I2C_Master_Start();
  4463  165C  160A  158A  233A  160A  118A  	fcall	_I2C_Master_Start
  4464                           
  4465                           ;main_slave_p1.c: 189:     I2C_Master_Write(0xD0);
  4466  1661  30D0               	movlw	208
  4467  1662  1683               	bsf	3,5	;RP0=1, select bank3
  4468  1663  1703               	bsf	3,6	;RP1=1, select bank3
  4469  1664  0090               	movwf	I2C_Master_Write@d^(0+384)
  4470  1665  3000               	movlw	0
  4471  1666  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  4472  1667  160A  158A  235F  160A  118A  	fcall	_I2C_Master_Write
  4473                           
  4474                           ;main_slave_p1.c: 190:     I2C_Master_Write(0);
  4475  166C  3000               	movlw	0
  4476  166D  1683               	bsf	3,5	;RP0=1, select bank3
  4477  166E  1703               	bsf	3,6	;RP1=1, select bank3
  4478  166F  0090               	movwf	I2C_Master_Write@d^(0+384)
  4479  1670  0091               	movwf	(I2C_Master_Write@d+1)^(0+384)
  4480  1671  160A  158A  235F  160A  118A  	fcall	_I2C_Master_Write
  4481                           
  4482                           ;main_slave_p1.c: 191:     I2C_Master_RepeatedStart();
  4483  1676  160A  158A  234C  160A  118A  	fcall	_I2C_Master_RepeatedStart
  4484                           
  4485                           ;main_slave_p1.c: 192:     I2C_Master_Write(0xD1);
  4486  167B  30D1               	movlw	209
  4487  167C  1683               	bsf	3,5	;RP0=1, select bank3
  4488  167D  1703               	bsf	3,6	;RP1=1, select bank3
  4489  167E  0090               	movwf	I2C_Master_Write@d^(0+384)
  4490  167F  3000               	movlw	0
  4491  1680  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  4492  1681  160A  158A  235F  160A  118A  	fcall	_I2C_Master_Write
  4493                           
  4494                           ;main_slave_p1.c: 193:     I2C_Master_Read(1);
  4495  1686  3001               	movlw	1
  4496  1687  1683               	bsf	3,5	;RP0=1, select bank3
  4497  1688  1703               	bsf	3,6	;RP1=1, select bank3
  4498  1689  0090               	movwf	I2C_Master_Read@a^(0+384)
  4499  168A  3000               	movlw	0
  4500  168B  0091               	movwf	(I2C_Master_Read@a^(0+384)+1)
  4501  168C  160A  158A  24A5  160A  118A  	fcall	_I2C_Master_Read
  4502                           
  4503                           ;main_slave_p1.c: 194:     min = bcd_dec(I2C_Master_Read(1));
  4504  1691  3001               	movlw	1
  4505  1692  1683               	bsf	3,5	;RP0=1, select bank3
  4506  1693  1703               	bsf	3,6	;RP1=1, select bank3
  4507  1694  0090               	movwf	I2C_Master_Read@a^(0+384)
  4508  1695  3000               	movlw	0
  4509  1696  0091               	movwf	(I2C_Master_Read@a^(0+384)+1)
  4510  1697  160A  158A  24A5  160A  118A  	fcall	_I2C_Master_Read
  4511  169C  1683               	bsf	3,5	;RP0=1, select bank3
  4512  169D  1703               	bsf	3,6	;RP1=1, select bank3
  4513  169E  0810               	movf	?_I2C_Master_Read^(0+384),w
  4514  169F  160A  158A  23CB  160A  118A  	fcall	_bcd_dec
  4515  16A4  1683               	bsf	3,5	;RP0=1, select bank3
  4516  16A5  1703               	bsf	3,6	;RP1=1, select bank3
  4517  16A6  0098               	movwf	??_RTC_read^(0+384)
  4518  16A7  0818               	movf	??_RTC_read^(0+384),w
  4519  16A8  00DF               	movwf	_min^(0+384)
  4520                           
  4521                           ;main_slave_p1.c: 195:     hrs = bcd_dec(I2C_Master_Read(0));
  4522  16A9  3000               	movlw	0
  4523  16AA  0090               	movwf	I2C_Master_Read@a^(0+384)
  4524  16AB  0091               	movwf	(I2C_Master_Read@a+1)^(0+384)
  4525  16AC  160A  158A  24A5  160A  118A  	fcall	_I2C_Master_Read
  4526  16B1  1683               	bsf	3,5	;RP0=1, select bank3
  4527  16B2  1703               	bsf	3,6	;RP1=1, select bank3
  4528  16B3  0810               	movf	?_I2C_Master_Read^(0+384),w
  4529  16B4  160A  158A  23CB  160A  118A  	fcall	_bcd_dec
  4530  16B9  1683               	bsf	3,5	;RP0=1, select bank3
  4531  16BA  1703               	bsf	3,6	;RP1=1, select bank3
  4532  16BB  0098               	movwf	??_RTC_read^(0+384)
  4533  16BC  0818               	movf	??_RTC_read^(0+384),w
  4534  16BD  00DE               	movwf	_hrs^(0+384)
  4535                           
  4536                           ;main_slave_p1.c: 196:     I2C_Master_Stop();
  4537  16BE  160A  158A  2343  160A  118A  	fcall	_I2C_Master_Stop
  4538  16C3                     l3825:
  4539                           
  4540                           ;main_slave_p1.c: 198:     if (min != last_min){
  4541  16C3  1683               	bsf	3,5	;RP0=1, select bank3
  4542  16C4  1703               	bsf	3,6	;RP1=1, select bank3
  4543  16C5  085F               	movf	_min^(0+384),w
  4544  16C6  066E               	xorwf	_last_min^(0+384),w
  4545  16C7  1903               	skipnz
  4546  16C8  2ECA               	goto	u4741
  4547  16C9  2ECB               	goto	u4740
  4548  16CA                     u4741:
  4549  16CA  2ED5               	goto	l3831
  4550  16CB                     u4740:
  4551  16CB                     l3827:
  4552                           
  4553                           ;main_slave_p1.c: 199:         last_min = min;
  4554  16CB  085F               	movf	_min^(0+384),w
  4555  16CC  0098               	movwf	??_RTC_read^(0+384)
  4556  16CD  0818               	movf	??_RTC_read^(0+384),w
  4557  16CE  00EE               	movwf	_last_min^(0+384)
  4558  16CF                     l3829:
  4559                           
  4560                           ;main_slave_p1.c: 200:         USART_send(min);
  4561  16CF  085F               	movf	_min^(0+384),w
  4562  16D0  160A  158A  2392  160A  118A  	fcall	_USART_send
  4563  16D5                     l3831:
  4564                           
  4565                           ;main_slave_p1.c: 202:     if (hrs != last_hrs){
  4566  16D5  1683               	bsf	3,5	;RP0=1, select bank3
  4567  16D6  1703               	bsf	3,6	;RP1=1, select bank3
  4568  16D7  085E               	movf	_hrs^(0+384),w
  4569  16D8  066D               	xorwf	_last_hrs^(0+384),w
  4570  16D9  1903               	skipnz
  4571  16DA  2EDC               	goto	u4751
  4572  16DB  2EDD               	goto	u4750
  4573  16DC                     u4751:
  4574  16DC  2EE8               	goto	l3837
  4575  16DD                     u4750:
  4576  16DD                     l3833:
  4577                           
  4578                           ;main_slave_p1.c: 203:         last_hrs = hrs;
  4579  16DD  085E               	movf	_hrs^(0+384),w
  4580  16DE  0098               	movwf	??_RTC_read^(0+384)
  4581  16DF  0818               	movf	??_RTC_read^(0+384),w
  4582  16E0  00ED               	movwf	_last_hrs^(0+384)
  4583  16E1                     l3835:
  4584                           
  4585                           ;main_slave_p1.c: 204:         USART_send(hrs + 224);
  4586  16E1  085E               	movf	_hrs^(0+384),w
  4587  16E2  3EE0               	addlw	224
  4588  16E3  160A  158A  2392  160A  118A  	fcall	_USART_send
  4589  16E8                     l3837:
  4590                           
  4591                           ;main_slave_p1.c: 206:     if (min == 0 && p <= 8){
  4592  16E8  1683               	bsf	3,5	;RP0=1, select bank3
  4593  16E9  1703               	bsf	3,6	;RP1=1, select bank3
  4594  16EA  085F               	movf	_min^(0+384),w
  4595  16EB  1D03               	btfss	3,2
  4596  16EC  2EEE               	goto	u4761
  4597  16ED  2EEF               	goto	u4760
  4598  16EE                     u4761:
  4599  16EE  2F13               	goto	l3847
  4600  16EF                     u4760:
  4601  16EF                     l3839:
  4602  16EF  3009               	movlw	9
  4603  16F0  0260               	subwf	_p^(0+384),w
  4604  16F1  1803               	skipnc
  4605  16F2  2EF4               	goto	u4771
  4606  16F3  2EF5               	goto	u4770
  4607  16F4                     u4771:
  4608  16F4  2F13               	goto	l3847
  4609  16F5                     u4770:
  4610  16F5                     l3841:
  4611                           
  4612                           ;main_slave_p1.c: 207:            p++;
  4613  16F5  3001               	movlw	1
  4614  16F6  0098               	movwf	??_RTC_read^(0+384)
  4615  16F7  0818               	movf	??_RTC_read^(0+384),w
  4616  16F8  07E0               	addwf	_p^(0+384),f
  4617  16F9                     l3843:
  4618                           
  4619                           ;main_slave_p1.c: 208:            PORTDbits.RD6 = !PORTDbits.RD6;
  4620  16F9  1003               	clrc
  4621  16FA  1283               	bcf	3,5	;RP0=0, select bank0
  4622  16FB  1303               	bcf	3,6	;RP1=0, select bank0
  4623  16FC  1F08               	btfss	8,6	;volatile
  4624  16FD  1403               	setc
  4625  16FE  1803               	btfsc	3,0
  4626  16FF  2F01               	goto	u4781
  4627  1700  2F05               	goto	u4780
  4628  1701                     u4781:
  4629  1701  1283               	bcf	3,5	;RP0=0, select bank0
  4630  1702  1303               	bcf	3,6	;RP1=0, select bank0
  4631  1703  1708               	bsf	8,6	;volatile
  4632  1704  2F08               	goto	u4794
  4633  1705                     u4780:
  4634  1705  1283               	bcf	3,5	;RP0=0, select bank0
  4635  1706  1303               	bcf	3,6	;RP1=0, select bank0
  4636  1707  1308               	bcf	8,6	;volatile
  4637  1708                     u4794:
  4638  1708                     l3845:
  4639                           
  4640                           ;main_slave_p1.c: 209:            _delay((unsigned long)((10)*(1000000/4000.0)));
  4641  1708  3004               	movlw	4
  4642  1709  1683               	bsf	3,5	;RP0=1, select bank3
  4643  170A  1703               	bsf	3,6	;RP1=1, select bank3
  4644  170B  0099               	movwf	(??_RTC_read^(0+384)+1)
  4645  170C  303D               	movlw	61
  4646  170D  0098               	movwf	??_RTC_read^(0+384)
  4647  170E                     u5167:
  4648  170E  0B98               	decfsz	??_RTC_read^(0+384),f
  4649  170F  2F0E               	goto	u5167
  4650  1710  0B99               	decfsz	(??_RTC_read^(0+384)+1),f
  4651  1711  2F0E               	goto	u5167
  4652                           
  4653                           ;main_slave_p1.c: 210:     }
  4654  1712  2F22               	goto	l190
  4655  1713                     l3847:
  4656  1713  085F               	movf	_min^(0+384),w
  4657  1714  1903               	btfsc	3,2
  4658  1715  2F17               	goto	u4801
  4659  1716  2F18               	goto	u4800
  4660  1717                     u4801:
  4661  1717  2F1F               	goto	l188
  4662  1718                     u4800:
  4663  1718                     l3849:
  4664                           
  4665                           ;main_slave_p1.c: 212:         PORTDbits.RD6 = 0;
  4666  1718  1283               	bcf	3,5	;RP0=0, select bank0
  4667  1719  1303               	bcf	3,6	;RP1=0, select bank0
  4668  171A  1308               	bcf	8,6	;volatile
  4669  171B                     l3851:
  4670                           
  4671                           ;main_slave_p1.c: 213:         p = 0;
  4672  171B  1683               	bsf	3,5	;RP0=1, select bank3
  4673  171C  1703               	bsf	3,6	;RP1=1, select bank3
  4674  171D  01E0               	clrf	_p^(0+384)
  4675                           
  4676                           ;main_slave_p1.c: 214:     }
  4677  171E  2F22               	goto	l190
  4678  171F                     l188:	
  4679                           ;main_slave_p1.c: 215:     else{
  4680                           
  4681                           
  4682                           ;main_slave_p1.c: 216:         PORTDbits.RD6 = 0;
  4683  171F  1283               	bcf	3,5	;RP0=0, select bank0
  4684  1720  1303               	bcf	3,6	;RP1=0, select bank0
  4685  1721  1308               	bcf	8,6	;volatile
  4686  1722                     l190:
  4687  1722  0008               	return
  4688  1723                     __end_of_RTC_read:
  4689                           
  4690                           	psect	text16
  4691  1BCB                     __ptext16:	
  4692 ;; *************** function _bcd_dec *****************
  4693 ;; Defined at:
  4694 ;;		line 220 in file "main_slave_p1.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;  no              1    wreg     unsigned char 
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;  no              1    7[BANK3 ] unsigned char 
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      unsigned char 
  4701 ;; Registers used:
  4702 ;;		wreg, status,2, status,0, pclath, cstack
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4708 ;;      Params:         0       0       0       0       0
  4709 ;;      Locals:         0       0       0       1       0
  4710 ;;      Temps:          0       0       0       3       0
  4711 ;;      Totals:         0       0       0       4       0
  4712 ;;Total ram usage:        4 bytes
  4713 ;; Hardware stack levels used: 1
  4714 ;; Hardware stack levels required when called: 6
  4715 ;; This function calls:
  4716 ;;		___bmul
  4717 ;; This function is called by:
  4718 ;;		_RTC_read
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722  1BCB                     _bcd_dec:	
  4723                           ;psect for function _bcd_dec
  4724                           
  4725                           
  4726                           ;incstack = 0
  4727                           ; Regs used in _bcd_dec: [wreg+status,2+status,0+pclath+cstack]
  4728                           ;bcd_dec@no stored from wreg
  4729  1BCB  1683               	bsf	3,5	;RP0=1, select bank3
  4730  1BCC  1703               	bsf	3,6	;RP1=1, select bank3
  4731  1BCD  0097               	movwf	bcd_dec@no^(0+384)
  4732  1BCE                     l3115:
  4733                           
  4734                           ;main_slave_p1.c: 221:     return ((no >> 4) * 10 + (no & 0x0F));
  4735  1BCE  300F               	movlw	15
  4736  1BCF  0517               	andwf	bcd_dec@no^(0+384),w
  4737  1BD0  0094               	movwf	??_bcd_dec^(0+384)
  4738  1BD1  300A               	movlw	10
  4739  1BD2  0095               	movwf	(??_bcd_dec+1)^(0+384)
  4740  1BD3  0815               	movf	(??_bcd_dec+1)^(0+384),w
  4741  1BD4  0090               	movwf	___bmul@multiplicand^(0+384)
  4742  1BD5  0817               	movf	bcd_dec@no^(0+384),w
  4743  1BD6  0096               	movwf	(??_bcd_dec+2)^(0+384)
  4744  1BD7  3004               	movlw	4
  4745  1BD8                     u3635:
  4746  1BD8  1003               	clrc
  4747  1BD9  0C96               	rrf	(??_bcd_dec+2)^(0+384),f
  4748  1BDA  3EFF               	addlw	-1
  4749  1BDB  1D03               	skipz
  4750  1BDC  2BD8               	goto	u3635
  4751  1BDD  0816               	movf	(??_bcd_dec+2)^(0+384),w
  4752  1BDE  160A  158A  23B4  160A  158A  	fcall	___bmul
  4753  1BE3  1683               	bsf	3,5	;RP0=1, select bank3
  4754  1BE4  1703               	bsf	3,6	;RP1=1, select bank3
  4755  1BE5  0714               	addwf	??_bcd_dec^(0+384),w
  4756  1BE6                     l193:
  4757  1BE6  0008               	return
  4758  1BE7                     __end_of_bcd_dec:
  4759                           
  4760                           	psect	text17
  4761  1BB4                     __ptext17:	
  4762 ;; *************** function ___bmul *****************
  4763 ;; Defined at:
  4764 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8.c"
  4765 ;; Parameters:    Size  Location     Type
  4766 ;;  multiplier      1    wreg     unsigned char 
  4767 ;;  multiplicand    1    0[BANK3 ] unsigned char 
  4768 ;; Auto vars:     Size  Location     Type
  4769 ;;  multiplier      1    3[BANK3 ] unsigned char 
  4770 ;;  product         1    2[BANK3 ] unsigned char 
  4771 ;; Return value:  Size  Location     Type
  4772 ;;                  1    wreg      unsigned char 
  4773 ;; Registers used:
  4774 ;;		wreg, status,2, status,0
  4775 ;; Tracked objects:
  4776 ;;		On entry : 0/0
  4777 ;;		On exit  : 0/0
  4778 ;;		Unchanged: 0/0
  4779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4780 ;;      Params:         0       0       0       1       0
  4781 ;;      Locals:         0       0       0       2       0
  4782 ;;      Temps:          0       0       0       1       0
  4783 ;;      Totals:         0       0       0       4       0
  4784 ;;Total ram usage:        4 bytes
  4785 ;; Hardware stack levels used: 1
  4786 ;; Hardware stack levels required when called: 5
  4787 ;; This function calls:
  4788 ;;		Nothing
  4789 ;; This function is called by:
  4790 ;;		_bcd_dec
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794  1BB4                     ___bmul:	
  4795                           ;psect for function ___bmul
  4796                           
  4797                           
  4798                           ;incstack = 0
  4799                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4800                           ;___bmul@multiplier stored from wreg
  4801  1BB4  1683               	bsf	3,5	;RP0=1, select bank3
  4802  1BB5  1703               	bsf	3,6	;RP1=1, select bank3
  4803  1BB6  0093               	movwf	___bmul@multiplier^(0+384)
  4804  1BB7                     l2693:
  4805  1BB7  0192               	clrf	___bmul@product^(0+384)
  4806  1BB8                     l2695:
  4807  1BB8  1C13               	btfss	___bmul@multiplier^(0+384),0
  4808  1BB9  2BBB               	goto	u2661
  4809  1BBA  2BBC               	goto	u2660
  4810  1BBB                     u2661:
  4811  1BBB  2BC0               	goto	l2699
  4812  1BBC                     u2660:
  4813  1BBC                     l2697:
  4814  1BBC  0810               	movf	___bmul@multiplicand^(0+384),w
  4815  1BBD  0091               	movwf	??___bmul^(0+384)
  4816  1BBE  0811               	movf	??___bmul^(0+384),w
  4817  1BBF  0792               	addwf	___bmul@product^(0+384),f
  4818  1BC0                     l2699:
  4819  1BC0  1003               	clrc
  4820  1BC1  0D90               	rlf	___bmul@multiplicand^(0+384),f
  4821  1BC2                     l2701:
  4822  1BC2  1003               	clrc
  4823  1BC3  0C93               	rrf	___bmul@multiplier^(0+384),f
  4824  1BC4  0813               	movf	___bmul@multiplier^(0+384),w
  4825  1BC5  1D03               	btfss	3,2
  4826  1BC6  2BC8               	goto	u2671
  4827  1BC7  2BC9               	goto	u2670
  4828  1BC8                     u2671:
  4829  1BC8  2BB8               	goto	l2695
  4830  1BC9                     u2670:
  4831  1BC9                     l2703:
  4832  1BC9  0812               	movf	___bmul@product^(0+384),w
  4833  1BCA                     l539:
  4834  1BCA  0008               	return
  4835  1BCB                     __end_of___bmul:
  4836                           
  4837                           	psect	text18
  4838  1723                     __ptext18:	
  4839 ;; *************** function _LUX_read *****************
  4840 ;; Defined at:
  4841 ;;		line 238 in file "main_slave_p1.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;		None
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4855 ;;      Params:         0       0       0       0       0
  4856 ;;      Locals:         0       0       0       4       0
  4857 ;;      Temps:          0       0       0       2       0
  4858 ;;      Totals:         0       0       0       6       0
  4859 ;;Total ram usage:        6 bytes
  4860 ;; Hardware stack levels used: 1
  4861 ;; Hardware stack levels required when called: 7
  4862 ;; This function calls:
  4863 ;;		_I2C_Master_Read
  4864 ;;		_I2C_Master_RepeatedStart
  4865 ;;		_I2C_Master_Start
  4866 ;;		_I2C_Master_Stop
  4867 ;;		_I2C_Master_Write
  4868 ;;		_USART_send
  4869 ;;		___lldiv
  4870 ;;		_calculateLux
  4871 ;; This function is called by:
  4872 ;;		_main
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876  1723                     _LUX_read:	
  4877                           ;psect for function _LUX_read
  4878                           
  4879  1723                     l3853:	
  4880                           ;incstack = 0
  4881                           ; Regs used in _LUX_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4882                           
  4883                           
  4884                           ;main_slave_p1.c: 240:     I2C_Master_Start();
  4885  1723  160A  158A  233A  160A  118A  	fcall	_I2C_Master_Start
  4886                           
  4887                           ;main_slave_p1.c: 241:     I2C_Master_Write(0x72);
  4888  1728  3072               	movlw	114
  4889  1729  1683               	bsf	3,5	;RP0=1, select bank3
  4890  172A  1703               	bsf	3,6	;RP1=1, select bank3
  4891  172B  0090               	movwf	I2C_Master_Write@d^(0+384)
  4892  172C  3000               	movlw	0
  4893  172D  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  4894  172E  160A  158A  235F  160A  118A  	fcall	_I2C_Master_Write
  4895                           
  4896                           ;main_slave_p1.c: 242:     I2C_Master_Write(0x8C);
  4897  1733  308C               	movlw	140
  4898  1734  1683               	bsf	3,5	;RP0=1, select bank3
  4899  1735  1703               	bsf	3,6	;RP1=1, select bank3
  4900  1736  0090               	movwf	I2C_Master_Write@d^(0+384)
  4901  1737  3000               	movlw	0
  4902  1738  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  4903  1739  160A  158A  235F  160A  118A  	fcall	_I2C_Master_Write
  4904                           
  4905                           ;main_slave_p1.c: 243:     I2C_Master_RepeatedStart();
  4906  173E  160A  158A  234C  160A  118A  	fcall	_I2C_Master_RepeatedStart
  4907                           
  4908                           ;main_slave_p1.c: 244:     I2C_Master_Write(0x73);
  4909  1743  3073               	movlw	115
  4910  1744  1683               	bsf	3,5	;RP0=1, select bank3
  4911  1745  1703               	bsf	3,6	;RP1=1, select bank3
  4912  1746  0090               	movwf	I2C_Master_Write@d^(0+384)
  4913  1747  3000               	movlw	0
  4914  1748  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  4915  1749  160A  158A  235F  160A  118A  	fcall	_I2C_Master_Write
  4916                           
  4917                           ;main_slave_p1.c: 245:     lowCH0 = I2C_Master_Read(1);
  4918  174E  3001               	movlw	1
  4919  174F  1683               	bsf	3,5	;RP0=1, select bank3
  4920  1750  1703               	bsf	3,6	;RP1=1, select bank3
  4921  1751  0090               	movwf	I2C_Master_Read@a^(0+384)
  4922  1752  3000               	movlw	0
  4923  1753  0091               	movwf	(I2C_Master_Read@a^(0+384)+1)
  4924  1754  160A  158A  24A5  160A  118A  	fcall	_I2C_Master_Read
  4925  1759  1683               	bsf	3,5	;RP0=1, select bank3
  4926  175A  1703               	bsf	3,6	;RP1=1, select bank3
  4927  175B  0810               	movf	?_I2C_Master_Read^(0+384),w
  4928  175C  00C6               	movwf	??_LUX_read^(0+384)
  4929  175D  0846               	movf	??_LUX_read^(0+384),w
  4930  175E  00DD               	movwf	_lowCH0^(0+384)
  4931                           
  4932                           ;main_slave_p1.c: 246:     highCH0 = I2C_Master_Read(1);
  4933  175F  3001               	movlw	1
  4934  1760  0090               	movwf	I2C_Master_Read@a^(0+384)
  4935  1761  3000               	movlw	0
  4936  1762  0091               	movwf	(I2C_Master_Read@a^(0+384)+1)
  4937  1763  160A  158A  24A5  160A  118A  	fcall	_I2C_Master_Read
  4938  1768  1683               	bsf	3,5	;RP0=1, select bank3
  4939  1769  1703               	bsf	3,6	;RP1=1, select bank3
  4940  176A  0810               	movf	?_I2C_Master_Read^(0+384),w
  4941  176B  00C6               	movwf	??_LUX_read^(0+384)
  4942  176C  0846               	movf	??_LUX_read^(0+384),w
  4943  176D  00DC               	movwf	_highCH0^(0+384)
  4944                           
  4945                           ;main_slave_p1.c: 247:     lowCH1 = I2C_Master_Read(1);
  4946  176E  3001               	movlw	1
  4947  176F  0090               	movwf	I2C_Master_Read@a^(0+384)
  4948  1770  3000               	movlw	0
  4949  1771  0091               	movwf	(I2C_Master_Read@a^(0+384)+1)
  4950  1772  160A  158A  24A5  160A  118A  	fcall	_I2C_Master_Read
  4951  1777  1683               	bsf	3,5	;RP0=1, select bank3
  4952  1778  1703               	bsf	3,6	;RP1=1, select bank3
  4953  1779  0810               	movf	?_I2C_Master_Read^(0+384),w
  4954  177A  00C6               	movwf	??_LUX_read^(0+384)
  4955  177B  0846               	movf	??_LUX_read^(0+384),w
  4956  177C  00DB               	movwf	_lowCH1^(0+384)
  4957                           
  4958                           ;main_slave_p1.c: 248:     highCH1 = I2C_Master_Read(0);
  4959  177D  3000               	movlw	0
  4960  177E  0090               	movwf	I2C_Master_Read@a^(0+384)
  4961  177F  0091               	movwf	(I2C_Master_Read@a+1)^(0+384)
  4962  1780  160A  158A  24A5  160A  118A  	fcall	_I2C_Master_Read
  4963  1785  1683               	bsf	3,5	;RP0=1, select bank3
  4964  1786  1703               	bsf	3,6	;RP1=1, select bank3
  4965  1787  0810               	movf	?_I2C_Master_Read^(0+384),w
  4966  1788  00C6               	movwf	??_LUX_read^(0+384)
  4967  1789  0846               	movf	??_LUX_read^(0+384),w
  4968  178A  00DA               	movwf	_highCH1^(0+384)
  4969                           
  4970                           ;main_slave_p1.c: 249:     I2C_Master_Stop();
  4971  178B  160A  158A  2343  160A  118A  	fcall	_I2C_Master_Stop
  4972  1790                     l3855:
  4973                           
  4974                           ;main_slave_p1.c: 251:     CH0 = (highCH0 << 8) + lowCH0;
  4975  1790  1683               	bsf	3,5	;RP0=1, select bank3
  4976  1791  1703               	bsf	3,6	;RP1=1, select bank3
  4977  1792  085C               	movf	_highCH0^(0+384),w
  4978  1793  00C6               	movwf	??_LUX_read^(0+384)
  4979  1794  01C7               	clrf	(??_LUX_read^(0+384)+1)
  4980  1795  0846               	movf	??_LUX_read^(0+384),w
  4981  1796  00C7               	movwf	(??_LUX_read^(0+384)+1)
  4982  1797  01C6               	clrf	??_LUX_read^(0+384)
  4983  1798  085D               	movf	_lowCH0^(0+384),w
  4984  1799  0746               	addwf	??_LUX_read^(0+384),w
  4985  179A  00D6               	movwf	_CH0^(0+384)
  4986  179B  3000               	movlw	0
  4987  179C  1803               	skipnc
  4988  179D  3001               	movlw	1
  4989  179E  0747               	addwf	(??_LUX_read+1)^(0+384),w
  4990  179F  00D7               	movwf	(_CH0+1)^(0+384)
  4991  17A0                     l3857:
  4992                           
  4993                           ;main_slave_p1.c: 252:     CH1 = (highCH1 << 8) + lowCH1;
  4994  17A0  085A               	movf	_highCH1^(0+384),w
  4995  17A1  00C6               	movwf	??_LUX_read^(0+384)
  4996  17A2  01C7               	clrf	(??_LUX_read^(0+384)+1)
  4997  17A3  0846               	movf	??_LUX_read^(0+384),w
  4998  17A4  00C7               	movwf	(??_LUX_read^(0+384)+1)
  4999  17A5  01C6               	clrf	??_LUX_read^(0+384)
  5000  17A6  085B               	movf	_lowCH1^(0+384),w
  5001  17A7  0746               	addwf	??_LUX_read^(0+384),w
  5002  17A8  00D4               	movwf	_CH1^(0+384)
  5003  17A9  3000               	movlw	0
  5004  17AA  1803               	skipnc
  5005  17AB  3001               	movlw	1
  5006  17AC  0747               	addwf	(??_LUX_read+1)^(0+384),w
  5007  17AD  00D5               	movwf	(_CH1+1)^(0+384)
  5008                           
  5009                           ;main_slave_p1.c: 254:     LUX = (uint8_t)( calculateLux(CH0, CH1) * 1/15);
  5010  17AE  0855               	movf	(_CH1+1)^(0+384),w
  5011  17AF  00A1               	movwf	(calculateLux@ir+1)^(0+384)
  5012  17B0  0854               	movf	_CH1^(0+384),w
  5013  17B1  00A0               	movwf	calculateLux@ir^(0+384)
  5014  17B2  0857               	movf	(_CH0+1)^(0+384),w
  5015  17B3  009F               	movwf	(calculateLux@broadband+1)^(0+384)
  5016  17B4  0856               	movf	_CH0^(0+384),w
  5017  17B5  009E               	movwf	calculateLux@broadband^(0+384)
  5018  17B6  120A  158A  22C2  160A  118A  	fcall	_calculateLux
  5019  17BB  1683               	bsf	3,5	;RP0=1, select bank3
  5020  17BC  1703               	bsf	3,6	;RP1=1, select bank3
  5021  17BD  0821               	movf	(?_calculateLux+3)^(0+384),w
  5022  17BE  00CB               	movwf	(_LUX_read$1784+3)^(0+384)
  5023  17BF  0820               	movf	(?_calculateLux+2)^(0+384),w
  5024  17C0  00CA               	movwf	(_LUX_read$1784+2)^(0+384)
  5025  17C1  081F               	movf	(?_calculateLux+1)^(0+384),w
  5026  17C2  00C9               	movwf	(_LUX_read$1784+1)^(0+384)
  5027  17C3  081E               	movf	?_calculateLux^(0+384),w
  5028  17C4  00C8               	movwf	_LUX_read$1784^(0+384)
  5029                           
  5030                           ;main_slave_p1.c: 254:     LUX = (uint8_t)( calculateLux(CH0, CH1) * 1/15);
  5031  17C5  3000               	movlw	0
  5032  17C6  0093               	movwf	(___lldiv@divisor+3)^(0+384)
  5033  17C7  3000               	movlw	0
  5034  17C8  0092               	movwf	(___lldiv@divisor+2)^(0+384)
  5035  17C9  3000               	movlw	0
  5036  17CA  0091               	movwf	(___lldiv@divisor+1)^(0+384)
  5037  17CB  300F               	movlw	15
  5038  17CC  0090               	movwf	___lldiv@divisor^(0+384)
  5039  17CD  084B               	movf	(_LUX_read$1784+3)^(0+384),w
  5040  17CE  0097               	movwf	(___lldiv@dividend+3)^(0+384)
  5041  17CF  084A               	movf	(_LUX_read$1784+2)^(0+384),w
  5042  17D0  0096               	movwf	(___lldiv@dividend+2)^(0+384)
  5043  17D1  0849               	movf	(_LUX_read$1784+1)^(0+384),w
  5044  17D2  0095               	movwf	(___lldiv@dividend+1)^(0+384)
  5045  17D3  0848               	movf	_LUX_read$1784^(0+384),w
  5046  17D4  0094               	movwf	___lldiv@dividend^(0+384)
  5047  17D5  160A  158A  26C1  160A  118A  	fcall	___lldiv
  5048  17DA  1683               	bsf	3,5	;RP0=1, select bank3
  5049  17DB  1703               	bsf	3,6	;RP1=1, select bank3
  5050  17DC  0810               	movf	?___lldiv^(0+384),w
  5051  17DD  00C6               	movwf	??_LUX_read^(0+384)
  5052  17DE  0846               	movf	??_LUX_read^(0+384),w
  5053  17DF  00EA               	movwf	_LUX^(0+384)
  5054  17E0                     l3859:
  5055                           
  5056                           ;main_slave_p1.c: 256:     if (LUX != last_LUX){
  5057  17E0  086A               	movf	_LUX^(0+384),w
  5058  17E1  0669               	xorwf	_last_LUX^(0+384),w
  5059  17E2  1903               	skipnz
  5060  17E3  2FE5               	goto	u4811
  5061  17E4  2FE6               	goto	u4810
  5062  17E5                     u4811:
  5063  17E5  2FFF               	goto	l202
  5064  17E6                     u4810:
  5065  17E6                     l3861:
  5066                           
  5067                           ;main_slave_p1.c: 257:         last_LUX = LUX;
  5068  17E6  086A               	movf	_LUX^(0+384),w
  5069  17E7  00C6               	movwf	??_LUX_read^(0+384)
  5070  17E8  0846               	movf	??_LUX_read^(0+384),w
  5071  17E9  00E9               	movwf	_last_LUX^(0+384)
  5072                           
  5073                           ;main_slave_p1.c: 258:         if (LUX >= 10)
  5074  17EA  300A               	movlw	10
  5075  17EB  026A               	subwf	_LUX^(0+384),w
  5076  17EC  1C03               	skipc
  5077  17ED  2FEF               	goto	u4821
  5078  17EE  2FF0               	goto	u4820
  5079  17EF                     u4821:
  5080  17EF  2FF7               	goto	l3865
  5081  17F0                     u4820:
  5082  17F0                     l3863:
  5083                           
  5084                           ;main_slave_p1.c: 259:             USART_send(192 + 10);
  5085  17F0  30CA               	movlw	202
  5086  17F1  160A  158A  2392  160A  118A  	fcall	_USART_send
  5087  17F6  2FFF               	goto	l202
  5088  17F7                     l3865:
  5089                           
  5090                           ;main_slave_p1.c: 261:             USART_send(192 + (LUX & 15));
  5091  17F7  086A               	movf	_LUX^(0+384),w
  5092  17F8  390F               	andlw	15
  5093  17F9  3EC0               	addlw	192
  5094  17FA  160A  158A  2392  160A  118A  	fcall	_USART_send
  5095  17FF                     l202:
  5096  17FF  0008               	return
  5097  1800                     __end_of_LUX_read:
  5098                           
  5099                           	psect	text19
  5100  0AC2                     __ptext19:	
  5101 ;; *************** function _calculateLux *****************
  5102 ;; Defined at:
  5103 ;;		line 3 in file "tsl2561.c"
  5104 ;; Parameters:    Size  Location     Type
  5105 ;;  broadband       2   14[BANK3 ] unsigned int 
  5106 ;;  ir              2   16[BANK3 ] unsigned int 
  5107 ;; Auto vars:     Size  Location     Type
  5108 ;;  ratio           4   50[BANK3 ] unsigned long 
  5109 ;;  channel0        4   46[BANK3 ] unsigned long 
  5110 ;;  channel1        4   42[BANK3 ] unsigned long 
  5111 ;;  chScale         4   38[BANK3 ] unsigned long 
  5112 ;;  temp            4   30[BANK3 ] unsigned long 
  5113 ;;  ratio1          4   26[BANK3 ] unsigned long 
  5114 ;;  lux             4   22[BANK3 ] unsigned long 
  5115 ;;  m               2   36[BANK3 ] unsigned int 
  5116 ;;  b               2   34[BANK3 ] unsigned int 
  5117 ;;  clipThreshol    2    0        unsigned int 
  5118 ;; Return value:  Size  Location     Type
  5119 ;;                  4   14[BANK3 ] unsigned long 
  5120 ;; Registers used:
  5121 ;;		wreg, status,2, status,0, pclath, cstack
  5122 ;; Tracked objects:
  5123 ;;		On entry : 0/0
  5124 ;;		On exit  : 0/0
  5125 ;;		Unchanged: 0/0
  5126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5127 ;;      Params:         0       0       0       4       0
  5128 ;;      Locals:         0       0       0      32       0
  5129 ;;      Temps:          0       0       0       4       0
  5130 ;;      Totals:         0       0       0      40       0
  5131 ;;Total ram usage:       40 bytes
  5132 ;; Hardware stack levels used: 1
  5133 ;; Hardware stack levels required when called: 6
  5134 ;; This function calls:
  5135 ;;		___lldiv
  5136 ;;		___lmul
  5137 ;; This function is called by:
  5138 ;;		_LUX_read
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142  0AC2                     _calculateLux:	
  5143                           ;psect for function _calculateLux
  5144                           
  5145  0AC2                     l3123:	
  5146                           ;incstack = 0
  5147                           ; Regs used in _calculateLux: [wreg+status,2+status,0+pclath+cstack]
  5148                           
  5149                           
  5150                           ;tsl2561.c: 12:   if ((broadband > clipThreshold) || (ir > clipThreshold)) {
  5151  0AC2  3013               	movlw	19
  5152  0AC3  1683               	bsf	3,5	;RP0=1, select bank3
  5153  0AC4  1703               	bsf	3,6	;RP1=1, select bank3
  5154  0AC5  021F               	subwf	(calculateLux@broadband+1)^(0+384),w
  5155  0AC6  3025               	movlw	37
  5156  0AC7  1903               	skipnz
  5157  0AC8  021E               	subwf	calculateLux@broadband^(0+384),w
  5158  0AC9  1803               	skipnc
  5159  0ACA  2ACC               	goto	u3641
  5160  0ACB  2ACD               	goto	u3640
  5161  0ACC                     u3641:
  5162  0ACC  2AD6               	goto	l3127
  5163  0ACD                     u3640:
  5164  0ACD                     l3125:
  5165  0ACD  3013               	movlw	19
  5166  0ACE  0221               	subwf	(calculateLux@ir+1)^(0+384),w
  5167  0ACF  3025               	movlw	37
  5168  0AD0  1903               	skipnz
  5169  0AD1  0220               	subwf	calculateLux@ir^(0+384),w
  5170  0AD2  1C03               	skipc
  5171  0AD3  2AD5               	goto	u3651
  5172  0AD4  2AD6               	goto	u3650
  5173  0AD5                     u3651:
  5174  0AD5  2ADF               	goto	l3131
  5175  0AD6                     u3650:
  5176  0AD6                     l3127:
  5177                           
  5178                           ;tsl2561.c: 13:     return 65536;
  5179  0AD6  3000               	movlw	0
  5180  0AD7  00A1               	movwf	(?_calculateLux+3)^(0+384)
  5181  0AD8  3001               	movlw	1
  5182  0AD9  00A0               	movwf	(?_calculateLux+2)^(0+384)
  5183  0ADA  3000               	movlw	0
  5184  0ADB  009F               	movwf	(?_calculateLux+1)^(0+384)
  5185  0ADC  3000               	movlw	0
  5186  0ADD  009E               	movwf	?_calculateLux^(0+384)
  5187  0ADE  2D5F               	goto	l410
  5188  0ADF                     l3131:
  5189                           
  5190                           ;tsl2561.c: 16:   chScale = (0x7517);
  5191  0ADF  3000               	movlw	0
  5192  0AE0  00B9               	movwf	(calculateLux@chScale+3)^(0+384)
  5193  0AE1  3000               	movlw	0
  5194  0AE2  00B8               	movwf	(calculateLux@chScale+2)^(0+384)
  5195  0AE3  3075               	movlw	117
  5196  0AE4  00B7               	movwf	(calculateLux@chScale+1)^(0+384)
  5197  0AE5  3017               	movlw	23
  5198  0AE6  00B6               	movwf	calculateLux@chScale^(0+384)
  5199  0AE7                     l3133:
  5200                           
  5201                           ;tsl2561.c: 17:   chScale = chScale<<4;
  5202  0AE7  0836               	movf	calculateLux@chScale^(0+384),w
  5203  0AE8  00A2               	movwf	??_calculateLux^(0+384)
  5204  0AE9  0837               	movf	(calculateLux@chScale+1)^(0+384),w
  5205  0AEA  00A3               	movwf	(??_calculateLux^(0+384)+1)
  5206  0AEB  0838               	movf	(calculateLux@chScale+2)^(0+384),w
  5207  0AEC  00A4               	movwf	(??_calculateLux^(0+384)+2)
  5208  0AED  0839               	movf	(calculateLux@chScale+3)^(0+384),w
  5209  0AEE  00A5               	movwf	(??_calculateLux^(0+384)+3)
  5210  0AEF  3004               	movlw	4
  5211  0AF0                     u3665:
  5212  0AF0  1003               	clrc
  5213  0AF1  0DA2               	rlf	??_calculateLux^(0+384),f
  5214  0AF2  0DA3               	rlf	(??_calculateLux^(0+384)+1),f
  5215  0AF3  0DA4               	rlf	(??_calculateLux^(0+384)+2),f
  5216  0AF4  0DA5               	rlf	(??_calculateLux^(0+384)+3),f
  5217  0AF5                     u3660:
  5218  0AF5  3EFF               	addlw	-1
  5219  0AF6  1D03               	skipz
  5220  0AF7  2AF0               	goto	u3665
  5221  0AF8  0825               	movf	(??_calculateLux+3)^(0+384),w
  5222  0AF9  00B9               	movwf	(calculateLux@chScale+3)^(0+384)
  5223  0AFA  0824               	movf	(??_calculateLux+2)^(0+384),w
  5224  0AFB  00B8               	movwf	(calculateLux@chScale+2)^(0+384)
  5225  0AFC  0823               	movf	(??_calculateLux+1)^(0+384),w
  5226  0AFD  00B7               	movwf	(calculateLux@chScale+1)^(0+384)
  5227  0AFE  0822               	movf	??_calculateLux^(0+384),w
  5228  0AFF  00B6               	movwf	calculateLux@chScale^(0+384)
  5229  0B00                     l3135:
  5230                           
  5231                           ;tsl2561.c: 19:   channel0 = (broadband * chScale) >> (10);
  5232  0B00  081E               	movf	calculateLux@broadband^(0+384),w
  5233  0B01  0090               	movwf	___lmul@multiplier^(0+384)
  5234  0B02  081F               	movf	(calculateLux@broadband+1)^(0+384),w
  5235  0B03  0091               	movwf	(___lmul@multiplier^(0+384)+1)
  5236  0B04  0192               	clrf	(___lmul@multiplier^(0+384)+2)
  5237  0B05  0193               	clrf	(___lmul@multiplier^(0+384)+3)
  5238  0B06  0839               	movf	(calculateLux@chScale+3)^(0+384),w
  5239  0B07  0097               	movwf	(___lmul@multiplicand+3)^(0+384)
  5240  0B08  0838               	movf	(calculateLux@chScale+2)^(0+384),w
  5241  0B09  0096               	movwf	(___lmul@multiplicand+2)^(0+384)
  5242  0B0A  0837               	movf	(calculateLux@chScale+1)^(0+384),w
  5243  0B0B  0095               	movwf	(___lmul@multiplicand+1)^(0+384)
  5244  0B0C  0836               	movf	calculateLux@chScale^(0+384),w
  5245  0B0D  0094               	movwf	___lmul@multiplicand^(0+384)
  5246  0B0E  160A  158A  25D5  120A  158A  	fcall	___lmul
  5247  0B13  1683               	bsf	3,5	;RP0=1, select bank3
  5248  0B14  1703               	bsf	3,6	;RP1=1, select bank3
  5249  0B15  0810               	movf	?___lmul^(0+384),w
  5250  0B16  00A2               	movwf	??_calculateLux^(0+384)
  5251  0B17  0811               	movf	(?___lmul+1)^(0+384),w
  5252  0B18  00A3               	movwf	(??_calculateLux^(0+384)+1)
  5253  0B19  0812               	movf	(?___lmul+2)^(0+384),w
  5254  0B1A  00A4               	movwf	(??_calculateLux^(0+384)+2)
  5255  0B1B  0813               	movf	(?___lmul+3)^(0+384),w
  5256  0B1C  00A5               	movwf	(??_calculateLux^(0+384)+3)
  5257  0B1D  300A               	movlw	10
  5258  0B1E                     u3675:
  5259  0B1E  1003               	clrc
  5260  0B1F  0CA5               	rrf	(??_calculateLux^(0+384)+3),f
  5261  0B20  0CA4               	rrf	(??_calculateLux^(0+384)+2),f
  5262  0B21  0CA3               	rrf	(??_calculateLux^(0+384)+1),f
  5263  0B22  0CA2               	rrf	??_calculateLux^(0+384),f
  5264  0B23                     u3670:
  5265  0B23  3EFF               	addlw	-1
  5266  0B24  1D03               	skipz
  5267  0B25  2B1E               	goto	u3675
  5268  0B26  0825               	movf	(??_calculateLux+3)^(0+384),w
  5269  0B27  00C1               	movwf	(calculateLux@channel0+3)^(0+384)
  5270  0B28  0824               	movf	(??_calculateLux+2)^(0+384),w
  5271  0B29  00C0               	movwf	(calculateLux@channel0+2)^(0+384)
  5272  0B2A  0823               	movf	(??_calculateLux+1)^(0+384),w
  5273  0B2B  00BF               	movwf	(calculateLux@channel0+1)^(0+384)
  5274  0B2C  0822               	movf	??_calculateLux^(0+384),w
  5275  0B2D  00BE               	movwf	calculateLux@channel0^(0+384)
  5276  0B2E                     l3137:
  5277                           
  5278                           ;tsl2561.c: 20:   channel1 = (ir * chScale) >> (10);
  5279  0B2E  0820               	movf	calculateLux@ir^(0+384),w
  5280  0B2F  0090               	movwf	___lmul@multiplier^(0+384)
  5281  0B30  0821               	movf	(calculateLux@ir+1)^(0+384),w
  5282  0B31  0091               	movwf	(___lmul@multiplier^(0+384)+1)
  5283  0B32  0192               	clrf	(___lmul@multiplier^(0+384)+2)
  5284  0B33  0193               	clrf	(___lmul@multiplier^(0+384)+3)
  5285  0B34  0839               	movf	(calculateLux@chScale+3)^(0+384),w
  5286  0B35  0097               	movwf	(___lmul@multiplicand+3)^(0+384)
  5287  0B36  0838               	movf	(calculateLux@chScale+2)^(0+384),w
  5288  0B37  0096               	movwf	(___lmul@multiplicand+2)^(0+384)
  5289  0B38  0837               	movf	(calculateLux@chScale+1)^(0+384),w
  5290  0B39  0095               	movwf	(___lmul@multiplicand+1)^(0+384)
  5291  0B3A  0836               	movf	calculateLux@chScale^(0+384),w
  5292  0B3B  0094               	movwf	___lmul@multiplicand^(0+384)
  5293  0B3C  160A  158A  25D5  120A  158A  	fcall	___lmul
  5294  0B41  1683               	bsf	3,5	;RP0=1, select bank3
  5295  0B42  1703               	bsf	3,6	;RP1=1, select bank3
  5296  0B43  0810               	movf	?___lmul^(0+384),w
  5297  0B44  00A2               	movwf	??_calculateLux^(0+384)
  5298  0B45  0811               	movf	(?___lmul+1)^(0+384),w
  5299  0B46  00A3               	movwf	(??_calculateLux^(0+384)+1)
  5300  0B47  0812               	movf	(?___lmul+2)^(0+384),w
  5301  0B48  00A4               	movwf	(??_calculateLux^(0+384)+2)
  5302  0B49  0813               	movf	(?___lmul+3)^(0+384),w
  5303  0B4A  00A5               	movwf	(??_calculateLux^(0+384)+3)
  5304  0B4B  300A               	movlw	10
  5305  0B4C                     u3685:
  5306  0B4C  1003               	clrc
  5307  0B4D  0CA5               	rrf	(??_calculateLux^(0+384)+3),f
  5308  0B4E  0CA4               	rrf	(??_calculateLux^(0+384)+2),f
  5309  0B4F  0CA3               	rrf	(??_calculateLux^(0+384)+1),f
  5310  0B50  0CA2               	rrf	??_calculateLux^(0+384),f
  5311  0B51                     u3680:
  5312  0B51  3EFF               	addlw	-1
  5313  0B52  1D03               	skipz
  5314  0B53  2B4C               	goto	u3685
  5315  0B54  0825               	movf	(??_calculateLux+3)^(0+384),w
  5316  0B55  00BD               	movwf	(calculateLux@channel1+3)^(0+384)
  5317  0B56  0824               	movf	(??_calculateLux+2)^(0+384),w
  5318  0B57  00BC               	movwf	(calculateLux@channel1+2)^(0+384)
  5319  0B58  0823               	movf	(??_calculateLux+1)^(0+384),w
  5320  0B59  00BB               	movwf	(calculateLux@channel1+1)^(0+384)
  5321  0B5A  0822               	movf	??_calculateLux^(0+384),w
  5322  0B5B  00BA               	movwf	calculateLux@channel1^(0+384)
  5323  0B5C                     l3139:
  5324                           
  5325                           ;tsl2561.c: 22:   unsigned long ratio1 = 0;
  5326  0B5C  3000               	movlw	0
  5327  0B5D  00AD               	movwf	(calculateLux@ratio1+3)^(0+384)
  5328  0B5E  3000               	movlw	0
  5329  0B5F  00AC               	movwf	(calculateLux@ratio1+2)^(0+384)
  5330  0B60  3000               	movlw	0
  5331  0B61  00AB               	movwf	(calculateLux@ratio1+1)^(0+384)
  5332  0B62  3000               	movlw	0
  5333  0B63  00AA               	movwf	calculateLux@ratio1^(0+384)
  5334  0B64                     l3141:
  5335                           
  5336                           ;tsl2561.c: 23:   if (channel0 != 0)
  5337  0B64  0841               	movf	(calculateLux@channel0+3)^(0+384),w
  5338  0B65  0440               	iorwf	(calculateLux@channel0+2)^(0+384),w
  5339  0B66  043F               	iorwf	(calculateLux@channel0+1)^(0+384),w
  5340  0B67  043E               	iorwf	calculateLux@channel0^(0+384),w
  5341  0B68  1903               	skipnz
  5342  0B69  2B6B               	goto	u3691
  5343  0B6A  2B6C               	goto	u3690
  5344  0B6B                     u3691:
  5345  0B6B  2B9C               	goto	l3145
  5346  0B6C                     u3690:
  5347  0B6C                     l3143:
  5348                           
  5349                           ;tsl2561.c: 24:     ratio1 = (channel1 << ((9) + 1)) / channel0;
  5350  0B6C  0841               	movf	(calculateLux@channel0+3)^(0+384),w
  5351  0B6D  0093               	movwf	(___lldiv@divisor+3)^(0+384)
  5352  0B6E  0840               	movf	(calculateLux@channel0+2)^(0+384),w
  5353  0B6F  0092               	movwf	(___lldiv@divisor+2)^(0+384)
  5354  0B70  083F               	movf	(calculateLux@channel0+1)^(0+384),w
  5355  0B71  0091               	movwf	(___lldiv@divisor+1)^(0+384)
  5356  0B72  083E               	movf	calculateLux@channel0^(0+384),w
  5357  0B73  0090               	movwf	___lldiv@divisor^(0+384)
  5358  0B74  083A               	movf	calculateLux@channel1^(0+384),w
  5359  0B75  00A2               	movwf	??_calculateLux^(0+384)
  5360  0B76  083B               	movf	(calculateLux@channel1+1)^(0+384),w
  5361  0B77  00A3               	movwf	(??_calculateLux^(0+384)+1)
  5362  0B78  083C               	movf	(calculateLux@channel1+2)^(0+384),w
  5363  0B79  00A4               	movwf	(??_calculateLux^(0+384)+2)
  5364  0B7A  083D               	movf	(calculateLux@channel1+3)^(0+384),w
  5365  0B7B  00A5               	movwf	(??_calculateLux^(0+384)+3)
  5366  0B7C  300A               	movlw	10
  5367  0B7D                     u3705:
  5368  0B7D  1003               	clrc
  5369  0B7E  0DA2               	rlf	??_calculateLux^(0+384),f
  5370  0B7F  0DA3               	rlf	(??_calculateLux^(0+384)+1),f
  5371  0B80  0DA4               	rlf	(??_calculateLux^(0+384)+2),f
  5372  0B81  0DA5               	rlf	(??_calculateLux^(0+384)+3),f
  5373  0B82                     u3700:
  5374  0B82  3EFF               	addlw	-1
  5375  0B83  1D03               	skipz
  5376  0B84  2B7D               	goto	u3705
  5377  0B85  0825               	movf	(??_calculateLux+3)^(0+384),w
  5378  0B86  0097               	movwf	(___lldiv@dividend+3)^(0+384)
  5379  0B87  0824               	movf	(??_calculateLux+2)^(0+384),w
  5380  0B88  0096               	movwf	(___lldiv@dividend+2)^(0+384)
  5381  0B89  0823               	movf	(??_calculateLux+1)^(0+384),w
  5382  0B8A  0095               	movwf	(___lldiv@dividend+1)^(0+384)
  5383  0B8B  0822               	movf	??_calculateLux^(0+384),w
  5384  0B8C  0094               	movwf	___lldiv@dividend^(0+384)
  5385  0B8D  160A  158A  26C1  120A  158A  	fcall	___lldiv
  5386  0B92  1683               	bsf	3,5	;RP0=1, select bank3
  5387  0B93  1703               	bsf	3,6	;RP1=1, select bank3
  5388  0B94  0813               	movf	(?___lldiv+3)^(0+384),w
  5389  0B95  00AD               	movwf	(calculateLux@ratio1+3)^(0+384)
  5390  0B96  0812               	movf	(?___lldiv+2)^(0+384),w
  5391  0B97  00AC               	movwf	(calculateLux@ratio1+2)^(0+384)
  5392  0B98  0811               	movf	(?___lldiv+1)^(0+384),w
  5393  0B99  00AB               	movwf	(calculateLux@ratio1+1)^(0+384)
  5394  0B9A  0810               	movf	?___lldiv^(0+384),w
  5395  0B9B  00AA               	movwf	calculateLux@ratio1^(0+384)
  5396  0B9C                     l3145:
  5397                           
  5398                           ;tsl2561.c: 26:   unsigned long ratio = (ratio1 + 1) >> 1;
  5399  0B9C  3001               	movlw	1
  5400  0B9D  00A2               	movwf	??_calculateLux^(0+384)
  5401  0B9E  3000               	movlw	0
  5402  0B9F  00A3               	movwf	(??_calculateLux^(0+384)+1)
  5403  0BA0  3000               	movlw	0
  5404  0BA1  00A4               	movwf	(??_calculateLux^(0+384)+2)
  5405  0BA2  3000               	movlw	0
  5406  0BA3  00A5               	movwf	(??_calculateLux^(0+384)+3)
  5407  0BA4  082A               	movf	calculateLux@ratio1^(0+384),w
  5408  0BA5  07A2               	addwf	??_calculateLux^(0+384),f
  5409  0BA6  082B               	movf	(calculateLux@ratio1+1)^(0+384),w
  5410  0BA7  1803               	skipnc
  5411  0BA8  0F2B               	incfsz	(calculateLux@ratio1+1)^(0+384),w
  5412  0BA9  2BAB               	goto	u3710
  5413  0BAA  2BAC               	goto	u3711
  5414  0BAB                     u3710:
  5415  0BAB  07A3               	addwf	(??_calculateLux^(0+384)+1),f
  5416  0BAC                     u3711:
  5417  0BAC  082C               	movf	(calculateLux@ratio1+2)^(0+384),w
  5418  0BAD  1803               	skipnc
  5419  0BAE  0F2C               	incfsz	(calculateLux@ratio1+2)^(0+384),w
  5420  0BAF  2BB1               	goto	u3712
  5421  0BB0  2BB2               	goto	u3713
  5422  0BB1                     u3712:
  5423  0BB1  07A4               	addwf	(??_calculateLux^(0+384)+2),f
  5424  0BB2                     u3713:
  5425  0BB2  082D               	movf	(calculateLux@ratio1+3)^(0+384),w
  5426  0BB3  1803               	skipnc
  5427  0BB4  0A2D               	incf	(calculateLux@ratio1+3)^(0+384),w
  5428  0BB5  07A5               	addwf	(??_calculateLux^(0+384)+3),f
  5429  0BB6  3001               	movlw	1
  5430  0BB7                     u3725:
  5431  0BB7  1003               	clrc
  5432  0BB8  0CA5               	rrf	(??_calculateLux^(0+384)+3),f
  5433  0BB9  0CA4               	rrf	(??_calculateLux^(0+384)+2),f
  5434  0BBA  0CA3               	rrf	(??_calculateLux^(0+384)+1),f
  5435  0BBB  0CA2               	rrf	??_calculateLux^(0+384),f
  5436  0BBC                     u3720:
  5437  0BBC  3EFF               	addlw	-1
  5438  0BBD  1D03               	skipz
  5439  0BBE  2BB7               	goto	u3725
  5440  0BBF  0825               	movf	(??_calculateLux+3)^(0+384),w
  5441  0BC0  00C5               	movwf	(calculateLux@ratio+3)^(0+384)
  5442  0BC1  0824               	movf	(??_calculateLux+2)^(0+384),w
  5443  0BC2  00C4               	movwf	(calculateLux@ratio+2)^(0+384)
  5444  0BC3  0823               	movf	(??_calculateLux+1)^(0+384),w
  5445  0BC4  00C3               	movwf	(calculateLux@ratio+1)^(0+384)
  5446  0BC5  0822               	movf	??_calculateLux^(0+384),w
  5447  0BC6  00C2               	movwf	calculateLux@ratio^(0+384)
  5448  0BC7                     l3147:
  5449                           
  5450                           ;tsl2561.c: 28:   unsigned int b, m;;tsl2561.c: 30:   if ((ratio >= 0) && (ratio <= (0x0
      +                          040))) {
  5451  0BC7  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  5452  0BC8  1D03               	btfss	3,2
  5453  0BC9  2BD7               	goto	u3731
  5454  0BCA  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  5455  0BCB  1D03               	btfss	3,2
  5456  0BCC  2BD7               	goto	u3731
  5457  0BCD  0843               	movf	(calculateLux@ratio+1)^(0+384),w
  5458  0BCE  1D03               	btfss	3,2
  5459  0BCF  2BD7               	goto	u3731
  5460  0BD0  3041               	movlw	65
  5461  0BD1  0242               	subwf	calculateLux@ratio^(0+384),w
  5462  0BD2  1D03               	skipz
  5463  0BD3  2BD4               	goto	u3733
  5464  0BD4                     u3733:
  5465  0BD4  1803               	btfsc	3,0
  5466  0BD5  2BD7               	goto	u3731
  5467  0BD6  2BD8               	goto	u3730
  5468  0BD7                     u3731:
  5469  0BD7  2BE3               	goto	l3151
  5470  0BD8                     u3730:
  5471  0BD8                     l3149:
  5472                           
  5473                           ;tsl2561.c: 31:     b = (0x01f2);
  5474  0BD8  30F2               	movlw	242
  5475  0BD9  1683               	bsf	3,5	;RP0=1, select bank3
  5476  0BDA  1703               	bsf	3,6	;RP1=1, select bank3
  5477  0BDB  00B2               	movwf	calculateLux@b^(0+384)
  5478  0BDC  3001               	movlw	1
  5479  0BDD  00B3               	movwf	(calculateLux@b^(0+384)+1)
  5480                           
  5481                           ;tsl2561.c: 32:     m = (0x01be);
  5482  0BDE  30BE               	movlw	190
  5483  0BDF  00B4               	movwf	calculateLux@m^(0+384)
  5484  0BE0  3001               	movlw	1
  5485  0BE1  00B5               	movwf	(calculateLux@m^(0+384)+1)
  5486                           
  5487                           ;tsl2561.c: 33:   } else if (ratio <= (0x0080)) {
  5488  0BE2  2CB6               	goto	l3179
  5489  0BE3                     l3151:
  5490  0BE3  1683               	bsf	3,5	;RP0=1, select bank3
  5491  0BE4  1703               	bsf	3,6	;RP1=1, select bank3
  5492  0BE5  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  5493  0BE6  1D03               	btfss	3,2
  5494  0BE7  2BF5               	goto	u3741
  5495  0BE8  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  5496  0BE9  1D03               	btfss	3,2
  5497  0BEA  2BF5               	goto	u3741
  5498  0BEB  0843               	movf	(calculateLux@ratio+1)^(0+384),w
  5499  0BEC  1D03               	btfss	3,2
  5500  0BED  2BF5               	goto	u3741
  5501  0BEE  3081               	movlw	129
  5502  0BEF  0242               	subwf	calculateLux@ratio^(0+384),w
  5503  0BF0  1D03               	skipz
  5504  0BF1  2BF2               	goto	u3743
  5505  0BF2                     u3743:
  5506  0BF2  1803               	btfsc	3,0
  5507  0BF3  2BF5               	goto	u3741
  5508  0BF4  2BF6               	goto	u3740
  5509  0BF5                     u3741:
  5510  0BF5  2C01               	goto	l3155
  5511  0BF6                     u3740:
  5512  0BF6                     l3153:
  5513                           
  5514                           ;tsl2561.c: 34:     b = (0x0214);
  5515  0BF6  3014               	movlw	20
  5516  0BF7  1683               	bsf	3,5	;RP0=1, select bank3
  5517  0BF8  1703               	bsf	3,6	;RP1=1, select bank3
  5518  0BF9  00B2               	movwf	calculateLux@b^(0+384)
  5519  0BFA  3002               	movlw	2
  5520  0BFB  00B3               	movwf	(calculateLux@b^(0+384)+1)
  5521                           
  5522                           ;tsl2561.c: 35:     m = (0x02d1);
  5523  0BFC  30D1               	movlw	209
  5524  0BFD  00B4               	movwf	calculateLux@m^(0+384)
  5525  0BFE  3002               	movlw	2
  5526  0BFF  00B5               	movwf	(calculateLux@m^(0+384)+1)
  5527                           
  5528                           ;tsl2561.c: 36:   } else if (ratio <= (0x00c0)) {
  5529  0C00  2CB6               	goto	l3179
  5530  0C01                     l3155:
  5531  0C01  1683               	bsf	3,5	;RP0=1, select bank3
  5532  0C02  1703               	bsf	3,6	;RP1=1, select bank3
  5533  0C03  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  5534  0C04  1D03               	btfss	3,2
  5535  0C05  2C13               	goto	u3751
  5536  0C06  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  5537  0C07  1D03               	btfss	3,2
  5538  0C08  2C13               	goto	u3751
  5539  0C09  0843               	movf	(calculateLux@ratio+1)^(0+384),w
  5540  0C0A  1D03               	btfss	3,2
  5541  0C0B  2C13               	goto	u3751
  5542  0C0C  30C1               	movlw	193
  5543  0C0D  0242               	subwf	calculateLux@ratio^(0+384),w
  5544  0C0E  1D03               	skipz
  5545  0C0F  2C10               	goto	u3753
  5546  0C10                     u3753:
  5547  0C10  1803               	btfsc	3,0
  5548  0C11  2C13               	goto	u3751
  5549  0C12  2C14               	goto	u3750
  5550  0C13                     u3751:
  5551  0C13  2C1F               	goto	l3159
  5552  0C14                     u3750:
  5553  0C14                     l3157:
  5554                           
  5555                           ;tsl2561.c: 37:     b = (0x023f);
  5556  0C14  303F               	movlw	63
  5557  0C15  1683               	bsf	3,5	;RP0=1, select bank3
  5558  0C16  1703               	bsf	3,6	;RP1=1, select bank3
  5559  0C17  00B2               	movwf	calculateLux@b^(0+384)
  5560  0C18  3002               	movlw	2
  5561  0C19  00B3               	movwf	(calculateLux@b^(0+384)+1)
  5562                           
  5563                           ;tsl2561.c: 38:     m = (0x037b);
  5564  0C1A  307B               	movlw	123
  5565  0C1B  00B4               	movwf	calculateLux@m^(0+384)
  5566  0C1C  3003               	movlw	3
  5567  0C1D  00B5               	movwf	(calculateLux@m^(0+384)+1)
  5568                           
  5569                           ;tsl2561.c: 39:   } else if (ratio <= (0x0100)) {
  5570  0C1E  2CB6               	goto	l3179
  5571  0C1F                     l3159:
  5572  0C1F  1683               	bsf	3,5	;RP0=1, select bank3
  5573  0C20  1703               	bsf	3,6	;RP1=1, select bank3
  5574  0C21  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  5575  0C22  1D03               	btfss	3,2
  5576  0C23  2C32               	goto	u3761
  5577  0C24  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  5578  0C25  1D03               	btfss	3,2
  5579  0C26  2C32               	goto	u3761
  5580  0C27  3001               	movlw	1
  5581  0C28  0243               	subwf	(calculateLux@ratio+1)^(0+384),w
  5582  0C29  1D03               	skipz
  5583  0C2A  2C2F               	goto	u3763
  5584  0C2B  3001               	movlw	1
  5585  0C2C  0242               	subwf	calculateLux@ratio^(0+384),w
  5586  0C2D  1D03               	skipz
  5587  0C2E  2C2F               	goto	u3763
  5588  0C2F                     u3763:
  5589  0C2F  1803               	btfsc	3,0
  5590  0C30  2C32               	goto	u3761
  5591  0C31  2C33               	goto	u3760
  5592  0C32                     u3761:
  5593  0C32  2C3E               	goto	l3163
  5594  0C33                     u3760:
  5595  0C33                     l3161:
  5596                           
  5597                           ;tsl2561.c: 40:     b = (0x0270);
  5598  0C33  3070               	movlw	112
  5599  0C34  1683               	bsf	3,5	;RP0=1, select bank3
  5600  0C35  1703               	bsf	3,6	;RP1=1, select bank3
  5601  0C36  00B2               	movwf	calculateLux@b^(0+384)
  5602  0C37  3002               	movlw	2
  5603  0C38  00B3               	movwf	(calculateLux@b^(0+384)+1)
  5604                           
  5605                           ;tsl2561.c: 41:     m = (0x03fe);
  5606  0C39  30FE               	movlw	254
  5607  0C3A  00B4               	movwf	calculateLux@m^(0+384)
  5608  0C3B  3003               	movlw	3
  5609  0C3C  00B5               	movwf	(calculateLux@m^(0+384)+1)
  5610                           
  5611                           ;tsl2561.c: 42:   } else if (ratio <= (0x0138)) {
  5612  0C3D  2CB6               	goto	l3179
  5613  0C3E                     l3163:
  5614  0C3E  1683               	bsf	3,5	;RP0=1, select bank3
  5615  0C3F  1703               	bsf	3,6	;RP1=1, select bank3
  5616  0C40  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  5617  0C41  1D03               	btfss	3,2
  5618  0C42  2C51               	goto	u3771
  5619  0C43  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  5620  0C44  1D03               	btfss	3,2
  5621  0C45  2C51               	goto	u3771
  5622  0C46  3001               	movlw	1
  5623  0C47  0243               	subwf	(calculateLux@ratio+1)^(0+384),w
  5624  0C48  1D03               	skipz
  5625  0C49  2C4E               	goto	u3773
  5626  0C4A  3039               	movlw	57
  5627  0C4B  0242               	subwf	calculateLux@ratio^(0+384),w
  5628  0C4C  1D03               	skipz
  5629  0C4D  2C4E               	goto	u3773
  5630  0C4E                     u3773:
  5631  0C4E  1803               	btfsc	3,0
  5632  0C4F  2C51               	goto	u3771
  5633  0C50  2C52               	goto	u3770
  5634  0C51                     u3771:
  5635  0C51  2C5D               	goto	l3167
  5636  0C52                     u3770:
  5637  0C52                     l3165:
  5638                           
  5639                           ;tsl2561.c: 43:     b = (0x016f);
  5640  0C52  306F               	movlw	111
  5641  0C53  1683               	bsf	3,5	;RP0=1, select bank3
  5642  0C54  1703               	bsf	3,6	;RP1=1, select bank3
  5643  0C55  00B2               	movwf	calculateLux@b^(0+384)
  5644  0C56  3001               	movlw	1
  5645  0C57  00B3               	movwf	(calculateLux@b^(0+384)+1)
  5646                           
  5647                           ;tsl2561.c: 44:     m = (0x01fc);
  5648  0C58  30FC               	movlw	252
  5649  0C59  00B4               	movwf	calculateLux@m^(0+384)
  5650  0C5A  3001               	movlw	1
  5651  0C5B  00B5               	movwf	(calculateLux@m^(0+384)+1)
  5652                           
  5653                           ;tsl2561.c: 45:   } else if (ratio <= (0x019a)) {
  5654  0C5C  2CB6               	goto	l3179
  5655  0C5D                     l3167:
  5656  0C5D  1683               	bsf	3,5	;RP0=1, select bank3
  5657  0C5E  1703               	bsf	3,6	;RP1=1, select bank3
  5658  0C5F  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  5659  0C60  1D03               	btfss	3,2
  5660  0C61  2C70               	goto	u3781
  5661  0C62  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  5662  0C63  1D03               	btfss	3,2
  5663  0C64  2C70               	goto	u3781
  5664  0C65  3001               	movlw	1
  5665  0C66  0243               	subwf	(calculateLux@ratio+1)^(0+384),w
  5666  0C67  1D03               	skipz
  5667  0C68  2C6D               	goto	u3783
  5668  0C69  309B               	movlw	155
  5669  0C6A  0242               	subwf	calculateLux@ratio^(0+384),w
  5670  0C6B  1D03               	skipz
  5671  0C6C  2C6D               	goto	u3783
  5672  0C6D                     u3783:
  5673  0C6D  1803               	btfsc	3,0
  5674  0C6E  2C70               	goto	u3781
  5675  0C6F  2C71               	goto	u3780
  5676  0C70                     u3781:
  5677  0C70  2C7C               	goto	l3171
  5678  0C71                     u3780:
  5679  0C71                     l3169:
  5680                           
  5681                           ;tsl2561.c: 46:     b = (0x00d2);
  5682  0C71  30D2               	movlw	210
  5683  0C72  1683               	bsf	3,5	;RP0=1, select bank3
  5684  0C73  1703               	bsf	3,6	;RP1=1, select bank3
  5685  0C74  00B2               	movwf	calculateLux@b^(0+384)
  5686  0C75  3000               	movlw	0
  5687  0C76  00B3               	movwf	(calculateLux@b^(0+384)+1)
  5688                           
  5689                           ;tsl2561.c: 47:     m = (0x00fb);
  5690  0C77  30FB               	movlw	251
  5691  0C78  00B4               	movwf	calculateLux@m^(0+384)
  5692  0C79  3000               	movlw	0
  5693  0C7A  00B5               	movwf	(calculateLux@m^(0+384)+1)
  5694                           
  5695                           ;tsl2561.c: 48:   } else if (ratio <= (0x029a)) {
  5696  0C7B  2CB6               	goto	l3179
  5697  0C7C                     l3171:
  5698  0C7C  1683               	bsf	3,5	;RP0=1, select bank3
  5699  0C7D  1703               	bsf	3,6	;RP1=1, select bank3
  5700  0C7E  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  5701  0C7F  1D03               	btfss	3,2
  5702  0C80  2C8F               	goto	u3791
  5703  0C81  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  5704  0C82  1D03               	btfss	3,2
  5705  0C83  2C8F               	goto	u3791
  5706  0C84  3002               	movlw	2
  5707  0C85  0243               	subwf	(calculateLux@ratio+1)^(0+384),w
  5708  0C86  1D03               	skipz
  5709  0C87  2C8C               	goto	u3793
  5710  0C88  309B               	movlw	155
  5711  0C89  0242               	subwf	calculateLux@ratio^(0+384),w
  5712  0C8A  1D03               	skipz
  5713  0C8B  2C8C               	goto	u3793
  5714  0C8C                     u3793:
  5715  0C8C  1803               	btfsc	3,0
  5716  0C8D  2C8F               	goto	u3791
  5717  0C8E  2C90               	goto	u3790
  5718  0C8F                     u3791:
  5719  0C8F  2C9B               	goto	l3175
  5720  0C90                     u3790:
  5721  0C90                     l3173:
  5722                           
  5723                           ;tsl2561.c: 49:     b = (0x0018);
  5724  0C90  3018               	movlw	24
  5725  0C91  1683               	bsf	3,5	;RP0=1, select bank3
  5726  0C92  1703               	bsf	3,6	;RP1=1, select bank3
  5727  0C93  00B2               	movwf	calculateLux@b^(0+384)
  5728  0C94  3000               	movlw	0
  5729  0C95  00B3               	movwf	(calculateLux@b^(0+384)+1)
  5730                           
  5731                           ;tsl2561.c: 50:     m = (0x0012);
  5732  0C96  3012               	movlw	18
  5733  0C97  00B4               	movwf	calculateLux@m^(0+384)
  5734  0C98  3000               	movlw	0
  5735  0C99  00B5               	movwf	(calculateLux@m^(0+384)+1)
  5736                           
  5737                           ;tsl2561.c: 51:   } else if (ratio > (0x029a)) {
  5738  0C9A  2CB6               	goto	l3179
  5739  0C9B                     l3175:
  5740  0C9B  1683               	bsf	3,5	;RP0=1, select bank3
  5741  0C9C  1703               	bsf	3,6	;RP1=1, select bank3
  5742  0C9D  0845               	movf	(calculateLux@ratio+3)^(0+384),w
  5743  0C9E  1D03               	btfss	3,2
  5744  0C9F  2CAF               	goto	u3800
  5745  0CA0  0844               	movf	(calculateLux@ratio+2)^(0+384),w
  5746  0CA1  1D03               	btfss	3,2
  5747  0CA2  2CAF               	goto	u3800
  5748  0CA3  3002               	movlw	2
  5749  0CA4  0243               	subwf	(calculateLux@ratio+1)^(0+384),w
  5750  0CA5  1D03               	skipz
  5751  0CA6  2CAB               	goto	u3803
  5752  0CA7  309B               	movlw	155
  5753  0CA8  0242               	subwf	calculateLux@ratio^(0+384),w
  5754  0CA9  1D03               	skipz
  5755  0CAA  2CAB               	goto	u3803
  5756  0CAB                     u3803:
  5757  0CAB  1C03               	btfss	3,0
  5758  0CAC  2CAE               	goto	u3801
  5759  0CAD  2CAF               	goto	u3800
  5760  0CAE                     u3801:
  5761  0CAE  2CB6               	goto	l421
  5762  0CAF                     u3800:
  5763  0CAF                     l3177:
  5764                           
  5765                           ;tsl2561.c: 52:     b = (0x0000);
  5766  0CAF  1683               	bsf	3,5	;RP0=1, select bank3
  5767  0CB0  1703               	bsf	3,6	;RP1=1, select bank3
  5768  0CB1  01B2               	clrf	calculateLux@b^(0+384)
  5769  0CB2  01B3               	clrf	(calculateLux@b+1)^(0+384)
  5770                           
  5771                           ;tsl2561.c: 53:     m = (0x0000);
  5772  0CB3  01B4               	clrf	calculateLux@m^(0+384)
  5773  0CB4  01B5               	clrf	(calculateLux@m+1)^(0+384)
  5774  0CB5  2CB6               	goto	l3179
  5775  0CB6                     l421:
  5776  0CB6                     l3179:
  5777                           
  5778                           ;tsl2561.c: 56:   unsigned long temp;;tsl2561.c: 57:   channel0 = channel0 * b;
  5779  0CB6  1683               	bsf	3,5	;RP0=1, select bank3
  5780  0CB7  1703               	bsf	3,6	;RP1=1, select bank3
  5781  0CB8  0832               	movf	calculateLux@b^(0+384),w
  5782  0CB9  0090               	movwf	___lmul@multiplier^(0+384)
  5783  0CBA  0833               	movf	(calculateLux@b+1)^(0+384),w
  5784  0CBB  0091               	movwf	(___lmul@multiplier^(0+384)+1)
  5785  0CBC  0192               	clrf	(___lmul@multiplier^(0+384)+2)
  5786  0CBD  0193               	clrf	(___lmul@multiplier^(0+384)+3)
  5787  0CBE  0841               	movf	(calculateLux@channel0+3)^(0+384),w
  5788  0CBF  0097               	movwf	(___lmul@multiplicand+3)^(0+384)
  5789  0CC0  0840               	movf	(calculateLux@channel0+2)^(0+384),w
  5790  0CC1  0096               	movwf	(___lmul@multiplicand+2)^(0+384)
  5791  0CC2  083F               	movf	(calculateLux@channel0+1)^(0+384),w
  5792  0CC3  0095               	movwf	(___lmul@multiplicand+1)^(0+384)
  5793  0CC4  083E               	movf	calculateLux@channel0^(0+384),w
  5794  0CC5  0094               	movwf	___lmul@multiplicand^(0+384)
  5795  0CC6  160A  158A  25D5  120A  158A  	fcall	___lmul
  5796  0CCB  1683               	bsf	3,5	;RP0=1, select bank3
  5797  0CCC  1703               	bsf	3,6	;RP1=1, select bank3
  5798  0CCD  0813               	movf	(?___lmul+3)^(0+384),w
  5799  0CCE  00C1               	movwf	(calculateLux@channel0+3)^(0+384)
  5800  0CCF  0812               	movf	(?___lmul+2)^(0+384),w
  5801  0CD0  00C0               	movwf	(calculateLux@channel0+2)^(0+384)
  5802  0CD1  0811               	movf	(?___lmul+1)^(0+384),w
  5803  0CD2  00BF               	movwf	(calculateLux@channel0+1)^(0+384)
  5804  0CD3  0810               	movf	?___lmul^(0+384),w
  5805  0CD4  00BE               	movwf	calculateLux@channel0^(0+384)
  5806  0CD5                     l3181:
  5807                           
  5808                           ;tsl2561.c: 58:   channel1 = channel1 * m;
  5809  0CD5  0834               	movf	calculateLux@m^(0+384),w
  5810  0CD6  0090               	movwf	___lmul@multiplier^(0+384)
  5811  0CD7  0835               	movf	(calculateLux@m+1)^(0+384),w
  5812  0CD8  0091               	movwf	(___lmul@multiplier^(0+384)+1)
  5813  0CD9  0192               	clrf	(___lmul@multiplier^(0+384)+2)
  5814  0CDA  0193               	clrf	(___lmul@multiplier^(0+384)+3)
  5815  0CDB  083D               	movf	(calculateLux@channel1+3)^(0+384),w
  5816  0CDC  0097               	movwf	(___lmul@multiplicand+3)^(0+384)
  5817  0CDD  083C               	movf	(calculateLux@channel1+2)^(0+384),w
  5818  0CDE  0096               	movwf	(___lmul@multiplicand+2)^(0+384)
  5819  0CDF  083B               	movf	(calculateLux@channel1+1)^(0+384),w
  5820  0CE0  0095               	movwf	(___lmul@multiplicand+1)^(0+384)
  5821  0CE1  083A               	movf	calculateLux@channel1^(0+384),w
  5822  0CE2  0094               	movwf	___lmul@multiplicand^(0+384)
  5823  0CE3  160A  158A  25D5  120A  158A  	fcall	___lmul
  5824  0CE8  1683               	bsf	3,5	;RP0=1, select bank3
  5825  0CE9  1703               	bsf	3,6	;RP1=1, select bank3
  5826  0CEA  0813               	movf	(?___lmul+3)^(0+384),w
  5827  0CEB  00BD               	movwf	(calculateLux@channel1+3)^(0+384)
  5828  0CEC  0812               	movf	(?___lmul+2)^(0+384),w
  5829  0CED  00BC               	movwf	(calculateLux@channel1+2)^(0+384)
  5830  0CEE  0811               	movf	(?___lmul+1)^(0+384),w
  5831  0CEF  00BB               	movwf	(calculateLux@channel1+1)^(0+384)
  5832  0CF0  0810               	movf	?___lmul^(0+384),w
  5833  0CF1  00BA               	movwf	calculateLux@channel1^(0+384)
  5834  0CF2                     l3183:
  5835                           
  5836                           ;tsl2561.c: 60:   temp = 0;
  5837  0CF2  3000               	movlw	0
  5838  0CF3  00B1               	movwf	(calculateLux@temp+3)^(0+384)
  5839  0CF4  3000               	movlw	0
  5840  0CF5  00B0               	movwf	(calculateLux@temp+2)^(0+384)
  5841  0CF6  3000               	movlw	0
  5842  0CF7  00AF               	movwf	(calculateLux@temp+1)^(0+384)
  5843  0CF8  3000               	movlw	0
  5844  0CF9  00AE               	movwf	calculateLux@temp^(0+384)
  5845  0CFA                     l3185:
  5846                           
  5847                           ;tsl2561.c: 62:   if (channel0 > channel1)
  5848  0CFA  0841               	movf	(calculateLux@channel0+3)^(0+384),w
  5849  0CFB  023D               	subwf	(calculateLux@channel1+3)^(0+384),w
  5850  0CFC  1D03               	skipz
  5851  0CFD  2D08               	goto	u3815
  5852  0CFE  0840               	movf	(calculateLux@channel0+2)^(0+384),w
  5853  0CFF  023C               	subwf	(calculateLux@channel1+2)^(0+384),w
  5854  0D00  1D03               	skipz
  5855  0D01  2D08               	goto	u3815
  5856  0D02  083F               	movf	(calculateLux@channel0+1)^(0+384),w
  5857  0D03  023B               	subwf	(calculateLux@channel1+1)^(0+384),w
  5858  0D04  1D03               	skipz
  5859  0D05  2D08               	goto	u3815
  5860  0D06  083E               	movf	calculateLux@channel0^(0+384),w
  5861  0D07  023A               	subwf	calculateLux@channel1^(0+384),w
  5862  0D08                     u3815:
  5863  0D08  1803               	skipnc
  5864  0D09  2D0B               	goto	u3811
  5865  0D0A  2D0C               	goto	u3810
  5866  0D0B                     u3811:
  5867  0D0B  2D30               	goto	l427
  5868  0D0C                     u3810:
  5869  0D0C                     l3187:
  5870                           
  5871                           ;tsl2561.c: 63:     temp = channel0 - channel1;
  5872  0D0C  083E               	movf	calculateLux@channel0^(0+384),w
  5873  0D0D  00A2               	movwf	??_calculateLux^(0+384)
  5874  0D0E  083F               	movf	(calculateLux@channel0+1)^(0+384),w
  5875  0D0F  00A3               	movwf	(??_calculateLux^(0+384)+1)
  5876  0D10  0840               	movf	(calculateLux@channel0+2)^(0+384),w
  5877  0D11  00A4               	movwf	(??_calculateLux^(0+384)+2)
  5878  0D12  0841               	movf	(calculateLux@channel0+3)^(0+384),w
  5879  0D13  00A5               	movwf	(??_calculateLux^(0+384)+3)
  5880  0D14  083A               	movf	calculateLux@channel1^(0+384),w
  5881  0D15  02A2               	subwf	??_calculateLux^(0+384),f
  5882  0D16  083B               	movf	(calculateLux@channel1+1)^(0+384),w
  5883  0D17  1C03               	skipc
  5884  0D18  0F3B               	incfsz	(calculateLux@channel1+1)^(0+384),w
  5885  0D19  2D1B               	goto	u3821
  5886  0D1A  2D1C               	goto	u3822
  5887  0D1B                     u3821:
  5888  0D1B  02A3               	subwf	(??_calculateLux^(0+384)+1),f
  5889  0D1C                     u3822:
  5890  0D1C  083C               	movf	(calculateLux@channel1+2)^(0+384),w
  5891  0D1D  1C03               	skipc
  5892  0D1E  0F3C               	incfsz	(calculateLux@channel1+2)^(0+384),w
  5893  0D1F  2D21               	goto	u3823
  5894  0D20  2D22               	goto	u3824
  5895  0D21                     u3823:
  5896  0D21  02A4               	subwf	(??_calculateLux^(0+384)+2),f
  5897  0D22                     u3824:
  5898  0D22  083D               	movf	(calculateLux@channel1+3)^(0+384),w
  5899  0D23  1C03               	skipc
  5900  0D24  0F3D               	incfsz	(calculateLux@channel1+3)^(0+384),w
  5901  0D25  2D27               	goto	u3825
  5902  0D26  2D28               	goto	u3826
  5903  0D27                     u3825:
  5904  0D27  02A5               	subwf	(??_calculateLux^(0+384)+3),f
  5905  0D28                     u3826:
  5906  0D28  0825               	movf	(??_calculateLux+3)^(0+384),w
  5907  0D29  00B1               	movwf	(calculateLux@temp+3)^(0+384)
  5908  0D2A  0824               	movf	(??_calculateLux+2)^(0+384),w
  5909  0D2B  00B0               	movwf	(calculateLux@temp+2)^(0+384)
  5910  0D2C  0823               	movf	(??_calculateLux+1)^(0+384),w
  5911  0D2D  00AF               	movwf	(calculateLux@temp+1)^(0+384)
  5912  0D2E  0822               	movf	??_calculateLux^(0+384),w
  5913  0D2F  00AE               	movwf	calculateLux@temp^(0+384)
  5914  0D30                     l427:
  5915                           
  5916                           ;tsl2561.c: 66:   temp += (1 << ((14) - 1));
  5917  0D30  3000               	movlw	0
  5918  0D31  07AE               	addwf	calculateLux@temp^(0+384),f
  5919  0D32  3020               	movlw	32
  5920  0D33  1803               	skipnc
  5921  0D34  3021               	movlw	33
  5922  0D35  07AF               	addwf	(calculateLux@temp+1)^(0+384),f
  5923  0D36  3000               	movlw	0
  5924  0D37  1803               	skipnc
  5925  0D38  3001               	movlw	1
  5926  0D39  07B0               	addwf	(calculateLux@temp+2)^(0+384),f
  5927  0D3A  3000               	movlw	0
  5928  0D3B  1803               	skipnc
  5929  0D3C  3001               	movlw	1
  5930  0D3D  07B1               	addwf	(calculateLux@temp+3)^(0+384),f
  5931  0D3E                     l3189:
  5932                           
  5933                           ;tsl2561.c: 69:   uint32_t lux = temp >> (14);
  5934  0D3E  082E               	movf	calculateLux@temp^(0+384),w
  5935  0D3F  00A2               	movwf	??_calculateLux^(0+384)
  5936  0D40  082F               	movf	(calculateLux@temp+1)^(0+384),w
  5937  0D41  00A3               	movwf	(??_calculateLux^(0+384)+1)
  5938  0D42  0830               	movf	(calculateLux@temp+2)^(0+384),w
  5939  0D43  00A4               	movwf	(??_calculateLux^(0+384)+2)
  5940  0D44  0831               	movf	(calculateLux@temp+3)^(0+384),w
  5941  0D45  00A5               	movwf	(??_calculateLux^(0+384)+3)
  5942  0D46  300E               	movlw	14
  5943  0D47                     u3835:
  5944  0D47  1003               	clrc
  5945  0D48  0CA5               	rrf	(??_calculateLux^(0+384)+3),f
  5946  0D49  0CA4               	rrf	(??_calculateLux^(0+384)+2),f
  5947  0D4A  0CA3               	rrf	(??_calculateLux^(0+384)+1),f
  5948  0D4B  0CA2               	rrf	??_calculateLux^(0+384),f
  5949  0D4C                     u3830:
  5950  0D4C  3EFF               	addlw	-1
  5951  0D4D  1D03               	skipz
  5952  0D4E  2D47               	goto	u3835
  5953  0D4F  0825               	movf	(??_calculateLux+3)^(0+384),w
  5954  0D50  00A9               	movwf	(calculateLux@lux+3)^(0+384)
  5955  0D51  0824               	movf	(??_calculateLux+2)^(0+384),w
  5956  0D52  00A8               	movwf	(calculateLux@lux+2)^(0+384)
  5957  0D53  0823               	movf	(??_calculateLux+1)^(0+384),w
  5958  0D54  00A7               	movwf	(calculateLux@lux+1)^(0+384)
  5959  0D55  0822               	movf	??_calculateLux^(0+384),w
  5960  0D56  00A6               	movwf	calculateLux@lux^(0+384)
  5961  0D57                     l3191:
  5962                           
  5963                           ;tsl2561.c: 72:   return lux;
  5964  0D57  0829               	movf	(calculateLux@lux+3)^(0+384),w
  5965  0D58  00A1               	movwf	(?_calculateLux+3)^(0+384)
  5966  0D59  0828               	movf	(calculateLux@lux+2)^(0+384),w
  5967  0D5A  00A0               	movwf	(?_calculateLux+2)^(0+384)
  5968  0D5B  0827               	movf	(calculateLux@lux+1)^(0+384),w
  5969  0D5C  009F               	movwf	(?_calculateLux+1)^(0+384)
  5970  0D5D  0826               	movf	calculateLux@lux^(0+384),w
  5971  0D5E  009E               	movwf	?_calculateLux^(0+384)
  5972  0D5F                     l410:
  5973  0D5F  0008               	return
  5974  0D60                     __end_of_calculateLux:
  5975                           
  5976                           	psect	text20
  5977  1DD5                     __ptext20:	
  5978 ;; *************** function ___lmul *****************
  5979 ;; Defined at:
  5980 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul32.c"
  5981 ;; Parameters:    Size  Location     Type
  5982 ;;  multiplier      4    0[BANK3 ] unsigned long 
  5983 ;;  multiplicand    4    4[BANK3 ] unsigned long 
  5984 ;; Auto vars:     Size  Location     Type
  5985 ;;  product         4    9[BANK3 ] unsigned long 
  5986 ;; Return value:  Size  Location     Type
  5987 ;;                  4    0[BANK3 ] unsigned long 
  5988 ;; Registers used:
  5989 ;;		wreg, status,2, status,0
  5990 ;; Tracked objects:
  5991 ;;		On entry : 0/0
  5992 ;;		On exit  : 0/0
  5993 ;;		Unchanged: 0/0
  5994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5995 ;;      Params:         0       0       0       8       0
  5996 ;;      Locals:         0       0       0       4       0
  5997 ;;      Temps:          0       0       0       1       0
  5998 ;;      Totals:         0       0       0      13       0
  5999 ;;Total ram usage:       13 bytes
  6000 ;; Hardware stack levels used: 1
  6001 ;; Hardware stack levels required when called: 5
  6002 ;; This function calls:
  6003 ;;		Nothing
  6004 ;; This function is called by:
  6005 ;;		_calculateLux
  6006 ;; This function uses a non-reentrant model
  6007 ;;
  6008                           
  6009  1DD5                     ___lmul:	
  6010                           ;psect for function ___lmul
  6011                           
  6012  1DD5                     l2679:	
  6013                           ;incstack = 0
  6014                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  6015                           
  6016  1DD5  3000               	movlw	0
  6017  1DD6  1683               	bsf	3,5	;RP0=1, select bank3
  6018  1DD7  1703               	bsf	3,6	;RP1=1, select bank3
  6019  1DD8  009C               	movwf	(___lmul@product+3)^(0+384)
  6020  1DD9  3000               	movlw	0
  6021  1DDA  009B               	movwf	(___lmul@product+2)^(0+384)
  6022  1DDB  3000               	movlw	0
  6023  1DDC  009A               	movwf	(___lmul@product+1)^(0+384)
  6024  1DDD  3000               	movlw	0
  6025  1DDE  0099               	movwf	___lmul@product^(0+384)
  6026  1DDF                     l2681:
  6027  1DDF  1C10               	btfss	___lmul@multiplier^(0+384),0
  6028  1DE0  2DE2               	goto	u2611
  6029  1DE1  2DE3               	goto	u2610
  6030  1DE2                     u2611:
  6031  1DE2  2DFA               	goto	l2685
  6032  1DE3                     u2610:
  6033  1DE3                     l2683:
  6034  1DE3  0814               	movf	___lmul@multiplicand^(0+384),w
  6035  1DE4  0799               	addwf	___lmul@product^(0+384),f
  6036  1DE5  0815               	movf	(___lmul@multiplicand+1)^(0+384),w
  6037  1DE6  1103               	clrz
  6038  1DE7  1803               	skipnc
  6039  1DE8  3E01               	addlw	1
  6040  1DE9  1903               	skipnz
  6041  1DEA  2DEC               	goto	u2621
  6042  1DEB  079A               	addwf	(___lmul@product+1)^(0+384),f
  6043  1DEC                     u2621:
  6044  1DEC  0816               	movf	(___lmul@multiplicand+2)^(0+384),w
  6045  1DED  1103               	clrz
  6046  1DEE  1803               	skipnc
  6047  1DEF  3E01               	addlw	1
  6048  1DF0  1903               	skipnz
  6049  1DF1  2DF3               	goto	u2622
  6050  1DF2  079B               	addwf	(___lmul@product+2)^(0+384),f
  6051  1DF3                     u2622:
  6052  1DF3  0817               	movf	(___lmul@multiplicand+3)^(0+384),w
  6053  1DF4  1103               	clrz
  6054  1DF5  1803               	skipnc
  6055  1DF6  3E01               	addlw	1
  6056  1DF7  1903               	skipnz
  6057  1DF8  2DFA               	goto	u2623
  6058  1DF9  079C               	addwf	(___lmul@product+3)^(0+384),f
  6059  1DFA                     u2623:
  6060  1DFA                     l2685:
  6061  1DFA  3001               	movlw	1
  6062  1DFB  0098               	movwf	??___lmul^(0+384)
  6063  1DFC                     u2635:
  6064  1DFC  1003               	clrc
  6065  1DFD  0D94               	rlf	___lmul@multiplicand^(0+384),f
  6066  1DFE  0D95               	rlf	(___lmul@multiplicand+1)^(0+384),f
  6067  1DFF  0D96               	rlf	(___lmul@multiplicand+2)^(0+384),f
  6068  1E00  0D97               	rlf	(___lmul@multiplicand+3)^(0+384),f
  6069  1E01  0B98               	decfsz	??___lmul^(0+384),f
  6070  1E02  2DFC               	goto	u2635
  6071  1E03                     l2687:
  6072  1E03  3001               	movlw	1
  6073  1E04                     u2645:
  6074  1E04  1003               	clrc
  6075  1E05  0C93               	rrf	(___lmul@multiplier+3)^(0+384),f
  6076  1E06  0C92               	rrf	(___lmul@multiplier+2)^(0+384),f
  6077  1E07  0C91               	rrf	(___lmul@multiplier+1)^(0+384),f
  6078  1E08  0C90               	rrf	___lmul@multiplier^(0+384),f
  6079  1E09  3EFF               	addlw	-1
  6080  1E0A  1D03               	skipz
  6081  1E0B  2E04               	goto	u2645
  6082  1E0C  0813               	movf	(___lmul@multiplier+3)^(0+384),w
  6083  1E0D  0412               	iorwf	(___lmul@multiplier+2)^(0+384),w
  6084  1E0E  0411               	iorwf	(___lmul@multiplier+1)^(0+384),w
  6085  1E0F  0410               	iorwf	___lmul@multiplier^(0+384),w
  6086  1E10  1D03               	skipz
  6087  1E11  2E13               	goto	u2651
  6088  1E12  2E14               	goto	u2650
  6089  1E13                     u2651:
  6090  1E13  2DDF               	goto	l2681
  6091  1E14                     u2650:
  6092  1E14                     l2689:
  6093  1E14  081C               	movf	(___lmul@product+3)^(0+384),w
  6094  1E15  0093               	movwf	(?___lmul+3)^(0+384)
  6095  1E16  081B               	movf	(___lmul@product+2)^(0+384),w
  6096  1E17  0092               	movwf	(?___lmul+2)^(0+384)
  6097  1E18  081A               	movf	(___lmul@product+1)^(0+384),w
  6098  1E19  0091               	movwf	(?___lmul+1)^(0+384)
  6099  1E1A  0819               	movf	___lmul@product^(0+384),w
  6100  1E1B  0090               	movwf	?___lmul^(0+384)
  6101  1E1C                     l527:
  6102  1E1C  0008               	return
  6103  1E1D                     __end_of___lmul:
  6104                           
  6105                           	psect	text21
  6106  1EC1                     __ptext21:	
  6107 ;; *************** function ___lldiv *****************
  6108 ;; Defined at:
  6109 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\__lldiv.c"
  6110 ;; Parameters:    Size  Location     Type
  6111 ;;  divisor         4    0[BANK3 ] unsigned long 
  6112 ;;  dividend        4    4[BANK3 ] unsigned long 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;  quotient        4    9[BANK3 ] unsigned long 
  6115 ;;  counter         1   13[BANK3 ] unsigned char 
  6116 ;; Return value:  Size  Location     Type
  6117 ;;                  4    0[BANK3 ] unsigned long 
  6118 ;; Registers used:
  6119 ;;		wreg, status,2, status,0
  6120 ;; Tracked objects:
  6121 ;;		On entry : 0/0
  6122 ;;		On exit  : 0/0
  6123 ;;		Unchanged: 0/0
  6124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6125 ;;      Params:         0       0       0       8       0
  6126 ;;      Locals:         0       0       0       5       0
  6127 ;;      Temps:          0       0       0       1       0
  6128 ;;      Totals:         0       0       0      14       0
  6129 ;;Total ram usage:       14 bytes
  6130 ;; Hardware stack levels used: 1
  6131 ;; Hardware stack levels required when called: 5
  6132 ;; This function calls:
  6133 ;;		Nothing
  6134 ;; This function is called by:
  6135 ;;		_LUX_read
  6136 ;;		_USART_set
  6137 ;;		_I2C_Master_Init
  6138 ;;		_calculateLux
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142  1EC1                     ___lldiv:	
  6143                           ;psect for function ___lldiv
  6144                           
  6145  1EC1                     l2707:	
  6146                           ;incstack = 0
  6147                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6148                           
  6149  1EC1  3000               	movlw	0
  6150  1EC2  1683               	bsf	3,5	;RP0=1, select bank3
  6151  1EC3  1703               	bsf	3,6	;RP1=1, select bank3
  6152  1EC4  009C               	movwf	(___lldiv@quotient+3)^(0+384)
  6153  1EC5  3000               	movlw	0
  6154  1EC6  009B               	movwf	(___lldiv@quotient+2)^(0+384)
  6155  1EC7  3000               	movlw	0
  6156  1EC8  009A               	movwf	(___lldiv@quotient+1)^(0+384)
  6157  1EC9  3000               	movlw	0
  6158  1ECA  0099               	movwf	___lldiv@quotient^(0+384)
  6159  1ECB  0813               	movf	(___lldiv@divisor+3)^(0+384),w
  6160  1ECC  0412               	iorwf	(___lldiv@divisor+2)^(0+384),w
  6161  1ECD  0411               	iorwf	(___lldiv@divisor+1)^(0+384),w
  6162  1ECE  0410               	iorwf	___lldiv@divisor^(0+384),w
  6163  1ECF  1903               	skipnz
  6164  1ED0  2ED2               	goto	u2681
  6165  1ED1  2ED3               	goto	u2680
  6166  1ED2                     u2681:
  6167  1ED2  2F20               	goto	l2727
  6168  1ED3                     u2680:
  6169  1ED3                     l2709:
  6170  1ED3  019D               	clrf	___lldiv@counter^(0+384)
  6171  1ED4  0A9D               	incf	___lldiv@counter^(0+384),f
  6172  1ED5  2EE3               	goto	l2713
  6173  1ED6                     l2711:
  6174  1ED6  3001               	movlw	1
  6175  1ED7  0098               	movwf	??___lldiv^(0+384)
  6176  1ED8                     u2695:
  6177  1ED8  1003               	clrc
  6178  1ED9  0D90               	rlf	___lldiv@divisor^(0+384),f
  6179  1EDA  0D91               	rlf	(___lldiv@divisor+1)^(0+384),f
  6180  1EDB  0D92               	rlf	(___lldiv@divisor+2)^(0+384),f
  6181  1EDC  0D93               	rlf	(___lldiv@divisor+3)^(0+384),f
  6182  1EDD  0B98               	decfsz	??___lldiv^(0+384),f
  6183  1EDE  2ED8               	goto	u2695
  6184  1EDF  3001               	movlw	1
  6185  1EE0  0098               	movwf	??___lldiv^(0+384)
  6186  1EE1  0818               	movf	??___lldiv^(0+384),w
  6187  1EE2  079D               	addwf	___lldiv@counter^(0+384),f
  6188  1EE3                     l2713:
  6189  1EE3  1F93               	btfss	(___lldiv@divisor+3)^(0+384),7
  6190  1EE4  2EE6               	goto	u2701
  6191  1EE5  2EE7               	goto	u2700
  6192  1EE6                     u2701:
  6193  1EE6  2ED6               	goto	l2711
  6194  1EE7                     u2700:
  6195  1EE7                     l2715:
  6196  1EE7  3001               	movlw	1
  6197  1EE8  0098               	movwf	??___lldiv^(0+384)
  6198  1EE9                     u2715:
  6199  1EE9  1003               	clrc
  6200  1EEA  0D99               	rlf	___lldiv@quotient^(0+384),f
  6201  1EEB  0D9A               	rlf	(___lldiv@quotient+1)^(0+384),f
  6202  1EEC  0D9B               	rlf	(___lldiv@quotient+2)^(0+384),f
  6203  1EED  0D9C               	rlf	(___lldiv@quotient+3)^(0+384),f
  6204  1EEE  0B98               	decfsz	??___lldiv^(0+384),f
  6205  1EEF  2EE9               	goto	u2715
  6206  1EF0                     l2717:
  6207  1EF0  0813               	movf	(___lldiv@divisor+3)^(0+384),w
  6208  1EF1  0217               	subwf	(___lldiv@dividend+3)^(0+384),w
  6209  1EF2  1D03               	skipz
  6210  1EF3  2EFE               	goto	u2725
  6211  1EF4  0812               	movf	(___lldiv@divisor+2)^(0+384),w
  6212  1EF5  0216               	subwf	(___lldiv@dividend+2)^(0+384),w
  6213  1EF6  1D03               	skipz
  6214  1EF7  2EFE               	goto	u2725
  6215  1EF8  0811               	movf	(___lldiv@divisor+1)^(0+384),w
  6216  1EF9  0215               	subwf	(___lldiv@dividend+1)^(0+384),w
  6217  1EFA  1D03               	skipz
  6218  1EFB  2EFE               	goto	u2725
  6219  1EFC  0810               	movf	___lldiv@divisor^(0+384),w
  6220  1EFD  0214               	subwf	___lldiv@dividend^(0+384),w
  6221  1EFE                     u2725:
  6222  1EFE  1C03               	skipc
  6223  1EFF  2F01               	goto	u2721
  6224  1F00  2F02               	goto	u2720
  6225  1F01                     u2721:
  6226  1F01  2F11               	goto	l2723
  6227  1F02                     u2720:
  6228  1F02                     l2719:
  6229  1F02  0810               	movf	___lldiv@divisor^(0+384),w
  6230  1F03  0294               	subwf	___lldiv@dividend^(0+384),f
  6231  1F04  0811               	movf	(___lldiv@divisor+1)^(0+384),w
  6232  1F05  1C03               	skipc
  6233  1F06  0F11               	incfsz	(___lldiv@divisor+1)^(0+384),w
  6234  1F07  0295               	subwf	(___lldiv@dividend+1)^(0+384),f
  6235  1F08  0812               	movf	(___lldiv@divisor+2)^(0+384),w
  6236  1F09  1C03               	skipc
  6237  1F0A  0F12               	incfsz	(___lldiv@divisor+2)^(0+384),w
  6238  1F0B  0296               	subwf	(___lldiv@dividend+2)^(0+384),f
  6239  1F0C  0813               	movf	(___lldiv@divisor+3)^(0+384),w
  6240  1F0D  1C03               	skipc
  6241  1F0E  0F13               	incfsz	(___lldiv@divisor+3)^(0+384),w
  6242  1F0F  0297               	subwf	(___lldiv@dividend+3)^(0+384),f
  6243  1F10                     l2721:
  6244  1F10  1419               	bsf	___lldiv@quotient^(0+384),0
  6245  1F11                     l2723:
  6246  1F11  3001               	movlw	1
  6247  1F12                     u2735:
  6248  1F12  1003               	clrc
  6249  1F13  0C93               	rrf	(___lldiv@divisor+3)^(0+384),f
  6250  1F14  0C92               	rrf	(___lldiv@divisor+2)^(0+384),f
  6251  1F15  0C91               	rrf	(___lldiv@divisor+1)^(0+384),f
  6252  1F16  0C90               	rrf	___lldiv@divisor^(0+384),f
  6253  1F17  3EFF               	addlw	-1
  6254  1F18  1D03               	skipz
  6255  1F19  2F12               	goto	u2735
  6256  1F1A                     l2725:
  6257  1F1A  3001               	movlw	1
  6258  1F1B  029D               	subwf	___lldiv@counter^(0+384),f
  6259  1F1C  1D03               	btfss	3,2
  6260  1F1D  2F1F               	goto	u2741
  6261  1F1E  2F20               	goto	u2740
  6262  1F1F                     u2741:
  6263  1F1F  2EE7               	goto	l2715
  6264  1F20                     u2740:
  6265  1F20                     l2727:
  6266  1F20  081C               	movf	(___lldiv@quotient+3)^(0+384),w
  6267  1F21  0093               	movwf	(?___lldiv+3)^(0+384)
  6268  1F22  081B               	movf	(___lldiv@quotient+2)^(0+384),w
  6269  1F23  0092               	movwf	(?___lldiv+2)^(0+384)
  6270  1F24  081A               	movf	(___lldiv@quotient+1)^(0+384),w
  6271  1F25  0091               	movwf	(?___lldiv+1)^(0+384)
  6272  1F26  0819               	movf	___lldiv@quotient^(0+384),w
  6273  1F27  0090               	movwf	?___lldiv^(0+384)
  6274  1F28                     l549:
  6275  1F28  0008               	return
  6276  1F29                     __end_of___lldiv:
  6277                           
  6278                           	psect	text22
  6279  1B92                     __ptext22:	
  6280 ;; *************** function _USART_send *****************
  6281 ;; Defined at:
  6282 ;;		line 27 in file "USART.c"
  6283 ;; Parameters:    Size  Location     Type
  6284 ;;  data            1    wreg     const unsigned char 
  6285 ;; Auto vars:     Size  Location     Type
  6286 ;;  data            1    0[BANK3 ] const unsigned char 
  6287 ;; Return value:  Size  Location     Type
  6288 ;;                  1    wreg      void 
  6289 ;; Registers used:
  6290 ;;		wreg
  6291 ;; Tracked objects:
  6292 ;;		On entry : 0/0
  6293 ;;		On exit  : 0/0
  6294 ;;		Unchanged: 0/0
  6295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6296 ;;      Params:         0       0       0       0       0
  6297 ;;      Locals:         0       0       0       1       0
  6298 ;;      Temps:          0       0       0       0       0
  6299 ;;      Totals:         0       0       0       1       0
  6300 ;;Total ram usage:        1 bytes
  6301 ;; Hardware stack levels used: 1
  6302 ;; Hardware stack levels required when called: 5
  6303 ;; This function calls:
  6304 ;;		Nothing
  6305 ;; This function is called by:
  6306 ;;		_motor_dc
  6307 ;;		_servo
  6308 ;;		_RTC_read
  6309 ;;		_LUX_read
  6310 ;;		_USART_print
  6311 ;; This function uses a non-reentrant model
  6312 ;;
  6313                           
  6314  1B92                     _USART_send:	
  6315                           ;psect for function _USART_send
  6316                           
  6317                           
  6318                           ;incstack = 0
  6319                           ; Regs used in _USART_send: [wreg]
  6320                           ;USART_send@data stored from wreg
  6321  1B92  1683               	bsf	3,5	;RP0=1, select bank3
  6322  1B93  1703               	bsf	3,6	;RP1=1, select bank3
  6323  1B94  0090               	movwf	USART_send@data^(0+384)
  6324  1B95                     l3081:
  6325  1B95                     l235:	
  6326                           ;USART.c: 27: void USART_send(const char data);USART.c: 28: {;USART.c: 29:     while(!TX
      +                          STAbits.TRMT);
  6327                           
  6328  1B95  1303               	bcf	3,6	;RP1=0, select bank1
  6329  1B96  1C98               	btfss	24,1	;volatile
  6330  1B97  2B99               	goto	u3611
  6331  1B98  2B9A               	goto	u3610
  6332  1B99                     u3611:
  6333  1B99  2B95               	goto	l235
  6334  1B9A                     u3610:
  6335  1B9A                     l3083:
  6336                           
  6337                           ;USART.c: 30:     TXREG = data;
  6338  1B9A  1683               	bsf	3,5	;RP0=1, select bank3
  6339  1B9B  1703               	bsf	3,6	;RP1=1, select bank3
  6340  1B9C  0810               	movf	USART_send@data^(0+384),w
  6341  1B9D  1283               	bcf	3,5	;RP0=0, select bank0
  6342  1B9E  1303               	bcf	3,6	;RP1=0, select bank0
  6343  1B9F  0099               	movwf	25	;volatile
  6344  1BA0                     l238:
  6345  1BA0  0008               	return
  6346  1BA1                     __end_of_USART_send:
  6347                           
  6348                           	psect	text23
  6349  1B4C                     __ptext23:	
  6350 ;; *************** function _I2C_Master_RepeatedStart *****************
  6351 ;; Defined at:
  6352 ;;		line 35 in file "I2C.c"
  6353 ;; Parameters:    Size  Location     Type
  6354 ;;		None
  6355 ;; Auto vars:     Size  Location     Type
  6356 ;;		None
  6357 ;; Return value:  Size  Location     Type
  6358 ;;                  1    wreg      void 
  6359 ;; Registers used:
  6360 ;;		wreg, status,2, status,0, pclath, cstack
  6361 ;; Tracked objects:
  6362 ;;		On entry : 0/0
  6363 ;;		On exit  : 0/0
  6364 ;;		Unchanged: 0/0
  6365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6366 ;;      Params:         0       0       0       0       0
  6367 ;;      Locals:         0       0       0       0       0
  6368 ;;      Temps:          0       0       0       0       0
  6369 ;;      Totals:         0       0       0       0       0
  6370 ;;Total ram usage:        0 bytes
  6371 ;; Hardware stack levels used: 1
  6372 ;; Hardware stack levels required when called: 6
  6373 ;; This function calls:
  6374 ;;		_I2C_Master_Wait
  6375 ;; This function is called by:
  6376 ;;		_RTC_read
  6377 ;;		_LUX_read
  6378 ;; This function uses a non-reentrant model
  6379 ;;
  6380                           
  6381  1B4C                     _I2C_Master_RepeatedStart:	
  6382                           ;psect for function _I2C_Master_RepeatedStart
  6383                           
  6384  1B4C                     l3095:	
  6385                           ;incstack = 0
  6386                           ; Regs used in _I2C_Master_RepeatedStart: [wreg+status,2+status,0+pclath+cstack]
  6387                           
  6388                           
  6389                           ;I2C.c: 37:     I2C_Master_Wait();
  6390  1B4C  160A  158A  2377  160A  158A  	fcall	_I2C_Master_Wait
  6391  1B51                     l3097:
  6392                           
  6393                           ;I2C.c: 38:     SSPCON2bits.RSEN = 1;
  6394  1B51  1683               	bsf	3,5	;RP0=1, select bank1
  6395  1B52  1303               	bcf	3,6	;RP1=0, select bank1
  6396  1B53  1491               	bsf	17,1	;volatile
  6397  1B54                     l366:
  6398  1B54  0008               	return
  6399  1B55                     __end_of_I2C_Master_RepeatedStart:
  6400                           
  6401                           	psect	text24
  6402  1CA5                     __ptext24:	
  6403 ;; *************** function _I2C_Master_Read *****************
  6404 ;; Defined at:
  6405 ;;		line 53 in file "I2C.c"
  6406 ;; Parameters:    Size  Location     Type
  6407 ;;  a               2    0[BANK3 ] unsigned short 
  6408 ;; Auto vars:     Size  Location     Type
  6409 ;;  temp            2    4[BANK3 ] unsigned short 
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  2    0[BANK3 ] unsigned short 
  6412 ;; Registers used:
  6413 ;;		wreg, status,2, status,0, pclath, cstack
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6419 ;;      Params:         0       0       0       2       0
  6420 ;;      Locals:         0       0       0       2       0
  6421 ;;      Temps:          0       0       0       2       0
  6422 ;;      Totals:         0       0       0       6       0
  6423 ;;Total ram usage:        6 bytes
  6424 ;; Hardware stack levels used: 1
  6425 ;; Hardware stack levels required when called: 6
  6426 ;; This function calls:
  6427 ;;		_I2C_Master_Wait
  6428 ;; This function is called by:
  6429 ;;		_RTC_read
  6430 ;;		_LUX_read
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434  1CA5                     _I2C_Master_Read:	
  6435                           ;psect for function _I2C_Master_Read
  6436                           
  6437  1CA5                     l3099:	
  6438                           ;incstack = 0
  6439                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  6440                           
  6441                           
  6442                           ;I2C.c: 53: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 54: {;I2C.c: 55:    
      +                           unsigned short temp;;I2C.c: 56:     I2C_Master_Wait();
  6443  1CA5  160A  158A  2377  160A  158A  	fcall	_I2C_Master_Wait
  6444  1CAA                     l3101:
  6445                           
  6446                           ;I2C.c: 57:     SSPCON2bits.RCEN = 1;
  6447  1CAA  1683               	bsf	3,5	;RP0=1, select bank1
  6448  1CAB  1303               	bcf	3,6	;RP1=0, select bank1
  6449  1CAC  1591               	bsf	17,3	;volatile
  6450                           
  6451                           ;I2C.c: 58:     I2C_Master_Wait();
  6452  1CAD  160A  158A  2377  160A  158A  	fcall	_I2C_Master_Wait
  6453  1CB2                     l3103:
  6454                           
  6455                           ;I2C.c: 59:     temp = SSPBUF;
  6456  1CB2  1283               	bcf	3,5	;RP0=0, select bank0
  6457  1CB3  1303               	bcf	3,6	;RP1=0, select bank0
  6458  1CB4  0813               	movf	19,w	;volatile
  6459  1CB5  1683               	bsf	3,5	;RP0=1, select bank3
  6460  1CB6  1703               	bsf	3,6	;RP1=1, select bank3
  6461  1CB7  0092               	movwf	??_I2C_Master_Read^(0+384)
  6462  1CB8  0193               	clrf	(??_I2C_Master_Read^(0+384)+1)
  6463  1CB9  0812               	movf	??_I2C_Master_Read^(0+384),w
  6464  1CBA  0094               	movwf	I2C_Master_Read@temp^(0+384)
  6465  1CBB  0813               	movf	(??_I2C_Master_Read+1)^(0+384),w
  6466  1CBC  0095               	movwf	(I2C_Master_Read@temp+1)^(0+384)
  6467  1CBD                     l3105:
  6468                           
  6469                           ;I2C.c: 60:     I2C_Master_Wait();
  6470  1CBD  160A  158A  2377  160A  158A  	fcall	_I2C_Master_Wait
  6471  1CC2                     l3107:
  6472                           
  6473                           ;I2C.c: 61:     if(a == 1){
  6474  1CC2  1683               	bsf	3,5	;RP0=1, select bank3
  6475  1CC3  1703               	bsf	3,6	;RP1=1, select bank3
  6476  1CC4  0310               	decf	I2C_Master_Read@a^(0+384),w
  6477  1CC5  0411               	iorwf	(I2C_Master_Read@a+1)^(0+384),w
  6478  1CC6  1D03               	btfss	3,2
  6479  1CC7  2CC9               	goto	u3621
  6480  1CC8  2CCA               	goto	u3620
  6481  1CC9                     u3621:
  6482  1CC9  2CCE               	goto	l375
  6483  1CCA                     u3620:
  6484  1CCA                     l3109:
  6485                           
  6486                           ;I2C.c: 62:         SSPCON2bits.ACKDT = 0;
  6487  1CCA  1683               	bsf	3,5	;RP0=1, select bank1
  6488  1CCB  1303               	bcf	3,6	;RP1=0, select bank1
  6489  1CCC  1291               	bcf	17,5	;volatile
  6490                           
  6491                           ;I2C.c: 63:     }else{
  6492  1CCD  2CD1               	goto	l376
  6493  1CCE                     l375:
  6494                           
  6495                           ;I2C.c: 64:         SSPCON2bits.ACKDT = 1;
  6496  1CCE  1683               	bsf	3,5	;RP0=1, select bank1
  6497  1CCF  1303               	bcf	3,6	;RP1=0, select bank1
  6498  1CD0  1691               	bsf	17,5	;volatile
  6499  1CD1                     l376:	
  6500                           ;I2C.c: 65:     }
  6501                           
  6502                           
  6503                           ;I2C.c: 66:     SSPCON2bits.ACKEN = 1;
  6504  1CD1  1611               	bsf	17,4	;volatile
  6505  1CD2                     l3111:
  6506                           
  6507                           ;I2C.c: 67:     return temp;
  6508  1CD2  1683               	bsf	3,5	;RP0=1, select bank3
  6509  1CD3  1703               	bsf	3,6	;RP1=1, select bank3
  6510  1CD4  0815               	movf	(I2C_Master_Read@temp+1)^(0+384),w
  6511  1CD5  0091               	movwf	(?_I2C_Master_Read+1)^(0+384)
  6512  1CD6  0814               	movf	I2C_Master_Read@temp^(0+384),w
  6513  1CD7  0090               	movwf	?_I2C_Master_Read^(0+384)
  6514  1CD8                     l377:
  6515  1CD8  0008               	return
  6516  1CD9                     __end_of_I2C_Master_Read:
  6517                           
  6518                           	psect	text25
  6519  1E6B                     __ptext25:	
  6520 ;; *************** function _LUX_config *****************
  6521 ;; Defined at:
  6522 ;;		line 223 in file "main_slave_p1.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;		None
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;		None
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  1    wreg      void 
  6529 ;; Registers used:
  6530 ;;		wreg, status,2, status,0, pclath, cstack
  6531 ;; Tracked objects:
  6532 ;;		On entry : 0/0
  6533 ;;		On exit  : 0/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6536 ;;      Params:         0       0       0       0       0
  6537 ;;      Locals:         0       0       0       0       0
  6538 ;;      Temps:          0       0       0       0       0
  6539 ;;      Totals:         0       0       0       0       0
  6540 ;;Total ram usage:        0 bytes
  6541 ;; Hardware stack levels used: 1
  6542 ;; Hardware stack levels required when called: 7
  6543 ;; This function calls:
  6544 ;;		_I2C_Master_Start
  6545 ;;		_I2C_Master_Stop
  6546 ;;		_I2C_Master_Write
  6547 ;; This function is called by:
  6548 ;;		_main
  6549 ;; This function uses a non-reentrant model
  6550 ;;
  6551                           
  6552  1E6B                     _LUX_config:	
  6553                           ;psect for function _LUX_config
  6554                           
  6555  1E6B                     l3729:	
  6556                           ;incstack = 0
  6557                           ; Regs used in _LUX_config: [wreg+status,2+status,0+pclath+cstack]
  6558                           
  6559                           
  6560                           ;main_slave_p1.c: 225:     I2C_Master_Start();
  6561  1E6B  160A  158A  233A  160A  158A  	fcall	_I2C_Master_Start
  6562                           
  6563                           ;main_slave_p1.c: 226:     I2C_Master_Write(0x72);
  6564  1E70  3072               	movlw	114
  6565  1E71  1683               	bsf	3,5	;RP0=1, select bank3
  6566  1E72  1703               	bsf	3,6	;RP1=1, select bank3
  6567  1E73  0090               	movwf	I2C_Master_Write@d^(0+384)
  6568  1E74  3000               	movlw	0
  6569  1E75  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  6570  1E76  160A  158A  235F  160A  158A  	fcall	_I2C_Master_Write
  6571                           
  6572                           ;main_slave_p1.c: 227:     I2C_Master_Write(0x80);
  6573  1E7B  3080               	movlw	128
  6574  1E7C  1683               	bsf	3,5	;RP0=1, select bank3
  6575  1E7D  1703               	bsf	3,6	;RP1=1, select bank3
  6576  1E7E  0090               	movwf	I2C_Master_Write@d^(0+384)
  6577  1E7F  3000               	movlw	0
  6578  1E80  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  6579  1E81  160A  158A  235F  160A  158A  	fcall	_I2C_Master_Write
  6580                           
  6581                           ;main_slave_p1.c: 228:     I2C_Master_Write(0x03);
  6582  1E86  3003               	movlw	3
  6583  1E87  1683               	bsf	3,5	;RP0=1, select bank3
  6584  1E88  1703               	bsf	3,6	;RP1=1, select bank3
  6585  1E89  0090               	movwf	I2C_Master_Write@d^(0+384)
  6586  1E8A  3000               	movlw	0
  6587  1E8B  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  6588  1E8C  160A  158A  235F  160A  158A  	fcall	_I2C_Master_Write
  6589                           
  6590                           ;main_slave_p1.c: 229:     I2C_Master_Stop();
  6591  1E91  160A  158A  2343  160A  158A  	fcall	_I2C_Master_Stop
  6592                           
  6593                           ;main_slave_p1.c: 231:     I2C_Master_Start();
  6594  1E96  160A  158A  233A  160A  158A  	fcall	_I2C_Master_Start
  6595                           
  6596                           ;main_slave_p1.c: 232:     I2C_Master_Write(0x72);
  6597  1E9B  3072               	movlw	114
  6598  1E9C  1683               	bsf	3,5	;RP0=1, select bank3
  6599  1E9D  1703               	bsf	3,6	;RP1=1, select bank3
  6600  1E9E  0090               	movwf	I2C_Master_Write@d^(0+384)
  6601  1E9F  3000               	movlw	0
  6602  1EA0  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  6603  1EA1  160A  158A  235F  160A  158A  	fcall	_I2C_Master_Write
  6604                           
  6605                           ;main_slave_p1.c: 233:     I2C_Master_Write(0x81);
  6606  1EA6  3081               	movlw	129
  6607  1EA7  1683               	bsf	3,5	;RP0=1, select bank3
  6608  1EA8  1703               	bsf	3,6	;RP1=1, select bank3
  6609  1EA9  0090               	movwf	I2C_Master_Write@d^(0+384)
  6610  1EAA  3000               	movlw	0
  6611  1EAB  0091               	movwf	(I2C_Master_Write@d^(0+384)+1)
  6612  1EAC  160A  158A  235F  160A  158A  	fcall	_I2C_Master_Write
  6613                           
  6614                           ;main_slave_p1.c: 234:     I2C_Master_Write(0x00);
  6615  1EB1  3000               	movlw	0
  6616  1EB2  1683               	bsf	3,5	;RP0=1, select bank3
  6617  1EB3  1703               	bsf	3,6	;RP1=1, select bank3
  6618  1EB4  0090               	movwf	I2C_Master_Write@d^(0+384)
  6619  1EB5  0091               	movwf	(I2C_Master_Write@d+1)^(0+384)
  6620  1EB6  160A  158A  235F  160A  158A  	fcall	_I2C_Master_Write
  6621                           
  6622                           ;main_slave_p1.c: 235:     I2C_Master_Stop();
  6623  1EBB  160A  158A  2343  160A  158A  	fcall	_I2C_Master_Stop
  6624  1EC0                     l196:
  6625  1EC0  0008               	return
  6626  1EC1                     __end_of_LUX_config:
  6627                           
  6628                           	psect	text26
  6629  1B5F                     __ptext26:	
  6630 ;; *************** function _I2C_Master_Write *****************
  6631 ;; Defined at:
  6632 ;;		line 47 in file "I2C.c"
  6633 ;; Parameters:    Size  Location     Type
  6634 ;;  d               2    0[BANK3 ] unsigned int 
  6635 ;; Auto vars:     Size  Location     Type
  6636 ;;		None
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  1    wreg      void 
  6639 ;; Registers used:
  6640 ;;		wreg, status,2, status,0, pclath, cstack
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6646 ;;      Params:         0       0       0       2       0
  6647 ;;      Locals:         0       0       0       0       0
  6648 ;;      Temps:          0       0       0       0       0
  6649 ;;      Totals:         0       0       0       2       0
  6650 ;;Total ram usage:        2 bytes
  6651 ;; Hardware stack levels used: 1
  6652 ;; Hardware stack levels required when called: 6
  6653 ;; This function calls:
  6654 ;;		_I2C_Master_Wait
  6655 ;; This function is called by:
  6656 ;;		_RTC_read
  6657 ;;		_LUX_config
  6658 ;;		_LUX_read
  6659 ;; This function uses a non-reentrant model
  6660 ;;
  6661                           
  6662  1B5F                     _I2C_Master_Write:	
  6663                           ;psect for function _I2C_Master_Write
  6664                           
  6665  1B5F                     l3091:	
  6666                           ;incstack = 0
  6667                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  6668                           
  6669                           
  6670                           ;I2C.c: 47: void I2C_Master_Write(unsigned d);I2C.c: 48: {;I2C.c: 49:     I2C_Master_Wai
      +                          t();
  6671  1B5F  160A  158A  2377  160A  158A  	fcall	_I2C_Master_Wait
  6672  1B64                     l3093:
  6673                           
  6674                           ;I2C.c: 50:     SSPBUF = d;
  6675  1B64  1683               	bsf	3,5	;RP0=1, select bank3
  6676  1B65  1703               	bsf	3,6	;RP1=1, select bank3
  6677  1B66  0810               	movf	I2C_Master_Write@d^(0+384),w
  6678  1B67  1283               	bcf	3,5	;RP0=0, select bank0
  6679  1B68  1303               	bcf	3,6	;RP1=0, select bank0
  6680  1B69  0093               	movwf	19	;volatile
  6681  1B6A                     l372:
  6682  1B6A  0008               	return
  6683  1B6B                     __end_of_I2C_Master_Write:
  6684                           
  6685                           	psect	text27
  6686  1B43                     __ptext27:	
  6687 ;; *************** function _I2C_Master_Stop *****************
  6688 ;; Defined at:
  6689 ;;		line 41 in file "I2C.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;		None
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;		None
  6694 ;; Return value:  Size  Location     Type
  6695 ;;                  1    wreg      void 
  6696 ;; Registers used:
  6697 ;;		wreg, status,2, status,0, pclath, cstack
  6698 ;; Tracked objects:
  6699 ;;		On entry : 0/0
  6700 ;;		On exit  : 0/0
  6701 ;;		Unchanged: 0/0
  6702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6703 ;;      Params:         0       0       0       0       0
  6704 ;;      Locals:         0       0       0       0       0
  6705 ;;      Temps:          0       0       0       0       0
  6706 ;;      Totals:         0       0       0       0       0
  6707 ;;Total ram usage:        0 bytes
  6708 ;; Hardware stack levels used: 1
  6709 ;; Hardware stack levels required when called: 6
  6710 ;; This function calls:
  6711 ;;		_I2C_Master_Wait
  6712 ;; This function is called by:
  6713 ;;		_RTC_read
  6714 ;;		_LUX_config
  6715 ;;		_LUX_read
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719  1B43                     _I2C_Master_Stop:	
  6720                           ;psect for function _I2C_Master_Stop
  6721                           
  6722  1B43                     l3119:	
  6723                           ;incstack = 0
  6724                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  6725                           
  6726                           
  6727                           ;I2C.c: 43:     I2C_Master_Wait();
  6728  1B43  160A  158A  2377  160A  158A  	fcall	_I2C_Master_Wait
  6729  1B48                     l3121:
  6730                           
  6731                           ;I2C.c: 44:     SSPCON2bits.PEN = 1;
  6732  1B48  1683               	bsf	3,5	;RP0=1, select bank1
  6733  1B49  1303               	bcf	3,6	;RP1=0, select bank1
  6734  1B4A  1511               	bsf	17,2	;volatile
  6735  1B4B                     l369:
  6736  1B4B  0008               	return
  6737  1B4C                     __end_of_I2C_Master_Stop:
  6738                           
  6739                           	psect	text28
  6740  1B3A                     __ptext28:	
  6741 ;; *************** function _I2C_Master_Start *****************
  6742 ;; Defined at:
  6743 ;;		line 29 in file "I2C.c"
  6744 ;; Parameters:    Size  Location     Type
  6745 ;;		None
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;		None
  6748 ;; Return value:  Size  Location     Type
  6749 ;;                  1    wreg      void 
  6750 ;; Registers used:
  6751 ;;		wreg, status,2, status,0, pclath, cstack
  6752 ;; Tracked objects:
  6753 ;;		On entry : 0/0
  6754 ;;		On exit  : 0/0
  6755 ;;		Unchanged: 0/0
  6756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6757 ;;      Params:         0       0       0       0       0
  6758 ;;      Locals:         0       0       0       0       0
  6759 ;;      Temps:          0       0       0       0       0
  6760 ;;      Totals:         0       0       0       0       0
  6761 ;;Total ram usage:        0 bytes
  6762 ;; Hardware stack levels used: 1
  6763 ;; Hardware stack levels required when called: 6
  6764 ;; This function calls:
  6765 ;;		_I2C_Master_Wait
  6766 ;; This function is called by:
  6767 ;;		_RTC_read
  6768 ;;		_LUX_config
  6769 ;;		_LUX_read
  6770 ;; This function uses a non-reentrant model
  6771 ;;
  6772                           
  6773  1B3A                     _I2C_Master_Start:	
  6774                           ;psect for function _I2C_Master_Start
  6775                           
  6776  1B3A                     l3087:	
  6777                           ;incstack = 0
  6778                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  6779                           
  6780                           
  6781                           ;I2C.c: 31:     I2C_Master_Wait();
  6782  1B3A  160A  158A  2377  160A  158A  	fcall	_I2C_Master_Wait
  6783  1B3F                     l3089:
  6784                           
  6785                           ;I2C.c: 32:     SSPCON2bits.SEN = 1;
  6786  1B3F  1683               	bsf	3,5	;RP0=1, select bank1
  6787  1B40  1303               	bcf	3,6	;RP1=0, select bank1
  6788  1B41  1411               	bsf	17,0	;volatile
  6789  1B42                     l363:
  6790  1B42  0008               	return
  6791  1B43                     __end_of_I2C_Master_Start:
  6792                           
  6793                           	psect	text29
  6794  1B77                     __ptext29:	
  6795 ;; *************** function _I2C_Master_Wait *****************
  6796 ;; Defined at:
  6797 ;;		line 24 in file "I2C.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;		None
  6800 ;; Auto vars:     Size  Location     Type
  6801 ;;		None
  6802 ;; Return value:  Size  Location     Type
  6803 ;;                  1    wreg      void 
  6804 ;; Registers used:
  6805 ;;		wreg, status,2
  6806 ;; Tracked objects:
  6807 ;;		On entry : 0/0
  6808 ;;		On exit  : 0/0
  6809 ;;		Unchanged: 0/0
  6810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6811 ;;      Params:         0       0       0       0       0
  6812 ;;      Locals:         0       0       0       0       0
  6813 ;;      Temps:          0       0       0       0       0
  6814 ;;      Totals:         0       0       0       0       0
  6815 ;;Total ram usage:        0 bytes
  6816 ;; Hardware stack levels used: 1
  6817 ;; Hardware stack levels required when called: 5
  6818 ;; This function calls:
  6819 ;;		Nothing
  6820 ;; This function is called by:
  6821 ;;		_I2C_Master_Start
  6822 ;;		_I2C_Master_RepeatedStart
  6823 ;;		_I2C_Master_Stop
  6824 ;;		_I2C_Master_Write
  6825 ;;		_I2C_Master_Read
  6826 ;; This function uses a non-reentrant model
  6827 ;;
  6828                           
  6829  1B77                     _I2C_Master_Wait:	
  6830                           ;psect for function _I2C_Master_Wait
  6831                           
  6832  1B77                     l2675:	
  6833                           ;incstack = 0
  6834                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  6835                           
  6836  1B77                     l357:	
  6837                           ;I2C.c: 26:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  6838                           
  6839  1B77  1683               	bsf	3,5	;RP0=1, select bank1
  6840  1B78  1303               	bcf	3,6	;RP1=0, select bank1
  6841  1B79  1914               	btfsc	20,2	;volatile
  6842  1B7A  2B7C               	goto	u2591
  6843  1B7B  2B7D               	goto	u2590
  6844  1B7C                     u2591:
  6845  1B7C  2B77               	goto	l357
  6846  1B7D                     u2590:
  6847  1B7D                     l2677:
  6848  1B7D  0811               	movf	17,w	;volatile
  6849  1B7E  391F               	andlw	31
  6850  1B7F  1D03               	btfss	3,2
  6851  1B80  2B82               	goto	u2601
  6852  1B81  2B83               	goto	u2600
  6853  1B82                     u2601:
  6854  1B82  2B77               	goto	l357
  6855  1B83                     u2600:
  6856  1B83                     l360:
  6857  1B83  0008               	return
  6858  1B84                     __end_of_I2C_Master_Wait:
  6859                           
  6860                           	psect	text30
  6861  03A8                     __ptext30:	
  6862 ;; *************** function _slave *****************
  6863 ;; Defined at:
  6864 ;;		line 78 in file "main_slave_p1.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;		None
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;		None
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  1    wreg      void 
  6871 ;; Registers used:
  6872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6878 ;;      Params:         0       0       0       0       0
  6879 ;;      Locals:         0       0      16       0       0
  6880 ;;      Temps:          0       0       8       0       0
  6881 ;;      Totals:         0       0      24       0       0
  6882 ;;Total ram usage:       24 bytes
  6883 ;; Hardware stack levels used: 1
  6884 ;; Hardware stack levels required when called: 4
  6885 ;; This function calls:
  6886 ;;		___fladd
  6887 ;;		___fldiv
  6888 ;;		___flmul
  6889 ;;		___flsub
  6890 ;;		___lwdiv
  6891 ;;		___xxtofl
  6892 ;;		_adc_read
  6893 ;;		_log
  6894 ;;		_map
  6895 ;;		i1___fltol
  6896 ;;		i1_tmr0_reload
  6897 ;; This function is called by:
  6898 ;;		Interrupt level 1
  6899 ;; This function uses a non-reentrant model
  6900 ;;
  6901                           
  6902  03A8                     _slave:	
  6903                           ;psect for function _slave
  6904                           
  6905  03A8                     i1l3941:
  6906                           
  6907                           ;main_slave_p1.c: 79:     if(INTCONbits.T0IF){
  6908  03A8  1D0B               	btfss	11,2	;volatile
  6909  03A9  2BAB               	goto	u500_21
  6910  03AA  2BAC               	goto	u500_20
  6911  03AB                     u500_21:
  6912  03AB  2BBC               	goto	i1l3947
  6913  03AC                     u500_20:
  6914  03AC                     i1l3943:
  6915                           
  6916                           ;main_slave_p1.c: 80:         pulso = !PORTDbits.RD1;
  6917  03AC  1003               	clrc
  6918  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  6919  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  6920  03AF  1C88               	btfss	8,1	;volatile
  6921  03B0  1403               	setc
  6922  03B1  3000               	movlw	0
  6923  03B2  1803               	btfsc	3,0
  6924  03B3  3001               	movlw	1
  6925  03B4  1683               	bsf	3,5	;RP0=1, select bank3
  6926  03B5  1703               	bsf	3,6	;RP1=1, select bank3
  6927  03B6  00EC               	movwf	_pulso^(0+384)
  6928  03B7                     i1l3945:
  6929                           
  6930                           ;main_slave_p1.c: 81:         tmr0_reload();
  6931  03B7  160A  158A  232C  120A  118A  	fcall	i1_tmr0_reload
  6932  03BC                     i1l3947:
  6933                           
  6934                           ;main_slave_p1.c: 84:     if(INTCONbits.RBIF){
  6935  03BC  1C0B               	btfss	11,0	;volatile
  6936  03BD  2BBF               	goto	u501_21
  6937  03BE  2BC0               	goto	u501_20
  6938  03BF                     u501_21:
  6939  03BF  2BFD               	goto	i1l3971
  6940  03C0                     u501_20:
  6941  03C0                     i1l3949:
  6942                           
  6943                           ;main_slave_p1.c: 85:         if(!PORTBbits.RB1){
  6944  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  6945  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  6946  03C2  1886               	btfsc	6,1	;volatile
  6947  03C3  2BC5               	goto	u502_21
  6948  03C4  2BC6               	goto	u502_20
  6949  03C5                     u502_21:
  6950  03C5  2BCD               	goto	i1l143
  6951  03C6                     u502_20:
  6952  03C6                     i1l3951:
  6953                           
  6954                           ;main_slave_p1.c: 86:             switch_servo = 1;
  6955  03C6  3001               	movlw	1
  6956  03C7  1683               	bsf	3,5	;RP0=1, select bank3
  6957  03C8  1703               	bsf	3,6	;RP1=1, select bank3
  6958  03C9  00D8               	movwf	_switch_servo^(0+384)
  6959  03CA  3000               	movlw	0
  6960  03CB  00D9               	movwf	(_switch_servo^(0+384)+1)
  6961                           
  6962                           ;main_slave_p1.c: 87:         }
  6963  03CC  2BD5               	goto	i1l3955
  6964  03CD                     i1l143:	
  6965                           ;main_slave_p1.c: 88:         else if(PORTBbits.RB1){
  6966                           
  6967  03CD  1C86               	btfss	6,1	;volatile
  6968  03CE  2BD0               	goto	u503_21
  6969  03CF  2BD1               	goto	u503_20
  6970  03D0                     u503_21:
  6971  03D0  2BD5               	goto	i1l3955
  6972  03D1                     u503_20:
  6973  03D1                     i1l3953:
  6974                           
  6975                           ;main_slave_p1.c: 89:             switch_servo = 0;
  6976  03D1  1683               	bsf	3,5	;RP0=1, select bank3
  6977  03D2  1703               	bsf	3,6	;RP1=1, select bank3
  6978  03D3  01D8               	clrf	_switch_servo^(0+384)
  6979  03D4  01D9               	clrf	(_switch_servo+1)^(0+384)
  6980  03D5                     i1l3955:
  6981                           
  6982                           ;main_slave_p1.c: 92:         if(!PORTBbits.RB2){
  6983  03D5  1283               	bcf	3,5	;RP0=0, select bank0
  6984  03D6  1303               	bcf	3,6	;RP1=0, select bank0
  6985  03D7  1906               	btfsc	6,2	;volatile
  6986  03D8  2BDA               	goto	u504_21
  6987  03D9  2BDB               	goto	u504_20
  6988  03DA                     u504_21:
  6989  03DA  2BE2               	goto	i1l146
  6990  03DB                     u504_20:
  6991  03DB                     i1l3957:
  6992                           
  6993                           ;main_slave_p1.c: 93:             dir = 1;
  6994  03DB  1683               	bsf	3,5	;RP0=1, select bank3
  6995  03DC  1703               	bsf	3,6	;RP1=1, select bank3
  6996  03DD  01EB               	clrf	_dir^(0+384)
  6997  03DE  0AEB               	incf	_dir^(0+384),f
  6998                           
  6999                           ;main_slave_p1.c: 94:             PORTDbits.RD2 = 1;
  7000  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  7001  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  7002  03E1  1508               	bsf	8,2	;volatile
  7003  03E2                     i1l146:	
  7004                           ;main_slave_p1.c: 96:         }
  7005                           
  7006                           
  7007                           ;main_slave_p1.c: 98:         if(!PORTBbits.RB7){
  7008  03E2  1B86               	btfsc	6,7	;volatile
  7009  03E3  2BE5               	goto	u505_21
  7010  03E4  2BE6               	goto	u505_20
  7011  03E5                     u505_21:
  7012  03E5  2BEC               	goto	i1l3963
  7013  03E6                     u505_20:
  7014  03E6                     i1l3959:
  7015                           
  7016                           ;main_slave_p1.c: 99:             dir = 0;
  7017  03E6  1683               	bsf	3,5	;RP0=1, select bank3
  7018  03E7  1703               	bsf	3,6	;RP1=1, select bank3
  7019  03E8  01EB               	clrf	_dir^(0+384)
  7020  03E9                     i1l3961:
  7021                           
  7022                           ;main_slave_p1.c: 100:             PORTDbits.RD2 = 0;
  7023  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  7024  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  7025  03EB  1108               	bcf	8,2	;volatile
  7026  03EC                     i1l3963:
  7027                           
  7028                           ;main_slave_p1.c: 102:         if(PORTBbits.RB2 && PORTBbits.RB7){
  7029  03EC  1D06               	btfss	6,2	;volatile
  7030  03ED  2BEF               	goto	u506_21
  7031  03EE  2BF0               	goto	u506_20
  7032  03EF                     u506_21:
  7033  03EF  2BFC               	goto	i1l3969
  7034  03F0                     u506_20:
  7035  03F0                     i1l3965:
  7036  03F0  1F86               	btfss	6,7	;volatile
  7037  03F1  2BF3               	goto	u507_21
  7038  03F2  2BF4               	goto	u507_20
  7039  03F3                     u507_21:
  7040  03F3  2BFC               	goto	i1l3969
  7041  03F4                     u507_20:
  7042  03F4                     i1l3967:
  7043                           
  7044                           ;main_slave_p1.c: 103:             dir = 5;
  7045  03F4  3005               	movlw	5
  7046  03F5  1683               	bsf	3,5	;RP0=1, select bank1
  7047  03F6  1303               	bcf	3,6	;RP1=0, select bank1
  7048  03F7  00C0               	movwf	??_slave^(0+128)
  7049  03F8  0840               	movf	??_slave^(0+128),w
  7050  03F9  1683               	bsf	3,5	;RP0=1, select bank3
  7051  03FA  1703               	bsf	3,6	;RP1=1, select bank3
  7052  03FB  00EB               	movwf	_dir^(0+384)
  7053  03FC                     i1l3969:
  7054                           
  7055                           ;main_slave_p1.c: 105:         INTCONbits.RBIF = 0;
  7056  03FC  100B               	bcf	11,0	;volatile
  7057  03FD                     i1l3971:
  7058                           
  7059                           ;main_slave_p1.c: 108:     if(PIR1bits.ADIF){
  7060  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  7061  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  7062  03FF  1F0C               	btfss	12,6	;volatile
  7063  0400  2C02               	goto	u508_21
  7064  0401  2C03               	goto	u508_20
  7065  0402                     u508_21:
  7066  0402  2EDC               	goto	i1l151
  7067  0403                     u508_20:
  7068  0403                     i1l3973:
  7069                           
  7070                           ;main_slave_p1.c: 109:         if(ADCON0bits.CHS == 0){
  7071  0403  0C1F               	rrf	31,w	;volatile
  7072  0404  1683               	bsf	3,5	;RP0=1, select bank1
  7073  0405  1303               	bcf	3,6	;RP1=0, select bank1
  7074  0406  00C0               	movwf	??_slave^(0+128)
  7075  0407  0C40               	rrf	??_slave^(0+128),w
  7076  0408  390F               	andlw	15
  7077  0409  3A00               	xorlw	0
  7078  040A  1D03               	skipz
  7079  040B  2C0D               	goto	u509_21
  7080  040C  2C0E               	goto	u509_20
  7081  040D                     u509_21:
  7082  040D  2ED9               	goto	i1l3989
  7083  040E                     u509_20:
  7084  040E                     i1l3975:
  7085                           
  7086                           ;main_slave_p1.c: 110:             TEMP_POT = map(adc_read(), 0, 650, -55, 125);
  7087  040E  160A  158A  2355  120A  118A  	fcall	_adc_read
  7088  0413  0871               	movf	?_adc_read+1,w
  7089  0414  1683               	bsf	3,5	;RP0=1, select bank1
  7090  0415  1303               	bcf	3,6	;RP1=0, select bank1
  7091  0416  00B7               	movwf	(map@x+1)^(0+128)
  7092  0417  0870               	movf	?_adc_read,w
  7093  0418  00B6               	movwf	map@x^(0+128)
  7094  0419  3000               	movlw	0
  7095  041A  00B8               	movwf	map@x0^(0+128)
  7096  041B  00B9               	movwf	(map@x0+1)^(0+128)
  7097  041C  308A               	movlw	138
  7098  041D  00BA               	movwf	map@x1^(0+128)
  7099  041E  3002               	movlw	2
  7100  041F  00BB               	movwf	(map@x1^(0+128)+1)
  7101  0420  30C9               	movlw	201
  7102  0421  00BC               	movwf	map@y0^(0+128)
  7103  0422  30FF               	movlw	255
  7104  0423  00BD               	movwf	(map@y0^(0+128)+1)
  7105  0424  307D               	movlw	125
  7106  0425  00BE               	movwf	map@y1^(0+128)
  7107  0426  3000               	movlw	0
  7108  0427  00BF               	movwf	(map@y1^(0+128)+1)
  7109  0428  160A  118A  24E7  120A  118A  	fcall	_map
  7110  042D  1683               	bsf	3,5	;RP0=1, select bank1
  7111  042E  1303               	bcf	3,6	;RP1=0, select bank1
  7112  042F  0837               	movf	(?_map+1)^(0+128),w
  7113  0430  00E3               	movwf	(_TEMP_POT+1)^(0+128)
  7114  0431  0836               	movf	?_map^(0+128),w
  7115  0432  00E2               	movwf	_TEMP_POT^(0+128)
  7116                           
  7117                           ;main_slave_p1.c: 113:             R2 = R1 * ((float)(1023/TEMP_POT)-1);
  7118  0433  086B               	movf	(_R1+3)^(0+128),w
  7119  0434  1283               	bcf	3,5	;RP0=0, select bank0
  7120  0435  1303               	bcf	3,6	;RP1=0, select bank0
  7121  0436  00C1               	movwf	___flmul@b+3
  7122  0437  1683               	bsf	3,5	;RP0=1, select bank1
  7123  0438  1303               	bcf	3,6	;RP1=0, select bank1
  7124  0439  086A               	movf	(_R1+2)^(0+128),w
  7125  043A  1283               	bcf	3,5	;RP0=0, select bank0
  7126  043B  1303               	bcf	3,6	;RP1=0, select bank0
  7127  043C  00C0               	movwf	___flmul@b+2
  7128  043D  1683               	bsf	3,5	;RP0=1, select bank1
  7129  043E  1303               	bcf	3,6	;RP1=0, select bank1
  7130  043F  0869               	movf	(_R1+1)^(0+128),w
  7131  0440  1283               	bcf	3,5	;RP0=0, select bank0
  7132  0441  1303               	bcf	3,6	;RP1=0, select bank0
  7133  0442  00BF               	movwf	___flmul@b+1
  7134  0443  1683               	bsf	3,5	;RP0=1, select bank1
  7135  0444  1303               	bcf	3,6	;RP1=0, select bank1
  7136  0445  0868               	movf	_R1^(0+128),w
  7137  0446  1283               	bcf	3,5	;RP0=0, select bank0
  7138  0447  1303               	bcf	3,6	;RP1=0, select bank0
  7139  0448  00BE               	movwf	___flmul@b
  7140  0449  30BF               	movlw	191
  7141  044A  00AD               	movwf	___fladd@b+3
  7142  044B  3080               	movlw	128
  7143  044C  00AC               	movwf	___fladd@b+2
  7144  044D  3000               	movlw	0
  7145  044E  00AB               	movwf	___fladd@b+1
  7146  044F  3000               	movlw	0
  7147  0450  00AA               	movwf	___fladd@b
  7148  0451  30FF               	movlw	255
  7149  0452  00F2               	movwf	___lwdiv@dividend
  7150  0453  3003               	movlw	3
  7151  0454  00F3               	movwf	___lwdiv@dividend+1
  7152  0455  1683               	bsf	3,5	;RP0=1, select bank1
  7153  0456  1303               	bcf	3,6	;RP1=0, select bank1
  7154  0457  0863               	movf	(_TEMP_POT+1)^(0+128),w
  7155  0458  00F1               	movwf	___lwdiv@divisor+1
  7156  0459  0862               	movf	_TEMP_POT^(0+128),w
  7157  045A  00F0               	movwf	___lwdiv@divisor
  7158  045B  160A  158A  2591  120A  118A  	fcall	___lwdiv
  7159  0460  0870               	movf	?___lwdiv,w
  7160  0461  1683               	bsf	3,5	;RP0=1, select bank1
  7161  0462  1303               	bcf	3,6	;RP1=0, select bank1
  7162  0463  00C0               	movwf	??_slave^(0+128)
  7163  0464  0871               	movf	?___lwdiv+1,w
  7164  0465  00C1               	movwf	(??_slave^(0+128)+1)
  7165  0466  01C2               	clrf	(??_slave^(0+128)+2)
  7166  0467  01C3               	clrf	(??_slave^(0+128)+3)
  7167  0468  0843               	movf	(??_slave+3)^(0+128),w
  7168  0469  00FC               	movwf	___xxtofl@val+3
  7169  046A  0842               	movf	(??_slave+2)^(0+128),w
  7170  046B  00FB               	movwf	___xxtofl@val+2
  7171  046C  0841               	movf	(??_slave+1)^(0+128),w
  7172  046D  00FA               	movwf	___xxtofl@val+1
  7173  046E  0840               	movf	??_slave^(0+128),w
  7174  046F  00F9               	movwf	___xxtofl@val
  7175  0470  3000               	movlw	0
  7176  0471  160A  118A  25A0  120A  118A  	fcall	___xxtofl
  7177  0476  087C               	movf	?___xxtofl+3,w
  7178  0477  1283               	bcf	3,5	;RP0=0, select bank0
  7179  0478  1303               	bcf	3,6	;RP1=0, select bank0
  7180  0479  00B1               	movwf	___fladd@a+3
  7181  047A  087B               	movf	?___xxtofl+2,w
  7182  047B  00B0               	movwf	___fladd@a+2
  7183  047C  087A               	movf	?___xxtofl+1,w
  7184  047D  00AF               	movwf	___fladd@a+1
  7185  047E  0879               	movf	?___xxtofl,w
  7186  047F  00AE               	movwf	___fladd@a
  7187  0480  120A  158A  203A  120A  118A  	fcall	___fladd
  7188  0485  1283               	bcf	3,5	;RP0=0, select bank0
  7189  0486  1303               	bcf	3,6	;RP1=0, select bank0
  7190  0487  082D               	movf	?___fladd+3,w
  7191  0488  00C5               	movwf	___flmul@a+3
  7192  0489  082C               	movf	?___fladd+2,w
  7193  048A  00C4               	movwf	___flmul@a+2
  7194  048B  082B               	movf	?___fladd+1,w
  7195  048C  00C3               	movwf	___flmul@a+1
  7196  048D  082A               	movf	?___fladd,w
  7197  048E  00C2               	movwf	___flmul@a
  7198  048F  120A  118A  2047  120A  118A  	fcall	___flmul
  7199  0494  1283               	bcf	3,5	;RP0=0, select bank0
  7200  0495  1303               	bcf	3,6	;RP1=0, select bank0
  7201  0496  0841               	movf	?___flmul+3,w
  7202  0497  1683               	bsf	3,5	;RP0=1, select bank1
  7203  0498  1303               	bcf	3,6	;RP1=0, select bank1
  7204  0499  00DB               	movwf	(_R2+3)^(0+128)
  7205  049A  1283               	bcf	3,5	;RP0=0, select bank0
  7206  049B  1303               	bcf	3,6	;RP1=0, select bank0
  7207  049C  0840               	movf	?___flmul+2,w
  7208  049D  1683               	bsf	3,5	;RP0=1, select bank1
  7209  049E  1303               	bcf	3,6	;RP1=0, select bank1
  7210  049F  00DA               	movwf	(_R2+2)^(0+128)
  7211  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  7212  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  7213  04A2  083F               	movf	?___flmul+1,w
  7214  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  7215  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  7216  04A5  00D9               	movwf	(_R2+1)^(0+128)
  7217  04A6  1283               	bcf	3,5	;RP0=0, select bank0
  7218  04A7  1303               	bcf	3,6	;RP1=0, select bank0
  7219  04A8  083E               	movf	?___flmul,w
  7220  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  7221  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  7222  04AB  00D8               	movwf	_R2^(0+128)
  7223  04AC                     i1l3977:
  7224                           
  7225                           ;main_slave_p1.c: 114:             logR2 = log(R2);
  7226  04AC  085B               	movf	(_R2+3)^(0+128),w
  7227  04AD  1283               	bcf	3,5	;RP0=0, select bank0
  7228  04AE  1303               	bcf	3,6	;RP1=0, select bank0
  7229  04AF  00EB               	movwf	log@x+3
  7230  04B0  1683               	bsf	3,5	;RP0=1, select bank1
  7231  04B1  1303               	bcf	3,6	;RP1=0, select bank1
  7232  04B2  085A               	movf	(_R2+2)^(0+128),w
  7233  04B3  1283               	bcf	3,5	;RP0=0, select bank0
  7234  04B4  1303               	bcf	3,6	;RP1=0, select bank0
  7235  04B5  00EA               	movwf	log@x+2
  7236  04B6  1683               	bsf	3,5	;RP0=1, select bank1
  7237  04B7  1303               	bcf	3,6	;RP1=0, select bank1
  7238  04B8  0859               	movf	(_R2+1)^(0+128),w
  7239  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  7240  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  7241  04BB  00E9               	movwf	log@x+1
  7242  04BC  1683               	bsf	3,5	;RP0=1, select bank1
  7243  04BD  1303               	bcf	3,6	;RP1=0, select bank1
  7244  04BE  0858               	movf	_R2^(0+128),w
  7245  04BF  1283               	bcf	3,5	;RP0=0, select bank0
  7246  04C0  1303               	bcf	3,6	;RP1=0, select bank0
  7247  04C1  00E8               	movwf	log@x
  7248  04C2  120A  118A  26E9  120A  118A  	fcall	_log
  7249  04C7  1283               	bcf	3,5	;RP0=0, select bank0
  7250  04C8  1303               	bcf	3,6	;RP1=0, select bank0
  7251  04C9  086B               	movf	?_log+3,w
  7252  04CA  1683               	bsf	3,5	;RP0=1, select bank1
  7253  04CB  1303               	bcf	3,6	;RP1=0, select bank1
  7254  04CC  00DF               	movwf	(_logR2+3)^(0+128)
  7255  04CD  1283               	bcf	3,5	;RP0=0, select bank0
  7256  04CE  1303               	bcf	3,6	;RP1=0, select bank0
  7257  04CF  086A               	movf	?_log+2,w
  7258  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  7259  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  7260  04D2  00DE               	movwf	(_logR2+2)^(0+128)
  7261  04D3  1283               	bcf	3,5	;RP0=0, select bank0
  7262  04D4  1303               	bcf	3,6	;RP1=0, select bank0
  7263  04D5  0869               	movf	?_log+1,w
  7264  04D6  1683               	bsf	3,5	;RP0=1, select bank1
  7265  04D7  1303               	bcf	3,6	;RP1=0, select bank1
  7266  04D8  00DD               	movwf	(_logR2+1)^(0+128)
  7267  04D9  1283               	bcf	3,5	;RP0=0, select bank0
  7268  04DA  1303               	bcf	3,6	;RP1=0, select bank0
  7269  04DB  0868               	movf	?_log,w
  7270  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  7271  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  7272  04DE  00DC               	movwf	_logR2^(0+128)
  7273  04DF                     i1l3979:
  7274                           
  7275                           ;main_slave_p1.c: 115:             TC = (uint8_t)(273.15 - (1 / (A + B * logR2 + C * log
      +                          R2 * logR2 * logR2)));
  7276  04DF  1683               	bsf	3,5	;RP0=1, select bank3
  7277  04E0  1703               	bsf	3,6	;RP1=1, select bank3
  7278  04E1  0864               	movf	(_C+3)^(0+384),w
  7279  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  7280  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  7281  04E4  00C5               	movwf	___flmul@a+3
  7282  04E5  1683               	bsf	3,5	;RP0=1, select bank3
  7283  04E6  1703               	bsf	3,6	;RP1=1, select bank3
  7284  04E7  0863               	movf	(_C+2)^(0+384),w
  7285  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  7286  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  7287  04EA  00C4               	movwf	___flmul@a+2
  7288  04EB  1683               	bsf	3,5	;RP0=1, select bank3
  7289  04EC  1703               	bsf	3,6	;RP1=1, select bank3
  7290  04ED  0862               	movf	(_C+1)^(0+384),w
  7291  04EE  1283               	bcf	3,5	;RP0=0, select bank0
  7292  04EF  1303               	bcf	3,6	;RP1=0, select bank0
  7293  04F0  00C3               	movwf	___flmul@a+1
  7294  04F1  1683               	bsf	3,5	;RP0=1, select bank3
  7295  04F2  1703               	bsf	3,6	;RP1=1, select bank3
  7296  04F3  0861               	movf	_C^(0+384),w
  7297  04F4  1283               	bcf	3,5	;RP0=0, select bank0
  7298  04F5  1303               	bcf	3,6	;RP1=0, select bank0
  7299  04F6  00C2               	movwf	___flmul@a
  7300  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  7301  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  7302  04F9  085F               	movf	(_logR2+3)^(0+128),w
  7303  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  7304  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  7305  04FC  00C1               	movwf	___flmul@b+3
  7306  04FD  1683               	bsf	3,5	;RP0=1, select bank1
  7307  04FE  1303               	bcf	3,6	;RP1=0, select bank1
  7308  04FF  085E               	movf	(_logR2+2)^(0+128),w
  7309  0500  1283               	bcf	3,5	;RP0=0, select bank0
  7310  0501  1303               	bcf	3,6	;RP1=0, select bank0
  7311  0502  00C0               	movwf	___flmul@b+2
  7312  0503  1683               	bsf	3,5	;RP0=1, select bank1
  7313  0504  1303               	bcf	3,6	;RP1=0, select bank1
  7314  0505  085D               	movf	(_logR2+1)^(0+128),w
  7315  0506  1283               	bcf	3,5	;RP0=0, select bank0
  7316  0507  1303               	bcf	3,6	;RP1=0, select bank0
  7317  0508  00BF               	movwf	___flmul@b+1
  7318  0509  1683               	bsf	3,5	;RP0=1, select bank1
  7319  050A  1303               	bcf	3,6	;RP1=0, select bank1
  7320  050B  085C               	movf	_logR2^(0+128),w
  7321  050C  1283               	bcf	3,5	;RP0=0, select bank0
  7322  050D  1303               	bcf	3,6	;RP1=0, select bank0
  7323  050E  00BE               	movwf	___flmul@b
  7324  050F  120A  118A  2047  120A  118A  	fcall	___flmul
  7325  0514  1283               	bcf	3,5	;RP0=0, select bank0
  7326  0515  1303               	bcf	3,6	;RP1=0, select bank0
  7327  0516  0841               	movf	?___flmul+3,w
  7328  0517  1683               	bsf	3,5	;RP0=1, select bank1
  7329  0518  1303               	bcf	3,6	;RP1=0, select bank1
  7330  0519  00CB               	movwf	(_slave$1780+3)^(0+128)
  7331  051A  1283               	bcf	3,5	;RP0=0, select bank0
  7332  051B  1303               	bcf	3,6	;RP1=0, select bank0
  7333  051C  0840               	movf	?___flmul+2,w
  7334  051D  1683               	bsf	3,5	;RP0=1, select bank1
  7335  051E  1303               	bcf	3,6	;RP1=0, select bank1
  7336  051F  00CA               	movwf	(_slave$1780+2)^(0+128)
  7337  0520  1283               	bcf	3,5	;RP0=0, select bank0
  7338  0521  1303               	bcf	3,6	;RP1=0, select bank0
  7339  0522  083F               	movf	?___flmul+1,w
  7340  0523  1683               	bsf	3,5	;RP0=1, select bank1
  7341  0524  1303               	bcf	3,6	;RP1=0, select bank1
  7342  0525  00C9               	movwf	(_slave$1780+1)^(0+128)
  7343  0526  1283               	bcf	3,5	;RP0=0, select bank0
  7344  0527  1303               	bcf	3,6	;RP1=0, select bank0
  7345  0528  083E               	movf	?___flmul,w
  7346  0529  1683               	bsf	3,5	;RP0=1, select bank1
  7347  052A  1303               	bcf	3,6	;RP1=0, select bank1
  7348  052B  00C8               	movwf	_slave$1780^(0+128)
  7349  052C                     i1l3981:
  7350                           
  7351                           ;main_slave_p1.c: 115:             TC = (uint8_t)(273.15 - (1 / (A + B * logR2 + C * log
      +                          R2 * logR2 * logR2)));
  7352  052C  084B               	movf	(_slave$1780+3)^(0+128),w
  7353  052D  1283               	bcf	3,5	;RP0=0, select bank0
  7354  052E  1303               	bcf	3,6	;RP1=0, select bank0
  7355  052F  00C5               	movwf	___flmul@a+3
  7356  0530  1683               	bsf	3,5	;RP0=1, select bank1
  7357  0531  1303               	bcf	3,6	;RP1=0, select bank1
  7358  0532  084A               	movf	(_slave$1780+2)^(0+128),w
  7359  0533  1283               	bcf	3,5	;RP0=0, select bank0
  7360  0534  1303               	bcf	3,6	;RP1=0, select bank0
  7361  0535  00C4               	movwf	___flmul@a+2
  7362  0536  1683               	bsf	3,5	;RP0=1, select bank1
  7363  0537  1303               	bcf	3,6	;RP1=0, select bank1
  7364  0538  0849               	movf	(_slave$1780+1)^(0+128),w
  7365  0539  1283               	bcf	3,5	;RP0=0, select bank0
  7366  053A  1303               	bcf	3,6	;RP1=0, select bank0
  7367  053B  00C3               	movwf	___flmul@a+1
  7368  053C  1683               	bsf	3,5	;RP0=1, select bank1
  7369  053D  1303               	bcf	3,6	;RP1=0, select bank1
  7370  053E  0848               	movf	_slave$1780^(0+128),w
  7371  053F  1283               	bcf	3,5	;RP0=0, select bank0
  7372  0540  1303               	bcf	3,6	;RP1=0, select bank0
  7373  0541  00C2               	movwf	___flmul@a
  7374  0542  1683               	bsf	3,5	;RP0=1, select bank1
  7375  0543  1303               	bcf	3,6	;RP1=0, select bank1
  7376  0544  085F               	movf	(_logR2+3)^(0+128),w
  7377  0545  1283               	bcf	3,5	;RP0=0, select bank0
  7378  0546  1303               	bcf	3,6	;RP1=0, select bank0
  7379  0547  00C1               	movwf	___flmul@b+3
  7380  0548  1683               	bsf	3,5	;RP0=1, select bank1
  7381  0549  1303               	bcf	3,6	;RP1=0, select bank1
  7382  054A  085E               	movf	(_logR2+2)^(0+128),w
  7383  054B  1283               	bcf	3,5	;RP0=0, select bank0
  7384  054C  1303               	bcf	3,6	;RP1=0, select bank0
  7385  054D  00C0               	movwf	___flmul@b+2
  7386  054E  1683               	bsf	3,5	;RP0=1, select bank1
  7387  054F  1303               	bcf	3,6	;RP1=0, select bank1
  7388  0550  085D               	movf	(_logR2+1)^(0+128),w
  7389  0551  1283               	bcf	3,5	;RP0=0, select bank0
  7390  0552  1303               	bcf	3,6	;RP1=0, select bank0
  7391  0553  00BF               	movwf	___flmul@b+1
  7392  0554  1683               	bsf	3,5	;RP0=1, select bank1
  7393  0555  1303               	bcf	3,6	;RP1=0, select bank1
  7394  0556  085C               	movf	_logR2^(0+128),w
  7395  0557  1283               	bcf	3,5	;RP0=0, select bank0
  7396  0558  1303               	bcf	3,6	;RP1=0, select bank0
  7397  0559  00BE               	movwf	___flmul@b
  7398  055A  120A  118A  2047  120A  118A  	fcall	___flmul
  7399  055F  1283               	bcf	3,5	;RP0=0, select bank0
  7400  0560  1303               	bcf	3,6	;RP1=0, select bank0
  7401  0561  0841               	movf	?___flmul+3,w
  7402  0562  1683               	bsf	3,5	;RP0=1, select bank1
  7403  0563  1303               	bcf	3,6	;RP1=0, select bank1
  7404  0564  00CF               	movwf	(_slave$1781+3)^(0+128)
  7405  0565  1283               	bcf	3,5	;RP0=0, select bank0
  7406  0566  1303               	bcf	3,6	;RP1=0, select bank0
  7407  0567  0840               	movf	?___flmul+2,w
  7408  0568  1683               	bsf	3,5	;RP0=1, select bank1
  7409  0569  1303               	bcf	3,6	;RP1=0, select bank1
  7410  056A  00CE               	movwf	(_slave$1781+2)^(0+128)
  7411  056B  1283               	bcf	3,5	;RP0=0, select bank0
  7412  056C  1303               	bcf	3,6	;RP1=0, select bank0
  7413  056D  083F               	movf	?___flmul+1,w
  7414  056E  1683               	bsf	3,5	;RP0=1, select bank1
  7415  056F  1303               	bcf	3,6	;RP1=0, select bank1
  7416  0570  00CD               	movwf	(_slave$1781+1)^(0+128)
  7417  0571  1283               	bcf	3,5	;RP0=0, select bank0
  7418  0572  1303               	bcf	3,6	;RP1=0, select bank0
  7419  0573  083E               	movf	?___flmul,w
  7420  0574  1683               	bsf	3,5	;RP0=1, select bank1
  7421  0575  1303               	bcf	3,6	;RP1=0, select bank1
  7422  0576  00CC               	movwf	_slave$1781^(0+128)
  7423  0577                     i1l3983:
  7424                           
  7425                           ;main_slave_p1.c: 115:             TC = (uint8_t)(273.15 - (1 / (A + B * logR2 + C * log
      +                          R2 * logR2 * logR2)));
  7426  0577  086F               	movf	(_B+3)^(0+128),w
  7427  0578  1283               	bcf	3,5	;RP0=0, select bank0
  7428  0579  1303               	bcf	3,6	;RP1=0, select bank0
  7429  057A  00C5               	movwf	___flmul@a+3
  7430  057B  1683               	bsf	3,5	;RP0=1, select bank1
  7431  057C  1303               	bcf	3,6	;RP1=0, select bank1
  7432  057D  086E               	movf	(_B+2)^(0+128),w
  7433  057E  1283               	bcf	3,5	;RP0=0, select bank0
  7434  057F  1303               	bcf	3,6	;RP1=0, select bank0
  7435  0580  00C4               	movwf	___flmul@a+2
  7436  0581  1683               	bsf	3,5	;RP0=1, select bank1
  7437  0582  1303               	bcf	3,6	;RP1=0, select bank1
  7438  0583  086D               	movf	(_B+1)^(0+128),w
  7439  0584  1283               	bcf	3,5	;RP0=0, select bank0
  7440  0585  1303               	bcf	3,6	;RP1=0, select bank0
  7441  0586  00C3               	movwf	___flmul@a+1
  7442  0587  1683               	bsf	3,5	;RP0=1, select bank1
  7443  0588  1303               	bcf	3,6	;RP1=0, select bank1
  7444  0589  086C               	movf	_B^(0+128),w
  7445  058A  1283               	bcf	3,5	;RP0=0, select bank0
  7446  058B  1303               	bcf	3,6	;RP1=0, select bank0
  7447  058C  00C2               	movwf	___flmul@a
  7448  058D  1683               	bsf	3,5	;RP0=1, select bank1
  7449  058E  1303               	bcf	3,6	;RP1=0, select bank1
  7450  058F  085F               	movf	(_logR2+3)^(0+128),w
  7451  0590  1283               	bcf	3,5	;RP0=0, select bank0
  7452  0591  1303               	bcf	3,6	;RP1=0, select bank0
  7453  0592  00C1               	movwf	___flmul@b+3
  7454  0593  1683               	bsf	3,5	;RP0=1, select bank1
  7455  0594  1303               	bcf	3,6	;RP1=0, select bank1
  7456  0595  085E               	movf	(_logR2+2)^(0+128),w
  7457  0596  1283               	bcf	3,5	;RP0=0, select bank0
  7458  0597  1303               	bcf	3,6	;RP1=0, select bank0
  7459  0598  00C0               	movwf	___flmul@b+2
  7460  0599  1683               	bsf	3,5	;RP0=1, select bank1
  7461  059A  1303               	bcf	3,6	;RP1=0, select bank1
  7462  059B  085D               	movf	(_logR2+1)^(0+128),w
  7463  059C  1283               	bcf	3,5	;RP0=0, select bank0
  7464  059D  1303               	bcf	3,6	;RP1=0, select bank0
  7465  059E  00BF               	movwf	___flmul@b+1
  7466  059F  1683               	bsf	3,5	;RP0=1, select bank1
  7467  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  7468  05A1  085C               	movf	_logR2^(0+128),w
  7469  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  7470  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  7471  05A4  00BE               	movwf	___flmul@b
  7472  05A5  120A  118A  2047  120A  118A  	fcall	___flmul
  7473  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  7474  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  7475  05AC  0841               	movf	?___flmul+3,w
  7476  05AD  00B1               	movwf	___fladd@a+3
  7477  05AE  0840               	movf	?___flmul+2,w
  7478  05AF  00B0               	movwf	___fladd@a+2
  7479  05B0  083F               	movf	?___flmul+1,w
  7480  05B1  00AF               	movwf	___fladd@a+1
  7481  05B2  083E               	movf	?___flmul,w
  7482  05B3  00AE               	movwf	___fladd@a
  7483  05B4  1683               	bsf	3,5	;RP0=1, select bank1
  7484  05B5  1303               	bcf	3,6	;RP1=0, select bank1
  7485  05B6  0867               	movf	(_A+3)^(0+128),w
  7486  05B7  1283               	bcf	3,5	;RP0=0, select bank0
  7487  05B8  1303               	bcf	3,6	;RP1=0, select bank0
  7488  05B9  00AD               	movwf	___fladd@b+3
  7489  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  7490  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  7491  05BC  0866               	movf	(_A+2)^(0+128),w
  7492  05BD  1283               	bcf	3,5	;RP0=0, select bank0
  7493  05BE  1303               	bcf	3,6	;RP1=0, select bank0
  7494  05BF  00AC               	movwf	___fladd@b+2
  7495  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  7496  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  7497  05C2  0865               	movf	(_A+1)^(0+128),w
  7498  05C3  1283               	bcf	3,5	;RP0=0, select bank0
  7499  05C4  1303               	bcf	3,6	;RP1=0, select bank0
  7500  05C5  00AB               	movwf	___fladd@b+1
  7501  05C6  1683               	bsf	3,5	;RP0=1, select bank1
  7502  05C7  1303               	bcf	3,6	;RP1=0, select bank1
  7503  05C8  0864               	movf	_A^(0+128),w
  7504  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  7505  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  7506  05CB  00AA               	movwf	___fladd@b
  7507  05CC  120A  158A  203A  120A  118A  	fcall	___fladd
  7508  05D1  1283               	bcf	3,5	;RP0=0, select bank0
  7509  05D2  1303               	bcf	3,6	;RP1=0, select bank0
  7510  05D3  082D               	movf	?___fladd+3,w
  7511  05D4  1683               	bsf	3,5	;RP0=1, select bank1
  7512  05D5  1303               	bcf	3,6	;RP1=0, select bank1
  7513  05D6  00D3               	movwf	(_slave$1782+3)^(0+128)
  7514  05D7  1283               	bcf	3,5	;RP0=0, select bank0
  7515  05D8  1303               	bcf	3,6	;RP1=0, select bank0
  7516  05D9  082C               	movf	?___fladd+2,w
  7517  05DA  1683               	bsf	3,5	;RP0=1, select bank1
  7518  05DB  1303               	bcf	3,6	;RP1=0, select bank1
  7519  05DC  00D2               	movwf	(_slave$1782+2)^(0+128)
  7520  05DD  1283               	bcf	3,5	;RP0=0, select bank0
  7521  05DE  1303               	bcf	3,6	;RP1=0, select bank0
  7522  05DF  082B               	movf	?___fladd+1,w
  7523  05E0  1683               	bsf	3,5	;RP0=1, select bank1
  7524  05E1  1303               	bcf	3,6	;RP1=0, select bank1
  7525  05E2  00D1               	movwf	(_slave$1782+1)^(0+128)
  7526  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  7527  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  7528  05E5  082A               	movf	?___fladd,w
  7529  05E6  1683               	bsf	3,5	;RP0=1, select bank1
  7530  05E7  1303               	bcf	3,6	;RP1=0, select bank1
  7531  05E8  00D0               	movwf	_slave$1782^(0+128)
  7532  05E9                     i1l3985:
  7533                           
  7534                           ;main_slave_p1.c: 115:             TC = (uint8_t)(273.15 - (1 / (A + B * logR2 + C * log
      +                          R2 * logR2 * logR2)));
  7535  05E9  303F               	movlw	63
  7536  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  7537  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  7538  05EC  00DF               	movwf	___fldiv@b+3
  7539  05ED  3080               	movlw	128
  7540  05EE  00DE               	movwf	___fldiv@b+2
  7541  05EF  3000               	movlw	0
  7542  05F0  00DD               	movwf	___fldiv@b+1
  7543  05F1  3000               	movlw	0
  7544  05F2  00DC               	movwf	___fldiv@b
  7545  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  7546  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  7547  05F5  0853               	movf	(_slave$1782+3)^(0+128),w
  7548  05F6  1283               	bcf	3,5	;RP0=0, select bank0
  7549  05F7  1303               	bcf	3,6	;RP1=0, select bank0
  7550  05F8  00B1               	movwf	___fladd@a+3
  7551  05F9  1683               	bsf	3,5	;RP0=1, select bank1
  7552  05FA  1303               	bcf	3,6	;RP1=0, select bank1
  7553  05FB  0852               	movf	(_slave$1782+2)^(0+128),w
  7554  05FC  1283               	bcf	3,5	;RP0=0, select bank0
  7555  05FD  1303               	bcf	3,6	;RP1=0, select bank0
  7556  05FE  00B0               	movwf	___fladd@a+2
  7557  05FF  1683               	bsf	3,5	;RP0=1, select bank1
  7558  0600  1303               	bcf	3,6	;RP1=0, select bank1
  7559  0601  0851               	movf	(_slave$1782+1)^(0+128),w
  7560  0602  1283               	bcf	3,5	;RP0=0, select bank0
  7561  0603  1303               	bcf	3,6	;RP1=0, select bank0
  7562  0604  00AF               	movwf	___fladd@a+1
  7563  0605  1683               	bsf	3,5	;RP0=1, select bank1
  7564  0606  1303               	bcf	3,6	;RP1=0, select bank1
  7565  0607  0850               	movf	_slave$1782^(0+128),w
  7566  0608  1283               	bcf	3,5	;RP0=0, select bank0
  7567  0609  1303               	bcf	3,6	;RP1=0, select bank0
  7568  060A  00AE               	movwf	___fladd@a
  7569  060B  1683               	bsf	3,5	;RP0=1, select bank1
  7570  060C  1303               	bcf	3,6	;RP1=0, select bank1
  7571  060D  084F               	movf	(_slave$1781+3)^(0+128),w
  7572  060E  1283               	bcf	3,5	;RP0=0, select bank0
  7573  060F  1303               	bcf	3,6	;RP1=0, select bank0
  7574  0610  00C5               	movwf	___flmul@a+3
  7575  0611  1683               	bsf	3,5	;RP0=1, select bank1
  7576  0612  1303               	bcf	3,6	;RP1=0, select bank1
  7577  0613  084E               	movf	(_slave$1781+2)^(0+128),w
  7578  0614  1283               	bcf	3,5	;RP0=0, select bank0
  7579  0615  1303               	bcf	3,6	;RP1=0, select bank0
  7580  0616  00C4               	movwf	___flmul@a+2
  7581  0617  1683               	bsf	3,5	;RP0=1, select bank1
  7582  0618  1303               	bcf	3,6	;RP1=0, select bank1
  7583  0619  084D               	movf	(_slave$1781+1)^(0+128),w
  7584  061A  1283               	bcf	3,5	;RP0=0, select bank0
  7585  061B  1303               	bcf	3,6	;RP1=0, select bank0
  7586  061C  00C3               	movwf	___flmul@a+1
  7587  061D  1683               	bsf	3,5	;RP0=1, select bank1
  7588  061E  1303               	bcf	3,6	;RP1=0, select bank1
  7589  061F  084C               	movf	_slave$1781^(0+128),w
  7590  0620  1283               	bcf	3,5	;RP0=0, select bank0
  7591  0621  1303               	bcf	3,6	;RP1=0, select bank0
  7592  0622  00C2               	movwf	___flmul@a
  7593  0623  1683               	bsf	3,5	;RP0=1, select bank1
  7594  0624  1303               	bcf	3,6	;RP1=0, select bank1
  7595  0625  085F               	movf	(_logR2+3)^(0+128),w
  7596  0626  1283               	bcf	3,5	;RP0=0, select bank0
  7597  0627  1303               	bcf	3,6	;RP1=0, select bank0
  7598  0628  00C1               	movwf	___flmul@b+3
  7599  0629  1683               	bsf	3,5	;RP0=1, select bank1
  7600  062A  1303               	bcf	3,6	;RP1=0, select bank1
  7601  062B  085E               	movf	(_logR2+2)^(0+128),w
  7602  062C  1283               	bcf	3,5	;RP0=0, select bank0
  7603  062D  1303               	bcf	3,6	;RP1=0, select bank0
  7604  062E  00C0               	movwf	___flmul@b+2
  7605  062F  1683               	bsf	3,5	;RP0=1, select bank1
  7606  0630  1303               	bcf	3,6	;RP1=0, select bank1
  7607  0631  085D               	movf	(_logR2+1)^(0+128),w
  7608  0632  1283               	bcf	3,5	;RP0=0, select bank0
  7609  0633  1303               	bcf	3,6	;RP1=0, select bank0
  7610  0634  00BF               	movwf	___flmul@b+1
  7611  0635  1683               	bsf	3,5	;RP0=1, select bank1
  7612  0636  1303               	bcf	3,6	;RP1=0, select bank1
  7613  0637  085C               	movf	_logR2^(0+128),w
  7614  0638  1283               	bcf	3,5	;RP0=0, select bank0
  7615  0639  1303               	bcf	3,6	;RP1=0, select bank0
  7616  063A  00BE               	movwf	___flmul@b
  7617  063B  120A  118A  2047  120A  118A  	fcall	___flmul
  7618  0640  1283               	bcf	3,5	;RP0=0, select bank0
  7619  0641  1303               	bcf	3,6	;RP1=0, select bank0
  7620  0642  0841               	movf	?___flmul+3,w
  7621  0643  00AD               	movwf	___fladd@b+3
  7622  0644  0840               	movf	?___flmul+2,w
  7623  0645  00AC               	movwf	___fladd@b+2
  7624  0646  083F               	movf	?___flmul+1,w
  7625  0647  00AB               	movwf	___fladd@b+1
  7626  0648  083E               	movf	?___flmul,w
  7627  0649  00AA               	movwf	___fladd@b
  7628  064A  120A  158A  203A  120A  118A  	fcall	___fladd
  7629  064F  1283               	bcf	3,5	;RP0=0, select bank0
  7630  0650  1303               	bcf	3,6	;RP1=0, select bank0
  7631  0651  082D               	movf	?___fladd+3,w
  7632  0652  00DB               	movwf	___fldiv@a+3
  7633  0653  082C               	movf	?___fladd+2,w
  7634  0654  00DA               	movwf	___fldiv@a+2
  7635  0655  082B               	movf	?___fladd+1,w
  7636  0656  00D9               	movwf	___fldiv@a+1
  7637  0657  082A               	movf	?___fladd,w
  7638  0658  00D8               	movwf	___fldiv@a
  7639  0659  120A  158A  2560  120A  118A  	fcall	___fldiv
  7640  065E  1283               	bcf	3,5	;RP0=0, select bank0
  7641  065F  1303               	bcf	3,6	;RP1=0, select bank0
  7642  0660  085B               	movf	?___fldiv+3,w
  7643  0661  1683               	bsf	3,5	;RP0=1, select bank1
  7644  0662  1303               	bcf	3,6	;RP1=0, select bank1
  7645  0663  00D7               	movwf	(_slave$1783+3)^(0+128)
  7646  0664  1283               	bcf	3,5	;RP0=0, select bank0
  7647  0665  1303               	bcf	3,6	;RP1=0, select bank0
  7648  0666  085A               	movf	?___fldiv+2,w
  7649  0667  1683               	bsf	3,5	;RP0=1, select bank1
  7650  0668  1303               	bcf	3,6	;RP1=0, select bank1
  7651  0669  00D6               	movwf	(_slave$1783+2)^(0+128)
  7652  066A  1283               	bcf	3,5	;RP0=0, select bank0
  7653  066B  1303               	bcf	3,6	;RP1=0, select bank0
  7654  066C  0859               	movf	?___fldiv+1,w
  7655  066D  1683               	bsf	3,5	;RP0=1, select bank1
  7656  066E  1303               	bcf	3,6	;RP1=0, select bank1
  7657  066F  00D5               	movwf	(_slave$1783+1)^(0+128)
  7658  0670  1283               	bcf	3,5	;RP0=0, select bank0
  7659  0671  1303               	bcf	3,6	;RP1=0, select bank0
  7660  0672  0858               	movf	?___fldiv,w
  7661  0673  1683               	bsf	3,5	;RP0=1, select bank1
  7662  0674  1303               	bcf	3,6	;RP1=0, select bank1
  7663  0675  00D4               	movwf	_slave$1783^(0+128)
  7664  0676                     i1l3987:
  7665                           
  7666                           ;main_slave_p1.c: 115:             TC = (uint8_t)(273.15 - (1 / (A + B * logR2 + C * log
      +                          R2 * logR2 * logR2)));
  7667  0676  3043               	movlw	67
  7668  0677  1283               	bcf	3,5	;RP0=0, select bank0
  7669  0678  1303               	bcf	3,6	;RP1=0, select bank0
  7670  0679  00EC               	movwf	___flsub@b+3
  7671  067A  3088               	movlw	136
  7672  067B  00EB               	movwf	___flsub@b+2
  7673  067C  3093               	movlw	147
  7674  067D  00EA               	movwf	___flsub@b+1
  7675  067E  3033               	movlw	51
  7676  067F  00E9               	movwf	___flsub@b
  7677  0680  1683               	bsf	3,5	;RP0=1, select bank1
  7678  0681  1303               	bcf	3,6	;RP1=0, select bank1
  7679  0682  0857               	movf	(_slave$1783+3)^(0+128),w
  7680  0683  1283               	bcf	3,5	;RP0=0, select bank0
  7681  0684  1303               	bcf	3,6	;RP1=0, select bank0
  7682  0685  00E8               	movwf	___flsub@a+3
  7683  0686  1683               	bsf	3,5	;RP0=1, select bank1
  7684  0687  1303               	bcf	3,6	;RP1=0, select bank1
  7685  0688  0856               	movf	(_slave$1783+2)^(0+128),w
  7686  0689  1283               	bcf	3,5	;RP0=0, select bank0
  7687  068A  1303               	bcf	3,6	;RP1=0, select bank0
  7688  068B  00E7               	movwf	___flsub@a+2
  7689  068C  1683               	bsf	3,5	;RP0=1, select bank1
  7690  068D  1303               	bcf	3,6	;RP1=0, select bank1
  7691  068E  0855               	movf	(_slave$1783+1)^(0+128),w
  7692  068F  1283               	bcf	3,5	;RP0=0, select bank0
  7693  0690  1303               	bcf	3,6	;RP1=0, select bank0
  7694  0691  00E6               	movwf	___flsub@a+1
  7695  0692  1683               	bsf	3,5	;RP0=1, select bank1
  7696  0693  1303               	bcf	3,6	;RP1=0, select bank1
  7697  0694  0854               	movf	_slave$1783^(0+128),w
  7698  0695  1283               	bcf	3,5	;RP0=0, select bank0
  7699  0696  1303               	bcf	3,6	;RP1=0, select bank0
  7700  0697  00E5               	movwf	___flsub@a
  7701  0698  160A  158A  242B  120A  118A  	fcall	___flsub
  7702  069D  1283               	bcf	3,5	;RP0=0, select bank0
  7703  069E  1303               	bcf	3,6	;RP1=0, select bank0
  7704  069F  0868               	movf	?___flsub+3,w
  7705  06A0  1683               	bsf	3,5	;RP0=1, select bank1
  7706  06A1  1303               	bcf	3,6	;RP1=0, select bank1
  7707  06A2  00B0               	movwf	(i1___fltol@f1+3)^(0+128)
  7708  06A3  1283               	bcf	3,5	;RP0=0, select bank0
  7709  06A4  1303               	bcf	3,6	;RP1=0, select bank0
  7710  06A5  0867               	movf	?___flsub+2,w
  7711  06A6  1683               	bsf	3,5	;RP0=1, select bank1
  7712  06A7  1303               	bcf	3,6	;RP1=0, select bank1
  7713  06A8  00AF               	movwf	(i1___fltol@f1+2)^(0+128)
  7714  06A9  1283               	bcf	3,5	;RP0=0, select bank0
  7715  06AA  1303               	bcf	3,6	;RP1=0, select bank0
  7716  06AB  0866               	movf	?___flsub+1,w
  7717  06AC  1683               	bsf	3,5	;RP0=1, select bank1
  7718  06AD  1303               	bcf	3,6	;RP1=0, select bank1
  7719  06AE  00AE               	movwf	(i1___fltol@f1+1)^(0+128)
  7720  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  7721  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  7722  06B1  0865               	movf	?___flsub,w
  7723  06B2  1683               	bsf	3,5	;RP0=1, select bank1
  7724  06B3  1303               	bcf	3,6	;RP1=0, select bank1
  7725  06B4  00AD               	movwf	i1___fltol@f1^(0+128)
  7726  06B5  160A  118A  225E  120A  118A  	fcall	i1___fltol
  7727  06BA  1683               	bsf	3,5	;RP0=1, select bank1
  7728  06BB  1303               	bcf	3,6	;RP1=0, select bank1
  7729  06BC  082D               	movf	?i1___fltol^(0+128),w
  7730  06BD  00C0               	movwf	??_slave^(0+128)
  7731  06BE  01C1               	clrf	(??_slave^(0+128)+1)
  7732  06BF  01C2               	clrf	(??_slave^(0+128)+2)
  7733  06C0  01C3               	clrf	(??_slave^(0+128)+3)
  7734  06C1  0843               	movf	(??_slave+3)^(0+128),w
  7735  06C2  00FC               	movwf	___xxtofl@val+3
  7736  06C3  0842               	movf	(??_slave+2)^(0+128),w
  7737  06C4  00FB               	movwf	___xxtofl@val+2
  7738  06C5  0841               	movf	(??_slave+1)^(0+128),w
  7739  06C6  00FA               	movwf	___xxtofl@val+1
  7740  06C7  0840               	movf	??_slave^(0+128),w
  7741  06C8  00F9               	movwf	___xxtofl@val
  7742  06C9  3000               	movlw	0
  7743  06CA  160A  118A  25A0  120A  118A  	fcall	___xxtofl
  7744  06CF  087C               	movf	?___xxtofl+3,w
  7745  06D0  1683               	bsf	3,5	;RP0=1, select bank3
  7746  06D1  1703               	bsf	3,6	;RP1=1, select bank3
  7747  06D2  00D3               	movwf	(_TC+3)^(0+384)
  7748  06D3  087B               	movf	?___xxtofl+2,w
  7749  06D4  00D2               	movwf	(_TC+2)^(0+384)
  7750  06D5  087A               	movf	?___xxtofl+1,w
  7751  06D6  00D1               	movwf	(_TC+1)^(0+384)
  7752  06D7  0879               	movf	?___xxtofl,w
  7753  06D8  00D0               	movwf	_TC^(0+384)
  7754  06D9                     i1l3989:
  7755                           
  7756                           ;main_slave_p1.c: 117:         PIR1bits.ADIF = 0;
  7757  06D9  1283               	bcf	3,5	;RP0=0, select bank0
  7758  06DA  1303               	bcf	3,6	;RP1=0, select bank0
  7759  06DB  130C               	bcf	12,6	;volatile
  7760  06DC                     i1l151:
  7761  06DC  1683               	bsf	3,5	;RP0=1, select bank1
  7762  06DD  1303               	bcf	3,6	;RP1=0, select bank1
  7763  06DE  0847               	movf	(??_slave+7)^(0+128),w
  7764  06DF  00FF               	movwf	btemp+1
  7765  06E0  0846               	movf	(??_slave+6)^(0+128),w
  7766  06E1  008A               	movwf	10
  7767  06E2  0845               	movf	(??_slave+5)^(0+128),w
  7768  06E3  0084               	movwf	4
  7769  06E4  0E44               	swapf	(??_slave+4)^(0+128),w
  7770  06E5  0083               	movwf	3
  7771  06E6  0EFE               	swapf	btemp,f
  7772  06E7  0E7E               	swapf	btemp,w
  7773  06E8  0009               	retfie
  7774  06E9                     __end_of_slave:
  7775                           
  7776                           	psect	intentry
  7777  0004                     __pintentry:	
  7778                           ;incstack = 0
  7779                           ; Regs used in _slave: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7780                           
  7781  0004                     interrupt_function:
  7782  007E                     saved_w	set	btemp
  7783  0004  00FE               	movwf	btemp
  7784  0005  0E03               	swapf	3,w
  7785  0006  1683               	bsf	3,5	;RP0=1, select bank1
  7786  0007  1303               	bcf	3,6	;RP1=0, select bank1
  7787  0008  00C4               	movwf	(??_slave+4)^(0+128)
  7788  0009  0804               	movf	4,w
  7789  000A  00C5               	movwf	(??_slave+5)^(0+128)
  7790  000B  080A               	movf	10,w
  7791  000C  00C6               	movwf	(??_slave+6)^(0+128)
  7792  000D  087F               	movf	btemp+1,w
  7793  000E  00C7               	movwf	(??_slave+7)^(0+128)
  7794  000F  120A  118A  2BA8   	ljmp	_slave
  7795                           
  7796                           	psect	text31
  7797  1B2C                     __ptext31:	
  7798 ;; *************** function i1_tmr0_reload *****************
  7799 ;; Defined at:
  7800 ;;		line 57 in file "tmr0.c"
  7801 ;; Parameters:    Size  Location     Type
  7802 ;;		None
  7803 ;; Auto vars:     Size  Location     Type
  7804 ;;		None
  7805 ;; Return value:  Size  Location     Type
  7806 ;;                  1    wreg      void 
  7807 ;; Registers used:
  7808 ;;		wreg
  7809 ;; Tracked objects:
  7810 ;;		On entry : 0/0
  7811 ;;		On exit  : 0/0
  7812 ;;		Unchanged: 0/0
  7813 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7814 ;;      Params:         0       0       0       0       0
  7815 ;;      Locals:         0       0       0       0       0
  7816 ;;      Temps:          0       0       0       0       0
  7817 ;;      Totals:         0       0       0       0       0
  7818 ;;Total ram usage:        0 bytes
  7819 ;; Hardware stack levels used: 1
  7820 ;; This function calls:
  7821 ;;		Nothing
  7822 ;; This function is called by:
  7823 ;;		_slave
  7824 ;; This function uses a non-reentrant model
  7825 ;;
  7826                           
  7827  1B2C                     i1_tmr0_reload:	
  7828                           ;psect for function i1_tmr0_reload
  7829                           
  7830  1B2C                     i1l3937:	
  7831                           ;incstack = 0
  7832                           ; Regs used in i1_tmr0_reload: [wreg]
  7833                           
  7834                           
  7835                           ;tmr0.c: 58:     TMR0 = 178;
  7836  1B2C  30B2               	movlw	178
  7837  1B2D  1283               	bcf	3,5	;RP0=0, select bank0
  7838  1B2E  1303               	bcf	3,6	;RP1=0, select bank0
  7839  1B2F  0081               	movwf	1	;volatile
  7840  1B30                     i1l3939:
  7841                           
  7842                           ;tmr0.c: 59:     INTCONbits.T0IF = 0;
  7843  1B30  110B               	bcf	11,2	;volatile
  7844  1B31                     i1l404:
  7845  1B31  0008               	return
  7846  1B32                     __end_ofi1_tmr0_reload:
  7847                           
  7848                           	psect	text32
  7849  14E7                     __ptext32:	
  7850 ;; *************** function _map *****************
  7851 ;; Defined at:
  7852 ;;		line 145 in file "main_slave_p1.c"
  7853 ;; Parameters:    Size  Location     Type
  7854 ;;  x               2   22[BANK1 ] unsigned int 
  7855 ;;  x0              2   24[BANK1 ] unsigned int 
  7856 ;;  x1              2   26[BANK1 ] unsigned int 
  7857 ;;  y0              2   28[BANK1 ] short 
  7858 ;;  y1              2   30[BANK1 ] short 
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;		None
  7861 ;; Return value:  Size  Location     Type
  7862 ;;                  2   22[BANK1 ] short 
  7863 ;; Registers used:
  7864 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7865 ;; Tracked objects:
  7866 ;;		On entry : 0/0
  7867 ;;		On exit  : 0/0
  7868 ;;		Unchanged: 0/0
  7869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7870 ;;      Params:         0       0      10       0       0
  7871 ;;      Locals:         0       0       0       0       0
  7872 ;;      Temps:          0       0       0       0       0
  7873 ;;      Totals:         0       0      10       0       0
  7874 ;;Total ram usage:       10 bytes
  7875 ;; Hardware stack levels used: 1
  7876 ;; Hardware stack levels required when called: 2
  7877 ;; This function calls:
  7878 ;;		___fladd
  7879 ;;		___fldiv
  7880 ;;		___flmul
  7881 ;;		___xxtofl
  7882 ;;		i1___fltol
  7883 ;; This function is called by:
  7884 ;;		_slave
  7885 ;; This function uses a non-reentrant model
  7886 ;;
  7887                           
  7888  14E7                     _map:	
  7889                           ;psect for function _map
  7890                           
  7891  14E7                     i1l3631:	
  7892                           ;incstack = 0
  7893                           ; Regs used in _map: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7894                           
  7895                           
  7896                           ;main_slave_p1.c: 145: short map(uint16_t x, uint16_t x0, uint16_t x1,;main_slave_p1.c: 
      +                          146:           short y0, short y1){;main_slave_p1.c: 147:     return (short)(y0+((float)
      +                          (y1-y0)/(x1-x0))*(x-x0));
  7897  14E7  1683               	bsf	3,5	;RP0=1, select bank1
  7898  14E8  1303               	bcf	3,6	;RP1=0, select bank1
  7899  14E9  083C               	movf	map@y0^(0+128),w
  7900  14EA  00F9               	movwf	___xxtofl@val
  7901  14EB  083D               	movf	(map@y0+1)^(0+128),w
  7902  14EC  00FA               	movwf	___xxtofl@val+1
  7903  14ED  3000               	movlw	0
  7904  14EE  1BFA               	btfsc	___xxtofl@val+1,7
  7905  14EF  30FF               	movlw	255
  7906  14F0  00FB               	movwf	___xxtofl@val+2
  7907  14F1  00FC               	movwf	___xxtofl@val+3
  7908  14F2  3001               	movlw	1
  7909  14F3  160A  118A  25A0  160A  118A  	fcall	___xxtofl
  7910  14F8  087C               	movf	?___xxtofl+3,w
  7911  14F9  1283               	bcf	3,5	;RP0=0, select bank0
  7912  14FA  1303               	bcf	3,6	;RP1=0, select bank0
  7913  14FB  00B1               	movwf	___fladd@a+3
  7914  14FC  087B               	movf	?___xxtofl+2,w
  7915  14FD  00B0               	movwf	___fladd@a+2
  7916  14FE  087A               	movf	?___xxtofl+1,w
  7917  14FF  00AF               	movwf	___fladd@a+1
  7918  1500  0879               	movf	?___xxtofl,w
  7919  1501  00AE               	movwf	___fladd@a
  7920  1502  1683               	bsf	3,5	;RP0=1, select bank1
  7921  1503  1303               	bcf	3,6	;RP1=0, select bank1
  7922  1504  083C               	movf	map@y0^(0+128),w
  7923  1505  023E               	subwf	map@y1^(0+128),w
  7924  1506  00F9               	movwf	___xxtofl@val
  7925  1507  083D               	movf	(map@y0+1)^(0+128),w
  7926  1508  1C03               	skipc
  7927  1509  0A3D               	incf	(map@y0+1)^(0+128),w
  7928  150A  023F               	subwf	(map@y1+1)^(0+128),w
  7929  150B  00FA               	movwf	___xxtofl@val+1
  7930  150C  01FB               	clrf	___xxtofl@val+2
  7931  150D  1BFA               	btfsc	___xxtofl@val+1,7
  7932  150E  03FB               	decf	___xxtofl@val+2,f
  7933  150F  087B               	movf	___xxtofl@val+2,w
  7934  1510  00FC               	movwf	___xxtofl@val+3
  7935  1511  3001               	movlw	1
  7936  1512  160A  118A  25A0  160A  118A  	fcall	___xxtofl
  7937  1517  087C               	movf	?___xxtofl+3,w
  7938  1518  1283               	bcf	3,5	;RP0=0, select bank0
  7939  1519  1303               	bcf	3,6	;RP1=0, select bank0
  7940  151A  00DF               	movwf	___fldiv@b+3
  7941  151B  087B               	movf	?___xxtofl+2,w
  7942  151C  00DE               	movwf	___fldiv@b+2
  7943  151D  087A               	movf	?___xxtofl+1,w
  7944  151E  00DD               	movwf	___fldiv@b+1
  7945  151F  0879               	movf	?___xxtofl,w
  7946  1520  00DC               	movwf	___fldiv@b
  7947  1521  1683               	bsf	3,5	;RP0=1, select bank1
  7948  1522  1303               	bcf	3,6	;RP1=0, select bank1
  7949  1523  0838               	movf	map@x0^(0+128),w
  7950  1524  023A               	subwf	map@x1^(0+128),w
  7951  1525  00F9               	movwf	___xxtofl@val
  7952  1526  0839               	movf	(map@x0+1)^(0+128),w
  7953  1527  1C03               	skipc
  7954  1528  0A39               	incf	(map@x0+1)^(0+128),w
  7955  1529  023B               	subwf	(map@x1+1)^(0+128),w
  7956  152A  00FA               	movwf	___xxtofl@val+1
  7957  152B  01FB               	clrf	___xxtofl@val+2
  7958  152C  01FC               	clrf	___xxtofl@val+3
  7959  152D  3000               	movlw	0
  7960  152E  160A  118A  25A0  160A  118A  	fcall	___xxtofl
  7961  1533  087C               	movf	?___xxtofl+3,w
  7962  1534  1283               	bcf	3,5	;RP0=0, select bank0
  7963  1535  1303               	bcf	3,6	;RP1=0, select bank0
  7964  1536  00DB               	movwf	___fldiv@a+3
  7965  1537  087B               	movf	?___xxtofl+2,w
  7966  1538  00DA               	movwf	___fldiv@a+2
  7967  1539  087A               	movf	?___xxtofl+1,w
  7968  153A  00D9               	movwf	___fldiv@a+1
  7969  153B  0879               	movf	?___xxtofl,w
  7970  153C  00D8               	movwf	___fldiv@a
  7971  153D  120A  158A  2560  160A  118A  	fcall	___fldiv
  7972  1542  1283               	bcf	3,5	;RP0=0, select bank0
  7973  1543  1303               	bcf	3,6	;RP1=0, select bank0
  7974  1544  085B               	movf	?___fldiv+3,w
  7975  1545  00C5               	movwf	___flmul@a+3
  7976  1546  085A               	movf	?___fldiv+2,w
  7977  1547  00C4               	movwf	___flmul@a+2
  7978  1548  0859               	movf	?___fldiv+1,w
  7979  1549  00C3               	movwf	___flmul@a+1
  7980  154A  0858               	movf	?___fldiv,w
  7981  154B  00C2               	movwf	___flmul@a
  7982  154C  1683               	bsf	3,5	;RP0=1, select bank1
  7983  154D  1303               	bcf	3,6	;RP1=0, select bank1
  7984  154E  0838               	movf	map@x0^(0+128),w
  7985  154F  0236               	subwf	map@x^(0+128),w
  7986  1550  00F9               	movwf	___xxtofl@val
  7987  1551  0839               	movf	(map@x0+1)^(0+128),w
  7988  1552  1C03               	skipc
  7989  1553  0A39               	incf	(map@x0+1)^(0+128),w
  7990  1554  0237               	subwf	(map@x+1)^(0+128),w
  7991  1555  00FA               	movwf	___xxtofl@val+1
  7992  1556  01FB               	clrf	___xxtofl@val+2
  7993  1557  01FC               	clrf	___xxtofl@val+3
  7994  1558  3000               	movlw	0
  7995  1559  160A  118A  25A0  160A  118A  	fcall	___xxtofl
  7996  155E  087C               	movf	?___xxtofl+3,w
  7997  155F  1283               	bcf	3,5	;RP0=0, select bank0
  7998  1560  1303               	bcf	3,6	;RP1=0, select bank0
  7999  1561  00C1               	movwf	___flmul@b+3
  8000  1562  087B               	movf	?___xxtofl+2,w
  8001  1563  00C0               	movwf	___flmul@b+2
  8002  1564  087A               	movf	?___xxtofl+1,w
  8003  1565  00BF               	movwf	___flmul@b+1
  8004  1566  0879               	movf	?___xxtofl,w
  8005  1567  00BE               	movwf	___flmul@b
  8006  1568  120A  118A  2047  160A  118A  	fcall	___flmul
  8007  156D  1283               	bcf	3,5	;RP0=0, select bank0
  8008  156E  1303               	bcf	3,6	;RP1=0, select bank0
  8009  156F  0841               	movf	?___flmul+3,w
  8010  1570  00AD               	movwf	___fladd@b+3
  8011  1571  0840               	movf	?___flmul+2,w
  8012  1572  00AC               	movwf	___fladd@b+2
  8013  1573  083F               	movf	?___flmul+1,w
  8014  1574  00AB               	movwf	___fladd@b+1
  8015  1575  083E               	movf	?___flmul,w
  8016  1576  00AA               	movwf	___fladd@b
  8017  1577  120A  158A  203A  160A  118A  	fcall	___fladd
  8018  157C  1283               	bcf	3,5	;RP0=0, select bank0
  8019  157D  1303               	bcf	3,6	;RP1=0, select bank0
  8020  157E  082D               	movf	?___fladd+3,w
  8021  157F  1683               	bsf	3,5	;RP0=1, select bank1
  8022  1580  1303               	bcf	3,6	;RP1=0, select bank1
  8023  1581  00B0               	movwf	(i1___fltol@f1+3)^(0+128)
  8024  1582  1283               	bcf	3,5	;RP0=0, select bank0
  8025  1583  1303               	bcf	3,6	;RP1=0, select bank0
  8026  1584  082C               	movf	?___fladd+2,w
  8027  1585  1683               	bsf	3,5	;RP0=1, select bank1
  8028  1586  1303               	bcf	3,6	;RP1=0, select bank1
  8029  1587  00AF               	movwf	(i1___fltol@f1+2)^(0+128)
  8030  1588  1283               	bcf	3,5	;RP0=0, select bank0
  8031  1589  1303               	bcf	3,6	;RP1=0, select bank0
  8032  158A  082B               	movf	?___fladd+1,w
  8033  158B  1683               	bsf	3,5	;RP0=1, select bank1
  8034  158C  1303               	bcf	3,6	;RP1=0, select bank1
  8035  158D  00AE               	movwf	(i1___fltol@f1+1)^(0+128)
  8036  158E  1283               	bcf	3,5	;RP0=0, select bank0
  8037  158F  1303               	bcf	3,6	;RP1=0, select bank0
  8038  1590  082A               	movf	?___fladd,w
  8039  1591  1683               	bsf	3,5	;RP0=1, select bank1
  8040  1592  1303               	bcf	3,6	;RP1=0, select bank1
  8041  1593  00AD               	movwf	i1___fltol@f1^(0+128)
  8042  1594  160A  118A  225E  160A  118A  	fcall	i1___fltol
  8043  1599  1683               	bsf	3,5	;RP0=1, select bank1
  8044  159A  1303               	bcf	3,6	;RP1=0, select bank1
  8045  159B  082E               	movf	(?i1___fltol+1)^(0+128),w
  8046  159C  00B7               	movwf	(?_map+1)^(0+128)
  8047  159D  082D               	movf	?i1___fltol^(0+128),w
  8048  159E  00B6               	movwf	?_map^(0+128)
  8049  159F                     i1l162:
  8050  159F  0008               	return
  8051  15A0                     __end_of_map:
  8052                           
  8053                           	psect	text33
  8054  125E                     __ptext33:	
  8055 ;; *************** function i1___fltol *****************
  8056 ;; Defined at:
  8057 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fltol.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;  f1              4   13[BANK1 ] short 
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;  exp1            1   78[BANK0 ] unsigned char 
  8062 ;;  sign1           1   77[BANK0 ] unsigned char 
  8063 ;; Return value:  Size  Location     Type
  8064 ;;                  4   13[BANK1 ] long 
  8065 ;; Registers used:
  8066 ;;		wreg, status,2, status,0
  8067 ;; Tracked objects:
  8068 ;;		On entry : 0/0
  8069 ;;		On exit  : 0/0
  8070 ;;		Unchanged: 0/0
  8071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8072 ;;      Params:         0       0       4       0       0
  8073 ;;      Locals:         0       2       0       0       0
  8074 ;;      Temps:          0       0       5       0       0
  8075 ;;      Totals:         0       2       9       0       0
  8076 ;;Total ram usage:       11 bytes
  8077 ;; Hardware stack levels used: 1
  8078 ;; This function calls:
  8079 ;;		Nothing
  8080 ;; This function is called by:
  8081 ;;		_slave
  8082 ;;		_map
  8083 ;; This function uses a non-reentrant model
  8084 ;;
  8085                           
  8086  125E                     i1___fltol:	
  8087                           ;psect for function i1___fltol
  8088                           
  8089  125E                     i1l3589:	
  8090                           ;incstack = 0
  8091                           ; Regs used in i1___fltol: [wreg+status,2+status,0]
  8092                           
  8093  125E  1003               	clrc
  8094  125F  1683               	bsf	3,5	;RP0=1, select bank1
  8095  1260  1303               	bcf	3,6	;RP1=0, select bank1
  8096  1261  0D2F               	rlf	(i1___fltol@f1+2)^(0+128),w
  8097  1262  0D30               	rlf	(i1___fltol@f1+3)^(0+128),w
  8098  1263  00B1               	movwf	??i1___fltol^(0+128)
  8099  1264  0831               	movf	??i1___fltol^(0+128),w
  8100  1265  1283               	bcf	3,5	;RP0=0, select bank0
  8101  1266  1303               	bcf	3,6	;RP1=0, select bank0
  8102  1267  00EE               	movwf	i1___fltol@exp1
  8103  1268  086E               	movf	i1___fltol@exp1,w
  8104  1269  1D03               	btfss	3,2
  8105  126A  2A6C               	goto	u446_21
  8106  126B  2A6D               	goto	u446_20
  8107  126C                     u446_21:
  8108  126C  2A78               	goto	i1l3595
  8109  126D                     u446_20:
  8110  126D                     i1l3591:
  8111  126D  3000               	movlw	0
  8112  126E  1683               	bsf	3,5	;RP0=1, select bank1
  8113  126F  1303               	bcf	3,6	;RP1=0, select bank1
  8114  1270  00B0               	movwf	(?i1___fltol+3)^(0+128)
  8115  1271  3000               	movlw	0
  8116  1272  00AF               	movwf	(?i1___fltol+2)^(0+128)
  8117  1273  3000               	movlw	0
  8118  1274  00AE               	movwf	(?i1___fltol+1)^(0+128)
  8119  1275  3000               	movlw	0
  8120  1276  00AD               	movwf	?i1___fltol^(0+128)
  8121  1277  2AEF               	goto	i1l699
  8122  1278                     i1l3595:
  8123  1278  1683               	bsf	3,5	;RP0=1, select bank1
  8124  1279  1303               	bcf	3,6	;RP1=0, select bank1
  8125  127A  082D               	movf	i1___fltol@f1^(0+128),w
  8126  127B  00B1               	movwf	??i1___fltol^(0+128)
  8127  127C  082E               	movf	(i1___fltol@f1+1)^(0+128),w
  8128  127D  00B2               	movwf	(??i1___fltol^(0+128)+1)
  8129  127E  082F               	movf	(i1___fltol@f1+2)^(0+128),w
  8130  127F  00B3               	movwf	(??i1___fltol^(0+128)+2)
  8131  1280  0830               	movf	(i1___fltol@f1+3)^(0+128),w
  8132  1281  00B4               	movwf	(??i1___fltol^(0+128)+3)
  8133  1282  301F               	movlw	31
  8134  1283                     u447_25:
  8135  1283  1003               	clrc
  8136  1284  0CB4               	rrf	(??i1___fltol^(0+128)+3),f
  8137  1285  0CB3               	rrf	(??i1___fltol^(0+128)+2),f
  8138  1286  0CB2               	rrf	(??i1___fltol^(0+128)+1),f
  8139  1287  0CB1               	rrf	??i1___fltol^(0+128),f
  8140  1288                     u447_20:
  8141  1288  3EFF               	addlw	-1
  8142  1289  1D03               	skipz
  8143  128A  2A83               	goto	u447_25
  8144  128B  0831               	movf	??i1___fltol^(0+128),w
  8145  128C  00B5               	movwf	(??i1___fltol+4)^(0+128)
  8146  128D  0835               	movf	(??i1___fltol+4)^(0+128),w
  8147  128E  1283               	bcf	3,5	;RP0=0, select bank0
  8148  128F  1303               	bcf	3,6	;RP1=0, select bank0
  8149  1290  00ED               	movwf	i1___fltol@sign1
  8150  1291                     i1l3597:
  8151  1291  1683               	bsf	3,5	;RP0=1, select bank1
  8152  1292  1303               	bcf	3,6	;RP1=0, select bank1
  8153  1293  17AF               	bsf	(i1___fltol@f1^(0+128)+2),7
  8154  1294                     i1l3599:
  8155  1294  30FF               	movlw	255
  8156  1295  05AD               	andwf	i1___fltol@f1^(0+128),f
  8157  1296  30FF               	movlw	255
  8158  1297  05AE               	andwf	(i1___fltol@f1+1)^(0+128),f
  8159  1298  30FF               	movlw	255
  8160  1299  05AF               	andwf	(i1___fltol@f1+2)^(0+128),f
  8161  129A  3000               	movlw	0
  8162  129B  05B0               	andwf	(i1___fltol@f1+3)^(0+128),f
  8163  129C                     i1l3601:
  8164  129C  3096               	movlw	150
  8165  129D  1283               	bcf	3,5	;RP0=0, select bank0
  8166  129E  1303               	bcf	3,6	;RP1=0, select bank0
  8167  129F  02EE               	subwf	i1___fltol@exp1,f
  8168  12A0                     i1l3603:
  8169  12A0  1FEE               	btfss	i1___fltol@exp1,7
  8170  12A1  2AA3               	goto	u448_21
  8171  12A2  2AA4               	goto	u448_20
  8172  12A3                     u448_21:
  8173  12A3  2AC2               	goto	i1l3613
  8174  12A4                     u448_20:
  8175  12A4                     i1l3605:
  8176  12A4  086E               	movf	i1___fltol@exp1,w
  8177  12A5  3A80               	xorlw	128
  8178  12A6  3E97               	addlw	151
  8179  12A7  1803               	skipnc
  8180  12A8  2AAA               	goto	u449_21
  8181  12A9  2AAB               	goto	u449_20
  8182  12AA                     u449_21:
  8183  12AA  2AAC               	goto	i1l3611
  8184  12AB                     u449_20:
  8185  12AB  2A6D               	goto	i1l3591
  8186  12AC                     i1l3611:
  8187  12AC  3001               	movlw	1
  8188  12AD                     u450_25:
  8189  12AD  1003               	clrc
  8190  12AE  1683               	bsf	3,5	;RP0=1, select bank1
  8191  12AF  1303               	bcf	3,6	;RP1=0, select bank1
  8192  12B0  0CB0               	rrf	(i1___fltol@f1+3)^(0+128),f
  8193  12B1  0CAF               	rrf	(i1___fltol@f1+2)^(0+128),f
  8194  12B2  0CAE               	rrf	(i1___fltol@f1+1)^(0+128),f
  8195  12B3  0CAD               	rrf	i1___fltol@f1^(0+128),f
  8196  12B4  3EFF               	addlw	-1
  8197  12B5  1D03               	skipz
  8198  12B6  2AAD               	goto	u450_25
  8199  12B7  3001               	movlw	1
  8200  12B8  00B1               	movwf	??i1___fltol^(0+128)
  8201  12B9  0831               	movf	??i1___fltol^(0+128),w
  8202  12BA  1283               	bcf	3,5	;RP0=0, select bank0
  8203  12BB  1303               	bcf	3,6	;RP1=0, select bank0
  8204  12BC  07EE               	addwf	i1___fltol@exp1,f
  8205  12BD  1D03               	btfss	3,2
  8206  12BE  2AC0               	goto	u451_21
  8207  12BF  2AC1               	goto	u451_20
  8208  12C0                     u451_21:
  8209  12C0  2AAC               	goto	i1l3611
  8210  12C1                     u451_20:
  8211  12C1  2ADD               	goto	i1l3621
  8212  12C2                     i1l3613:
  8213  12C2  3020               	movlw	32
  8214  12C3  026E               	subwf	i1___fltol@exp1,w
  8215  12C4  1C03               	skipc
  8216  12C5  2AC7               	goto	u452_21
  8217  12C6  2AC8               	goto	u452_20
  8218  12C7                     u452_21:
  8219  12C7  2AD8               	goto	i1l706
  8220  12C8                     u452_20:
  8221  12C8  2A6D               	goto	i1l3591
  8222  12C9                     i1l3619:
  8223  12C9  3001               	movlw	1
  8224  12CA  1683               	bsf	3,5	;RP0=1, select bank1
  8225  12CB  1303               	bcf	3,6	;RP1=0, select bank1
  8226  12CC  00B1               	movwf	??i1___fltol^(0+128)
  8227  12CD                     u453_25:
  8228  12CD  1003               	clrc
  8229  12CE  0DAD               	rlf	i1___fltol@f1^(0+128),f
  8230  12CF  0DAE               	rlf	(i1___fltol@f1+1)^(0+128),f
  8231  12D0  0DAF               	rlf	(i1___fltol@f1+2)^(0+128),f
  8232  12D1  0DB0               	rlf	(i1___fltol@f1+3)^(0+128),f
  8233  12D2  0BB1               	decfsz	??i1___fltol^(0+128),f
  8234  12D3  2ACD               	goto	u453_25
  8235  12D4  3001               	movlw	1
  8236  12D5  1283               	bcf	3,5	;RP0=0, select bank0
  8237  12D6  1303               	bcf	3,6	;RP1=0, select bank0
  8238  12D7  02EE               	subwf	i1___fltol@exp1,f
  8239  12D8                     i1l706:
  8240  12D8  086E               	movf	i1___fltol@exp1,w
  8241  12D9  1D03               	btfss	3,2
  8242  12DA  2ADC               	goto	u454_21
  8243  12DB  2ADD               	goto	u454_20
  8244  12DC                     u454_21:
  8245  12DC  2AC9               	goto	i1l3619
  8246  12DD                     u454_20:
  8247  12DD                     i1l3621:
  8248  12DD  086D               	movf	i1___fltol@sign1,w
  8249  12DE  1903               	btfsc	3,2
  8250  12DF  2AE1               	goto	u455_21
  8251  12E0  2AE2               	goto	u455_20
  8252  12E1                     u455_21:
  8253  12E1  2AEF               	goto	i1l709
  8254  12E2                     u455_20:
  8255  12E2                     i1l3623:
  8256  12E2  1683               	bsf	3,5	;RP0=1, select bank1
  8257  12E3  1303               	bcf	3,6	;RP1=0, select bank1
  8258  12E4  09AD               	comf	i1___fltol@f1^(0+128),f
  8259  12E5  09AE               	comf	(i1___fltol@f1+1)^(0+128),f
  8260  12E6  09AF               	comf	(i1___fltol@f1+2)^(0+128),f
  8261  12E7  09B0               	comf	(i1___fltol@f1+3)^(0+128),f
  8262  12E8  0AAD               	incf	i1___fltol@f1^(0+128),f
  8263  12E9  1903               	skipnz
  8264  12EA  0AAE               	incf	(i1___fltol@f1+1)^(0+128),f
  8265  12EB  1903               	skipnz
  8266  12EC  0AAF               	incf	(i1___fltol@f1+2)^(0+128),f
  8267  12ED  1903               	skipnz
  8268  12EE  0AB0               	incf	(i1___fltol@f1+3)^(0+128),f
  8269  12EF                     i1l709:
  8270  12EF                     i1l699:
  8271  12EF  0008               	return
  8272  12F0                     __end_ofi1___fltol:
  8273                           
  8274                           	psect	text34
  8275  0D60                     __ptext34:	
  8276 ;; *************** function ___fldiv *****************
  8277 ;; Defined at:
  8278 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcdiv.c"
  8279 ;; Parameters:    Size  Location     Type
  8280 ;;  a               4   56[BANK0 ] long 
  8281 ;;  b               4   60[BANK0 ] long 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;  grs             4    7[BANK1 ] unsigned long 
  8284 ;;  rem             4    0[BANK1 ] unsigned long 
  8285 ;;  new_exp         2    5[BANK1 ] int 
  8286 ;;  aexp            1   12[BANK1 ] unsigned char 
  8287 ;;  bexp            1   11[BANK1 ] unsigned char 
  8288 ;;  sign            1    4[BANK1 ] unsigned char 
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  4   56[BANK0 ] unsigned char 
  8291 ;; Registers used:
  8292 ;;		wreg, status,2, status,0, btemp+1
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8298 ;;      Params:         0       8       0       0       0
  8299 ;;      Locals:         0       0      13       0       0
  8300 ;;      Temps:          0       5       0       0       0
  8301 ;;      Totals:         0      13      13       0       0
  8302 ;;Total ram usage:       26 bytes
  8303 ;; Hardware stack levels used: 1
  8304 ;; This function calls:
  8305 ;;		Nothing
  8306 ;; This function is called by:
  8307 ;;		_slave
  8308 ;;		_map
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312  0D60                     ___fldiv:	
  8313                           ;psect for function ___fldiv
  8314                           
  8315  0D60                     i1l3373:	
  8316                           ;incstack = 0
  8317                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8318                           
  8319  0D60  1283               	bcf	3,5	;RP0=0, select bank0
  8320  0D61  1303               	bcf	3,6	;RP1=0, select bank0
  8321  0D62  085F               	movf	___fldiv@b+3,w
  8322  0D63  3980               	andlw	128
  8323  0D64  00E0               	movwf	??___fldiv
  8324  0D65  0860               	movf	??___fldiv,w
  8325  0D66  1683               	bsf	3,5	;RP0=1, select bank1
  8326  0D67  1303               	bcf	3,6	;RP1=0, select bank1
  8327  0D68  00A4               	movwf	___fldiv@sign^(0+128)
  8328  0D69                     i1l3375:
  8329  0D69  1283               	bcf	3,5	;RP0=0, select bank0
  8330  0D6A  1303               	bcf	3,6	;RP1=0, select bank0
  8331  0D6B  085F               	movf	___fldiv@b+3,w
  8332  0D6C  00E0               	movwf	??___fldiv
  8333  0D6D  0760               	addwf	??___fldiv,w
  8334  0D6E  00E1               	movwf	??___fldiv+1
  8335  0D6F  0861               	movf	??___fldiv+1,w
  8336  0D70  1683               	bsf	3,5	;RP0=1, select bank1
  8337  0D71  1303               	bcf	3,6	;RP1=0, select bank1
  8338  0D72  00AB               	movwf	___fldiv@bexp^(0+128)
  8339  0D73                     i1l3377:
  8340  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  8341  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  8342  0D75  1FDE               	btfss	___fldiv@b+2,7
  8343  0D76  2D78               	goto	u398_21
  8344  0D77  2D79               	goto	u398_20
  8345  0D78                     u398_21:
  8346  0D78  2D7C               	goto	i1l3381
  8347  0D79                     u398_20:
  8348  0D79                     i1l3379:
  8349  0D79  1683               	bsf	3,5	;RP0=1, select bank1
  8350  0D7A  1303               	bcf	3,6	;RP1=0, select bank1
  8351  0D7B  142B               	bsf	___fldiv@bexp^(0+128),0
  8352  0D7C                     i1l3381:
  8353  0D7C  1683               	bsf	3,5	;RP0=1, select bank1
  8354  0D7D  1303               	bcf	3,6	;RP1=0, select bank1
  8355  0D7E  082B               	movf	___fldiv@bexp^(0+128),w
  8356  0D7F  1903               	btfsc	3,2
  8357  0D80  2D82               	goto	u399_21
  8358  0D81  2D83               	goto	u399_20
  8359  0D82                     u399_21:
  8360  0D82  2D96               	goto	i1l3391
  8361  0D83                     u399_20:
  8362  0D83                     i1l3383:
  8363  0D83  0A2B               	incf	___fldiv@bexp^(0+128),w
  8364  0D84  1D03               	btfss	3,2
  8365  0D85  2D87               	goto	u400_21
  8366  0D86  2D88               	goto	u400_20
  8367  0D87                     u400_21:
  8368  0D87  2D92               	goto	i1l3387
  8369  0D88                     u400_20:
  8370  0D88                     i1l3385:
  8371  0D88  3000               	movlw	0
  8372  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  8373  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  8374  0D8B  00DF               	movwf	___fldiv@b+3
  8375  0D8C  3000               	movlw	0
  8376  0D8D  00DE               	movwf	___fldiv@b+2
  8377  0D8E  3000               	movlw	0
  8378  0D8F  00DD               	movwf	___fldiv@b+1
  8379  0D90  3000               	movlw	0
  8380  0D91  00DC               	movwf	___fldiv@b
  8381  0D92                     i1l3387:
  8382  0D92  1283               	bcf	3,5	;RP0=0, select bank0
  8383  0D93  17DE               	bsf	___fldiv@b+2,7
  8384  0D94                     i1l3389:
  8385  0D94  01DF               	clrf	___fldiv@b+3
  8386  0D95  2DA0               	goto	i1l3393
  8387  0D96                     i1l3391:
  8388  0D96  3000               	movlw	0
  8389  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  8390  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  8391  0D99  00DF               	movwf	___fldiv@b+3
  8392  0D9A  3000               	movlw	0
  8393  0D9B  00DE               	movwf	___fldiv@b+2
  8394  0D9C  3000               	movlw	0
  8395  0D9D  00DD               	movwf	___fldiv@b+1
  8396  0D9E  3000               	movlw	0
  8397  0D9F  00DC               	movwf	___fldiv@b
  8398  0DA0                     i1l3393:
  8399  0DA0  085B               	movf	___fldiv@a+3,w
  8400  0DA1  3980               	andlw	128
  8401  0DA2  00E0               	movwf	??___fldiv
  8402  0DA3  0860               	movf	??___fldiv,w
  8403  0DA4  1683               	bsf	3,5	;RP0=1, select bank1
  8404  0DA5  1303               	bcf	3,6	;RP1=0, select bank1
  8405  0DA6  06A4               	xorwf	___fldiv@sign^(0+128),f
  8406  0DA7                     i1l3395:
  8407  0DA7  1283               	bcf	3,5	;RP0=0, select bank0
  8408  0DA8  1303               	bcf	3,6	;RP1=0, select bank0
  8409  0DA9  085B               	movf	___fldiv@a+3,w
  8410  0DAA  00E0               	movwf	??___fldiv
  8411  0DAB  0760               	addwf	??___fldiv,w
  8412  0DAC  00E1               	movwf	??___fldiv+1
  8413  0DAD  0861               	movf	??___fldiv+1,w
  8414  0DAE  1683               	bsf	3,5	;RP0=1, select bank1
  8415  0DAF  1303               	bcf	3,6	;RP1=0, select bank1
  8416  0DB0  00AC               	movwf	___fldiv@aexp^(0+128)
  8417  0DB1                     i1l3397:
  8418  0DB1  1283               	bcf	3,5	;RP0=0, select bank0
  8419  0DB2  1303               	bcf	3,6	;RP1=0, select bank0
  8420  0DB3  1FDA               	btfss	___fldiv@a+2,7
  8421  0DB4  2DB6               	goto	u401_21
  8422  0DB5  2DB7               	goto	u401_20
  8423  0DB6                     u401_21:
  8424  0DB6  2DBA               	goto	i1l3401
  8425  0DB7                     u401_20:
  8426  0DB7                     i1l3399:
  8427  0DB7  1683               	bsf	3,5	;RP0=1, select bank1
  8428  0DB8  1303               	bcf	3,6	;RP1=0, select bank1
  8429  0DB9  142C               	bsf	___fldiv@aexp^(0+128),0
  8430  0DBA                     i1l3401:
  8431  0DBA  1683               	bsf	3,5	;RP0=1, select bank1
  8432  0DBB  1303               	bcf	3,6	;RP1=0, select bank1
  8433  0DBC  082C               	movf	___fldiv@aexp^(0+128),w
  8434  0DBD  1903               	btfsc	3,2
  8435  0DBE  2DC0               	goto	u402_21
  8436  0DBF  2DC1               	goto	u402_20
  8437  0DC0                     u402_21:
  8438  0DC0  2DD4               	goto	i1l3411
  8439  0DC1                     u402_20:
  8440  0DC1                     i1l3403:
  8441  0DC1  0A2C               	incf	___fldiv@aexp^(0+128),w
  8442  0DC2  1D03               	btfss	3,2
  8443  0DC3  2DC5               	goto	u403_21
  8444  0DC4  2DC6               	goto	u403_20
  8445  0DC5                     u403_21:
  8446  0DC5  2DD0               	goto	i1l3407
  8447  0DC6                     u403_20:
  8448  0DC6                     i1l3405:
  8449  0DC6  3000               	movlw	0
  8450  0DC7  1283               	bcf	3,5	;RP0=0, select bank0
  8451  0DC8  1303               	bcf	3,6	;RP1=0, select bank0
  8452  0DC9  00DB               	movwf	___fldiv@a+3
  8453  0DCA  3000               	movlw	0
  8454  0DCB  00DA               	movwf	___fldiv@a+2
  8455  0DCC  3000               	movlw	0
  8456  0DCD  00D9               	movwf	___fldiv@a+1
  8457  0DCE  3000               	movlw	0
  8458  0DCF  00D8               	movwf	___fldiv@a
  8459  0DD0                     i1l3407:
  8460  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  8461  0DD1  17DA               	bsf	___fldiv@a+2,7
  8462  0DD2                     i1l3409:
  8463  0DD2  01DB               	clrf	___fldiv@a+3
  8464  0DD3  2DDE               	goto	i1l862
  8465  0DD4                     i1l3411:
  8466  0DD4  3000               	movlw	0
  8467  0DD5  1283               	bcf	3,5	;RP0=0, select bank0
  8468  0DD6  1303               	bcf	3,6	;RP1=0, select bank0
  8469  0DD7  00DB               	movwf	___fldiv@a+3
  8470  0DD8  3000               	movlw	0
  8471  0DD9  00DA               	movwf	___fldiv@a+2
  8472  0DDA  3000               	movlw	0
  8473  0DDB  00D9               	movwf	___fldiv@a+1
  8474  0DDC  3000               	movlw	0
  8475  0DDD  00D8               	movwf	___fldiv@a
  8476  0DDE                     i1l862:
  8477  0DDE  085B               	movf	___fldiv@a+3,w
  8478  0DDF  045A               	iorwf	___fldiv@a+2,w
  8479  0DE0  0459               	iorwf	___fldiv@a+1,w
  8480  0DE1  0458               	iorwf	___fldiv@a,w
  8481  0DE2  1D03               	skipz
  8482  0DE3  2DE5               	goto	u404_21
  8483  0DE4  2DE6               	goto	u404_20
  8484  0DE5                     u404_21:
  8485  0DE5  2E03               	goto	i1l3421
  8486  0DE6                     u404_20:
  8487  0DE6                     i1l3413:
  8488  0DE6  3000               	movlw	0
  8489  0DE7  00DF               	movwf	___fldiv@b+3
  8490  0DE8  3000               	movlw	0
  8491  0DE9  00DE               	movwf	___fldiv@b+2
  8492  0DEA  3000               	movlw	0
  8493  0DEB  00DD               	movwf	___fldiv@b+1
  8494  0DEC  3000               	movlw	0
  8495  0DED  00DC               	movwf	___fldiv@b
  8496  0DEE  3080               	movlw	128
  8497  0DEF  04DE               	iorwf	___fldiv@b+2,f
  8498  0DF0  307F               	movlw	127
  8499  0DF1  04DF               	iorwf	___fldiv@b+3,f
  8500  0DF2                     i1l3415:
  8501  0DF2  1683               	bsf	3,5	;RP0=1, select bank1
  8502  0DF3  1303               	bcf	3,6	;RP1=0, select bank1
  8503  0DF4  0824               	movf	___fldiv@sign^(0+128),w
  8504  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  8505  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  8506  0DF7  00E0               	movwf	??___fldiv
  8507  0DF8  0860               	movf	??___fldiv,w
  8508  0DF9  04DF               	iorwf	___fldiv@b+3,f
  8509  0DFA                     i1l3417:
  8510  0DFA  085F               	movf	___fldiv@b+3,w
  8511  0DFB  00DB               	movwf	?___fldiv+3
  8512  0DFC  085E               	movf	___fldiv@b+2,w
  8513  0DFD  00DA               	movwf	?___fldiv+2
  8514  0DFE  085D               	movf	___fldiv@b+1,w
  8515  0DFF  00D9               	movwf	?___fldiv+1
  8516  0E00  085C               	movf	___fldiv@b,w
  8517  0E01  00D8               	movwf	?___fldiv
  8518  0E02  2FFF               	goto	i1l864
  8519  0E03                     i1l3421:
  8520  0E03  1683               	bsf	3,5	;RP0=1, select bank1
  8521  0E04  1303               	bcf	3,6	;RP1=0, select bank1
  8522  0E05  082B               	movf	___fldiv@bexp^(0+128),w
  8523  0E06  1D03               	btfss	3,2
  8524  0E07  2E09               	goto	u405_21
  8525  0E08  2E0A               	goto	u405_20
  8526  0E09                     u405_21:
  8527  0E09  2E15               	goto	i1l3427
  8528  0E0A                     u405_20:
  8529  0E0A                     i1l3423:
  8530  0E0A  3000               	movlw	0
  8531  0E0B  1283               	bcf	3,5	;RP0=0, select bank0
  8532  0E0C  1303               	bcf	3,6	;RP1=0, select bank0
  8533  0E0D  00DB               	movwf	?___fldiv+3
  8534  0E0E  3000               	movlw	0
  8535  0E0F  00DA               	movwf	?___fldiv+2
  8536  0E10  3000               	movlw	0
  8537  0E11  00D9               	movwf	?___fldiv+1
  8538  0E12  3000               	movlw	0
  8539  0E13  00D8               	movwf	?___fldiv
  8540  0E14  2FFF               	goto	i1l864
  8541  0E15                     i1l3427:
  8542  0E15  082B               	movf	___fldiv@bexp^(0+128),w
  8543  0E16  1283               	bcf	3,5	;RP0=0, select bank0
  8544  0E17  1303               	bcf	3,6	;RP1=0, select bank0
  8545  0E18  00E0               	movwf	??___fldiv
  8546  0E19  01E1               	clrf	??___fldiv+1
  8547  0E1A  0861               	movf	??___fldiv+1,w
  8548  0E1B  00E3               	movwf	??___fldiv+3
  8549  0E1C  1683               	bsf	3,5	;RP0=1, select bank1
  8550  0E1D  1303               	bcf	3,6	;RP1=0, select bank1
  8551  0E1E  082C               	movf	___fldiv@aexp^(0+128),w
  8552  0E1F  1283               	bcf	3,5	;RP0=0, select bank0
  8553  0E20  1303               	bcf	3,6	;RP1=0, select bank0
  8554  0E21  0260               	subwf	??___fldiv,w
  8555  0E22  00E2               	movwf	??___fldiv+2
  8556  0E23  1C03               	skipc
  8557  0E24  03E3               	decf	??___fldiv+3,f
  8558  0E25  0862               	movf	??___fldiv+2,w
  8559  0E26  3E7F               	addlw	127
  8560  0E27  1683               	bsf	3,5	;RP0=1, select bank1
  8561  0E28  1303               	bcf	3,6	;RP1=0, select bank1
  8562  0E29  00A5               	movwf	___fldiv@new_exp^(0+128)
  8563  0E2A  1283               	bcf	3,5	;RP0=0, select bank0
  8564  0E2B  1303               	bcf	3,6	;RP1=0, select bank0
  8565  0E2C  0863               	movf	??___fldiv+3,w
  8566  0E2D  1803               	skipnc
  8567  0E2E  3E01               	addlw	1
  8568  0E2F  3E00               	addlw	0
  8569  0E30  1683               	bsf	3,5	;RP0=1, select bank1
  8570  0E31  1303               	bcf	3,6	;RP1=0, select bank1
  8571  0E32  00A6               	movwf	(___fldiv@new_exp+1)^(0+128)
  8572  0E33                     i1l3429:
  8573  0E33  1283               	bcf	3,5	;RP0=0, select bank0
  8574  0E34  1303               	bcf	3,6	;RP1=0, select bank0
  8575  0E35  085F               	movf	___fldiv@b+3,w
  8576  0E36  1683               	bsf	3,5	;RP0=1, select bank1
  8577  0E37  1303               	bcf	3,6	;RP1=0, select bank1
  8578  0E38  00A3               	movwf	(___fldiv@rem+3)^(0+128)
  8579  0E39  1283               	bcf	3,5	;RP0=0, select bank0
  8580  0E3A  1303               	bcf	3,6	;RP1=0, select bank0
  8581  0E3B  085E               	movf	___fldiv@b+2,w
  8582  0E3C  1683               	bsf	3,5	;RP0=1, select bank1
  8583  0E3D  1303               	bcf	3,6	;RP1=0, select bank1
  8584  0E3E  00A2               	movwf	(___fldiv@rem+2)^(0+128)
  8585  0E3F  1283               	bcf	3,5	;RP0=0, select bank0
  8586  0E40  1303               	bcf	3,6	;RP1=0, select bank0
  8587  0E41  085D               	movf	___fldiv@b+1,w
  8588  0E42  1683               	bsf	3,5	;RP0=1, select bank1
  8589  0E43  1303               	bcf	3,6	;RP1=0, select bank1
  8590  0E44  00A1               	movwf	(___fldiv@rem+1)^(0+128)
  8591  0E45  1283               	bcf	3,5	;RP0=0, select bank0
  8592  0E46  1303               	bcf	3,6	;RP1=0, select bank0
  8593  0E47  085C               	movf	___fldiv@b,w
  8594  0E48  1683               	bsf	3,5	;RP0=1, select bank1
  8595  0E49  1303               	bcf	3,6	;RP1=0, select bank1
  8596  0E4A  00A0               	movwf	___fldiv@rem^(0+128)
  8597  0E4B                     i1l3431:
  8598  0E4B  3000               	movlw	0
  8599  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  8600  0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  8601  0E4E  00DF               	movwf	___fldiv@b+3
  8602  0E4F  3000               	movlw	0
  8603  0E50  00DE               	movwf	___fldiv@b+2
  8604  0E51  3000               	movlw	0
  8605  0E52  00DD               	movwf	___fldiv@b+1
  8606  0E53  3000               	movlw	0
  8607  0E54  00DC               	movwf	___fldiv@b
  8608  0E55                     i1l3433:
  8609  0E55  3000               	movlw	0
  8610  0E56  1683               	bsf	3,5	;RP0=1, select bank1
  8611  0E57  1303               	bcf	3,6	;RP1=0, select bank1
  8612  0E58  00AA               	movwf	(___fldiv@grs+3)^(0+128)
  8613  0E59  3000               	movlw	0
  8614  0E5A  00A9               	movwf	(___fldiv@grs+2)^(0+128)
  8615  0E5B  3000               	movlw	0
  8616  0E5C  00A8               	movwf	(___fldiv@grs+1)^(0+128)
  8617  0E5D  3000               	movlw	0
  8618  0E5E  00A7               	movwf	___fldiv@grs^(0+128)
  8619  0E5F                     i1l3435:
  8620  0E5F  01AC               	clrf	___fldiv@aexp^(0+128)
  8621  0E60  2EE7               	goto	i1l3455
  8622  0E61                     i1l3437:
  8623  0E61  082C               	movf	___fldiv@aexp^(0+128),w
  8624  0E62  1903               	btfsc	3,2
  8625  0E63  2E65               	goto	u406_21
  8626  0E64  2E66               	goto	u406_20
  8627  0E65                     u406_21:
  8628  0E65  2E95               	goto	i1l3447
  8629  0E66                     u406_20:
  8630  0E66                     i1l3439:
  8631  0E66  3001               	movlw	1
  8632  0E67  1283               	bcf	3,5	;RP0=0, select bank0
  8633  0E68  1303               	bcf	3,6	;RP1=0, select bank0
  8634  0E69  00E0               	movwf	??___fldiv
  8635  0E6A                     u407_25:
  8636  0E6A  1003               	clrc
  8637  0E6B  1683               	bsf	3,5	;RP0=1, select bank1
  8638  0E6C  1303               	bcf	3,6	;RP1=0, select bank1
  8639  0E6D  0DA0               	rlf	___fldiv@rem^(0+128),f
  8640  0E6E  0DA1               	rlf	(___fldiv@rem+1)^(0+128),f
  8641  0E6F  0DA2               	rlf	(___fldiv@rem+2)^(0+128),f
  8642  0E70  0DA3               	rlf	(___fldiv@rem+3)^(0+128),f
  8643  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  8644  0E72  1303               	bcf	3,6	;RP1=0, select bank0
  8645  0E73  0BE0               	decfsz	??___fldiv,f
  8646  0E74  2E6A               	goto	u407_25
  8647  0E75  3001               	movlw	1
  8648  0E76  00E0               	movwf	??___fldiv
  8649  0E77                     u408_25:
  8650  0E77  1003               	clrc
  8651  0E78  0DDC               	rlf	___fldiv@b,f
  8652  0E79  0DDD               	rlf	___fldiv@b+1,f
  8653  0E7A  0DDE               	rlf	___fldiv@b+2,f
  8654  0E7B  0DDF               	rlf	___fldiv@b+3,f
  8655  0E7C  0BE0               	decfsz	??___fldiv,f
  8656  0E7D  2E77               	goto	u408_25
  8657  0E7E                     i1l3441:
  8658  0E7E  1683               	bsf	3,5	;RP0=1, select bank1
  8659  0E7F  1303               	bcf	3,6	;RP1=0, select bank1
  8660  0E80  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  8661  0E81  2E83               	goto	u409_21
  8662  0E82  2E84               	goto	u409_20
  8663  0E83                     u409_21:
  8664  0E83  2E87               	goto	i1l3445
  8665  0E84                     u409_20:
  8666  0E84                     i1l3443:
  8667  0E84  1283               	bcf	3,5	;RP0=0, select bank0
  8668  0E85  1303               	bcf	3,6	;RP1=0, select bank0
  8669  0E86  145C               	bsf	___fldiv@b,0
  8670  0E87                     i1l3445:
  8671  0E87  3001               	movlw	1
  8672  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  8673  0E89  00E0               	movwf	??___fldiv
  8674  0E8A                     u410_25:
  8675  0E8A  1003               	clrc
  8676  0E8B  1683               	bsf	3,5	;RP0=1, select bank1
  8677  0E8C  1303               	bcf	3,6	;RP1=0, select bank1
  8678  0E8D  0DA7               	rlf	___fldiv@grs^(0+128),f
  8679  0E8E  0DA8               	rlf	(___fldiv@grs+1)^(0+128),f
  8680  0E8F  0DA9               	rlf	(___fldiv@grs+2)^(0+128),f
  8681  0E90  0DAA               	rlf	(___fldiv@grs+3)^(0+128),f
  8682  0E91  1283               	bcf	3,5	;RP0=0, select bank0
  8683  0E92  1303               	bcf	3,6	;RP1=0, select bank0
  8684  0E93  0BE0               	decfsz	??___fldiv,f
  8685  0E94  2E8A               	goto	u410_25
  8686  0E95                     i1l3447:
  8687  0E95  1283               	bcf	3,5	;RP0=0, select bank0
  8688  0E96  085B               	movf	___fldiv@a+3,w
  8689  0E97  1683               	bsf	3,5	;RP0=1, select bank1
  8690  0E98  1303               	bcf	3,6	;RP1=0, select bank1
  8691  0E99  0223               	subwf	(___fldiv@rem+3)^(0+128),w
  8692  0E9A  1D03               	skipz
  8693  0E9B  2EB2               	goto	u411_25
  8694  0E9C  1283               	bcf	3,5	;RP0=0, select bank0
  8695  0E9D  1303               	bcf	3,6	;RP1=0, select bank0
  8696  0E9E  085A               	movf	___fldiv@a+2,w
  8697  0E9F  1683               	bsf	3,5	;RP0=1, select bank1
  8698  0EA0  1303               	bcf	3,6	;RP1=0, select bank1
  8699  0EA1  0222               	subwf	(___fldiv@rem+2)^(0+128),w
  8700  0EA2  1D03               	skipz
  8701  0EA3  2EB2               	goto	u411_25
  8702  0EA4  1283               	bcf	3,5	;RP0=0, select bank0
  8703  0EA5  1303               	bcf	3,6	;RP1=0, select bank0
  8704  0EA6  0859               	movf	___fldiv@a+1,w
  8705  0EA7  1683               	bsf	3,5	;RP0=1, select bank1
  8706  0EA8  1303               	bcf	3,6	;RP1=0, select bank1
  8707  0EA9  0221               	subwf	(___fldiv@rem+1)^(0+128),w
  8708  0EAA  1D03               	skipz
  8709  0EAB  2EB2               	goto	u411_25
  8710  0EAC  1283               	bcf	3,5	;RP0=0, select bank0
  8711  0EAD  1303               	bcf	3,6	;RP1=0, select bank0
  8712  0EAE  0858               	movf	___fldiv@a,w
  8713  0EAF  1683               	bsf	3,5	;RP0=1, select bank1
  8714  0EB0  1303               	bcf	3,6	;RP1=0, select bank1
  8715  0EB1  0220               	subwf	___fldiv@rem^(0+128),w
  8716  0EB2                     u411_25:
  8717  0EB2  1C03               	skipc
  8718  0EB3  2EB5               	goto	u411_21
  8719  0EB4  2EB6               	goto	u411_20
  8720  0EB5                     u411_21:
  8721  0EB5  2EDF               	goto	i1l3453
  8722  0EB6                     u411_20:
  8723  0EB6                     i1l3449:
  8724  0EB6  172A               	bsf	(___fldiv@grs^(0+128)+3),6
  8725  0EB7                     i1l3451:
  8726  0EB7  1283               	bcf	3,5	;RP0=0, select bank0
  8727  0EB8  1303               	bcf	3,6	;RP1=0, select bank0
  8728  0EB9  0858               	movf	___fldiv@a,w
  8729  0EBA  1683               	bsf	3,5	;RP0=1, select bank1
  8730  0EBB  1303               	bcf	3,6	;RP1=0, select bank1
  8731  0EBC  02A0               	subwf	___fldiv@rem^(0+128),f
  8732  0EBD  1283               	bcf	3,5	;RP0=0, select bank0
  8733  0EBE  1303               	bcf	3,6	;RP1=0, select bank0
  8734  0EBF  0859               	movf	___fldiv@a+1,w
  8735  0EC0  1C03               	skipc
  8736  0EC1  0F59               	incfsz	___fldiv@a+1,w
  8737  0EC2  2EC4               	goto	u412_25
  8738  0EC3  2EC7               	goto	u412_26
  8739  0EC4                     u412_25:
  8740  0EC4  1683               	bsf	3,5	;RP0=1, select bank1
  8741  0EC5  1303               	bcf	3,6	;RP1=0, select bank1
  8742  0EC6  02A1               	subwf	(___fldiv@rem+1)^(0+128),f
  8743  0EC7                     u412_26:
  8744  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  8745  0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  8746  0EC9  085A               	movf	___fldiv@a+2,w
  8747  0ECA  1C03               	skipc
  8748  0ECB  0F5A               	incfsz	___fldiv@a+2,w
  8749  0ECC  2ECE               	goto	u412_27
  8750  0ECD  2ED1               	goto	u412_28
  8751  0ECE                     u412_27:
  8752  0ECE  1683               	bsf	3,5	;RP0=1, select bank1
  8753  0ECF  1303               	bcf	3,6	;RP1=0, select bank1
  8754  0ED0  02A2               	subwf	(___fldiv@rem+2)^(0+128),f
  8755  0ED1                     u412_28:
  8756  0ED1  1283               	bcf	3,5	;RP0=0, select bank0
  8757  0ED2  1303               	bcf	3,6	;RP1=0, select bank0
  8758  0ED3  085B               	movf	___fldiv@a+3,w
  8759  0ED4  1C03               	skipc
  8760  0ED5  0F5B               	incfsz	___fldiv@a+3,w
  8761  0ED6  2ED8               	goto	u412_29
  8762  0ED7  2EDB               	goto	u412_20
  8763  0ED8                     u412_29:
  8764  0ED8  1683               	bsf	3,5	;RP0=1, select bank1
  8765  0ED9  1303               	bcf	3,6	;RP1=0, select bank1
  8766  0EDA  02A3               	subwf	(___fldiv@rem+3)^(0+128),f
  8767  0EDB                     u412_20:
  8768  0EDB  1283               	bcf	3,5	;RP0=0, select bank0
  8769  0EDC  1303               	bcf	3,6	;RP1=0, select bank0
  8770  0EDD  1683               	bsf	3,5	;RP0=1, select bank1
  8771  0EDE  1303               	bcf	3,6	;RP1=0, select bank1
  8772  0EDF                     i1l3453:
  8773  0EDF  3001               	movlw	1
  8774  0EE0  1283               	bcf	3,5	;RP0=0, select bank0
  8775  0EE1  1303               	bcf	3,6	;RP1=0, select bank0
  8776  0EE2  00E0               	movwf	??___fldiv
  8777  0EE3  0860               	movf	??___fldiv,w
  8778  0EE4  1683               	bsf	3,5	;RP0=1, select bank1
  8779  0EE5  1303               	bcf	3,6	;RP1=0, select bank1
  8780  0EE6  07AC               	addwf	___fldiv@aexp^(0+128),f
  8781  0EE7                     i1l3455:
  8782  0EE7  301A               	movlw	26
  8783  0EE8  022C               	subwf	___fldiv@aexp^(0+128),w
  8784  0EE9  1C03               	skipc
  8785  0EEA  2EEC               	goto	u413_21
  8786  0EEB  2EED               	goto	u413_20
  8787  0EEC                     u413_21:
  8788  0EEC  2E61               	goto	i1l3437
  8789  0EED                     u413_20:
  8790  0EED                     i1l3457:
  8791  0EED  0823               	movf	(___fldiv@rem+3)^(0+128),w
  8792  0EEE  0422               	iorwf	(___fldiv@rem+2)^(0+128),w
  8793  0EEF  0421               	iorwf	(___fldiv@rem+1)^(0+128),w
  8794  0EF0  0420               	iorwf	___fldiv@rem^(0+128),w
  8795  0EF1  1903               	skipnz
  8796  0EF2  2EF4               	goto	u414_21
  8797  0EF3  2EF5               	goto	u414_20
  8798  0EF4                     u414_21:
  8799  0EF4  2F1F               	goto	i1l3471
  8800  0EF5                     u414_20:
  8801  0EF5                     i1l3459:
  8802  0EF5  1427               	bsf	___fldiv@grs^(0+128),0
  8803  0EF6  2F1F               	goto	i1l3471
  8804  0EF7                     i1l3461:
  8805  0EF7  3001               	movlw	1
  8806  0EF8  00E0               	movwf	??___fldiv
  8807  0EF9                     u415_25:
  8808  0EF9  1003               	clrc
  8809  0EFA  0DDC               	rlf	___fldiv@b,f
  8810  0EFB  0DDD               	rlf	___fldiv@b+1,f
  8811  0EFC  0DDE               	rlf	___fldiv@b+2,f
  8812  0EFD  0DDF               	rlf	___fldiv@b+3,f
  8813  0EFE  0BE0               	decfsz	??___fldiv,f
  8814  0EFF  2EF9               	goto	u415_25
  8815  0F00                     i1l3463:
  8816  0F00  1683               	bsf	3,5	;RP0=1, select bank1
  8817  0F01  1303               	bcf	3,6	;RP1=0, select bank1
  8818  0F02  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  8819  0F03  2F05               	goto	u416_21
  8820  0F04  2F06               	goto	u416_20
  8821  0F05                     u416_21:
  8822  0F05  2F09               	goto	i1l3467
  8823  0F06                     u416_20:
  8824  0F06                     i1l3465:
  8825  0F06  1283               	bcf	3,5	;RP0=0, select bank0
  8826  0F07  1303               	bcf	3,6	;RP1=0, select bank0
  8827  0F08  145C               	bsf	___fldiv@b,0
  8828  0F09                     i1l3467:
  8829  0F09  3001               	movlw	1
  8830  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  8831  0F0B  00E0               	movwf	??___fldiv
  8832  0F0C                     u417_25:
  8833  0F0C  1003               	clrc
  8834  0F0D  1683               	bsf	3,5	;RP0=1, select bank1
  8835  0F0E  1303               	bcf	3,6	;RP1=0, select bank1
  8836  0F0F  0DA7               	rlf	___fldiv@grs^(0+128),f
  8837  0F10  0DA8               	rlf	(___fldiv@grs+1)^(0+128),f
  8838  0F11  0DA9               	rlf	(___fldiv@grs+2)^(0+128),f
  8839  0F12  0DAA               	rlf	(___fldiv@grs+3)^(0+128),f
  8840  0F13  1283               	bcf	3,5	;RP0=0, select bank0
  8841  0F14  1303               	bcf	3,6	;RP1=0, select bank0
  8842  0F15  0BE0               	decfsz	??___fldiv,f
  8843  0F16  2F0C               	goto	u417_25
  8844  0F17                     i1l3469:
  8845  0F17  30FF               	movlw	255
  8846  0F18  1683               	bsf	3,5	;RP0=1, select bank1
  8847  0F19  1303               	bcf	3,6	;RP1=0, select bank1
  8848  0F1A  07A5               	addwf	___fldiv@new_exp^(0+128),f
  8849  0F1B  1803               	skipnc
  8850  0F1C  0AA6               	incf	(___fldiv@new_exp+1)^(0+128),f
  8851  0F1D  30FF               	movlw	255
  8852  0F1E  07A6               	addwf	(___fldiv@new_exp+1)^(0+128),f
  8853  0F1F                     i1l3471:
  8854  0F1F  1283               	bcf	3,5	;RP0=0, select bank0
  8855  0F20  1303               	bcf	3,6	;RP1=0, select bank0
  8856  0F21  1FDE               	btfss	___fldiv@b+2,7
  8857  0F22  2F24               	goto	u418_21
  8858  0F23  2F25               	goto	u418_20
  8859  0F24                     u418_21:
  8860  0F24  2EF7               	goto	i1l3461
  8861  0F25                     u418_20:
  8862  0F25                     i1l3473:
  8863  0F25  1683               	bsf	3,5	;RP0=1, select bank1
  8864  0F26  1303               	bcf	3,6	;RP1=0, select bank1
  8865  0F27  01AC               	clrf	___fldiv@aexp^(0+128)
  8866  0F28                     i1l3475:
  8867  0F28  1FAA               	btfss	(___fldiv@grs+3)^(0+128),7
  8868  0F29  2F2B               	goto	u419_21
  8869  0F2A  2F2C               	goto	u419_20
  8870  0F2B                     u419_21:
  8871  0F2B  2F58               	goto	i1l3483
  8872  0F2C                     u419_20:
  8873  0F2C                     i1l3477:
  8874  0F2C  30FF               	movlw	255
  8875  0F2D  0527               	andwf	___fldiv@grs^(0+128),w
  8876  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  8877  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  8878  0F30  00E0               	movwf	??___fldiv
  8879  0F31  30FF               	movlw	255
  8880  0F32  1683               	bsf	3,5	;RP0=1, select bank1
  8881  0F33  1303               	bcf	3,6	;RP1=0, select bank1
  8882  0F34  0528               	andwf	(___fldiv@grs+1)^(0+128),w
  8883  0F35  1283               	bcf	3,5	;RP0=0, select bank0
  8884  0F36  1303               	bcf	3,6	;RP1=0, select bank0
  8885  0F37  00E1               	movwf	??___fldiv+1
  8886  0F38  30FF               	movlw	255
  8887  0F39  1683               	bsf	3,5	;RP0=1, select bank1
  8888  0F3A  1303               	bcf	3,6	;RP1=0, select bank1
  8889  0F3B  0529               	andwf	(___fldiv@grs+2)^(0+128),w
  8890  0F3C  1283               	bcf	3,5	;RP0=0, select bank0
  8891  0F3D  1303               	bcf	3,6	;RP1=0, select bank0
  8892  0F3E  00E2               	movwf	??___fldiv+2
  8893  0F3F  307F               	movlw	127
  8894  0F40  1683               	bsf	3,5	;RP0=1, select bank1
  8895  0F41  1303               	bcf	3,6	;RP1=0, select bank1
  8896  0F42  052A               	andwf	(___fldiv@grs+3)^(0+128),w
  8897  0F43  1283               	bcf	3,5	;RP0=0, select bank0
  8898  0F44  1303               	bcf	3,6	;RP1=0, select bank0
  8899  0F45  00E3               	movwf	??___fldiv+3
  8900  0F46  0863               	movf	??___fldiv+3,w
  8901  0F47  0462               	iorwf	??___fldiv+2,w
  8902  0F48  0461               	iorwf	??___fldiv+1,w
  8903  0F49  0460               	iorwf	??___fldiv,w
  8904  0F4A  1903               	skipnz
  8905  0F4B  2F4D               	goto	u420_21
  8906  0F4C  2F4E               	goto	u420_20
  8907  0F4D                     u420_21:
  8908  0F4D  2F53               	goto	i1l878
  8909  0F4E                     u420_20:
  8910  0F4E                     i1l3479:
  8911  0F4E  1683               	bsf	3,5	;RP0=1, select bank1
  8912  0F4F  1303               	bcf	3,6	;RP1=0, select bank1
  8913  0F50  01AC               	clrf	___fldiv@aexp^(0+128)
  8914  0F51  0AAC               	incf	___fldiv@aexp^(0+128),f
  8915  0F52  2F58               	goto	i1l3483
  8916  0F53                     i1l878:
  8917  0F53  1C5C               	btfss	___fldiv@b,0
  8918  0F54  2F56               	goto	u421_21
  8919  0F55  2F57               	goto	u421_20
  8920  0F56                     u421_21:
  8921  0F56  2F58               	goto	i1l3483
  8922  0F57                     u421_20:
  8923  0F57  2F4E               	goto	i1l3479
  8924  0F58                     i1l3483:
  8925  0F58  1683               	bsf	3,5	;RP0=1, select bank1
  8926  0F59  1303               	bcf	3,6	;RP1=0, select bank1
  8927  0F5A  082C               	movf	___fldiv@aexp^(0+128),w
  8928  0F5B  1903               	btfsc	3,2
  8929  0F5C  2F5E               	goto	u422_21
  8930  0F5D  2F5F               	goto	u422_20
  8931  0F5E                     u422_21:
  8932  0F5E  2F94               	goto	i1l3493
  8933  0F5F                     u422_20:
  8934  0F5F                     i1l3485:
  8935  0F5F  3001               	movlw	1
  8936  0F60  1283               	bcf	3,5	;RP0=0, select bank0
  8937  0F61  1303               	bcf	3,6	;RP1=0, select bank0
  8938  0F62  07DC               	addwf	___fldiv@b,f
  8939  0F63  3000               	movlw	0
  8940  0F64  1803               	skipnc
  8941  0F65  3001               	movlw	1
  8942  0F66  07DD               	addwf	___fldiv@b+1,f
  8943  0F67  3000               	movlw	0
  8944  0F68  1803               	skipnc
  8945  0F69  3001               	movlw	1
  8946  0F6A  07DE               	addwf	___fldiv@b+2,f
  8947  0F6B  3000               	movlw	0
  8948  0F6C  1803               	skipnc
  8949  0F6D  3001               	movlw	1
  8950  0F6E  07DF               	addwf	___fldiv@b+3,f
  8951  0F6F                     i1l3487:
  8952  0F6F  1C5F               	btfss	___fldiv@b+3,0
  8953  0F70  2F72               	goto	u423_21
  8954  0F71  2F73               	goto	u423_20
  8955  0F72                     u423_21:
  8956  0F72  2F94               	goto	i1l3493
  8957  0F73                     u423_20:
  8958  0F73                     i1l3489:
  8959  0F73  085C               	movf	___fldiv@b,w
  8960  0F74  00E0               	movwf	??___fldiv
  8961  0F75  085D               	movf	___fldiv@b+1,w
  8962  0F76  00E1               	movwf	??___fldiv+1
  8963  0F77  085E               	movf	___fldiv@b+2,w
  8964  0F78  00E2               	movwf	??___fldiv+2
  8965  0F79  085F               	movf	___fldiv@b+3,w
  8966  0F7A  00E3               	movwf	??___fldiv+3
  8967  0F7B  3001               	movlw	1
  8968  0F7C  00E4               	movwf	??___fldiv+4
  8969  0F7D                     u424_25:
  8970  0F7D  0D63               	rlf	??___fldiv+3,w
  8971  0F7E  0CE3               	rrf	??___fldiv+3,f
  8972  0F7F  0CE2               	rrf	??___fldiv+2,f
  8973  0F80  0CE1               	rrf	??___fldiv+1,f
  8974  0F81  0CE0               	rrf	??___fldiv,f
  8975  0F82                     u424_20:
  8976  0F82  0BE4               	decfsz	??___fldiv+4,f
  8977  0F83  2F7D               	goto	u424_25
  8978  0F84  0863               	movf	??___fldiv+3,w
  8979  0F85  00DF               	movwf	___fldiv@b+3
  8980  0F86  0862               	movf	??___fldiv+2,w
  8981  0F87  00DE               	movwf	___fldiv@b+2
  8982  0F88  0861               	movf	??___fldiv+1,w
  8983  0F89  00DD               	movwf	___fldiv@b+1
  8984  0F8A  0860               	movf	??___fldiv,w
  8985  0F8B  00DC               	movwf	___fldiv@b
  8986  0F8C                     i1l3491:
  8987  0F8C  3001               	movlw	1
  8988  0F8D  1683               	bsf	3,5	;RP0=1, select bank1
  8989  0F8E  1303               	bcf	3,6	;RP1=0, select bank1
  8990  0F8F  07A5               	addwf	___fldiv@new_exp^(0+128),f
  8991  0F90  1803               	skipnc
  8992  0F91  0AA6               	incf	(___fldiv@new_exp+1)^(0+128),f
  8993  0F92  3000               	movlw	0
  8994  0F93  07A6               	addwf	(___fldiv@new_exp+1)^(0+128),f
  8995  0F94                     i1l3493:
  8996  0F94  1683               	bsf	3,5	;RP0=1, select bank1
  8997  0F95  1303               	bcf	3,6	;RP1=0, select bank1
  8998  0F96  0826               	movf	(___fldiv@new_exp+1)^(0+128),w
  8999  0F97  3A80               	xorlw	128
  9000  0F98  00FF               	movwf	btemp+1
  9001  0F99  3080               	movlw	128
  9002  0F9A  027F               	subwf	btemp+1,w
  9003  0F9B  1D03               	skipz
  9004  0F9C  2F9F               	goto	u425_25
  9005  0F9D  30FF               	movlw	255
  9006  0F9E  0225               	subwf	___fldiv@new_exp^(0+128),w
  9007  0F9F                     u425_25:
  9008  0F9F  1C03               	skipc
  9009  0FA0  2FA2               	goto	u425_21
  9010  0FA1  2FA3               	goto	u425_20
  9011  0FA2                     u425_21:
  9012  0FA2  2FB3               	goto	i1l3497
  9013  0FA3                     u425_20:
  9014  0FA3                     i1l3495:
  9015  0FA3  30FF               	movlw	255
  9016  0FA4  1683               	bsf	3,5	;RP0=1, select bank1
  9017  0FA5  1303               	bcf	3,6	;RP1=0, select bank1
  9018  0FA6  00A5               	movwf	___fldiv@new_exp^(0+128)
  9019  0FA7  3000               	movlw	0
  9020  0FA8  00A6               	movwf	(___fldiv@new_exp^(0+128)+1)
  9021  0FA9  3000               	movlw	0
  9022  0FAA  1283               	bcf	3,5	;RP0=0, select bank0
  9023  0FAB  1303               	bcf	3,6	;RP1=0, select bank0
  9024  0FAC  00DF               	movwf	___fldiv@b+3
  9025  0FAD  3000               	movlw	0
  9026  0FAE  00DE               	movwf	___fldiv@b+2
  9027  0FAF  3000               	movlw	0
  9028  0FB0  00DD               	movwf	___fldiv@b+1
  9029  0FB1  3000               	movlw	0
  9030  0FB2  00DC               	movwf	___fldiv@b
  9031  0FB3                     i1l3497:
  9032  0FB3  1683               	bsf	3,5	;RP0=1, select bank1
  9033  0FB4  1303               	bcf	3,6	;RP1=0, select bank1
  9034  0FB5  0826               	movf	(___fldiv@new_exp+1)^(0+128),w
  9035  0FB6  3A80               	xorlw	128
  9036  0FB7  00FF               	movwf	btemp+1
  9037  0FB8  3080               	movlw	128
  9038  0FB9  027F               	subwf	btemp+1,w
  9039  0FBA  1D03               	skipz
  9040  0FBB  2FBE               	goto	u426_25
  9041  0FBC  3001               	movlw	1
  9042  0FBD  0225               	subwf	___fldiv@new_exp^(0+128),w
  9043  0FBE                     u426_25:
  9044  0FBE  1803               	skipnc
  9045  0FBF  2FC1               	goto	u426_21
  9046  0FC0  2FC2               	goto	u426_20
  9047  0FC1                     u426_21:
  9048  0FC1  2FD3               	goto	i1l884
  9049  0FC2                     u426_20:
  9050  0FC2                     i1l3499:
  9051  0FC2  1683               	bsf	3,5	;RP0=1, select bank1
  9052  0FC3  1303               	bcf	3,6	;RP1=0, select bank1
  9053  0FC4  01A5               	clrf	___fldiv@new_exp^(0+128)
  9054  0FC5  01A6               	clrf	(___fldiv@new_exp+1)^(0+128)
  9055  0FC6                     i1l3501:
  9056  0FC6  3000               	movlw	0
  9057  0FC7  1283               	bcf	3,5	;RP0=0, select bank0
  9058  0FC8  1303               	bcf	3,6	;RP1=0, select bank0
  9059  0FC9  00DF               	movwf	___fldiv@b+3
  9060  0FCA  3000               	movlw	0
  9061  0FCB  00DE               	movwf	___fldiv@b+2
  9062  0FCC  3000               	movlw	0
  9063  0FCD  00DD               	movwf	___fldiv@b+1
  9064  0FCE  3000               	movlw	0
  9065  0FCF  00DC               	movwf	___fldiv@b
  9066  0FD0                     i1l3503:
  9067  0FD0  1683               	bsf	3,5	;RP0=1, select bank1
  9068  0FD1  1303               	bcf	3,6	;RP1=0, select bank1
  9069  0FD2  01A4               	clrf	___fldiv@sign^(0+128)
  9070  0FD3                     i1l884:
  9071  0FD3  1683               	bsf	3,5	;RP0=1, select bank1
  9072  0FD4  1303               	bcf	3,6	;RP1=0, select bank1
  9073  0FD5  0825               	movf	___fldiv@new_exp^(0+128),w
  9074  0FD6  1283               	bcf	3,5	;RP0=0, select bank0
  9075  0FD7  1303               	bcf	3,6	;RP1=0, select bank0
  9076  0FD8  00E0               	movwf	??___fldiv
  9077  0FD9  0860               	movf	??___fldiv,w
  9078  0FDA  1683               	bsf	3,5	;RP0=1, select bank1
  9079  0FDB  1303               	bcf	3,6	;RP1=0, select bank1
  9080  0FDC  00AB               	movwf	___fldiv@bexp^(0+128)
  9081  0FDD                     i1l3505:
  9082  0FDD  1C2B               	btfss	___fldiv@bexp^(0+128),0
  9083  0FDE  2FE0               	goto	u427_21
  9084  0FDF  2FE1               	goto	u427_20
  9085  0FE0                     u427_21:
  9086  0FE0  2FE5               	goto	i1l3509
  9087  0FE1                     u427_20:
  9088  0FE1                     i1l3507:
  9089  0FE1  1283               	bcf	3,5	;RP0=0, select bank0
  9090  0FE2  1303               	bcf	3,6	;RP1=0, select bank0
  9091  0FE3  17DE               	bsf	___fldiv@b+2,7
  9092  0FE4  2FEB               	goto	i1l886
  9093  0FE5                     i1l3509:
  9094  0FE5  307F               	movlw	127
  9095  0FE6  1283               	bcf	3,5	;RP0=0, select bank0
  9096  0FE7  1303               	bcf	3,6	;RP1=0, select bank0
  9097  0FE8  00E0               	movwf	??___fldiv
  9098  0FE9  0860               	movf	??___fldiv,w
  9099  0FEA  05DE               	andwf	___fldiv@b+2,f
  9100  0FEB                     i1l886:
  9101  0FEB  1683               	bsf	3,5	;RP0=1, select bank1
  9102  0FEC  1303               	bcf	3,6	;RP1=0, select bank1
  9103  0FED  082B               	movf	___fldiv@bexp^(0+128),w
  9104  0FEE  1283               	bcf	3,5	;RP0=0, select bank0
  9105  0FEF  1303               	bcf	3,6	;RP1=0, select bank0
  9106  0FF0  00E0               	movwf	??___fldiv
  9107  0FF1  1003               	clrc
  9108  0FF2  0C60               	rrf	??___fldiv,w
  9109  0FF3  00E1               	movwf	??___fldiv+1
  9110  0FF4  0861               	movf	??___fldiv+1,w
  9111  0FF5  00DF               	movwf	___fldiv@b+3
  9112  0FF6  1683               	bsf	3,5	;RP0=1, select bank1
  9113  0FF7  1303               	bcf	3,6	;RP1=0, select bank1
  9114  0FF8  0824               	movf	___fldiv@sign^(0+128),w
  9115  0FF9  1283               	bcf	3,5	;RP0=0, select bank0
  9116  0FFA  1303               	bcf	3,6	;RP1=0, select bank0
  9117  0FFB  00E0               	movwf	??___fldiv
  9118  0FFC  0860               	movf	??___fldiv,w
  9119  0FFD  04DF               	iorwf	___fldiv@b+3,f
  9120  0FFE  2DFA               	goto	i1l3417
  9121  0FFF                     i1l864:
  9122  0FFF  0008               	return
  9123  1000                     __end_of___fldiv:
  9124                           
  9125                           	psect	text35
  9126  06E9                     __ptext35:	
  9127 ;; *************** function _log *****************
  9128 ;; Defined at:
  9129 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\log.c"
  9130 ;; Parameters:    Size  Location     Type
  9131 ;;  x               4   72[BANK0 ] unsigned char 
  9132 ;; Auto vars:     Size  Location     Type
  9133 ;;  exponent        2   77[BANK0 ] int 
  9134 ;; Return value:  Size  Location     Type
  9135 ;;                  4   72[BANK0 ] int 
  9136 ;; Registers used:
  9137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9138 ;; Tracked objects:
  9139 ;;		On entry : 0/0
  9140 ;;		On exit  : 0/0
  9141 ;;		Unchanged: 0/0
  9142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9143 ;;      Params:         0       4       0       0       0
  9144 ;;      Locals:         0       2       0       0       0
  9145 ;;      Temps:          0       1       0       0       0
  9146 ;;      Totals:         0       7       0       0       0
  9147 ;;Total ram usage:        7 bytes
  9148 ;; Hardware stack levels used: 1
  9149 ;; Hardware stack levels required when called: 3
  9150 ;; This function calls:
  9151 ;;		___fladd
  9152 ;;		___fleq
  9153 ;;		___flge
  9154 ;;		___flmul
  9155 ;;		___xxtofl
  9156 ;;		_eval_poly
  9157 ;;		_frexp
  9158 ;; This function is called by:
  9159 ;;		_slave
  9160 ;; This function uses a non-reentrant model
  9161 ;;
  9162                           
  9163  06E9                     _log:	
  9164                           ;psect for function _log
  9165                           
  9166  06E9                     i1l3635:	
  9167                           ;incstack = 0
  9168                           ; Regs used in _log: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9169                           
  9170  06E9  1283               	bcf	3,5	;RP0=0, select bank0
  9171  06EA  1303               	bcf	3,6	;RP1=0, select bank0
  9172  06EB  086B               	movf	log@x+3,w
  9173  06EC  00F3               	movwf	___flge@ff1+3
  9174  06ED  086A               	movf	log@x+2,w
  9175  06EE  00F2               	movwf	___flge@ff1+2
  9176  06EF  0869               	movf	log@x+1,w
  9177  06F0  00F1               	movwf	___flge@ff1+1
  9178  06F1  0868               	movf	log@x,w
  9179  06F2  00F0               	movwf	___flge@ff1
  9180  06F3  3000               	movlw	0
  9181  06F4  00F7               	movwf	___flge@ff2+3
  9182  06F5  3000               	movlw	0
  9183  06F6  00F6               	movwf	___flge@ff2+2
  9184  06F7  3000               	movlw	0
  9185  06F8  00F5               	movwf	___flge@ff2+1
  9186  06F9  3000               	movlw	0
  9187  06FA  00F4               	movwf	___flge@ff2
  9188  06FB  160A  118A  238E  120A  118A  	fcall	___flge
  9189  0700  1803               	btfsc	3,0
  9190  0701  2F03               	goto	u456_21
  9191  0702  2F04               	goto	u456_20
  9192  0703                     u456_21:
  9193  0703  2F15               	goto	i1l3641
  9194  0704                     u456_20:
  9195  0704                     i1l3637:
  9196  0704  3021               	movlw	33
  9197  0705  1683               	bsf	3,5	;RP0=1, select bank1
  9198  0706  1303               	bcf	3,6	;RP1=0, select bank1
  9199  0707  00E0               	movwf	_errno^(0+128)
  9200  0708  3000               	movlw	0
  9201  0709  00E1               	movwf	(_errno^(0+128)+1)
  9202  070A  3000               	movlw	0
  9203  070B  1283               	bcf	3,5	;RP0=0, select bank0
  9204  070C  1303               	bcf	3,6	;RP1=0, select bank0
  9205  070D  00EB               	movwf	?_log+3
  9206  070E  3000               	movlw	0
  9207  070F  00EA               	movwf	?_log+2
  9208  0710  3000               	movlw	0
  9209  0711  00E9               	movwf	?_log+1
  9210  0712  3000               	movlw	0
  9211  0713  00E8               	movwf	?_log
  9212  0714  2FF8               	goto	i1l973
  9213  0715                     i1l3641:
  9214  0715  1283               	bcf	3,5	;RP0=0, select bank0
  9215  0716  1303               	bcf	3,6	;RP1=0, select bank0
  9216  0717  086B               	movf	log@x+3,w
  9217  0718  00F3               	movwf	___fleq@ff1+3
  9218  0719  086A               	movf	log@x+2,w
  9219  071A  00F2               	movwf	___fleq@ff1+2
  9220  071B  0869               	movf	log@x+1,w
  9221  071C  00F1               	movwf	___fleq@ff1+1
  9222  071D  0868               	movf	log@x,w
  9223  071E  00F0               	movwf	___fleq@ff1
  9224  071F  3000               	movlw	0
  9225  0720  00F7               	movwf	___fleq@ff2+3
  9226  0721  3000               	movlw	0
  9227  0722  00F6               	movwf	___fleq@ff2+2
  9228  0723  3000               	movlw	0
  9229  0724  00F5               	movwf	___fleq@ff2+1
  9230  0725  3000               	movlw	0
  9231  0726  00F4               	movwf	___fleq@ff2
  9232  0727  160A  158A  261D  120A  118A  	fcall	___fleq
  9233  072C  1C03               	btfss	3,0
  9234  072D  2F2F               	goto	u457_21
  9235  072E  2F30               	goto	u457_20
  9236  072F                     u457_21:
  9237  072F  2F41               	goto	i1l3647
  9238  0730                     u457_20:
  9239  0730                     i1l3643:
  9240  0730  3022               	movlw	34
  9241  0731  1683               	bsf	3,5	;RP0=1, select bank1
  9242  0732  1303               	bcf	3,6	;RP1=0, select bank1
  9243  0733  00E0               	movwf	_errno^(0+128)
  9244  0734  3000               	movlw	0
  9245  0735  00E1               	movwf	(_errno^(0+128)+1)
  9246  0736  3000               	movlw	0
  9247  0737  1283               	bcf	3,5	;RP0=0, select bank0
  9248  0738  1303               	bcf	3,6	;RP1=0, select bank0
  9249  0739  00EB               	movwf	?_log+3
  9250  073A  3000               	movlw	0
  9251  073B  00EA               	movwf	?_log+2
  9252  073C  3000               	movlw	0
  9253  073D  00E9               	movwf	?_log+1
  9254  073E  3000               	movlw	0
  9255  073F  00E8               	movwf	?_log
  9256  0740  2FF8               	goto	i1l973
  9257  0741                     i1l3647:
  9258  0741  30BF               	movlw	191
  9259  0742  1283               	bcf	3,5	;RP0=0, select bank0
  9260  0743  1303               	bcf	3,6	;RP1=0, select bank0
  9261  0744  00AD               	movwf	___fladd@b+3
  9262  0745  3080               	movlw	128
  9263  0746  00AC               	movwf	___fladd@b+2
  9264  0747  3000               	movlw	0
  9265  0748  00AB               	movwf	___fladd@b+1
  9266  0749  3000               	movlw	0
  9267  074A  00AA               	movwf	___fladd@b
  9268  074B  3040               	movlw	64
  9269  074C  00C1               	movwf	___flmul@b+3
  9270  074D  3000               	movlw	0
  9271  074E  00C0               	movwf	___flmul@b+2
  9272  074F  3000               	movlw	0
  9273  0750  00BF               	movwf	___flmul@b+1
  9274  0751  3000               	movlw	0
  9275  0752  00BE               	movwf	___flmul@b
  9276  0753  306D               	movlw	(low (log@exponent| 0))& (0+255)
  9277  0754  00EC               	movwf	??_log
  9278  0755  086C               	movf	??_log,w
  9279  0756  00A4               	movwf	frexp@eptr
  9280  0757  086B               	movf	log@x+3,w
  9281  0758  00A3               	movwf	frexp@value+3
  9282  0759  086A               	movf	log@x+2,w
  9283  075A  00A2               	movwf	frexp@value+2
  9284  075B  0869               	movf	log@x+1,w
  9285  075C  00A1               	movwf	frexp@value+1
  9286  075D  0868               	movf	log@x,w
  9287  075E  00A0               	movwf	frexp@value
  9288  075F  160A  118A  2002  120A  118A  	fcall	_frexp
  9289  0764  1283               	bcf	3,5	;RP0=0, select bank0
  9290  0765  1303               	bcf	3,6	;RP1=0, select bank0
  9291  0766  0823               	movf	?_frexp+3,w
  9292  0767  00C5               	movwf	___flmul@a+3
  9293  0768  0822               	movf	?_frexp+2,w
  9294  0769  00C4               	movwf	___flmul@a+2
  9295  076A  0821               	movf	?_frexp+1,w
  9296  076B  00C3               	movwf	___flmul@a+1
  9297  076C  0820               	movf	?_frexp,w
  9298  076D  00C2               	movwf	___flmul@a
  9299  076E  120A  118A  2047  120A  118A  	fcall	___flmul
  9300  0773  1283               	bcf	3,5	;RP0=0, select bank0
  9301  0774  1303               	bcf	3,6	;RP1=0, select bank0
  9302  0775  0841               	movf	?___flmul+3,w
  9303  0776  00B1               	movwf	___fladd@a+3
  9304  0777  0840               	movf	?___flmul+2,w
  9305  0778  00B0               	movwf	___fladd@a+2
  9306  0779  083F               	movf	?___flmul+1,w
  9307  077A  00AF               	movwf	___fladd@a+1
  9308  077B  083E               	movf	?___flmul,w
  9309  077C  00AE               	movwf	___fladd@a
  9310  077D  120A  158A  203A  120A  118A  	fcall	___fladd
  9311  0782  1283               	bcf	3,5	;RP0=0, select bank0
  9312  0783  1303               	bcf	3,6	;RP1=0, select bank0
  9313  0784  082D               	movf	?___fladd+3,w
  9314  0785  00EB               	movwf	log@x+3
  9315  0786  082C               	movf	?___fladd+2,w
  9316  0787  00EA               	movwf	log@x+2
  9317  0788  082B               	movf	?___fladd+1,w
  9318  0789  00E9               	movwf	log@x+1
  9319  078A  082A               	movf	?___fladd,w
  9320  078B  00E8               	movwf	log@x
  9321  078C                     i1l3649:
  9322  078C  30FF               	movlw	255
  9323  078D  07ED               	addwf	log@exponent,f
  9324  078E  1803               	skipnc
  9325  078F  0AEE               	incf	log@exponent+1,f
  9326  0790  30FF               	movlw	255
  9327  0791  07EE               	addwf	log@exponent+1,f
  9328  0792                     i1l3651:
  9329  0792  086B               	movf	log@x+3,w
  9330  0793  00DB               	movwf	eval_poly@x+3
  9331  0794  086A               	movf	log@x+2,w
  9332  0795  00DA               	movwf	eval_poly@x+2
  9333  0796  0869               	movf	log@x+1,w
  9334  0797  00D9               	movwf	eval_poly@x+1
  9335  0798  0868               	movf	log@x,w
  9336  0799  00D8               	movwf	eval_poly@x
  9337  079A  3001               	movlw	(low ((log@coeff-__stringbase)| (0+32768)))& (0+255)
  9338  079B  00EC               	movwf	??_log
  9339  079C  086C               	movf	??_log,w
  9340  079D  00DC               	movwf	eval_poly@d
  9341  079E  3008               	movlw	8
  9342  079F  00DD               	movwf	eval_poly@n
  9343  07A0  3000               	movlw	0
  9344  07A1  00DE               	movwf	eval_poly@n+1
  9345  07A2  160A  118A  22F0  120A  118A  	fcall	_eval_poly
  9346  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  9347  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  9348  07A9  085B               	movf	?_eval_poly+3,w
  9349  07AA  00EB               	movwf	log@x+3
  9350  07AB  085A               	movf	?_eval_poly+2,w
  9351  07AC  00EA               	movwf	log@x+2
  9352  07AD  0859               	movf	?_eval_poly+1,w
  9353  07AE  00E9               	movwf	log@x+1
  9354  07AF  0858               	movf	?_eval_poly,w
  9355  07B0  00E8               	movwf	log@x
  9356  07B1                     i1l3653:
  9357  07B1  086B               	movf	log@x+3,w
  9358  07B2  00AD               	movwf	___fladd@b+3
  9359  07B3  086A               	movf	log@x+2,w
  9360  07B4  00AC               	movwf	___fladd@b+2
  9361  07B5  0869               	movf	log@x+1,w
  9362  07B6  00AB               	movwf	___fladd@b+1
  9363  07B7  0868               	movf	log@x,w
  9364  07B8  00AA               	movwf	___fladd@b
  9365  07B9  303F               	movlw	63
  9366  07BA  00C1               	movwf	___flmul@b+3
  9367  07BB  3031               	movlw	49
  9368  07BC  00C0               	movwf	___flmul@b+2
  9369  07BD  3072               	movlw	114
  9370  07BE  00BF               	movwf	___flmul@b+1
  9371  07BF  3018               	movlw	24
  9372  07C0  00BE               	movwf	___flmul@b
  9373  07C1  086D               	movf	log@exponent,w
  9374  07C2  00F9               	movwf	___xxtofl@val
  9375  07C3  086E               	movf	log@exponent+1,w
  9376  07C4  00FA               	movwf	___xxtofl@val+1
  9377  07C5  3000               	movlw	0
  9378  07C6  1BFA               	btfsc	___xxtofl@val+1,7
  9379  07C7  30FF               	movlw	255
  9380  07C8  00FB               	movwf	___xxtofl@val+2
  9381  07C9  00FC               	movwf	___xxtofl@val+3
  9382  07CA  3001               	movlw	1
  9383  07CB  160A  118A  25A0  120A  118A  	fcall	___xxtofl
  9384  07D0  087C               	movf	?___xxtofl+3,w
  9385  07D1  1283               	bcf	3,5	;RP0=0, select bank0
  9386  07D2  1303               	bcf	3,6	;RP1=0, select bank0
  9387  07D3  00C5               	movwf	___flmul@a+3
  9388  07D4  087B               	movf	?___xxtofl+2,w
  9389  07D5  00C4               	movwf	___flmul@a+2
  9390  07D6  087A               	movf	?___xxtofl+1,w
  9391  07D7  00C3               	movwf	___flmul@a+1
  9392  07D8  0879               	movf	?___xxtofl,w
  9393  07D9  00C2               	movwf	___flmul@a
  9394  07DA  120A  118A  2047  120A  118A  	fcall	___flmul
  9395  07DF  1283               	bcf	3,5	;RP0=0, select bank0
  9396  07E0  1303               	bcf	3,6	;RP1=0, select bank0
  9397  07E1  0841               	movf	?___flmul+3,w
  9398  07E2  00B1               	movwf	___fladd@a+3
  9399  07E3  0840               	movf	?___flmul+2,w
  9400  07E4  00B0               	movwf	___fladd@a+2
  9401  07E5  083F               	movf	?___flmul+1,w
  9402  07E6  00AF               	movwf	___fladd@a+1
  9403  07E7  083E               	movf	?___flmul,w
  9404  07E8  00AE               	movwf	___fladd@a
  9405  07E9  120A  158A  203A  120A  118A  	fcall	___fladd
  9406  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  9407  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  9408  07F0  082D               	movf	?___fladd+3,w
  9409  07F1  00EB               	movwf	?_log+3
  9410  07F2  082C               	movf	?___fladd+2,w
  9411  07F3  00EA               	movwf	?_log+2
  9412  07F4  082B               	movf	?___fladd+1,w
  9413  07F5  00E9               	movwf	?_log+1
  9414  07F6  082A               	movf	?___fladd,w
  9415  07F7  00E8               	movwf	?_log
  9416  07F8                     i1l973:
  9417  07F8  0008               	return
  9418  07F9                     __end_of_log:
  9419                           
  9420                           	psect	text36
  9421  1002                     __ptext36:	
  9422 ;; *************** function _frexp *****************
  9423 ;; Defined at:
  9424 ;;		line 254 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\frexp.c"
  9425 ;; Parameters:    Size  Location     Type
  9426 ;;  value           4    0[BANK0 ] int 
  9427 ;;  eptr            1    4[BANK0 ] PTR int 
  9428 ;;		 -> log@exponent(2), 
  9429 ;; Auto vars:     Size  Location     Type
  9430 ;;		None
  9431 ;; Return value:  Size  Location     Type
  9432 ;;                  4    0[BANK0 ] PTR int 
  9433 ;; Registers used:
  9434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9435 ;; Tracked objects:
  9436 ;;		On entry : 0/0
  9437 ;;		On exit  : 0/0
  9438 ;;		Unchanged: 0/0
  9439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9440 ;;      Params:         0       5       0       0       0
  9441 ;;      Locals:         0       0       0       0       0
  9442 ;;      Temps:          2       0       0       0       0
  9443 ;;      Totals:         2       5       0       0       0
  9444 ;;Total ram usage:        7 bytes
  9445 ;; Hardware stack levels used: 1
  9446 ;; Hardware stack levels required when called: 1
  9447 ;; This function calls:
  9448 ;;		___fleq
  9449 ;; This function is called by:
  9450 ;;		_log
  9451 ;; This function uses a non-reentrant model
  9452 ;;
  9453                           
  9454  1002                     _frexp:	
  9455                           ;psect for function _frexp
  9456                           
  9457  1002                     i1l3559:	
  9458                           ;incstack = 0
  9459                           ; Regs used in _frexp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9460                           
  9461  1002  1283               	bcf	3,5	;RP0=0, select bank0
  9462  1003  1303               	bcf	3,6	;RP1=0, select bank0
  9463  1004  0823               	movf	frexp@value+3,w
  9464  1005  00F3               	movwf	___fleq@ff1+3
  9465  1006  0822               	movf	frexp@value+2,w
  9466  1007  00F2               	movwf	___fleq@ff1+2
  9467  1008  0821               	movf	frexp@value+1,w
  9468  1009  00F1               	movwf	___fleq@ff1+1
  9469  100A  0820               	movf	frexp@value,w
  9470  100B  00F0               	movwf	___fleq@ff1
  9471  100C  3000               	movlw	0
  9472  100D  00F7               	movwf	___fleq@ff2+3
  9473  100E  3000               	movlw	0
  9474  100F  00F6               	movwf	___fleq@ff2+2
  9475  1010  3000               	movlw	0
  9476  1011  00F5               	movwf	___fleq@ff2+1
  9477  1012  3000               	movlw	0
  9478  1013  00F4               	movwf	___fleq@ff2
  9479  1014  160A  158A  261D  160A  118A  	fcall	___fleq
  9480  1019  1C03               	btfss	3,0
  9481  101A  281C               	goto	u442_21
  9482  101B  281D               	goto	u442_20
  9483  101C                     u442_21:
  9484  101C  282E               	goto	i1l3567
  9485  101D                     u442_20:
  9486  101D                     i1l3561:
  9487  101D  1283               	bcf	3,5	;RP0=0, select bank0
  9488  101E  1303               	bcf	3,6	;RP1=0, select bank0
  9489  101F  0824               	movf	frexp@eptr,w
  9490  1020  0084               	movwf	4
  9491  1021  1383               	bcf	3,7	;select IRP bank0
  9492  1022  0180               	clrf	0
  9493  1023  0A84               	incf	4,f
  9494  1024  0180               	clrf	0
  9495  1025                     i1l3563:
  9496  1025  3000               	movlw	0
  9497  1026  00A3               	movwf	?_frexp+3
  9498  1027  3000               	movlw	0
  9499  1028  00A2               	movwf	?_frexp+2
  9500  1029  3000               	movlw	0
  9501  102A  00A1               	movwf	?_frexp+1
  9502  102B  3000               	movlw	0
  9503  102C  00A0               	movwf	?_frexp
  9504  102D  285D               	goto	i1l991
  9505  102E                     i1l3567:
  9506  102E  1283               	bcf	3,5	;RP0=0, select bank0
  9507  102F  1303               	bcf	3,6	;RP1=0, select bank0
  9508  1030  0823               	movf	frexp@value+3,w
  9509  1031  397F               	andlw	127
  9510  1032  00FC               	movwf	??_frexp
  9511  1033  01FD               	clrf	??_frexp+1
  9512  1034  1003               	clrc
  9513  1035  0DFC               	rlf	??_frexp,f
  9514  1036  0DFD               	rlf	??_frexp+1,f
  9515  1037  0824               	movf	frexp@eptr,w
  9516  1038  0084               	movwf	4
  9517  1039  087C               	movf	??_frexp,w
  9518  103A  1383               	bcf	3,7	;select IRP bank0
  9519  103B  0080               	movwf	0
  9520  103C  0A84               	incf	4,f
  9521  103D  087D               	movf	??_frexp+1,w
  9522  103E  0080               	movwf	0
  9523  103F  0D22               	rlf	frexp@value+2,w
  9524  1040  0D22               	rlf	frexp@value+2,w
  9525  1041  3901               	andlw	1
  9526  1042  00FC               	movwf	??_frexp
  9527  1043  01FD               	clrf	??_frexp+1
  9528  1044  0824               	movf	frexp@eptr,w
  9529  1045  0084               	movwf	4
  9530  1046  087C               	movf	??_frexp,w
  9531  1047  0480               	iorwf	0,f
  9532  1048  0A84               	incf	4,f
  9533  1049  087D               	movf	??_frexp+1,w
  9534  104A  0480               	iorwf	0,f
  9535  104B                     i1l3569:
  9536  104B  0824               	movf	frexp@eptr,w
  9537  104C  0084               	movwf	4
  9538  104D  3082               	movlw	130
  9539  104E  0780               	addwf	0,f
  9540  104F  0F84               	incfsz	4,f
  9541  1050  0800               	movf	0,w
  9542  1051  1803               	skipnc
  9543  1052  0A00               	incf	0,w
  9544  1053  00FF               	movwf	btemp+1
  9545  1054  30FF               	movlw	255
  9546  1055  077F               	addwf	btemp+1,w
  9547  1056  0080               	movwf	0
  9548  1057  0384               	decf	4,f
  9549  1058                     i1l3571:
  9550  1058  0823               	movf	frexp@value+3,w
  9551  1059  3980               	andlw	-128
  9552  105A  383F               	iorlw	63
  9553  105B  00A3               	movwf	frexp@value+3
  9554  105C                     i1l3573:
  9555  105C  13A2               	bcf	frexp@value+2,7
  9556  105D                     i1l3575:
  9557  105D                     i1l991:
  9558  105D  0008               	return
  9559  105E                     __end_of_frexp:
  9560                           
  9561                           	psect	text37
  9562  1E1D                     __ptext37:	
  9563 ;; *************** function ___fleq *****************
  9564 ;; Defined at:
  9565 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\fleq.c"
  9566 ;; Parameters:    Size  Location     Type
  9567 ;;  ff1             4    0[COMMON] PTR int 
  9568 ;;  ff2             4    4[COMMON] PTR int 
  9569 ;; Auto vars:     Size  Location     Type
  9570 ;;		None
  9571 ;; Return value:  Size  Location     Type
  9572 ;;		None               void
  9573 ;; Registers used:
  9574 ;;		wreg, status,2, status,0
  9575 ;; Tracked objects:
  9576 ;;		On entry : 0/0
  9577 ;;		On exit  : 0/0
  9578 ;;		Unchanged: 0/0
  9579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9580 ;;      Params:         8       0       0       0       0
  9581 ;;      Locals:         0       0       0       0       0
  9582 ;;      Temps:          4       0       0       0       0
  9583 ;;      Totals:        12       0       0       0       0
  9584 ;;Total ram usage:       12 bytes
  9585 ;; Hardware stack levels used: 1
  9586 ;; This function calls:
  9587 ;;		Nothing
  9588 ;; This function is called by:
  9589 ;;		_log
  9590 ;;		_frexp
  9591 ;; This function uses a non-reentrant model
  9592 ;;
  9593                           
  9594  1E1D                     ___fleq:	
  9595                           ;psect for function ___fleq
  9596                           
  9597  1E1D                     i1l2731:	
  9598                           ;incstack = 0
  9599                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9600                           
  9601  1E1D  3000               	movlw	0
  9602  1E1E  0570               	andwf	___fleq@ff1,w
  9603  1E1F  00F8               	movwf	??___fleq
  9604  1E20  3000               	movlw	0
  9605  1E21  0571               	andwf	___fleq@ff1+1,w
  9606  1E22  00F9               	movwf	??___fleq+1
  9607  1E23  3080               	movlw	128
  9608  1E24  0572               	andwf	___fleq@ff1+2,w
  9609  1E25  00FA               	movwf	??___fleq+2
  9610  1E26  307F               	movlw	127
  9611  1E27  0573               	andwf	___fleq@ff1+3,w
  9612  1E28  00FB               	movwf	??___fleq+3
  9613  1E29  087B               	movf	??___fleq+3,w
  9614  1E2A  047A               	iorwf	??___fleq+2,w
  9615  1E2B  0479               	iorwf	??___fleq+1,w
  9616  1E2C  0478               	iorwf	??___fleq,w
  9617  1E2D  1D03               	skipz
  9618  1E2E  2E30               	goto	u275_21
  9619  1E2F  2E31               	goto	u275_20
  9620  1E30                     u275_21:
  9621  1E30  2E39               	goto	i1l682
  9622  1E31                     u275_20:
  9623  1E31                     i1l2733:
  9624  1E31  3000               	movlw	0
  9625  1E32  00F3               	movwf	___fleq@ff1+3
  9626  1E33  3000               	movlw	0
  9627  1E34  00F2               	movwf	___fleq@ff1+2
  9628  1E35  3000               	movlw	0
  9629  1E36  00F1               	movwf	___fleq@ff1+1
  9630  1E37  3000               	movlw	0
  9631  1E38  00F0               	movwf	___fleq@ff1
  9632  1E39                     i1l682:
  9633  1E39  3000               	movlw	0
  9634  1E3A  0574               	andwf	___fleq@ff2,w
  9635  1E3B  00F8               	movwf	??___fleq
  9636  1E3C  3000               	movlw	0
  9637  1E3D  0575               	andwf	___fleq@ff2+1,w
  9638  1E3E  00F9               	movwf	??___fleq+1
  9639  1E3F  3080               	movlw	128
  9640  1E40  0576               	andwf	___fleq@ff2+2,w
  9641  1E41  00FA               	movwf	??___fleq+2
  9642  1E42  307F               	movlw	127
  9643  1E43  0577               	andwf	___fleq@ff2+3,w
  9644  1E44  00FB               	movwf	??___fleq+3
  9645  1E45  087B               	movf	??___fleq+3,w
  9646  1E46  047A               	iorwf	??___fleq+2,w
  9647  1E47  0479               	iorwf	??___fleq+1,w
  9648  1E48  0478               	iorwf	??___fleq,w
  9649  1E49  1D03               	skipz
  9650  1E4A  2E4C               	goto	u276_21
  9651  1E4B  2E4D               	goto	u276_20
  9652  1E4C                     u276_21:
  9653  1E4C  2E55               	goto	i1l683
  9654  1E4D                     u276_20:
  9655  1E4D                     i1l2735:
  9656  1E4D  3000               	movlw	0
  9657  1E4E  00F7               	movwf	___fleq@ff2+3
  9658  1E4F  3000               	movlw	0
  9659  1E50  00F6               	movwf	___fleq@ff2+2
  9660  1E51  3000               	movlw	0
  9661  1E52  00F5               	movwf	___fleq@ff2+1
  9662  1E53  3000               	movlw	0
  9663  1E54  00F4               	movwf	___fleq@ff2
  9664  1E55                     i1l683:
  9665  1E55  0877               	movf	___fleq@ff2+3,w
  9666  1E56  0673               	xorwf	___fleq@ff1+3,w
  9667  1E57  1D03               	skipz
  9668  1E58  2E63               	goto	u277_25
  9669  1E59  0876               	movf	___fleq@ff2+2,w
  9670  1E5A  0672               	xorwf	___fleq@ff1+2,w
  9671  1E5B  1D03               	skipz
  9672  1E5C  2E63               	goto	u277_25
  9673  1E5D  0875               	movf	___fleq@ff2+1,w
  9674  1E5E  0671               	xorwf	___fleq@ff1+1,w
  9675  1E5F  1D03               	skipz
  9676  1E60  2E63               	goto	u277_25
  9677  1E61  0874               	movf	___fleq@ff2,w
  9678  1E62  0670               	xorwf	___fleq@ff1,w
  9679  1E63                     u277_25:
  9680  1E63  1903               	skipnz
  9681  1E64  2E66               	goto	u277_21
  9682  1E65  2E67               	goto	u277_20
  9683  1E66                     u277_21:
  9684  1E66  2E69               	goto	i1l2739
  9685  1E67                     u277_20:
  9686  1E67                     i1l2737:
  9687  1E67  1003               	clrc
  9688  1E68  2E6A               	goto	i1l684
  9689  1E69                     i1l2739:
  9690  1E69  1403               	setc
  9691  1E6A                     i1l684:
  9692  1E6A  0008               	return
  9693  1E6B                     __end_of___fleq:
  9694                           
  9695                           	psect	text38
  9696  12F0                     __ptext38:	
  9697 ;; *************** function _eval_poly *****************
  9698 ;; Defined at:
  9699 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\evalpoly.c"
  9700 ;; Parameters:    Size  Location     Type
  9701 ;;  x               4   56[BANK0 ] PTR int 
  9702 ;;  d               1   60[BANK0 ] PTR const 
  9703 ;;		 -> log@coeff(36), 
  9704 ;;  n               2   61[BANK0 ] int 
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;  res             4   68[BANK0 ] int 
  9707 ;; Return value:  Size  Location     Type
  9708 ;;                  4   56[BANK0 ] int 
  9709 ;; Registers used:
  9710 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9711 ;; Tracked objects:
  9712 ;;		On entry : 0/0
  9713 ;;		On exit  : 0/0
  9714 ;;		Unchanged: 0/0
  9715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9716 ;;      Params:         0       7       0       0       0
  9717 ;;      Locals:         0       4       0       0       0
  9718 ;;      Temps:          0       5       0       0       0
  9719 ;;      Totals:         0      16       0       0       0
  9720 ;;Total ram usage:       16 bytes
  9721 ;; Hardware stack levels used: 1
  9722 ;; Hardware stack levels required when called: 2
  9723 ;; This function calls:
  9724 ;;		___fladd
  9725 ;;		___flmul
  9726 ;; This function is called by:
  9727 ;;		_log
  9728 ;; This function uses a non-reentrant model
  9729 ;;
  9730                           
  9731  12F0                     _eval_poly:	
  9732                           ;psect for function _eval_poly
  9733                           
  9734  12F0                     i1l3579:	
  9735                           ;incstack = 0
  9736 ;; using string table level
  9737                           ; Regs used in _eval_poly: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9738                           
  9739  12F0  1283               	bcf	3,5	;RP0=0, select bank0
  9740  12F1  1303               	bcf	3,6	;RP1=0, select bank0
  9741  12F2  085D               	movf	eval_poly@n,w
  9742  12F3  00DF               	movwf	??_eval_poly
  9743  12F4  3001               	movlw	1
  9744  12F5                     u443_25:
  9745  12F5  1003               	clrc
  9746  12F6  0DDF               	rlf	??_eval_poly,f
  9747  12F7  3EFF               	addlw	-1
  9748  12F8  1D03               	skipz
  9749  12F9  2AF5               	goto	u443_25
  9750  12FA  1003               	clrc
  9751  12FB  0D5F               	rlf	??_eval_poly,w
  9752  12FC  075C               	addwf	eval_poly@d,w
  9753  12FD  0084               	movwf	4
  9754  12FE  160A  158A  2000  160A  118A  	fcall	stringdir
  9755  1303  00E0               	movwf	??_eval_poly+1
  9756  1304  160A  158A  2000  160A  118A  	fcall	stringdir
  9757  1309  00E1               	movwf	??_eval_poly+2
  9758  130A  160A  158A  2000  160A  118A  	fcall	stringdir
  9759  130F  00E2               	movwf	??_eval_poly+3
  9760  1310  160A  158A  2000  160A  118A  	fcall	stringdir
  9761  1315  00E3               	movwf	??_eval_poly+4
  9762  1316  0863               	movf	??_eval_poly+4,w
  9763  1317  00E7               	movwf	eval_poly@res+3
  9764  1318  0862               	movf	??_eval_poly+3,w
  9765  1319  00E6               	movwf	eval_poly@res+2
  9766  131A  0861               	movf	??_eval_poly+2,w
  9767  131B  00E5               	movwf	eval_poly@res+1
  9768  131C  0860               	movf	??_eval_poly+1,w
  9769  131D  00E4               	movwf	eval_poly@res
  9770  131E  2B7F               	goto	i1l3583
  9771  131F                     i1l3581:
  9772  131F  30FF               	movlw	255
  9773  1320  07DD               	addwf	eval_poly@n,f
  9774  1321  1803               	skipnc
  9775  1322  0ADE               	incf	eval_poly@n+1,f
  9776  1323  30FF               	movlw	255
  9777  1324  07DE               	addwf	eval_poly@n+1,f
  9778  1325  085D               	movf	eval_poly@n,w
  9779  1326  00DF               	movwf	??_eval_poly
  9780  1327  3001               	movlw	1
  9781  1328                     u444_25:
  9782  1328  1003               	clrc
  9783  1329  0DDF               	rlf	??_eval_poly,f
  9784  132A  3EFF               	addlw	-1
  9785  132B  1D03               	skipz
  9786  132C  2B28               	goto	u444_25
  9787  132D  1003               	clrc
  9788  132E  0D5F               	rlf	??_eval_poly,w
  9789  132F  075C               	addwf	eval_poly@d,w
  9790  1330  0084               	movwf	4
  9791  1331  160A  158A  2000  160A  118A  	fcall	stringdir
  9792  1336  00E0               	movwf	??_eval_poly+1
  9793  1337  160A  158A  2000  160A  118A  	fcall	stringdir
  9794  133C  00E1               	movwf	??_eval_poly+2
  9795  133D  160A  158A  2000  160A  118A  	fcall	stringdir
  9796  1342  00E2               	movwf	??_eval_poly+3
  9797  1343  160A  158A  2000  160A  118A  	fcall	stringdir
  9798  1348  00E3               	movwf	??_eval_poly+4
  9799  1349  0863               	movf	??_eval_poly+4,w
  9800  134A  00AD               	movwf	___fladd@b+3
  9801  134B  0862               	movf	??_eval_poly+3,w
  9802  134C  00AC               	movwf	___fladd@b+2
  9803  134D  0861               	movf	??_eval_poly+2,w
  9804  134E  00AB               	movwf	___fladd@b+1
  9805  134F  0860               	movf	??_eval_poly+1,w
  9806  1350  00AA               	movwf	___fladd@b
  9807  1351  0867               	movf	eval_poly@res+3,w
  9808  1352  00C1               	movwf	___flmul@b+3
  9809  1353  0866               	movf	eval_poly@res+2,w
  9810  1354  00C0               	movwf	___flmul@b+2
  9811  1355  0865               	movf	eval_poly@res+1,w
  9812  1356  00BF               	movwf	___flmul@b+1
  9813  1357  0864               	movf	eval_poly@res,w
  9814  1358  00BE               	movwf	___flmul@b
  9815  1359  085B               	movf	eval_poly@x+3,w
  9816  135A  00C5               	movwf	___flmul@a+3
  9817  135B  085A               	movf	eval_poly@x+2,w
  9818  135C  00C4               	movwf	___flmul@a+2
  9819  135D  0859               	movf	eval_poly@x+1,w
  9820  135E  00C3               	movwf	___flmul@a+1
  9821  135F  0858               	movf	eval_poly@x,w
  9822  1360  00C2               	movwf	___flmul@a
  9823  1361  120A  118A  2047  160A  118A  	fcall	___flmul
  9824  1366  1283               	bcf	3,5	;RP0=0, select bank0
  9825  1367  1303               	bcf	3,6	;RP1=0, select bank0
  9826  1368  0841               	movf	?___flmul+3,w
  9827  1369  00B1               	movwf	___fladd@a+3
  9828  136A  0840               	movf	?___flmul+2,w
  9829  136B  00B0               	movwf	___fladd@a+2
  9830  136C  083F               	movf	?___flmul+1,w
  9831  136D  00AF               	movwf	___fladd@a+1
  9832  136E  083E               	movf	?___flmul,w
  9833  136F  00AE               	movwf	___fladd@a
  9834  1370  120A  158A  203A  160A  118A  	fcall	___fladd
  9835  1375  1283               	bcf	3,5	;RP0=0, select bank0
  9836  1376  1303               	bcf	3,6	;RP1=0, select bank0
  9837  1377  082D               	movf	?___fladd+3,w
  9838  1378  00E7               	movwf	eval_poly@res+3
  9839  1379  082C               	movf	?___fladd+2,w
  9840  137A  00E6               	movwf	eval_poly@res+2
  9841  137B  082B               	movf	?___fladd+1,w
  9842  137C  00E5               	movwf	eval_poly@res+1
  9843  137D  082A               	movf	?___fladd,w
  9844  137E  00E4               	movwf	eval_poly@res
  9845  137F                     i1l3583:
  9846  137F  085D               	movf	eval_poly@n,w
  9847  1380  045E               	iorwf	eval_poly@n+1,w
  9848  1381  1D03               	btfss	3,2
  9849  1382  2B84               	goto	u445_21
  9850  1383  2B85               	goto	u445_20
  9851  1384                     u445_21:
  9852  1384  2B1F               	goto	i1l3581
  9853  1385                     u445_20:
  9854  1385                     i1l3585:
  9855  1385  0867               	movf	eval_poly@res+3,w
  9856  1386  00DB               	movwf	?_eval_poly+3
  9857  1387  0866               	movf	eval_poly@res+2,w
  9858  1388  00DA               	movwf	?_eval_poly+2
  9859  1389  0865               	movf	eval_poly@res+1,w
  9860  138A  00D9               	movwf	?_eval_poly+1
  9861  138B  0864               	movf	eval_poly@res,w
  9862  138C  00D8               	movwf	?_eval_poly
  9863  138D                     i1l985:
  9864  138D  0008               	return
  9865  138E                     __end_of_eval_poly:
  9866                           
  9867                           	psect	text39
  9868  0047                     __ptext39:	
  9869 ;; *************** function ___flmul *****************
  9870 ;; Defined at:
  9871 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcmul.c"
  9872 ;; Parameters:    Size  Location     Type
  9873 ;;  b               4   30[BANK0 ] int 
  9874 ;;  a               4   34[BANK0 ] int 
  9875 ;; Auto vars:     Size  Location     Type
  9876 ;;  prod            4   50[BANK0 ] struct .
  9877 ;;  grs             4   44[BANK0 ] unsigned long 
  9878 ;;  temp            2   54[BANK0 ] struct .
  9879 ;;  bexp            1   49[BANK0 ] unsigned char 
  9880 ;;  aexp            1   48[BANK0 ] unsigned char 
  9881 ;;  sign            1   43[BANK0 ] unsigned char 
  9882 ;; Return value:  Size  Location     Type
  9883 ;;                  4   30[BANK0 ] unsigned char 
  9884 ;; Registers used:
  9885 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  9886 ;; Tracked objects:
  9887 ;;		On entry : 0/0
  9888 ;;		On exit  : 0/0
  9889 ;;		Unchanged: 0/0
  9890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9891 ;;      Params:         0       8       0       0       0
  9892 ;;      Locals:         0      13       0       0       0
  9893 ;;      Temps:          0       5       0       0       0
  9894 ;;      Totals:         0      26       0       0       0
  9895 ;;Total ram usage:       26 bytes
  9896 ;; Hardware stack levels used: 1
  9897 ;; Hardware stack levels required when called: 1
  9898 ;; This function calls:
  9899 ;;		__Umul8_16
  9900 ;; This function is called by:
  9901 ;;		_slave
  9902 ;;		_map
  9903 ;;		_log
  9904 ;;		_eval_poly
  9905 ;; This function uses a non-reentrant model
  9906 ;;
  9907                           
  9908  0047                     ___flmul:	
  9909                           ;psect for function ___flmul
  9910                           
  9911  0047                     i1l2937:	
  9912                           ;incstack = 0
  9913                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  9914                           
  9915  0047  1283               	bcf	3,5	;RP0=0, select bank0
  9916  0048  1303               	bcf	3,6	;RP1=0, select bank0
  9917  0049  0841               	movf	___flmul@b+3,w
  9918  004A  3980               	andlw	128
  9919  004B  00C6               	movwf	??___flmul
  9920  004C  0846               	movf	??___flmul,w
  9921  004D  00CB               	movwf	___flmul@sign
  9922  004E                     i1l2939:
  9923  004E  0841               	movf	___flmul@b+3,w
  9924  004F  00C6               	movwf	??___flmul
  9925  0050  0746               	addwf	??___flmul,w
  9926  0051  00C7               	movwf	??___flmul+1
  9927  0052  0847               	movf	??___flmul+1,w
  9928  0053  00D1               	movwf	___flmul@bexp
  9929  0054                     i1l2941:
  9930  0054  1FC0               	btfss	___flmul@b+2,7
  9931  0055  2857               	goto	u324_21
  9932  0056  2858               	goto	u324_20
  9933  0057                     u324_21:
  9934  0057  2859               	goto	i1l2945
  9935  0058                     u324_20:
  9936  0058                     i1l2943:
  9937  0058  1451               	bsf	___flmul@bexp,0
  9938  0059                     i1l2945:
  9939  0059  0851               	movf	___flmul@bexp,w
  9940  005A  1903               	btfsc	3,2
  9941  005B  285D               	goto	u325_21
  9942  005C  285E               	goto	u325_20
  9943  005D                     u325_21:
  9944  005D  286D               	goto	i1l2953
  9945  005E                     u325_20:
  9946  005E                     i1l2947:
  9947  005E  0A51               	incf	___flmul@bexp,w
  9948  005F  1D03               	btfss	3,2
  9949  0060  2862               	goto	u326_21
  9950  0061  2863               	goto	u326_20
  9951  0062                     u326_21:
  9952  0062  286B               	goto	i1l2951
  9953  0063                     u326_20:
  9954  0063                     i1l2949:
  9955  0063  3000               	movlw	0
  9956  0064  00C1               	movwf	___flmul@b+3
  9957  0065  3000               	movlw	0
  9958  0066  00C0               	movwf	___flmul@b+2
  9959  0067  3000               	movlw	0
  9960  0068  00BF               	movwf	___flmul@b+1
  9961  0069  3000               	movlw	0
  9962  006A  00BE               	movwf	___flmul@b
  9963  006B                     i1l2951:
  9964  006B  17C0               	bsf	___flmul@b+2,7
  9965  006C  2875               	goto	i1l2955
  9966  006D                     i1l2953:
  9967  006D  3000               	movlw	0
  9968  006E  00C1               	movwf	___flmul@b+3
  9969  006F  3000               	movlw	0
  9970  0070  00C0               	movwf	___flmul@b+2
  9971  0071  3000               	movlw	0
  9972  0072  00BF               	movwf	___flmul@b+1
  9973  0073  3000               	movlw	0
  9974  0074  00BE               	movwf	___flmul@b
  9975  0075                     i1l2955:
  9976  0075  0845               	movf	___flmul@a+3,w
  9977  0076  3980               	andlw	128
  9978  0077  00C6               	movwf	??___flmul
  9979  0078  0846               	movf	??___flmul,w
  9980  0079  06CB               	xorwf	___flmul@sign,f
  9981  007A                     i1l2957:
  9982  007A  0845               	movf	___flmul@a+3,w
  9983  007B  00C6               	movwf	??___flmul
  9984  007C  0746               	addwf	??___flmul,w
  9985  007D  00C7               	movwf	??___flmul+1
  9986  007E  0847               	movf	??___flmul+1,w
  9987  007F  00D0               	movwf	___flmul@aexp
  9988  0080                     i1l2959:
  9989  0080  1FC4               	btfss	___flmul@a+2,7
  9990  0081  2883               	goto	u327_21
  9991  0082  2884               	goto	u327_20
  9992  0083                     u327_21:
  9993  0083  2885               	goto	i1l2963
  9994  0084                     u327_20:
  9995  0084                     i1l2961:
  9996  0084  1450               	bsf	___flmul@aexp,0
  9997  0085                     i1l2963:
  9998  0085  0850               	movf	___flmul@aexp,w
  9999  0086  1903               	btfsc	3,2
 10000  0087  2889               	goto	u328_21
 10001  0088  288A               	goto	u328_20
 10002  0089                     u328_21:
 10003  0089  2899               	goto	i1l2971
 10004  008A                     u328_20:
 10005  008A                     i1l2965:
 10006  008A  0A50               	incf	___flmul@aexp,w
 10007  008B  1D03               	btfss	3,2
 10008  008C  288E               	goto	u329_21
 10009  008D  288F               	goto	u329_20
 10010  008E                     u329_21:
 10011  008E  2897               	goto	i1l2969
 10012  008F                     u329_20:
 10013  008F                     i1l2967:
 10014  008F  3000               	movlw	0
 10015  0090  00C5               	movwf	___flmul@a+3
 10016  0091  3000               	movlw	0
 10017  0092  00C4               	movwf	___flmul@a+2
 10018  0093  3000               	movlw	0
 10019  0094  00C3               	movwf	___flmul@a+1
 10020  0095  3000               	movlw	0
 10021  0096  00C2               	movwf	___flmul@a
 10022  0097                     i1l2969:
 10023  0097  17C4               	bsf	___flmul@a+2,7
 10024  0098  28A1               	goto	i1l2973
 10025  0099                     i1l2971:
 10026  0099  3000               	movlw	0
 10027  009A  00C5               	movwf	___flmul@a+3
 10028  009B  3000               	movlw	0
 10029  009C  00C4               	movwf	___flmul@a+2
 10030  009D  3000               	movlw	0
 10031  009E  00C3               	movwf	___flmul@a+1
 10032  009F  3000               	movlw	0
 10033  00A0  00C2               	movwf	___flmul@a
 10034  00A1                     i1l2973:
 10035  00A1  0850               	movf	___flmul@aexp,w
 10036  00A2  1903               	btfsc	3,2
 10037  00A3  28A5               	goto	u330_21
 10038  00A4  28A6               	goto	u330_20
 10039  00A5                     u330_21:
 10040  00A5  28AB               	goto	i1l2977
 10041  00A6                     u330_20:
 10042  00A6                     i1l2975:
 10043  00A6  0851               	movf	___flmul@bexp,w
 10044  00A7  1D03               	btfss	3,2
 10045  00A8  28AA               	goto	u331_21
 10046  00A9  28AB               	goto	u331_20
 10047  00AA                     u331_21:
 10048  00AA  28B4               	goto	i1l2981
 10049  00AB                     u331_20:
 10050  00AB                     i1l2977:
 10051  00AB  3000               	movlw	0
 10052  00AC  00C1               	movwf	?___flmul+3
 10053  00AD  3000               	movlw	0
 10054  00AE  00C0               	movwf	?___flmul+2
 10055  00AF  3000               	movlw	0
 10056  00B0  00BF               	movwf	?___flmul+1
 10057  00B1  3000               	movlw	0
 10058  00B2  00BE               	movwf	?___flmul
 10059  00B3  2BA7               	goto	i1l902
 10060  00B4                     i1l2981:
 10061  00B4  083E               	movf	___flmul@b,w
 10062  00B5  00C6               	movwf	??___flmul
 10063  00B6  0846               	movf	??___flmul,w
 10064  00B7  00F0               	movwf	__Umul8_16@multiplicand
 10065  00B8  0844               	movf	___flmul@a+2,w
 10066  00B9  160A  158A  244F  120A  118A  	fcall	__Umul8_16
 10067  00BE  0871               	movf	?__Umul8_16+1,w
 10068  00BF  1283               	bcf	3,5	;RP0=0, select bank0
 10069  00C0  1303               	bcf	3,6	;RP1=0, select bank0
 10070  00C1  00D7               	movwf	___flmul@temp+1
 10071  00C2  0870               	movf	?__Umul8_16,w
 10072  00C3  00D6               	movwf	___flmul@temp
 10073  00C4                     i1l2983:
 10074  00C4  0856               	movf	___flmul@temp,w
 10075  00C5  00C6               	movwf	??___flmul
 10076  00C6  01C7               	clrf	??___flmul+1
 10077  00C7  01C8               	clrf	??___flmul+2
 10078  00C8  01C9               	clrf	??___flmul+3
 10079  00C9  0849               	movf	??___flmul+3,w
 10080  00CA  00CF               	movwf	___flmul@grs+3
 10081  00CB  0848               	movf	??___flmul+2,w
 10082  00CC  00CE               	movwf	___flmul@grs+2
 10083  00CD  0847               	movf	??___flmul+1,w
 10084  00CE  00CD               	movwf	___flmul@grs+1
 10085  00CF  0846               	movf	??___flmul,w
 10086  00D0  00CC               	movwf	___flmul@grs
 10087  00D1                     i1l2985:
 10088  00D1  0857               	movf	___flmul@temp+1,w
 10089  00D2  00C6               	movwf	??___flmul
 10090  00D3  01C7               	clrf	??___flmul+1
 10091  00D4  01C8               	clrf	??___flmul+2
 10092  00D5  01C9               	clrf	??___flmul+3
 10093  00D6  0849               	movf	??___flmul+3,w
 10094  00D7  00D5               	movwf	___flmul@prod+3
 10095  00D8  0848               	movf	??___flmul+2,w
 10096  00D9  00D4               	movwf	___flmul@prod+2
 10097  00DA  0847               	movf	??___flmul+1,w
 10098  00DB  00D3               	movwf	___flmul@prod+1
 10099  00DC  0846               	movf	??___flmul,w
 10100  00DD  00D2               	movwf	___flmul@prod
 10101  00DE  083F               	movf	___flmul@b+1,w
 10102  00DF  00C6               	movwf	??___flmul
 10103  00E0  0846               	movf	??___flmul,w
 10104  00E1  00F0               	movwf	__Umul8_16@multiplicand
 10105  00E2  0843               	movf	___flmul@a+1,w
 10106  00E3  160A  158A  244F  120A  118A  	fcall	__Umul8_16
 10107  00E8  0871               	movf	?__Umul8_16+1,w
 10108  00E9  1283               	bcf	3,5	;RP0=0, select bank0
 10109  00EA  1303               	bcf	3,6	;RP1=0, select bank0
 10110  00EB  00D7               	movwf	___flmul@temp+1
 10111  00EC  0870               	movf	?__Umul8_16,w
 10112  00ED  00D6               	movwf	___flmul@temp
 10113  00EE                     i1l2987:
 10114  00EE  0856               	movf	___flmul@temp,w
 10115  00EF  00C6               	movwf	??___flmul
 10116  00F0  01C7               	clrf	??___flmul+1
 10117  00F1  01C8               	clrf	??___flmul+2
 10118  00F2  01C9               	clrf	??___flmul+3
 10119  00F3  0846               	movf	??___flmul,w
 10120  00F4  07CC               	addwf	___flmul@grs,f
 10121  00F5  0847               	movf	??___flmul+1,w
 10122  00F6  1103               	clrz
 10123  00F7  1803               	skipnc
 10124  00F8  3E01               	addlw	1
 10125  00F9  1903               	skipnz
 10126  00FA  28FC               	goto	u332_21
 10127  00FB  07CD               	addwf	___flmul@grs+1,f
 10128  00FC                     u332_21:
 10129  00FC  0848               	movf	??___flmul+2,w
 10130  00FD  1103               	clrz
 10131  00FE  1803               	skipnc
 10132  00FF  3E01               	addlw	1
 10133  0100  1903               	skipnz
 10134  0101  2903               	goto	u332_22
 10135  0102  07CE               	addwf	___flmul@grs+2,f
 10136  0103                     u332_22:
 10137  0103  0849               	movf	??___flmul+3,w
 10138  0104  1103               	clrz
 10139  0105  1803               	skipnc
 10140  0106  3E01               	addlw	1
 10141  0107  1903               	skipnz
 10142  0108  290A               	goto	u332_23
 10143  0109  07CF               	addwf	___flmul@grs+3,f
 10144  010A                     u332_23:
 10145  010A                     i1l2989:
 10146  010A  0857               	movf	___flmul@temp+1,w
 10147  010B  00C6               	movwf	??___flmul
 10148  010C  01C7               	clrf	??___flmul+1
 10149  010D  01C8               	clrf	??___flmul+2
 10150  010E  01C9               	clrf	??___flmul+3
 10151  010F  0846               	movf	??___flmul,w
 10152  0110  07D2               	addwf	___flmul@prod,f
 10153  0111  0847               	movf	??___flmul+1,w
 10154  0112  1103               	clrz
 10155  0113  1803               	skipnc
 10156  0114  3E01               	addlw	1
 10157  0115  1903               	skipnz
 10158  0116  2918               	goto	u333_21
 10159  0117  07D3               	addwf	___flmul@prod+1,f
 10160  0118                     u333_21:
 10161  0118  0848               	movf	??___flmul+2,w
 10162  0119  1103               	clrz
 10163  011A  1803               	skipnc
 10164  011B  3E01               	addlw	1
 10165  011C  1903               	skipnz
 10166  011D  291F               	goto	u333_22
 10167  011E  07D4               	addwf	___flmul@prod+2,f
 10168  011F                     u333_22:
 10169  011F  0849               	movf	??___flmul+3,w
 10170  0120  1103               	clrz
 10171  0121  1803               	skipnc
 10172  0122  3E01               	addlw	1
 10173  0123  1903               	skipnz
 10174  0124  2926               	goto	u333_23
 10175  0125  07D5               	addwf	___flmul@prod+3,f
 10176  0126                     u333_23:
 10177  0126  0840               	movf	___flmul@b+2,w
 10178  0127  00C6               	movwf	??___flmul
 10179  0128  0846               	movf	??___flmul,w
 10180  0129  00F0               	movwf	__Umul8_16@multiplicand
 10181  012A  0842               	movf	___flmul@a,w
 10182  012B  160A  158A  244F  120A  118A  	fcall	__Umul8_16
 10183  0130  0871               	movf	?__Umul8_16+1,w
 10184  0131  1283               	bcf	3,5	;RP0=0, select bank0
 10185  0132  1303               	bcf	3,6	;RP1=0, select bank0
 10186  0133  00D7               	movwf	___flmul@temp+1
 10187  0134  0870               	movf	?__Umul8_16,w
 10188  0135  00D6               	movwf	___flmul@temp
 10189  0136                     i1l2991:
 10190  0136  0856               	movf	___flmul@temp,w
 10191  0137  00C6               	movwf	??___flmul
 10192  0138  01C7               	clrf	??___flmul+1
 10193  0139  01C8               	clrf	??___flmul+2
 10194  013A  01C9               	clrf	??___flmul+3
 10195  013B  0846               	movf	??___flmul,w
 10196  013C  07CC               	addwf	___flmul@grs,f
 10197  013D  0847               	movf	??___flmul+1,w
 10198  013E  1103               	clrz
 10199  013F  1803               	skipnc
 10200  0140  3E01               	addlw	1
 10201  0141  1903               	skipnz
 10202  0142  2944               	goto	u334_21
 10203  0143  07CD               	addwf	___flmul@grs+1,f
 10204  0144                     u334_21:
 10205  0144  0848               	movf	??___flmul+2,w
 10206  0145  1103               	clrz
 10207  0146  1803               	skipnc
 10208  0147  3E01               	addlw	1
 10209  0148  1903               	skipnz
 10210  0149  294B               	goto	u334_22
 10211  014A  07CE               	addwf	___flmul@grs+2,f
 10212  014B                     u334_22:
 10213  014B  0849               	movf	??___flmul+3,w
 10214  014C  1103               	clrz
 10215  014D  1803               	skipnc
 10216  014E  3E01               	addlw	1
 10217  014F  1903               	skipnz
 10218  0150  2952               	goto	u334_23
 10219  0151  07CF               	addwf	___flmul@grs+3,f
 10220  0152                     u334_23:
 10221  0152                     i1l2993:
 10222  0152  0857               	movf	___flmul@temp+1,w
 10223  0153  00C6               	movwf	??___flmul
 10224  0154  01C7               	clrf	??___flmul+1
 10225  0155  01C8               	clrf	??___flmul+2
 10226  0156  01C9               	clrf	??___flmul+3
 10227  0157  0846               	movf	??___flmul,w
 10228  0158  07D2               	addwf	___flmul@prod,f
 10229  0159  0847               	movf	??___flmul+1,w
 10230  015A  1103               	clrz
 10231  015B  1803               	skipnc
 10232  015C  3E01               	addlw	1
 10233  015D  1903               	skipnz
 10234  015E  2960               	goto	u335_21
 10235  015F  07D3               	addwf	___flmul@prod+1,f
 10236  0160                     u335_21:
 10237  0160  0848               	movf	??___flmul+2,w
 10238  0161  1103               	clrz
 10239  0162  1803               	skipnc
 10240  0163  3E01               	addlw	1
 10241  0164  1903               	skipnz
 10242  0165  2967               	goto	u335_22
 10243  0166  07D4               	addwf	___flmul@prod+2,f
 10244  0167                     u335_22:
 10245  0167  0849               	movf	??___flmul+3,w
 10246  0168  1103               	clrz
 10247  0169  1803               	skipnc
 10248  016A  3E01               	addlw	1
 10249  016B  1903               	skipnz
 10250  016C  296E               	goto	u335_23
 10251  016D  07D5               	addwf	___flmul@prod+3,f
 10252  016E                     u335_23:
 10253  016E                     i1l2995:
 10254  016E  3008               	movlw	8
 10255  016F  00C6               	movwf	??___flmul
 10256  0170                     u336_25:
 10257  0170  1003               	clrc
 10258  0171  0DCC               	rlf	___flmul@grs,f
 10259  0172  0DCD               	rlf	___flmul@grs+1,f
 10260  0173  0DCE               	rlf	___flmul@grs+2,f
 10261  0174  0DCF               	rlf	___flmul@grs+3,f
 10262  0175  0BC6               	decfsz	??___flmul,f
 10263  0176  2970               	goto	u336_25
 10264  0177                     i1l2997:
 10265  0177  083F               	movf	___flmul@b+1,w
 10266  0178  00C6               	movwf	??___flmul
 10267  0179  0846               	movf	??___flmul,w
 10268  017A  00F0               	movwf	__Umul8_16@multiplicand
 10269  017B  0842               	movf	___flmul@a,w
 10270  017C  160A  158A  244F  120A  118A  	fcall	__Umul8_16
 10271  0181  0871               	movf	?__Umul8_16+1,w
 10272  0182  1283               	bcf	3,5	;RP0=0, select bank0
 10273  0183  1303               	bcf	3,6	;RP1=0, select bank0
 10274  0184  00D7               	movwf	___flmul@temp+1
 10275  0185  0870               	movf	?__Umul8_16,w
 10276  0186  00D6               	movwf	___flmul@temp
 10277  0187                     i1l2999:
 10278  0187  0856               	movf	___flmul@temp,w
 10279  0188  00C6               	movwf	??___flmul
 10280  0189  0857               	movf	___flmul@temp+1,w
 10281  018A  00C7               	movwf	??___flmul+1
 10282  018B  01C8               	clrf	??___flmul+2
 10283  018C  01C9               	clrf	??___flmul+3
 10284  018D  0846               	movf	??___flmul,w
 10285  018E  07CC               	addwf	___flmul@grs,f
 10286  018F  0847               	movf	??___flmul+1,w
 10287  0190  1103               	clrz
 10288  0191  1803               	skipnc
 10289  0192  3E01               	addlw	1
 10290  0193  1903               	skipnz
 10291  0194  2996               	goto	u337_21
 10292  0195  07CD               	addwf	___flmul@grs+1,f
 10293  0196                     u337_21:
 10294  0196  0848               	movf	??___flmul+2,w
 10295  0197  1103               	clrz
 10296  0198  1803               	skipnc
 10297  0199  3E01               	addlw	1
 10298  019A  1903               	skipnz
 10299  019B  299D               	goto	u337_22
 10300  019C  07CE               	addwf	___flmul@grs+2,f
 10301  019D                     u337_22:
 10302  019D  0849               	movf	??___flmul+3,w
 10303  019E  1103               	clrz
 10304  019F  1803               	skipnc
 10305  01A0  3E01               	addlw	1
 10306  01A1  1903               	skipnz
 10307  01A2  29A4               	goto	u337_23
 10308  01A3  07CF               	addwf	___flmul@grs+3,f
 10309  01A4                     u337_23:
 10310  01A4                     i1l3001:
 10311  01A4  083E               	movf	___flmul@b,w
 10312  01A5  00C6               	movwf	??___flmul
 10313  01A6  0846               	movf	??___flmul,w
 10314  01A7  00F0               	movwf	__Umul8_16@multiplicand
 10315  01A8  0843               	movf	___flmul@a+1,w
 10316  01A9  160A  158A  244F  120A  118A  	fcall	__Umul8_16
 10317  01AE  0871               	movf	?__Umul8_16+1,w
 10318  01AF  1283               	bcf	3,5	;RP0=0, select bank0
 10319  01B0  1303               	bcf	3,6	;RP1=0, select bank0
 10320  01B1  00D7               	movwf	___flmul@temp+1
 10321  01B2  0870               	movf	?__Umul8_16,w
 10322  01B3  00D6               	movwf	___flmul@temp
 10323  01B4                     i1l3003:
 10324  01B4  0856               	movf	___flmul@temp,w
 10325  01B5  00C6               	movwf	??___flmul
 10326  01B6  0857               	movf	___flmul@temp+1,w
 10327  01B7  00C7               	movwf	??___flmul+1
 10328  01B8  01C8               	clrf	??___flmul+2
 10329  01B9  01C9               	clrf	??___flmul+3
 10330  01BA  0846               	movf	??___flmul,w
 10331  01BB  07CC               	addwf	___flmul@grs,f
 10332  01BC  0847               	movf	??___flmul+1,w
 10333  01BD  1103               	clrz
 10334  01BE  1803               	skipnc
 10335  01BF  3E01               	addlw	1
 10336  01C0  1903               	skipnz
 10337  01C1  29C3               	goto	u338_21
 10338  01C2  07CD               	addwf	___flmul@grs+1,f
 10339  01C3                     u338_21:
 10340  01C3  0848               	movf	??___flmul+2,w
 10341  01C4  1103               	clrz
 10342  01C5  1803               	skipnc
 10343  01C6  3E01               	addlw	1
 10344  01C7  1903               	skipnz
 10345  01C8  29CA               	goto	u338_22
 10346  01C9  07CE               	addwf	___flmul@grs+2,f
 10347  01CA                     u338_22:
 10348  01CA  0849               	movf	??___flmul+3,w
 10349  01CB  1103               	clrz
 10350  01CC  1803               	skipnc
 10351  01CD  3E01               	addlw	1
 10352  01CE  1903               	skipnz
 10353  01CF  29D1               	goto	u338_23
 10354  01D0  07CF               	addwf	___flmul@grs+3,f
 10355  01D1                     u338_23:
 10356  01D1                     i1l3005:
 10357  01D1  3008               	movlw	8
 10358  01D2  00C6               	movwf	??___flmul
 10359  01D3                     u339_25:
 10360  01D3  1003               	clrc
 10361  01D4  0DCC               	rlf	___flmul@grs,f
 10362  01D5  0DCD               	rlf	___flmul@grs+1,f
 10363  01D6  0DCE               	rlf	___flmul@grs+2,f
 10364  01D7  0DCF               	rlf	___flmul@grs+3,f
 10365  01D8  0BC6               	decfsz	??___flmul,f
 10366  01D9  29D3               	goto	u339_25
 10367  01DA  083E               	movf	___flmul@b,w
 10368  01DB  00C6               	movwf	??___flmul
 10369  01DC  0846               	movf	??___flmul,w
 10370  01DD  00F0               	movwf	__Umul8_16@multiplicand
 10371  01DE  0842               	movf	___flmul@a,w
 10372  01DF  160A  158A  244F  120A  118A  	fcall	__Umul8_16
 10373  01E4  0871               	movf	?__Umul8_16+1,w
 10374  01E5  1283               	bcf	3,5	;RP0=0, select bank0
 10375  01E6  1303               	bcf	3,6	;RP1=0, select bank0
 10376  01E7  00D7               	movwf	___flmul@temp+1
 10377  01E8  0870               	movf	?__Umul8_16,w
 10378  01E9  00D6               	movwf	___flmul@temp
 10379  01EA                     i1l3007:
 10380  01EA  0856               	movf	___flmul@temp,w
 10381  01EB  00C6               	movwf	??___flmul
 10382  01EC  0857               	movf	___flmul@temp+1,w
 10383  01ED  00C7               	movwf	??___flmul+1
 10384  01EE  01C8               	clrf	??___flmul+2
 10385  01EF  01C9               	clrf	??___flmul+3
 10386  01F0  0846               	movf	??___flmul,w
 10387  01F1  07CC               	addwf	___flmul@grs,f
 10388  01F2  0847               	movf	??___flmul+1,w
 10389  01F3  1103               	clrz
 10390  01F4  1803               	skipnc
 10391  01F5  3E01               	addlw	1
 10392  01F6  1903               	skipnz
 10393  01F7  29F9               	goto	u340_21
 10394  01F8  07CD               	addwf	___flmul@grs+1,f
 10395  01F9                     u340_21:
 10396  01F9  0848               	movf	??___flmul+2,w
 10397  01FA  1103               	clrz
 10398  01FB  1803               	skipnc
 10399  01FC  3E01               	addlw	1
 10400  01FD  1903               	skipnz
 10401  01FE  2A00               	goto	u340_22
 10402  01FF  07CE               	addwf	___flmul@grs+2,f
 10403  0200                     u340_22:
 10404  0200  0849               	movf	??___flmul+3,w
 10405  0201  1103               	clrz
 10406  0202  1803               	skipnc
 10407  0203  3E01               	addlw	1
 10408  0204  1903               	skipnz
 10409  0205  2A07               	goto	u340_23
 10410  0206  07CF               	addwf	___flmul@grs+3,f
 10411  0207                     u340_23:
 10412  0207                     i1l3009:
 10413  0207  083F               	movf	___flmul@b+1,w
 10414  0208  00C6               	movwf	??___flmul
 10415  0209  0846               	movf	??___flmul,w
 10416  020A  00F0               	movwf	__Umul8_16@multiplicand
 10417  020B  0844               	movf	___flmul@a+2,w
 10418  020C  160A  158A  244F  120A  118A  	fcall	__Umul8_16
 10419  0211  0871               	movf	?__Umul8_16+1,w
 10420  0212  1283               	bcf	3,5	;RP0=0, select bank0
 10421  0213  1303               	bcf	3,6	;RP1=0, select bank0
 10422  0214  00D7               	movwf	___flmul@temp+1
 10423  0215  0870               	movf	?__Umul8_16,w
 10424  0216  00D6               	movwf	___flmul@temp
 10425  0217  0856               	movf	___flmul@temp,w
 10426  0218  00C6               	movwf	??___flmul
 10427  0219  0857               	movf	___flmul@temp+1,w
 10428  021A  00C7               	movwf	??___flmul+1
 10429  021B  01C8               	clrf	??___flmul+2
 10430  021C  01C9               	clrf	??___flmul+3
 10431  021D  0846               	movf	??___flmul,w
 10432  021E  07D2               	addwf	___flmul@prod,f
 10433  021F  0847               	movf	??___flmul+1,w
 10434  0220  1103               	clrz
 10435  0221  1803               	skipnc
 10436  0222  3E01               	addlw	1
 10437  0223  1903               	skipnz
 10438  0224  2A26               	goto	u341_21
 10439  0225  07D3               	addwf	___flmul@prod+1,f
 10440  0226                     u341_21:
 10441  0226  0848               	movf	??___flmul+2,w
 10442  0227  1103               	clrz
 10443  0228  1803               	skipnc
 10444  0229  3E01               	addlw	1
 10445  022A  1903               	skipnz
 10446  022B  2A2D               	goto	u341_22
 10447  022C  07D4               	addwf	___flmul@prod+2,f
 10448  022D                     u341_22:
 10449  022D  0849               	movf	??___flmul+3,w
 10450  022E  1103               	clrz
 10451  022F  1803               	skipnc
 10452  0230  3E01               	addlw	1
 10453  0231  1903               	skipnz
 10454  0232  2A34               	goto	u341_23
 10455  0233  07D5               	addwf	___flmul@prod+3,f
 10456  0234                     u341_23:
 10457  0234                     i1l3011:
 10458  0234  0840               	movf	___flmul@b+2,w
 10459  0235  00C6               	movwf	??___flmul
 10460  0236  0846               	movf	??___flmul,w
 10461  0237  00F0               	movwf	__Umul8_16@multiplicand
 10462  0238  0843               	movf	___flmul@a+1,w
 10463  0239  160A  158A  244F  120A  118A  	fcall	__Umul8_16
 10464  023E  0871               	movf	?__Umul8_16+1,w
 10465  023F  1283               	bcf	3,5	;RP0=0, select bank0
 10466  0240  1303               	bcf	3,6	;RP1=0, select bank0
 10467  0241  00D7               	movwf	___flmul@temp+1
 10468  0242  0870               	movf	?__Umul8_16,w
 10469  0243  00D6               	movwf	___flmul@temp
 10470  0244                     i1l3013:
 10471  0244  0856               	movf	___flmul@temp,w
 10472  0245  00C6               	movwf	??___flmul
 10473  0246  0857               	movf	___flmul@temp+1,w
 10474  0247  00C7               	movwf	??___flmul+1
 10475  0248  01C8               	clrf	??___flmul+2
 10476  0249  01C9               	clrf	??___flmul+3
 10477  024A  0846               	movf	??___flmul,w
 10478  024B  07D2               	addwf	___flmul@prod,f
 10479  024C  0847               	movf	??___flmul+1,w
 10480  024D  1103               	clrz
 10481  024E  1803               	skipnc
 10482  024F  3E01               	addlw	1
 10483  0250  1903               	skipnz
 10484  0251  2A53               	goto	u342_21
 10485  0252  07D3               	addwf	___flmul@prod+1,f
 10486  0253                     u342_21:
 10487  0253  0848               	movf	??___flmul+2,w
 10488  0254  1103               	clrz
 10489  0255  1803               	skipnc
 10490  0256  3E01               	addlw	1
 10491  0257  1903               	skipnz
 10492  0258  2A5A               	goto	u342_22
 10493  0259  07D4               	addwf	___flmul@prod+2,f
 10494  025A                     u342_22:
 10495  025A  0849               	movf	??___flmul+3,w
 10496  025B  1103               	clrz
 10497  025C  1803               	skipnc
 10498  025D  3E01               	addlw	1
 10499  025E  1903               	skipnz
 10500  025F  2A61               	goto	u342_23
 10501  0260  07D5               	addwf	___flmul@prod+3,f
 10502  0261                     u342_23:
 10503  0261  0840               	movf	___flmul@b+2,w
 10504  0262  00C6               	movwf	??___flmul
 10505  0263  0846               	movf	??___flmul,w
 10506  0264  00F0               	movwf	__Umul8_16@multiplicand
 10507  0265  0844               	movf	___flmul@a+2,w
 10508  0266  160A  158A  244F  120A  118A  	fcall	__Umul8_16
 10509  026B  0871               	movf	?__Umul8_16+1,w
 10510  026C  1283               	bcf	3,5	;RP0=0, select bank0
 10511  026D  1303               	bcf	3,6	;RP1=0, select bank0
 10512  026E  00D7               	movwf	___flmul@temp+1
 10513  026F  0870               	movf	?__Umul8_16,w
 10514  0270  00D6               	movwf	___flmul@temp
 10515  0271                     i1l3015:
 10516  0271  0856               	movf	___flmul@temp,w
 10517  0272  00C6               	movwf	??___flmul
 10518  0273  0857               	movf	___flmul@temp+1,w
 10519  0274  00C7               	movwf	??___flmul+1
 10520  0275  01C8               	clrf	??___flmul+2
 10521  0276  01C9               	clrf	??___flmul+3
 10522  0277  3008               	movlw	8
 10523  0278                     u343_25:
 10524  0278  1003               	clrc
 10525  0279  0DC6               	rlf	??___flmul,f
 10526  027A  0DC7               	rlf	??___flmul+1,f
 10527  027B  0DC8               	rlf	??___flmul+2,f
 10528  027C  0DC9               	rlf	??___flmul+3,f
 10529  027D                     u343_20:
 10530  027D  3EFF               	addlw	-1
 10531  027E  1D03               	skipz
 10532  027F  2A78               	goto	u343_25
 10533  0280  0846               	movf	??___flmul,w
 10534  0281  07D2               	addwf	___flmul@prod,f
 10535  0282  0847               	movf	??___flmul+1,w
 10536  0283  1103               	clrz
 10537  0284  1803               	skipnc
 10538  0285  3E01               	addlw	1
 10539  0286  1903               	skipnz
 10540  0287  2A89               	goto	u344_21
 10541  0288  07D3               	addwf	___flmul@prod+1,f
 10542  0289                     u344_21:
 10543  0289  0848               	movf	??___flmul+2,w
 10544  028A  1103               	clrz
 10545  028B  1803               	skipnc
 10546  028C  3E01               	addlw	1
 10547  028D  1903               	skipnz
 10548  028E  2A90               	goto	u344_22
 10549  028F  07D4               	addwf	___flmul@prod+2,f
 10550  0290                     u344_22:
 10551  0290  0849               	movf	??___flmul+3,w
 10552  0291  1103               	clrz
 10553  0292  1803               	skipnc
 10554  0293  3E01               	addlw	1
 10555  0294  1903               	skipnz
 10556  0295  2A97               	goto	u344_23
 10557  0296  07D5               	addwf	___flmul@prod+3,f
 10558  0297                     u344_23:
 10559  0297                     i1l3017:
 10560  0297  084C               	movf	___flmul@grs,w
 10561  0298  00C6               	movwf	??___flmul
 10562  0299  084D               	movf	___flmul@grs+1,w
 10563  029A  00C7               	movwf	??___flmul+1
 10564  029B  084E               	movf	___flmul@grs+2,w
 10565  029C  00C8               	movwf	??___flmul+2
 10566  029D  084F               	movf	___flmul@grs+3,w
 10567  029E  00C9               	movwf	??___flmul+3
 10568  029F  3018               	movlw	24
 10569  02A0                     u345_25:
 10570  02A0  1003               	clrc
 10571  02A1  0CC9               	rrf	??___flmul+3,f
 10572  02A2  0CC8               	rrf	??___flmul+2,f
 10573  02A3  0CC7               	rrf	??___flmul+1,f
 10574  02A4  0CC6               	rrf	??___flmul,f
 10575  02A5                     u345_20:
 10576  02A5  3EFF               	addlw	-1
 10577  02A6  1D03               	skipz
 10578  02A7  2AA0               	goto	u345_25
 10579  02A8  0846               	movf	??___flmul,w
 10580  02A9  07D2               	addwf	___flmul@prod,f
 10581  02AA  0847               	movf	??___flmul+1,w
 10582  02AB  1103               	clrz
 10583  02AC  1803               	skipnc
 10584  02AD  3E01               	addlw	1
 10585  02AE  1903               	skipnz
 10586  02AF  2AB1               	goto	u346_21
 10587  02B0  07D3               	addwf	___flmul@prod+1,f
 10588  02B1                     u346_21:
 10589  02B1  0848               	movf	??___flmul+2,w
 10590  02B2  1103               	clrz
 10591  02B3  1803               	skipnc
 10592  02B4  3E01               	addlw	1
 10593  02B5  1903               	skipnz
 10594  02B6  2AB8               	goto	u346_22
 10595  02B7  07D4               	addwf	___flmul@prod+2,f
 10596  02B8                     u346_22:
 10597  02B8  0849               	movf	??___flmul+3,w
 10598  02B9  1103               	clrz
 10599  02BA  1803               	skipnc
 10600  02BB  3E01               	addlw	1
 10601  02BC  1903               	skipnz
 10602  02BD  2ABF               	goto	u346_23
 10603  02BE  07D5               	addwf	___flmul@prod+3,f
 10604  02BF                     u346_23:
 10605  02BF                     i1l3019:
 10606  02BF  3008               	movlw	8
 10607  02C0  00C6               	movwf	??___flmul
 10608  02C1                     u347_25:
 10609  02C1  1003               	clrc
 10610  02C2  0DCC               	rlf	___flmul@grs,f
 10611  02C3  0DCD               	rlf	___flmul@grs+1,f
 10612  02C4  0DCE               	rlf	___flmul@grs+2,f
 10613  02C5  0DCF               	rlf	___flmul@grs+3,f
 10614  02C6  0BC6               	decfsz	??___flmul,f
 10615  02C7  2AC1               	goto	u347_25
 10616  02C8                     i1l3021:
 10617  02C8  0851               	movf	___flmul@bexp,w
 10618  02C9  0750               	addwf	___flmul@aexp,w
 10619  02CA  00C6               	movwf	??___flmul
 10620  02CB  01C7               	clrf	??___flmul+1
 10621  02CC  0DC7               	rlf	??___flmul+1,f
 10622  02CD  0846               	movf	??___flmul,w
 10623  02CE  3E82               	addlw	130
 10624  02CF  00D6               	movwf	___flmul@temp
 10625  02D0  0847               	movf	??___flmul+1,w
 10626  02D1  1803               	skipnc
 10627  02D2  3E01               	addlw	1
 10628  02D3  3EFF               	addlw	255
 10629  02D4  00D7               	movwf	___flmul@temp+1
 10630  02D5  2AF3               	goto	i1l3033
 10631  02D6                     i1l3023:
 10632  02D6  3001               	movlw	1
 10633  02D7  00C6               	movwf	??___flmul
 10634  02D8                     u348_25:
 10635  02D8  1003               	clrc
 10636  02D9  0DD2               	rlf	___flmul@prod,f
 10637  02DA  0DD3               	rlf	___flmul@prod+1,f
 10638  02DB  0DD4               	rlf	___flmul@prod+2,f
 10639  02DC  0DD5               	rlf	___flmul@prod+3,f
 10640  02DD  0BC6               	decfsz	??___flmul,f
 10641  02DE  2AD8               	goto	u348_25
 10642  02DF                     i1l3025:
 10643  02DF  1FCF               	btfss	___flmul@grs+3,7
 10644  02E0  2AE2               	goto	u349_21
 10645  02E1  2AE3               	goto	u349_20
 10646  02E2                     u349_21:
 10647  02E2  2AE4               	goto	i1l3029
 10648  02E3                     u349_20:
 10649  02E3                     i1l3027:
 10650  02E3  1452               	bsf	___flmul@prod,0
 10651  02E4                     i1l3029:
 10652  02E4  3001               	movlw	1
 10653  02E5  00C6               	movwf	??___flmul
 10654  02E6                     u350_25:
 10655  02E6  1003               	clrc
 10656  02E7  0DCC               	rlf	___flmul@grs,f
 10657  02E8  0DCD               	rlf	___flmul@grs+1,f
 10658  02E9  0DCE               	rlf	___flmul@grs+2,f
 10659  02EA  0DCF               	rlf	___flmul@grs+3,f
 10660  02EB  0BC6               	decfsz	??___flmul,f
 10661  02EC  2AE6               	goto	u350_25
 10662  02ED                     i1l3031:
 10663  02ED  30FF               	movlw	255
 10664  02EE  07D6               	addwf	___flmul@temp,f
 10665  02EF  1803               	skipnc
 10666  02F0  0AD7               	incf	___flmul@temp+1,f
 10667  02F1  30FF               	movlw	255
 10668  02F2  07D7               	addwf	___flmul@temp+1,f
 10669  02F3                     i1l3033:
 10670  02F3  1FD4               	btfss	___flmul@prod+2,7
 10671  02F4  2AF6               	goto	u351_21
 10672  02F5  2AF7               	goto	u351_20
 10673  02F6                     u351_21:
 10674  02F6  2AD6               	goto	i1l3023
 10675  02F7                     u351_20:
 10676  02F7                     i1l3035:
 10677  02F7  01D0               	clrf	___flmul@aexp
 10678  02F8                     i1l3037:
 10679  02F8  1FCF               	btfss	___flmul@grs+3,7
 10680  02F9  2AFB               	goto	u352_21
 10681  02FA  2AFC               	goto	u352_20
 10682  02FB                     u352_21:
 10683  02FB  2B18               	goto	i1l3045
 10684  02FC                     u352_20:
 10685  02FC                     i1l3039:
 10686  02FC  30FF               	movlw	255
 10687  02FD  054C               	andwf	___flmul@grs,w
 10688  02FE  00C6               	movwf	??___flmul
 10689  02FF  30FF               	movlw	255
 10690  0300  054D               	andwf	___flmul@grs+1,w
 10691  0301  00C7               	movwf	??___flmul+1
 10692  0302  30FF               	movlw	255
 10693  0303  054E               	andwf	___flmul@grs+2,w
 10694  0304  00C8               	movwf	??___flmul+2
 10695  0305  307F               	movlw	127
 10696  0306  054F               	andwf	___flmul@grs+3,w
 10697  0307  00C9               	movwf	??___flmul+3
 10698  0308  0849               	movf	??___flmul+3,w
 10699  0309  0448               	iorwf	??___flmul+2,w
 10700  030A  0447               	iorwf	??___flmul+1,w
 10701  030B  0446               	iorwf	??___flmul,w
 10702  030C  1903               	skipnz
 10703  030D  2B0F               	goto	u353_21
 10704  030E  2B10               	goto	u353_20
 10705  030F                     u353_21:
 10706  030F  2B13               	goto	i1l908
 10707  0310                     u353_20:
 10708  0310                     i1l3041:
 10709  0310  01D0               	clrf	___flmul@aexp
 10710  0311  0AD0               	incf	___flmul@aexp,f
 10711  0312  2B18               	goto	i1l3045
 10712  0313                     i1l908:
 10713  0313  1C52               	btfss	___flmul@prod,0
 10714  0314  2B16               	goto	u354_21
 10715  0315  2B17               	goto	u354_20
 10716  0316                     u354_21:
 10717  0316  2B18               	goto	i1l3045
 10718  0317                     u354_20:
 10719  0317  2B10               	goto	i1l3041
 10720  0318                     i1l3045:
 10721  0318  0850               	movf	___flmul@aexp,w
 10722  0319  1903               	btfsc	3,2
 10723  031A  2B1C               	goto	u355_21
 10724  031B  2B1D               	goto	u355_20
 10725  031C                     u355_21:
 10726  031C  2B4E               	goto	i1l3055
 10727  031D                     u355_20:
 10728  031D                     i1l3047:
 10729  031D  3001               	movlw	1
 10730  031E  07D2               	addwf	___flmul@prod,f
 10731  031F  3000               	movlw	0
 10732  0320  1803               	skipnc
 10733  0321  3001               	movlw	1
 10734  0322  07D3               	addwf	___flmul@prod+1,f
 10735  0323  3000               	movlw	0
 10736  0324  1803               	skipnc
 10737  0325  3001               	movlw	1
 10738  0326  07D4               	addwf	___flmul@prod+2,f
 10739  0327  3000               	movlw	0
 10740  0328  1803               	skipnc
 10741  0329  3001               	movlw	1
 10742  032A  07D5               	addwf	___flmul@prod+3,f
 10743  032B                     i1l3049:
 10744  032B  1C55               	btfss	___flmul@prod+3,0
 10745  032C  2B2E               	goto	u356_21
 10746  032D  2B2F               	goto	u356_20
 10747  032E                     u356_21:
 10748  032E  2B4E               	goto	i1l3055
 10749  032F                     u356_20:
 10750  032F                     i1l3051:
 10751  032F  0852               	movf	___flmul@prod,w
 10752  0330  00C6               	movwf	??___flmul
 10753  0331  0853               	movf	___flmul@prod+1,w
 10754  0332  00C7               	movwf	??___flmul+1
 10755  0333  0854               	movf	___flmul@prod+2,w
 10756  0334  00C8               	movwf	??___flmul+2
 10757  0335  0855               	movf	___flmul@prod+3,w
 10758  0336  00C9               	movwf	??___flmul+3
 10759  0337  3001               	movlw	1
 10760  0338  00CA               	movwf	??___flmul+4
 10761  0339                     u357_25:
 10762  0339  0D49               	rlf	??___flmul+3,w
 10763  033A  0CC9               	rrf	??___flmul+3,f
 10764  033B  0CC8               	rrf	??___flmul+2,f
 10765  033C  0CC7               	rrf	??___flmul+1,f
 10766  033D  0CC6               	rrf	??___flmul,f
 10767  033E                     u357_20:
 10768  033E  0BCA               	decfsz	??___flmul+4,f
 10769  033F  2B39               	goto	u357_25
 10770  0340  0849               	movf	??___flmul+3,w
 10771  0341  00D5               	movwf	___flmul@prod+3
 10772  0342  0848               	movf	??___flmul+2,w
 10773  0343  00D4               	movwf	___flmul@prod+2
 10774  0344  0847               	movf	??___flmul+1,w
 10775  0345  00D3               	movwf	___flmul@prod+1
 10776  0346  0846               	movf	??___flmul,w
 10777  0347  00D2               	movwf	___flmul@prod
 10778  0348                     i1l3053:
 10779  0348  3001               	movlw	1
 10780  0349  07D6               	addwf	___flmul@temp,f
 10781  034A  1803               	skipnc
 10782  034B  0AD7               	incf	___flmul@temp+1,f
 10783  034C  3000               	movlw	0
 10784  034D  07D7               	addwf	___flmul@temp+1,f
 10785  034E                     i1l3055:
 10786  034E  0857               	movf	___flmul@temp+1,w
 10787  034F  3A80               	xorlw	128
 10788  0350  00FF               	movwf	btemp+1
 10789  0351  3080               	movlw	128
 10790  0352  027F               	subwf	btemp+1,w
 10791  0353  1D03               	skipz
 10792  0354  2B57               	goto	u358_25
 10793  0355  30FF               	movlw	255
 10794  0356  0256               	subwf	___flmul@temp,w
 10795  0357                     u358_25:
 10796  0357  1C03               	skipc
 10797  0358  2B5A               	goto	u358_21
 10798  0359  2B5B               	goto	u358_20
 10799  035A                     u358_21:
 10800  035A  2B66               	goto	i1l3059
 10801  035B                     u358_20:
 10802  035B                     i1l3057:
 10803  035B  307F               	movlw	127
 10804  035C  1283               	bcf	3,5	;RP0=0, select bank0
 10805  035D  1303               	bcf	3,6	;RP1=0, select bank0
 10806  035E  00D5               	movwf	___flmul@prod+3
 10807  035F  3080               	movlw	128
 10808  0360  00D4               	movwf	___flmul@prod+2
 10809  0361  3000               	movlw	0
 10810  0362  00D3               	movwf	___flmul@prod+1
 10811  0363  3000               	movlw	0
 10812  0364  00D2               	movwf	___flmul@prod
 10813  0365  2B9B               	goto	i1l914
 10814  0366                     i1l3059:
 10815  0366  1283               	bcf	3,5	;RP0=0, select bank0
 10816  0367  1303               	bcf	3,6	;RP1=0, select bank0
 10817  0368  0857               	movf	___flmul@temp+1,w
 10818  0369  3A80               	xorlw	128
 10819  036A  00FF               	movwf	btemp+1
 10820  036B  3080               	movlw	128
 10821  036C  027F               	subwf	btemp+1,w
 10822  036D  1D03               	skipz
 10823  036E  2B71               	goto	u359_25
 10824  036F  3001               	movlw	1
 10825  0370  0256               	subwf	___flmul@temp,w
 10826  0371                     u359_25:
 10827  0371  1803               	skipnc
 10828  0372  2B74               	goto	u359_21
 10829  0373  2B75               	goto	u359_20
 10830  0374                     u359_21:
 10831  0374  2B81               	goto	i1l3065
 10832  0375                     u359_20:
 10833  0375                     i1l3061:
 10834  0375  3000               	movlw	0
 10835  0376  1283               	bcf	3,5	;RP0=0, select bank0
 10836  0377  1303               	bcf	3,6	;RP1=0, select bank0
 10837  0378  00D5               	movwf	___flmul@prod+3
 10838  0379  3000               	movlw	0
 10839  037A  00D4               	movwf	___flmul@prod+2
 10840  037B  3000               	movlw	0
 10841  037C  00D3               	movwf	___flmul@prod+1
 10842  037D  3000               	movlw	0
 10843  037E  00D2               	movwf	___flmul@prod
 10844  037F                     i1l3063:
 10845  037F  01CB               	clrf	___flmul@sign
 10846  0380  2B9B               	goto	i1l914
 10847  0381                     i1l3065:
 10848  0381  1283               	bcf	3,5	;RP0=0, select bank0
 10849  0382  1303               	bcf	3,6	;RP1=0, select bank0
 10850  0383  0856               	movf	___flmul@temp,w
 10851  0384  00C6               	movwf	??___flmul
 10852  0385  0846               	movf	??___flmul,w
 10853  0386  00D1               	movwf	___flmul@bexp
 10854  0387  30FF               	movlw	255
 10855  0388  05D2               	andwf	___flmul@prod,f
 10856  0389  30FF               	movlw	255
 10857  038A  05D3               	andwf	___flmul@prod+1,f
 10858  038B  307F               	movlw	127
 10859  038C  05D4               	andwf	___flmul@prod+2,f
 10860  038D  3000               	movlw	0
 10861  038E  05D5               	andwf	___flmul@prod+3,f
 10862  038F                     i1l3067:
 10863  038F  1C51               	btfss	___flmul@bexp,0
 10864  0390  2B92               	goto	u360_21
 10865  0391  2B93               	goto	u360_20
 10866  0392                     u360_21:
 10867  0392  2B94               	goto	i1l3071
 10868  0393                     u360_20:
 10869  0393                     i1l3069:
 10870  0393  17D4               	bsf	___flmul@prod+2,7
 10871  0394                     i1l3071:
 10872  0394  0851               	movf	___flmul@bexp,w
 10873  0395  00C6               	movwf	??___flmul
 10874  0396  1003               	clrc
 10875  0397  0C46               	rrf	??___flmul,w
 10876  0398  00C7               	movwf	??___flmul+1
 10877  0399  0847               	movf	??___flmul+1,w
 10878  039A  00D5               	movwf	___flmul@prod+3
 10879  039B                     i1l914:
 10880  039B  084B               	movf	___flmul@sign,w
 10881  039C  00C6               	movwf	??___flmul
 10882  039D  0846               	movf	??___flmul,w
 10883  039E  04D5               	iorwf	___flmul@prod+3,f
 10884  039F                     i1l3073:
 10885  039F  0855               	movf	___flmul@prod+3,w
 10886  03A0  00C1               	movwf	?___flmul+3
 10887  03A1  0854               	movf	___flmul@prod+2,w
 10888  03A2  00C0               	movwf	?___flmul+2
 10889  03A3  0853               	movf	___flmul@prod+1,w
 10890  03A4  00BF               	movwf	?___flmul+1
 10891  03A5  0852               	movf	___flmul@prod,w
 10892  03A6  00BE               	movwf	?___flmul
 10893  03A7                     i1l902:
 10894  03A7  0008               	return
 10895  03A8                     __end_of___flmul:
 10896                           
 10897                           	psect	text40
 10898  1C4F                     __ptext40:	
 10899 ;; *************** function __Umul8_16 *****************
 10900 ;; Defined at:
 10901 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\Umul8_16.c"
 10902 ;; Parameters:    Size  Location     Type
 10903 ;;  multiplier      1    wreg     unsigned char 
 10904 ;;  multiplicand    1    0[COMMON] unsigned char 
 10905 ;; Auto vars:     Size  Location     Type
 10906 ;;  multiplier      1    8[COMMON] unsigned char 
 10907 ;;  word_mpld       2    6[COMMON] unsigned int 
 10908 ;;  product         2    4[COMMON] unsigned int 
 10909 ;; Return value:  Size  Location     Type
 10910 ;;                  2    0[COMMON] unsigned int 
 10911 ;; Registers used:
 10912 ;;		wreg, status,2, status,0
 10913 ;; Tracked objects:
 10914 ;;		On entry : 0/0
 10915 ;;		On exit  : 0/0
 10916 ;;		Unchanged: 0/0
 10917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10918 ;;      Params:         2       0       0       0       0
 10919 ;;      Locals:         5       0       0       0       0
 10920 ;;      Temps:          2       0       0       0       0
 10921 ;;      Totals:         9       0       0       0       0
 10922 ;;Total ram usage:        9 bytes
 10923 ;; Hardware stack levels used: 1
 10924 ;; This function calls:
 10925 ;;		Nothing
 10926 ;; This function is called by:
 10927 ;;		___flmul
 10928 ;; This function uses a non-reentrant model
 10929 ;;
 10930                           
 10931  1C4F                     __Umul8_16:	
 10932                           ;psect for function __Umul8_16
 10933                           
 10934                           
 10935                           ;incstack = 0
 10936                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
 10937                           ;__Umul8_16@multiplier stored from wreg
 10938  1C4F  00F8               	movwf	__Umul8_16@multiplier
 10939  1C50                     i1l2661:
 10940  1C50  01F4               	clrf	__Umul8_16@product
 10941  1C51  01F5               	clrf	__Umul8_16@product+1
 10942  1C52                     i1l2663:
 10943  1C52  0870               	movf	__Umul8_16@multiplicand,w
 10944  1C53  00F2               	movwf	??__Umul8_16
 10945  1C54  01F3               	clrf	??__Umul8_16+1
 10946  1C55  0872               	movf	??__Umul8_16,w
 10947  1C56  00F6               	movwf	__Umul8_16@word_mpld
 10948  1C57  0873               	movf	??__Umul8_16+1,w
 10949  1C58  00F7               	movwf	__Umul8_16@word_mpld+1
 10950  1C59                     i1l2665:
 10951  1C59  1C78               	btfss	__Umul8_16@multiplier,0
 10952  1C5A  2C5C               	goto	u256_21
 10953  1C5B  2C5D               	goto	u256_20
 10954  1C5C                     u256_21:
 10955  1C5C  2C63               	goto	i1l921
 10956  1C5D                     u256_20:
 10957  1C5D                     i1l2667:
 10958  1C5D  0876               	movf	__Umul8_16@word_mpld,w
 10959  1C5E  07F4               	addwf	__Umul8_16@product,f
 10960  1C5F  1803               	skipnc
 10961  1C60  0AF5               	incf	__Umul8_16@product+1,f
 10962  1C61  0877               	movf	__Umul8_16@word_mpld+1,w
 10963  1C62  07F5               	addwf	__Umul8_16@product+1,f
 10964  1C63                     i1l921:
 10965  1C63  3001               	movlw	1
 10966  1C64                     u257_25:
 10967  1C64  1003               	clrc
 10968  1C65  0DF6               	rlf	__Umul8_16@word_mpld,f
 10969  1C66  0DF7               	rlf	__Umul8_16@word_mpld+1,f
 10970  1C67  3EFF               	addlw	-1
 10971  1C68  1D03               	skipz
 10972  1C69  2C64               	goto	u257_25
 10973  1C6A  1003               	clrc
 10974  1C6B  0CF8               	rrf	__Umul8_16@multiplier,f
 10975  1C6C                     i1l2669:
 10976  1C6C  0878               	movf	__Umul8_16@multiplier,w
 10977  1C6D  1D03               	btfss	3,2
 10978  1C6E  2C70               	goto	u258_21
 10979  1C6F  2C71               	goto	u258_20
 10980  1C70                     u258_21:
 10981  1C70  2C59               	goto	i1l2665
 10982  1C71                     u258_20:
 10983  1C71                     i1l2671:
 10984  1C71  0875               	movf	__Umul8_16@product+1,w
 10985  1C72  00F1               	movwf	?__Umul8_16+1
 10986  1C73  0874               	movf	__Umul8_16@product,w
 10987  1C74  00F0               	movwf	?__Umul8_16
 10988  1C75                     i1l923:
 10989  1C75  0008               	return
 10990  1C76                     __end_of__Umul8_16:
 10991                           
 10992                           	psect	text41
 10993  15A0                     __ptext41:	
 10994 ;; *************** function ___xxtofl *****************
 10995 ;; Defined at:
 10996 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\xxtofl.c"
 10997 ;; Parameters:    Size  Location     Type
 10998 ;;  sign            1    wreg     unsigned char 
 10999 ;;  val             4    9[COMMON] long 
 11000 ;; Auto vars:     Size  Location     Type
 11001 ;;  sign            1    4[BANK0 ] unsigned char 
 11002 ;;  arg             4    6[BANK0 ] unsigned long 
 11003 ;;  exp             1    5[BANK0 ] unsigned char 
 11004 ;; Return value:  Size  Location     Type
 11005 ;;                  4    9[COMMON] unsigned char 
 11006 ;; Registers used:
 11007 ;;		wreg, status,2, status,0
 11008 ;; Tracked objects:
 11009 ;;		On entry : 0/0
 11010 ;;		On exit  : 0/0
 11011 ;;		Unchanged: 0/0
 11012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11013 ;;      Params:         4       0       0       0       0
 11014 ;;      Locals:         0       6       0       0       0
 11015 ;;      Temps:          0       4       0       0       0
 11016 ;;      Totals:         4      10       0       0       0
 11017 ;;Total ram usage:       14 bytes
 11018 ;; Hardware stack levels used: 1
 11019 ;; This function calls:
 11020 ;;		Nothing
 11021 ;; This function is called by:
 11022 ;;		_slave
 11023 ;;		_map
 11024 ;;		_log
 11025 ;; This function uses a non-reentrant model
 11026 ;;
 11027                           
 11028  15A0                     ___xxtofl:	
 11029                           ;psect for function ___xxtofl
 11030                           
 11031                           
 11032                           ;incstack = 0
 11033                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
 11034                           ;___xxtofl@sign stored from wreg
 11035  15A0  1283               	bcf	3,5	;RP0=0, select bank0
 11036  15A1  1303               	bcf	3,6	;RP1=0, select bank0
 11037  15A2  00A4               	movwf	___xxtofl@sign
 11038  15A3                     i1l3515:
 11039  15A3  0824               	movf	___xxtofl@sign,w
 11040  15A4  1903               	btfsc	3,2
 11041  15A5  2DA7               	goto	u428_21
 11042  15A6  2DA8               	goto	u428_20
 11043  15A7                     u428_21:
 11044  15A7  2DBC               	goto	i1l3521
 11045  15A8                     u428_20:
 11046  15A8                     i1l3517:
 11047  15A8  1FFC               	btfss	___xxtofl@val+3,7
 11048  15A9  2DAB               	goto	u429_21
 11049  15AA  2DAC               	goto	u429_20
 11050  15AB                     u429_21:
 11051  15AB  2DBC               	goto	i1l3521
 11052  15AC                     u429_20:
 11053  15AC                     i1l3519:
 11054  15AC  0979               	comf	___xxtofl@val,w
 11055  15AD  00A6               	movwf	___xxtofl@arg
 11056  15AE  097A               	comf	___xxtofl@val+1,w
 11057  15AF  00A7               	movwf	___xxtofl@arg+1
 11058  15B0  097B               	comf	___xxtofl@val+2,w
 11059  15B1  00A8               	movwf	___xxtofl@arg+2
 11060  15B2  097C               	comf	___xxtofl@val+3,w
 11061  15B3  00A9               	movwf	___xxtofl@arg+3
 11062  15B4  0AA6               	incf	___xxtofl@arg,f
 11063  15B5  1903               	skipnz
 11064  15B6  0AA7               	incf	___xxtofl@arg+1,f
 11065  15B7  1903               	skipnz
 11066  15B8  0AA8               	incf	___xxtofl@arg+2,f
 11067  15B9  1903               	skipnz
 11068  15BA  0AA9               	incf	___xxtofl@arg+3,f
 11069  15BB  2DC4               	goto	i1l946
 11070  15BC                     i1l3521:
 11071  15BC  087C               	movf	___xxtofl@val+3,w
 11072  15BD  00A9               	movwf	___xxtofl@arg+3
 11073  15BE  087B               	movf	___xxtofl@val+2,w
 11074  15BF  00A8               	movwf	___xxtofl@arg+2
 11075  15C0  087A               	movf	___xxtofl@val+1,w
 11076  15C1  00A7               	movwf	___xxtofl@arg+1
 11077  15C2  0879               	movf	___xxtofl@val,w
 11078  15C3  00A6               	movwf	___xxtofl@arg
 11079  15C4                     i1l946:
 11080  15C4  087C               	movf	___xxtofl@val+3,w
 11081  15C5  047B               	iorwf	___xxtofl@val+2,w
 11082  15C6  047A               	iorwf	___xxtofl@val+1,w
 11083  15C7  0479               	iorwf	___xxtofl@val,w
 11084  15C8  1D03               	skipz
 11085  15C9  2DCB               	goto	u430_21
 11086  15CA  2DCC               	goto	u430_20
 11087  15CB                     u430_21:
 11088  15CB  2DD5               	goto	i1l3527
 11089  15CC                     u430_20:
 11090  15CC                     i1l3523:
 11091  15CC  3000               	movlw	0
 11092  15CD  00FC               	movwf	?___xxtofl+3
 11093  15CE  3000               	movlw	0
 11094  15CF  00FB               	movwf	?___xxtofl+2
 11095  15D0  3000               	movlw	0
 11096  15D1  00FA               	movwf	?___xxtofl+1
 11097  15D2  3000               	movlw	0
 11098  15D3  00F9               	movwf	?___xxtofl
 11099  15D4  2E5B               	goto	i1l948
 11100  15D5                     i1l3527:
 11101  15D5  3096               	movlw	150
 11102  15D6  00A0               	movwf	??___xxtofl
 11103  15D7  0820               	movf	??___xxtofl,w
 11104  15D8  00A5               	movwf	___xxtofl@exp
 11105  15D9  2DE7               	goto	i1l3531
 11106  15DA                     i1l3529:
 11107  15DA  3001               	movlw	1
 11108  15DB  00A0               	movwf	??___xxtofl
 11109  15DC  0820               	movf	??___xxtofl,w
 11110  15DD  07A5               	addwf	___xxtofl@exp,f
 11111  15DE  3001               	movlw	1
 11112  15DF                     u431_25:
 11113  15DF  1003               	clrc
 11114  15E0  0CA9               	rrf	___xxtofl@arg+3,f
 11115  15E1  0CA8               	rrf	___xxtofl@arg+2,f
 11116  15E2  0CA7               	rrf	___xxtofl@arg+1,f
 11117  15E3  0CA6               	rrf	___xxtofl@arg,f
 11118  15E4  3EFF               	addlw	-1
 11119  15E5  1D03               	skipz
 11120  15E6  2DDF               	goto	u431_25
 11121  15E7                     i1l3531:
 11122  15E7  30FE               	movlw	254
 11123  15E8  0529               	andwf	___xxtofl@arg+3,w
 11124  15E9  1D03               	btfss	3,2
 11125  15EA  2DEC               	goto	u432_21
 11126  15EB  2DED               	goto	u432_20
 11127  15EC                     u432_21:
 11128  15EC  2DDA               	goto	i1l3529
 11129  15ED                     u432_20:
 11130  15ED  2E09               	goto	i1l952
 11131  15EE                     i1l3533:
 11132  15EE  3001               	movlw	1
 11133  15EF  00A0               	movwf	??___xxtofl
 11134  15F0  0820               	movf	??___xxtofl,w
 11135  15F1  07A5               	addwf	___xxtofl@exp,f
 11136  15F2                     i1l3535:
 11137  15F2  3001               	movlw	1
 11138  15F3  07A6               	addwf	___xxtofl@arg,f
 11139  15F4  3000               	movlw	0
 11140  15F5  1803               	skipnc
 11141  15F6  3001               	movlw	1
 11142  15F7  07A7               	addwf	___xxtofl@arg+1,f
 11143  15F8  3000               	movlw	0
 11144  15F9  1803               	skipnc
 11145  15FA  3001               	movlw	1
 11146  15FB  07A8               	addwf	___xxtofl@arg+2,f
 11147  15FC  3000               	movlw	0
 11148  15FD  1803               	skipnc
 11149  15FE  3001               	movlw	1
 11150  15FF  07A9               	addwf	___xxtofl@arg+3,f
 11151  1600                     i1l3537:
 11152  1600  3001               	movlw	1
 11153  1601                     u433_25:
 11154  1601  1003               	clrc
 11155  1602  0CA9               	rrf	___xxtofl@arg+3,f
 11156  1603  0CA8               	rrf	___xxtofl@arg+2,f
 11157  1604  0CA7               	rrf	___xxtofl@arg+1,f
 11158  1605  0CA6               	rrf	___xxtofl@arg,f
 11159  1606  3EFF               	addlw	-1
 11160  1607  1D03               	skipz
 11161  1608  2E01               	goto	u433_25
 11162  1609                     i1l952:
 11163  1609  30FF               	movlw	255
 11164  160A  0529               	andwf	___xxtofl@arg+3,w
 11165  160B  1D03               	btfss	3,2
 11166  160C  2E0E               	goto	u434_21
 11167  160D  2E0F               	goto	u434_20
 11168  160E                     u434_21:
 11169  160E  2DEE               	goto	i1l3533
 11170  160F                     u434_20:
 11171  160F  2E1B               	goto	i1l3541
 11172  1610                     i1l3539:
 11173  1610  3001               	movlw	1
 11174  1611  02A5               	subwf	___xxtofl@exp,f
 11175  1612  3001               	movlw	1
 11176  1613  00A0               	movwf	??___xxtofl
 11177  1614                     u435_25:
 11178  1614  1003               	clrc
 11179  1615  0DA6               	rlf	___xxtofl@arg,f
 11180  1616  0DA7               	rlf	___xxtofl@arg+1,f
 11181  1617  0DA8               	rlf	___xxtofl@arg+2,f
 11182  1618  0DA9               	rlf	___xxtofl@arg+3,f
 11183  1619  0BA0               	decfsz	??___xxtofl,f
 11184  161A  2E14               	goto	u435_25
 11185  161B                     i1l3541:
 11186  161B  1BA8               	btfsc	___xxtofl@arg+2,7
 11187  161C  2E1E               	goto	u436_21
 11188  161D  2E1F               	goto	u436_20
 11189  161E                     u436_21:
 11190  161E  2E25               	goto	i1l959
 11191  161F                     u436_20:
 11192  161F                     i1l3543:
 11193  161F  3002               	movlw	2
 11194  1620  0225               	subwf	___xxtofl@exp,w
 11195  1621  1803               	skipnc
 11196  1622  2E24               	goto	u437_21
 11197  1623  2E25               	goto	u437_20
 11198  1624                     u437_21:
 11199  1624  2E10               	goto	i1l3539
 11200  1625                     u437_20:
 11201  1625                     i1l959:
 11202  1625  1825               	btfsc	___xxtofl@exp,0
 11203  1626  2E28               	goto	u438_21
 11204  1627  2E29               	goto	u438_20
 11205  1628                     u438_21:
 11206  1628  2E31               	goto	i1l960
 11207  1629                     u438_20:
 11208  1629                     i1l3545:
 11209  1629  30FF               	movlw	255
 11210  162A  05A6               	andwf	___xxtofl@arg,f
 11211  162B  30FF               	movlw	255
 11212  162C  05A7               	andwf	___xxtofl@arg+1,f
 11213  162D  307F               	movlw	127
 11214  162E  05A8               	andwf	___xxtofl@arg+2,f
 11215  162F  30FF               	movlw	255
 11216  1630  05A9               	andwf	___xxtofl@arg+3,f
 11217  1631                     i1l960:
 11218  1631  1003               	clrc
 11219  1632  0CA5               	rrf	___xxtofl@exp,f
 11220  1633                     i1l3547:
 11221  1633  0825               	movf	___xxtofl@exp,w
 11222  1634  00A0               	movwf	??___xxtofl
 11223  1635  01A1               	clrf	??___xxtofl+1
 11224  1636  01A2               	clrf	??___xxtofl+2
 11225  1637  01A3               	clrf	??___xxtofl+3
 11226  1638  3018               	movlw	24
 11227  1639                     u439_25:
 11228  1639  1003               	clrc
 11229  163A  0DA0               	rlf	??___xxtofl,f
 11230  163B  0DA1               	rlf	??___xxtofl+1,f
 11231  163C  0DA2               	rlf	??___xxtofl+2,f
 11232  163D  0DA3               	rlf	??___xxtofl+3,f
 11233  163E                     u439_20:
 11234  163E  3EFF               	addlw	-1
 11235  163F  1D03               	skipz
 11236  1640  2E39               	goto	u439_25
 11237  1641  0820               	movf	??___xxtofl,w
 11238  1642  04A6               	iorwf	___xxtofl@arg,f
 11239  1643  0821               	movf	??___xxtofl+1,w
 11240  1644  04A7               	iorwf	___xxtofl@arg+1,f
 11241  1645  0822               	movf	??___xxtofl+2,w
 11242  1646  04A8               	iorwf	___xxtofl@arg+2,f
 11243  1647  0823               	movf	??___xxtofl+3,w
 11244  1648  04A9               	iorwf	___xxtofl@arg+3,f
 11245  1649                     i1l3549:
 11246  1649  0824               	movf	___xxtofl@sign,w
 11247  164A  1903               	btfsc	3,2
 11248  164B  2E4D               	goto	u440_21
 11249  164C  2E4E               	goto	u440_20
 11250  164D                     u440_21:
 11251  164D  2E53               	goto	i1l3555
 11252  164E                     u440_20:
 11253  164E                     i1l3551:
 11254  164E  1FFC               	btfss	___xxtofl@val+3,7
 11255  164F  2E51               	goto	u441_21
 11256  1650  2E52               	goto	u441_20
 11257  1651                     u441_21:
 11258  1651  2E53               	goto	i1l3555
 11259  1652                     u441_20:
 11260  1652                     i1l3553:
 11261  1652  17A9               	bsf	___xxtofl@arg+3,7
 11262  1653                     i1l3555:
 11263  1653  0829               	movf	___xxtofl@arg+3,w
 11264  1654  00FC               	movwf	?___xxtofl+3
 11265  1655  0828               	movf	___xxtofl@arg+2,w
 11266  1656  00FB               	movwf	?___xxtofl+2
 11267  1657  0827               	movf	___xxtofl@arg+1,w
 11268  1658  00FA               	movwf	?___xxtofl+1
 11269  1659  0826               	movf	___xxtofl@arg,w
 11270  165A  00F9               	movwf	?___xxtofl
 11271  165B                     i1l948:
 11272  165B  0008               	return
 11273  165C                     __end_of___xxtofl:
 11274                           
 11275                           	psect	text42
 11276  138E                     __ptext42:	
 11277 ;; *************** function ___flge *****************
 11278 ;; Defined at:
 11279 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\flge.c"
 11280 ;; Parameters:    Size  Location     Type
 11281 ;;  ff1             4    0[COMMON] unsigned char 
 11282 ;;  ff2             4    4[COMMON] unsigned char 
 11283 ;; Auto vars:     Size  Location     Type
 11284 ;;		None
 11285 ;; Return value:  Size  Location     Type
 11286 ;;		None               void
 11287 ;; Registers used:
 11288 ;;		wreg, status,2, status,0
 11289 ;; Tracked objects:
 11290 ;;		On entry : 0/0
 11291 ;;		On exit  : 0/0
 11292 ;;		Unchanged: 0/0
 11293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11294 ;;      Params:         8       0       0       0       0
 11295 ;;      Locals:         0       0       0       0       0
 11296 ;;      Temps:          4       0       0       0       0
 11297 ;;      Totals:        12       0       0       0       0
 11298 ;;Total ram usage:       12 bytes
 11299 ;; Hardware stack levels used: 1
 11300 ;; This function calls:
 11301 ;;		Nothing
 11302 ;; This function is called by:
 11303 ;;		_log
 11304 ;; This function uses a non-reentrant model
 11305 ;;
 11306                           
 11307  138E                     ___flge:	
 11308                           ;psect for function ___flge
 11309                           
 11310  138E                     i1l3353:	
 11311                           ;incstack = 0
 11312                           ; Regs used in ___flge: [wreg+status,2+status,0]
 11313                           
 11314  138E  3000               	movlw	0
 11315  138F  0570               	andwf	___flge@ff1,w
 11316  1390  00F8               	movwf	??___flge
 11317  1391  3000               	movlw	0
 11318  1392  0571               	andwf	___flge@ff1+1,w
 11319  1393  00F9               	movwf	??___flge+1
 11320  1394  3080               	movlw	128
 11321  1395  0572               	andwf	___flge@ff1+2,w
 11322  1396  00FA               	movwf	??___flge+2
 11323  1397  307F               	movlw	127
 11324  1398  0573               	andwf	___flge@ff1+3,w
 11325  1399  00FB               	movwf	??___flge+3
 11326  139A  087B               	movf	??___flge+3,w
 11327  139B  047A               	iorwf	??___flge+2,w
 11328  139C  0479               	iorwf	??___flge+1,w
 11329  139D  0478               	iorwf	??___flge,w
 11330  139E  1D03               	skipz
 11331  139F  2BA1               	goto	u391_21
 11332  13A0  2BA2               	goto	u391_20
 11333  13A1                     u391_21:
 11334  13A1  2BAA               	goto	i1l687
 11335  13A2                     u391_20:
 11336  13A2                     i1l3355:
 11337  13A2  3000               	movlw	0
 11338  13A3  00F3               	movwf	___flge@ff1+3
 11339  13A4  3000               	movlw	0
 11340  13A5  00F2               	movwf	___flge@ff1+2
 11341  13A6  3000               	movlw	0
 11342  13A7  00F1               	movwf	___flge@ff1+1
 11343  13A8  3000               	movlw	0
 11344  13A9  00F0               	movwf	___flge@ff1
 11345  13AA                     i1l687:
 11346  13AA  3000               	movlw	0
 11347  13AB  0574               	andwf	___flge@ff2,w
 11348  13AC  00F8               	movwf	??___flge
 11349  13AD  3000               	movlw	0
 11350  13AE  0575               	andwf	___flge@ff2+1,w
 11351  13AF  00F9               	movwf	??___flge+1
 11352  13B0  3080               	movlw	128
 11353  13B1  0576               	andwf	___flge@ff2+2,w
 11354  13B2  00FA               	movwf	??___flge+2
 11355  13B3  307F               	movlw	127
 11356  13B4  0577               	andwf	___flge@ff2+3,w
 11357  13B5  00FB               	movwf	??___flge+3
 11358  13B6  087B               	movf	??___flge+3,w
 11359  13B7  047A               	iorwf	??___flge+2,w
 11360  13B8  0479               	iorwf	??___flge+1,w
 11361  13B9  0478               	iorwf	??___flge,w
 11362  13BA  1D03               	skipz
 11363  13BB  2BBD               	goto	u392_21
 11364  13BC  2BBE               	goto	u392_20
 11365  13BD                     u392_21:
 11366  13BD  2BC6               	goto	i1l3359
 11367  13BE                     u392_20:
 11368  13BE                     i1l3357:
 11369  13BE  3000               	movlw	0
 11370  13BF  00F7               	movwf	___flge@ff2+3
 11371  13C0  3000               	movlw	0
 11372  13C1  00F6               	movwf	___flge@ff2+2
 11373  13C2  3000               	movlw	0
 11374  13C3  00F5               	movwf	___flge@ff2+1
 11375  13C4  3000               	movlw	0
 11376  13C5  00F4               	movwf	___flge@ff2
 11377  13C6                     i1l3359:
 11378  13C6  1FF3               	btfss	___flge@ff1+3,7
 11379  13C7  2BC9               	goto	u393_21
 11380  13C8  2BCA               	goto	u393_20
 11381  13C9                     u393_21:
 11382  13C9  2BEE               	goto	i1l3363
 11383  13CA                     u393_20:
 11384  13CA                     i1l3361:
 11385  13CA  3000               	movlw	0
 11386  13CB  00F8               	movwf	??___flge
 11387  13CC  3000               	movlw	0
 11388  13CD  00F9               	movwf	??___flge+1
 11389  13CE  3000               	movlw	0
 11390  13CF  00FA               	movwf	??___flge+2
 11391  13D0  3080               	movlw	128
 11392  13D1  00FB               	movwf	??___flge+3
 11393  13D2  0870               	movf	___flge@ff1,w
 11394  13D3  02F8               	subwf	??___flge,f
 11395  13D4  0871               	movf	___flge@ff1+1,w
 11396  13D5  1C03               	skipc
 11397  13D6  0F71               	incfsz	___flge@ff1+1,w
 11398  13D7  2BD9               	goto	u394_21
 11399  13D8  2BDA               	goto	u394_22
 11400  13D9                     u394_21:
 11401  13D9  02F9               	subwf	??___flge+1,f
 11402  13DA                     u394_22:
 11403  13DA  0872               	movf	___flge@ff1+2,w
 11404  13DB  1C03               	skipc
 11405  13DC  0F72               	incfsz	___flge@ff1+2,w
 11406  13DD  2BDF               	goto	u394_23
 11407  13DE  2BE0               	goto	u394_24
 11408  13DF                     u394_23:
 11409  13DF  02FA               	subwf	??___flge+2,f
 11410  13E0                     u394_24:
 11411  13E0  0873               	movf	___flge@ff1+3,w
 11412  13E1  1C03               	skipc
 11413  13E2  0F73               	incfsz	___flge@ff1+3,w
 11414  13E3  2BE5               	goto	u394_25
 11415  13E4  2BE6               	goto	u394_26
 11416  13E5                     u394_25:
 11417  13E5  02FB               	subwf	??___flge+3,f
 11418  13E6                     u394_26:
 11419  13E6  087B               	movf	??___flge+3,w
 11420  13E7  00F3               	movwf	___flge@ff1+3
 11421  13E8  087A               	movf	??___flge+2,w
 11422  13E9  00F2               	movwf	___flge@ff1+2
 11423  13EA  0879               	movf	??___flge+1,w
 11424  13EB  00F1               	movwf	___flge@ff1+1
 11425  13EC  0878               	movf	??___flge,w
 11426  13ED  00F0               	movwf	___flge@ff1
 11427  13EE                     i1l3363:
 11428  13EE  1FF7               	btfss	___flge@ff2+3,7
 11429  13EF  2BF1               	goto	u395_21
 11430  13F0  2BF2               	goto	u395_20
 11431  13F1                     u395_21:
 11432  13F1  2C16               	goto	i1l690
 11433  13F2                     u395_20:
 11434  13F2                     i1l3365:
 11435  13F2  3000               	movlw	0
 11436  13F3  00F8               	movwf	??___flge
 11437  13F4  3000               	movlw	0
 11438  13F5  00F9               	movwf	??___flge+1
 11439  13F6  3000               	movlw	0
 11440  13F7  00FA               	movwf	??___flge+2
 11441  13F8  3080               	movlw	128
 11442  13F9  00FB               	movwf	??___flge+3
 11443  13FA  0874               	movf	___flge@ff2,w
 11444  13FB  02F8               	subwf	??___flge,f
 11445  13FC  0875               	movf	___flge@ff2+1,w
 11446  13FD  1C03               	skipc
 11447  13FE  0F75               	incfsz	___flge@ff2+1,w
 11448  13FF  2C01               	goto	u396_21
 11449  1400  2C02               	goto	u396_22
 11450  1401                     u396_21:
 11451  1401  02F9               	subwf	??___flge+1,f
 11452  1402                     u396_22:
 11453  1402  0876               	movf	___flge@ff2+2,w
 11454  1403  1C03               	skipc
 11455  1404  0F76               	incfsz	___flge@ff2+2,w
 11456  1405  2C07               	goto	u396_23
 11457  1406  2C08               	goto	u396_24
 11458  1407                     u396_23:
 11459  1407  02FA               	subwf	??___flge+2,f
 11460  1408                     u396_24:
 11461  1408  0877               	movf	___flge@ff2+3,w
 11462  1409  1C03               	skipc
 11463  140A  0F77               	incfsz	___flge@ff2+3,w
 11464  140B  2C0D               	goto	u396_25
 11465  140C  2C0E               	goto	u396_26
 11466  140D                     u396_25:
 11467  140D  02FB               	subwf	??___flge+3,f
 11468  140E                     u396_26:
 11469  140E  087B               	movf	??___flge+3,w
 11470  140F  00F7               	movwf	___flge@ff2+3
 11471  1410  087A               	movf	??___flge+2,w
 11472  1411  00F6               	movwf	___flge@ff2+2
 11473  1412  0879               	movf	??___flge+1,w
 11474  1413  00F5               	movwf	___flge@ff2+1
 11475  1414  0878               	movf	??___flge,w
 11476  1415  00F4               	movwf	___flge@ff2
 11477  1416                     i1l690:
 11478  1416  3080               	movlw	128
 11479  1417  06F3               	xorwf	___flge@ff1+3,f
 11480  1418  3080               	movlw	128
 11481  1419  06F7               	xorwf	___flge@ff2+3,f
 11482  141A  0877               	movf	___flge@ff2+3,w
 11483  141B  0273               	subwf	___flge@ff1+3,w
 11484  141C  1D03               	skipz
 11485  141D  2C28               	goto	u397_25
 11486  141E  0876               	movf	___flge@ff2+2,w
 11487  141F  0272               	subwf	___flge@ff1+2,w
 11488  1420  1D03               	skipz
 11489  1421  2C28               	goto	u397_25
 11490  1422  0875               	movf	___flge@ff2+1,w
 11491  1423  0271               	subwf	___flge@ff1+1,w
 11492  1424  1D03               	skipz
 11493  1425  2C28               	goto	u397_25
 11494  1426  0874               	movf	___flge@ff2,w
 11495  1427  0270               	subwf	___flge@ff1,w
 11496  1428                     u397_25:
 11497  1428  1803               	skipnc
 11498  1429  2C2B               	goto	u397_21
 11499  142A  2C2C               	goto	u397_20
 11500  142B                     u397_21:
 11501  142B  2C2E               	goto	i1l3369
 11502  142C                     u397_20:
 11503  142C                     i1l3367:
 11504  142C  1003               	clrc
 11505  142D  2C2F               	goto	i1l691
 11506  142E                     i1l3369:
 11507  142E  1403               	setc
 11508  142F                     i1l691:
 11509  142F  0008               	return
 11510  1430                     __end_of___flge:
 11511                           
 11512                           	psect	text43
 11513  1B55                     __ptext43:	
 11514 ;; *************** function _adc_read *****************
 11515 ;; Defined at:
 11516 ;;		line 66 in file "adc.c"
 11517 ;; Parameters:    Size  Location     Type
 11518 ;;		None
 11519 ;; Auto vars:     Size  Location     Type
 11520 ;;		None
 11521 ;; Return value:  Size  Location     Type
 11522 ;;                  2    0[COMMON] unsigned int 
 11523 ;; Registers used:
 11524 ;;		wreg
 11525 ;; Tracked objects:
 11526 ;;		On entry : 0/0
 11527 ;;		On exit  : 0/0
 11528 ;;		Unchanged: 0/0
 11529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11530 ;;      Params:         2       0       0       0       0
 11531 ;;      Locals:         0       0       0       0       0
 11532 ;;      Temps:          0       0       0       0       0
 11533 ;;      Totals:         2       0       0       0       0
 11534 ;;Total ram usage:        2 bytes
 11535 ;; Hardware stack levels used: 1
 11536 ;; This function calls:
 11537 ;;		Nothing
 11538 ;; This function is called by:
 11539 ;;		_slave
 11540 ;; This function uses a non-reentrant model
 11541 ;;
 11542                           
 11543  1B55                     _adc_read:	
 11544                           ;psect for function _adc_read
 11545                           
 11546  1B55                     i1l3625:	
 11547                           ;incstack = 0
 11548                           ; Regs used in _adc_read: [wreg]
 11549                           
 11550                           
 11551                           ;adc.c: 67:     PIR1bits.ADIF = 0;
 11552  1B55  1283               	bcf	3,5	;RP0=0, select bank0
 11553  1B56  1303               	bcf	3,6	;RP1=0, select bank0
 11554  1B57  130C               	bcf	12,6	;volatile
 11555  1B58                     i1l3627:
 11556                           
 11557                           ;adc.c: 68:     return ((ADRESH << 8) + ADRESL);
 11558  1B58  081E               	movf	30,w	;volatile
 11559  1B59  00F1               	movwf	?_adc_read+1
 11560  1B5A  1683               	bsf	3,5	;RP0=1, select bank1
 11561  1B5B  1303               	bcf	3,6	;RP1=0, select bank1
 11562  1B5C  081E               	movf	30,w	;volatile
 11563  1B5D  00F0               	movwf	?_adc_read
 11564  1B5E                     i1l285:
 11565  1B5E  0008               	return
 11566  1B5F                     __end_of_adc_read:
 11567                           
 11568                           	psect	text44
 11569  1D91                     __ptext44:	
 11570 ;; *************** function ___lwdiv *****************
 11571 ;; Defined at:
 11572 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\lwdiv.c"
 11573 ;; Parameters:    Size  Location     Type
 11574 ;;  divisor         2    0[COMMON] unsigned int 
 11575 ;;  dividend        2    2[COMMON] unsigned int 
 11576 ;; Auto vars:     Size  Location     Type
 11577 ;;  quotient        2    5[COMMON] unsigned int 
 11578 ;;  counter         1    7[COMMON] unsigned char 
 11579 ;; Return value:  Size  Location     Type
 11580 ;;                  2    0[COMMON] unsigned int 
 11581 ;; Registers used:
 11582 ;;		wreg, status,2, status,0
 11583 ;; Tracked objects:
 11584 ;;		On entry : 0/0
 11585 ;;		On exit  : 0/0
 11586 ;;		Unchanged: 0/0
 11587 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11588 ;;      Params:         4       0       0       0       0
 11589 ;;      Locals:         3       0       0       0       0
 11590 ;;      Temps:          1       0       0       0       0
 11591 ;;      Totals:         8       0       0       0       0
 11592 ;;Total ram usage:        8 bytes
 11593 ;; Hardware stack levels used: 1
 11594 ;; This function calls:
 11595 ;;		Nothing
 11596 ;; This function is called by:
 11597 ;;		_slave
 11598 ;; This function uses a non-reentrant model
 11599 ;;
 11600                           
 11601  1D91                     ___lwdiv:	
 11602                           ;psect for function ___lwdiv
 11603                           
 11604  1D91                     i1l3905:	
 11605                           ;incstack = 0
 11606                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 11607                           
 11608  1D91  01F5               	clrf	___lwdiv@quotient
 11609  1D92  01F6               	clrf	___lwdiv@quotient+1
 11610  1D93                     i1l3907:
 11611  1D93  0870               	movf	___lwdiv@divisor,w
 11612  1D94  0471               	iorwf	___lwdiv@divisor+1,w
 11613  1D95  1903               	btfsc	3,2
 11614  1D96  2D98               	goto	u493_21
 11615  1D97  2D99               	goto	u493_20
 11616  1D98                     u493_21:
 11617  1D98  2DD0               	goto	i1l3927
 11618  1D99                     u493_20:
 11619  1D99                     i1l3909:
 11620  1D99  01F7               	clrf	___lwdiv@counter
 11621  1D9A  0AF7               	incf	___lwdiv@counter,f
 11622  1D9B  2DA7               	goto	i1l3915
 11623  1D9C                     i1l3911:
 11624  1D9C  3001               	movlw	1
 11625  1D9D                     u494_25:
 11626  1D9D  1003               	clrc
 11627  1D9E  0DF0               	rlf	___lwdiv@divisor,f
 11628  1D9F  0DF1               	rlf	___lwdiv@divisor+1,f
 11629  1DA0  3EFF               	addlw	-1
 11630  1DA1  1D03               	skipz
 11631  1DA2  2D9D               	goto	u494_25
 11632  1DA3                     i1l3913:
 11633  1DA3  3001               	movlw	1
 11634  1DA4  00F4               	movwf	??___lwdiv
 11635  1DA5  0874               	movf	??___lwdiv,w
 11636  1DA6  07F7               	addwf	___lwdiv@counter,f
 11637  1DA7                     i1l3915:
 11638  1DA7  1FF1               	btfss	___lwdiv@divisor+1,7
 11639  1DA8  2DAA               	goto	u495_21
 11640  1DA9  2DAB               	goto	u495_20
 11641  1DAA                     u495_21:
 11642  1DAA  2D9C               	goto	i1l3911
 11643  1DAB                     u495_20:
 11644  1DAB                     i1l3917:
 11645  1DAB  3001               	movlw	1
 11646  1DAC                     u496_25:
 11647  1DAC  1003               	clrc
 11648  1DAD  0DF5               	rlf	___lwdiv@quotient,f
 11649  1DAE  0DF6               	rlf	___lwdiv@quotient+1,f
 11650  1DAF  3EFF               	addlw	-1
 11651  1DB0  1D03               	skipz
 11652  1DB1  2DAC               	goto	u496_25
 11653  1DB2  0871               	movf	___lwdiv@divisor+1,w
 11654  1DB3  0273               	subwf	___lwdiv@dividend+1,w
 11655  1DB4  1D03               	skipz
 11656  1DB5  2DB8               	goto	u497_25
 11657  1DB6  0870               	movf	___lwdiv@divisor,w
 11658  1DB7  0272               	subwf	___lwdiv@dividend,w
 11659  1DB8                     u497_25:
 11660  1DB8  1C03               	skipc
 11661  1DB9  2DBB               	goto	u497_21
 11662  1DBA  2DBC               	goto	u497_20
 11663  1DBB                     u497_21:
 11664  1DBB  2DC3               	goto	i1l3923
 11665  1DBC                     u497_20:
 11666  1DBC                     i1l3919:
 11667  1DBC  0870               	movf	___lwdiv@divisor,w
 11668  1DBD  02F2               	subwf	___lwdiv@dividend,f
 11669  1DBE  0871               	movf	___lwdiv@divisor+1,w
 11670  1DBF  1C03               	skipc
 11671  1DC0  03F3               	decf	___lwdiv@dividend+1,f
 11672  1DC1  02F3               	subwf	___lwdiv@dividend+1,f
 11673  1DC2                     i1l3921:
 11674  1DC2  1475               	bsf	___lwdiv@quotient,0
 11675  1DC3                     i1l3923:
 11676  1DC3  3001               	movlw	1
 11677  1DC4                     u498_25:
 11678  1DC4  1003               	clrc
 11679  1DC5  0CF1               	rrf	___lwdiv@divisor+1,f
 11680  1DC6  0CF0               	rrf	___lwdiv@divisor,f
 11681  1DC7  3EFF               	addlw	-1
 11682  1DC8  1D03               	skipz
 11683  1DC9  2DC4               	goto	u498_25
 11684  1DCA                     i1l3925:
 11685  1DCA  3001               	movlw	1
 11686  1DCB  02F7               	subwf	___lwdiv@counter,f
 11687  1DCC  1D03               	btfss	3,2
 11688  1DCD  2DCF               	goto	u499_21
 11689  1DCE  2DD0               	goto	u499_20
 11690  1DCF                     u499_21:
 11691  1DCF  2DAB               	goto	i1l3917
 11692  1DD0                     u499_20:
 11693  1DD0                     i1l3927:
 11694  1DD0  0876               	movf	___lwdiv@quotient+1,w
 11695  1DD1  00F1               	movwf	?___lwdiv+1
 11696  1DD2  0875               	movf	___lwdiv@quotient,w
 11697  1DD3  00F0               	movwf	?___lwdiv
 11698  1DD4                     i1l785:
 11699  1DD4  0008               	return
 11700  1DD5                     __end_of___lwdiv:
 11701                           
 11702                           	psect	text45
 11703  1C2B                     __ptext45:	
 11704 ;; *************** function ___flsub *****************
 11705 ;; Defined at:
 11706 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcadd.c"
 11707 ;; Parameters:    Size  Location     Type
 11708 ;;  a               4   69[BANK0 ] unsigned int 
 11709 ;;  b               4   73[BANK0 ] unsigned int 
 11710 ;; Auto vars:     Size  Location     Type
 11711 ;;		None
 11712 ;; Return value:  Size  Location     Type
 11713 ;;                  4   69[BANK0 ] unsigned int 
 11714 ;; Registers used:
 11715 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
 11716 ;; Tracked objects:
 11717 ;;		On entry : 0/0
 11718 ;;		On exit  : 0/0
 11719 ;;		Unchanged: 0/0
 11720 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11721 ;;      Params:         0       8       0       0       0
 11722 ;;      Locals:         0       0       0       0       0
 11723 ;;      Temps:          0       0       0       0       0
 11724 ;;      Totals:         0       8       0       0       0
 11725 ;;Total ram usage:        8 bytes
 11726 ;; Hardware stack levels used: 1
 11727 ;; Hardware stack levels required when called: 1
 11728 ;; This function calls:
 11729 ;;		___fladd
 11730 ;; This function is called by:
 11731 ;;		_slave
 11732 ;; This function uses a non-reentrant model
 11733 ;;
 11734                           
 11735  1C2B                     ___flsub:	
 11736                           ;psect for function ___flsub
 11737                           
 11738  1C2B                     i1l3931:	
 11739                           ;incstack = 0
 11740                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
 11741                           
 11742  1C2B  3080               	movlw	128
 11743  1C2C  1283               	bcf	3,5	;RP0=0, select bank0
 11744  1C2D  1303               	bcf	3,6	;RP1=0, select bank0
 11745  1C2E  06E8               	xorwf	___flsub@a+3,f
 11746  1C2F                     i1l3933:
 11747  1C2F  086C               	movf	___flsub@b+3,w
 11748  1C30  00AD               	movwf	___fladd@b+3
 11749  1C31  086B               	movf	___flsub@b+2,w
 11750  1C32  00AC               	movwf	___fladd@b+2
 11751  1C33  086A               	movf	___flsub@b+1,w
 11752  1C34  00AB               	movwf	___fladd@b+1
 11753  1C35  0869               	movf	___flsub@b,w
 11754  1C36  00AA               	movwf	___fladd@b
 11755  1C37  0868               	movf	___flsub@a+3,w
 11756  1C38  00B1               	movwf	___fladd@a+3
 11757  1C39  0867               	movf	___flsub@a+2,w
 11758  1C3A  00B0               	movwf	___fladd@a+2
 11759  1C3B  0866               	movf	___flsub@a+1,w
 11760  1C3C  00AF               	movwf	___fladd@a+1
 11761  1C3D  0865               	movf	___flsub@a,w
 11762  1C3E  00AE               	movwf	___fladd@a
 11763  1C3F  120A  158A  203A  160A  158A  	fcall	___fladd
 11764  1C44  1283               	bcf	3,5	;RP0=0, select bank0
 11765  1C45  1303               	bcf	3,6	;RP1=0, select bank0
 11766  1C46  082D               	movf	?___fladd+3,w
 11767  1C47  00E8               	movwf	?___flsub+3
 11768  1C48  082C               	movf	?___fladd+2,w
 11769  1C49  00E7               	movwf	?___flsub+2
 11770  1C4A  082B               	movf	?___fladd+1,w
 11771  1C4B  00E6               	movwf	?___flsub+1
 11772  1C4C  082A               	movf	?___fladd,w
 11773  1C4D  00E5               	movwf	?___flsub
 11774  1C4E                     i1l852:
 11775  1C4E  0008               	return
 11776  1C4F                     __end_of___flsub:
 11777                           
 11778                           	psect	text46
 11779  083A                     __ptext46:	
 11780 ;; *************** function ___fladd *****************
 11781 ;; Defined at:
 11782 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.35\pic\sources\c90\common\sprcadd.c"
 11783 ;; Parameters:    Size  Location     Type
 11784 ;;  b               4   10[BANK0 ] unsigned int 
 11785 ;;  a               4   14[BANK0 ] unsigned int 
 11786 ;; Auto vars:     Size  Location     Type
 11787 ;;  grs             1   29[BANK0 ] unsigned char 
 11788 ;;  bexp            1   28[BANK0 ] unsigned char 
 11789 ;;  aexp            1   27[BANK0 ] unsigned char 
 11790 ;;  signs           1   26[BANK0 ] unsigned char 
 11791 ;; Return value:  Size  Location     Type
 11792 ;;                  4   10[BANK0 ] unsigned char 
 11793 ;; Registers used:
 11794 ;;		wreg, status,2, status,0, btemp+1
 11795 ;; Tracked objects:
 11796 ;;		On entry : 0/0
 11797 ;;		On exit  : 0/0
 11798 ;;		Unchanged: 0/0
 11799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11800 ;;      Params:         0       8       0       0       0
 11801 ;;      Locals:         0       4       0       0       0
 11802 ;;      Temps:          0       8       0       0       0
 11803 ;;      Totals:         0      20       0       0       0
 11804 ;;Total ram usage:       20 bytes
 11805 ;; Hardware stack levels used: 1
 11806 ;; This function calls:
 11807 ;;		Nothing
 11808 ;; This function is called by:
 11809 ;;		_slave
 11810 ;;		_map
 11811 ;;		___flsub
 11812 ;;		_log
 11813 ;;		_eval_poly
 11814 ;; This function uses a non-reentrant model
 11815 ;;
 11816                           
 11817  083A                     ___fladd:	
 11818                           ;psect for function ___fladd
 11819                           
 11820  083A                     i1l2743:	
 11821                           ;incstack = 0
 11822                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
 11823                           
 11824  083A  1283               	bcf	3,5	;RP0=0, select bank0
 11825  083B  1303               	bcf	3,6	;RP1=0, select bank0
 11826  083C  082D               	movf	___fladd@b+3,w
 11827  083D  3980               	andlw	128
 11828  083E  00B2               	movwf	??___fladd
 11829  083F  0832               	movf	??___fladd,w
 11830  0840  00BA               	movwf	___fladd@signs
 11831  0841                     i1l2745:
 11832  0841  082D               	movf	___fladd@b+3,w
 11833  0842  00B2               	movwf	??___fladd
 11834  0843  0732               	addwf	??___fladd,w
 11835  0844  00B3               	movwf	??___fladd+1
 11836  0845  0833               	movf	??___fladd+1,w
 11837  0846  00BC               	movwf	___fladd@bexp
 11838  0847                     i1l2747:
 11839  0847  1FAC               	btfss	___fladd@b+2,7
 11840  0848  284A               	goto	u278_21
 11841  0849  284B               	goto	u278_20
 11842  084A                     u278_21:
 11843  084A  284C               	goto	i1l2751
 11844  084B                     u278_20:
 11845  084B                     i1l2749:
 11846  084B  143C               	bsf	___fladd@bexp,0
 11847  084C                     i1l2751:
 11848  084C  083C               	movf	___fladd@bexp,w
 11849  084D  1903               	btfsc	3,2
 11850  084E  2850               	goto	u279_21
 11851  084F  2851               	goto	u279_20
 11852  0850                     u279_21:
 11853  0850  2861               	goto	i1l2761
 11854  0851                     u279_20:
 11855  0851                     i1l2753:
 11856  0851  0A3C               	incf	___fladd@bexp,w
 11857  0852  1D03               	btfss	3,2
 11858  0853  2855               	goto	u280_21
 11859  0854  2856               	goto	u280_20
 11860  0855                     u280_21:
 11861  0855  285E               	goto	i1l2757
 11862  0856                     u280_20:
 11863  0856                     i1l2755:
 11864  0856  3000               	movlw	0
 11865  0857  00AD               	movwf	___fladd@b+3
 11866  0858  3000               	movlw	0
 11867  0859  00AC               	movwf	___fladd@b+2
 11868  085A  3000               	movlw	0
 11869  085B  00AB               	movwf	___fladd@b+1
 11870  085C  3000               	movlw	0
 11871  085D  00AA               	movwf	___fladd@b
 11872  085E                     i1l2757:
 11873  085E  17AC               	bsf	___fladd@b+2,7
 11874  085F                     i1l2759:
 11875  085F  01AD               	clrf	___fladd@b+3
 11876  0860  2869               	goto	i1l2763
 11877  0861                     i1l2761:
 11878  0861  3000               	movlw	0
 11879  0862  00AD               	movwf	___fladd@b+3
 11880  0863  3000               	movlw	0
 11881  0864  00AC               	movwf	___fladd@b+2
 11882  0865  3000               	movlw	0
 11883  0866  00AB               	movwf	___fladd@b+1
 11884  0867  3000               	movlw	0
 11885  0868  00AA               	movwf	___fladd@b
 11886  0869                     i1l2763:
 11887  0869  0831               	movf	___fladd@a+3,w
 11888  086A  3980               	andlw	128
 11889  086B  00B2               	movwf	??___fladd
 11890  086C  0832               	movf	??___fladd,w
 11891  086D  00BB               	movwf	___fladd@aexp
 11892  086E                     i1l2765:
 11893  086E  083B               	movf	___fladd@aexp,w
 11894  086F  063A               	xorwf	___fladd@signs,w
 11895  0870  1903               	skipnz
 11896  0871  2873               	goto	u281_21
 11897  0872  2874               	goto	u281_20
 11898  0873                     u281_21:
 11899  0873  2875               	goto	i1l2769
 11900  0874                     u281_20:
 11901  0874                     i1l2767:
 11902  0874  173A               	bsf	___fladd@signs,6
 11903  0875                     i1l2769:
 11904  0875  0831               	movf	___fladd@a+3,w
 11905  0876  00B2               	movwf	??___fladd
 11906  0877  0732               	addwf	??___fladd,w
 11907  0878  00B3               	movwf	??___fladd+1
 11908  0879  0833               	movf	??___fladd+1,w
 11909  087A  00BB               	movwf	___fladd@aexp
 11910  087B                     i1l2771:
 11911  087B  1FB0               	btfss	___fladd@a+2,7
 11912  087C  287E               	goto	u282_21
 11913  087D  287F               	goto	u282_20
 11914  087E                     u282_21:
 11915  087E  2880               	goto	i1l2775
 11916  087F                     u282_20:
 11917  087F                     i1l2773:
 11918  087F  143B               	bsf	___fladd@aexp,0
 11919  0880                     i1l2775:
 11920  0880  083B               	movf	___fladd@aexp,w
 11921  0881  1903               	btfsc	3,2
 11922  0882  2884               	goto	u283_21
 11923  0883  2885               	goto	u283_20
 11924  0884                     u283_21:
 11925  0884  2895               	goto	i1l2785
 11926  0885                     u283_20:
 11927  0885                     i1l2777:
 11928  0885  0A3B               	incf	___fladd@aexp,w
 11929  0886  1D03               	btfss	3,2
 11930  0887  2889               	goto	u284_21
 11931  0888  288A               	goto	u284_20
 11932  0889                     u284_21:
 11933  0889  2892               	goto	i1l2781
 11934  088A                     u284_20:
 11935  088A                     i1l2779:
 11936  088A  3000               	movlw	0
 11937  088B  00B1               	movwf	___fladd@a+3
 11938  088C  3000               	movlw	0
 11939  088D  00B0               	movwf	___fladd@a+2
 11940  088E  3000               	movlw	0
 11941  088F  00AF               	movwf	___fladd@a+1
 11942  0890  3000               	movlw	0
 11943  0891  00AE               	movwf	___fladd@a
 11944  0892                     i1l2781:
 11945  0892  17B0               	bsf	___fladd@a+2,7
 11946  0893                     i1l2783:
 11947  0893  01B1               	clrf	___fladd@a+3
 11948  0894  289D               	goto	i1l806
 11949  0895                     i1l2785:
 11950  0895  3000               	movlw	0
 11951  0896  00B1               	movwf	___fladd@a+3
 11952  0897  3000               	movlw	0
 11953  0898  00B0               	movwf	___fladd@a+2
 11954  0899  3000               	movlw	0
 11955  089A  00AF               	movwf	___fladd@a+1
 11956  089B  3000               	movlw	0
 11957  089C  00AE               	movwf	___fladd@a
 11958  089D                     i1l806:
 11959  089D  083C               	movf	___fladd@bexp,w
 11960  089E  023B               	subwf	___fladd@aexp,w
 11961  089F  1803               	skipnc
 11962  08A0  28A2               	goto	u285_21
 11963  08A1  28A3               	goto	u285_20
 11964  08A2                     u285_21:
 11965  08A2  28E7               	goto	i1l2821
 11966  08A3                     u285_20:
 11967  08A3                     i1l2787:
 11968  08A3  1F3A               	btfss	___fladd@signs,6
 11969  08A4  28A6               	goto	u286_21
 11970  08A5  28A7               	goto	u286_20
 11971  08A6                     u286_21:
 11972  08A6  28AB               	goto	i1l2791
 11973  08A7                     u286_20:
 11974  08A7                     i1l2789:
 11975  08A7  3080               	movlw	128
 11976  08A8  00B2               	movwf	??___fladd
 11977  08A9  0832               	movf	??___fladd,w
 11978  08AA  06BA               	xorwf	___fladd@signs,f
 11979  08AB                     i1l2791:
 11980  08AB  083C               	movf	___fladd@bexp,w
 11981  08AC  00B2               	movwf	??___fladd
 11982  08AD  0832               	movf	??___fladd,w
 11983  08AE  00BD               	movwf	___fladd@grs
 11984  08AF                     i1l2793:
 11985  08AF  083B               	movf	___fladd@aexp,w
 11986  08B0  00B2               	movwf	??___fladd
 11987  08B1  0832               	movf	??___fladd,w
 11988  08B2  00BC               	movwf	___fladd@bexp
 11989  08B3                     i1l2795:
 11990  08B3  083D               	movf	___fladd@grs,w
 11991  08B4  00B2               	movwf	??___fladd
 11992  08B5  0832               	movf	??___fladd,w
 11993  08B6  00BB               	movwf	___fladd@aexp
 11994  08B7                     i1l2797:
 11995  08B7  082A               	movf	___fladd@b,w
 11996  08B8  00B2               	movwf	??___fladd
 11997  08B9  0832               	movf	??___fladd,w
 11998  08BA  00BD               	movwf	___fladd@grs
 11999  08BB                     i1l2799:
 12000  08BB  082E               	movf	___fladd@a,w
 12001  08BC  00B2               	movwf	??___fladd
 12002  08BD  0832               	movf	??___fladd,w
 12003  08BE  00AA               	movwf	___fladd@b
 12004  08BF                     i1l2801:
 12005  08BF  083D               	movf	___fladd@grs,w
 12006  08C0  00B2               	movwf	??___fladd
 12007  08C1  0832               	movf	??___fladd,w
 12008  08C2  00AE               	movwf	___fladd@a
 12009  08C3                     i1l2803:
 12010  08C3  082B               	movf	___fladd@b+1,w
 12011  08C4  00B2               	movwf	??___fladd
 12012  08C5  0832               	movf	??___fladd,w
 12013  08C6  00BD               	movwf	___fladd@grs
 12014  08C7                     i1l2805:
 12015  08C7  082F               	movf	___fladd@a+1,w
 12016  08C8  00B2               	movwf	??___fladd
 12017  08C9  0832               	movf	??___fladd,w
 12018  08CA  00AB               	movwf	___fladd@b+1
 12019  08CB                     i1l2807:
 12020  08CB  083D               	movf	___fladd@grs,w
 12021  08CC  00B2               	movwf	??___fladd
 12022  08CD  0832               	movf	??___fladd,w
 12023  08CE  00AF               	movwf	___fladd@a+1
 12024  08CF                     i1l2809:
 12025  08CF  082C               	movf	___fladd@b+2,w
 12026  08D0  00B2               	movwf	??___fladd
 12027  08D1  0832               	movf	??___fladd,w
 12028  08D2  00BD               	movwf	___fladd@grs
 12029  08D3                     i1l2811:
 12030  08D3  0830               	movf	___fladd@a+2,w
 12031  08D4  00B2               	movwf	??___fladd
 12032  08D5  0832               	movf	??___fladd,w
 12033  08D6  00AC               	movwf	___fladd@b+2
 12034  08D7                     i1l2813:
 12035  08D7  083D               	movf	___fladd@grs,w
 12036  08D8  00B2               	movwf	??___fladd
 12037  08D9  0832               	movf	??___fladd,w
 12038  08DA  00B0               	movwf	___fladd@a+2
 12039  08DB                     i1l2815:
 12040  08DB  082D               	movf	___fladd@b+3,w
 12041  08DC  00B2               	movwf	??___fladd
 12042  08DD  0832               	movf	??___fladd,w
 12043  08DE  00BD               	movwf	___fladd@grs
 12044  08DF                     i1l2817:
 12045  08DF  0831               	movf	___fladd@a+3,w
 12046  08E0  00B2               	movwf	??___fladd
 12047  08E1  0832               	movf	??___fladd,w
 12048  08E2  00AD               	movwf	___fladd@b+3
 12049  08E3                     i1l2819:
 12050  08E3  083D               	movf	___fladd@grs,w
 12051  08E4  00B2               	movwf	??___fladd
 12052  08E5  0832               	movf	??___fladd,w
 12053  08E6  00B1               	movwf	___fladd@a+3
 12054  08E7                     i1l2821:
 12055  08E7  01BD               	clrf	___fladd@grs
 12056  08E8                     i1l2823:
 12057  08E8  083B               	movf	___fladd@aexp,w
 12058  08E9  00B2               	movwf	??___fladd
 12059  08EA  01B3               	clrf	??___fladd+1
 12060  08EB  0833               	movf	??___fladd+1,w
 12061  08EC  00B5               	movwf	??___fladd+3
 12062  08ED  083C               	movf	___fladd@bexp,w
 12063  08EE  0232               	subwf	??___fladd,w
 12064  08EF  00B4               	movwf	??___fladd+2
 12065  08F0  1C03               	skipc
 12066  08F1  03B5               	decf	??___fladd+3,f
 12067  08F2  0835               	movf	??___fladd+3,w
 12068  08F3  3A80               	xorlw	128
 12069  08F4  00FF               	movwf	btemp+1
 12070  08F5  3080               	movlw	128
 12071  08F6  027F               	subwf	btemp+1,w
 12072  08F7  1D03               	skipz
 12073  08F8  28FB               	goto	u287_25
 12074  08F9  301A               	movlw	26
 12075  08FA  0234               	subwf	??___fladd+2,w
 12076  08FB                     u287_25:
 12077  08FB  1C03               	skipc
 12078  08FC  28FE               	goto	u287_21
 12079  08FD  28FF               	goto	u287_20
 12080  08FE                     u287_21:
 12081  08FE  293C               	goto	i1l2839
 12082  08FF                     u287_20:
 12083  08FF                     i1l2825:
 12084  08FF  1283               	bcf	3,5	;RP0=0, select bank0
 12085  0900  1303               	bcf	3,6	;RP1=0, select bank0
 12086  0901  082D               	movf	___fladd@b+3,w
 12087  0902  042C               	iorwf	___fladd@b+2,w
 12088  0903  042B               	iorwf	___fladd@b+1,w
 12089  0904  042A               	iorwf	___fladd@b,w
 12090  0905  1D03               	skipz
 12091  0906  2908               	goto	u288_21
 12092  0907  290A               	goto	u288_20
 12093  0908                     u288_21:
 12094  0908  3001               	movlw	1
 12095  0909  290B               	goto	u289_20
 12096  090A                     u288_20:
 12097  090A  3000               	movlw	0
 12098  090B                     u289_20:
 12099  090B  00B2               	movwf	??___fladd
 12100  090C  0832               	movf	??___fladd,w
 12101  090D  00BD               	movwf	___fladd@grs
 12102  090E  3000               	movlw	0
 12103  090F  00AD               	movwf	___fladd@b+3
 12104  0910  3000               	movlw	0
 12105  0911  00AC               	movwf	___fladd@b+2
 12106  0912  3000               	movlw	0
 12107  0913  00AB               	movwf	___fladd@b+1
 12108  0914  3000               	movlw	0
 12109  0915  00AA               	movwf	___fladd@b
 12110  0916  083B               	movf	___fladd@aexp,w
 12111  0917  00B2               	movwf	??___fladd
 12112  0918  0832               	movf	??___fladd,w
 12113  0919  00BC               	movwf	___fladd@bexp
 12114  091A  2944               	goto	i1l810
 12115  091B                     i1l812:
 12116  091B  1C3D               	btfss	___fladd@grs,0
 12117  091C  291E               	goto	u290_21
 12118  091D  291F               	goto	u290_20
 12119  091E                     u290_21:
 12120  091E  2928               	goto	i1l2829
 12121  091F                     u290_20:
 12122  091F                     i1l2827:
 12123  091F  083D               	movf	___fladd@grs,w
 12124  0920  00B2               	movwf	??___fladd
 12125  0921  1003               	clrc
 12126  0922  0C32               	rrf	??___fladd,w
 12127  0923  3801               	iorlw	1
 12128  0924  00B3               	movwf	??___fladd+1
 12129  0925  0833               	movf	??___fladd+1,w
 12130  0926  00BD               	movwf	___fladd@grs
 12131  0927  292A               	goto	i1l2831
 12132  0928                     i1l2829:
 12133  0928  1003               	clrc
 12134  0929  0CBD               	rrf	___fladd@grs,f
 12135  092A                     i1l2831:
 12136  092A  1C2A               	btfss	___fladd@b,0
 12137  092B  292D               	goto	u291_21
 12138  092C  292E               	goto	u291_20
 12139  092D                     u291_21:
 12140  092D  292F               	goto	i1l2835
 12141  092E                     u291_20:
 12142  092E                     i1l2833:
 12143  092E  17BD               	bsf	___fladd@grs,7
 12144  092F                     i1l2835:
 12145  092F  3001               	movlw	1
 12146  0930  00B2               	movwf	??___fladd
 12147  0931                     u292_25:
 12148  0931  0D2D               	rlf	___fladd@b+3,w
 12149  0932  0CAD               	rrf	___fladd@b+3,f
 12150  0933  0CAC               	rrf	___fladd@b+2,f
 12151  0934  0CAB               	rrf	___fladd@b+1,f
 12152  0935  0CAA               	rrf	___fladd@b,f
 12153  0936  0BB2               	decfsz	??___fladd& (0+127),f
 12154  0937  2931               	goto	u292_25
 12155  0938                     i1l2837:
 12156  0938  3001               	movlw	1
 12157  0939  00B2               	movwf	??___fladd
 12158  093A  0832               	movf	??___fladd,w
 12159  093B  07BC               	addwf	___fladd@bexp,f
 12160  093C                     i1l2839:
 12161  093C  1283               	bcf	3,5	;RP0=0, select bank0
 12162  093D  1303               	bcf	3,6	;RP1=0, select bank0
 12163  093E  083B               	movf	___fladd@aexp,w
 12164  093F  023C               	subwf	___fladd@bexp,w
 12165  0940  1C03               	skipc
 12166  0941  2943               	goto	u293_21
 12167  0942  2944               	goto	u293_20
 12168  0943                     u293_21:
 12169  0943  291B               	goto	i1l812
 12170  0944                     u293_20:
 12171  0944                     i1l810:
 12172  0944  1B3A               	btfsc	___fladd@signs,6
 12173  0945  2947               	goto	u294_21
 12174  0946  2948               	goto	u294_20
 12175  0947                     u294_21:
 12176  0947  2993               	goto	i1l2865
 12177  0948                     u294_20:
 12178  0948                     i1l2841:
 12179  0948  083C               	movf	___fladd@bexp,w
 12180  0949  1D03               	btfss	3,2
 12181  094A  294C               	goto	u295_21
 12182  094B  294D               	goto	u295_20
 12183  094C                     u295_21:
 12184  094C  2956               	goto	i1l2847
 12185  094D                     u295_20:
 12186  094D                     i1l2843:
 12187  094D  3000               	movlw	0
 12188  094E  00AD               	movwf	?___fladd+3
 12189  094F  3000               	movlw	0
 12190  0950  00AC               	movwf	?___fladd+2
 12191  0951  3000               	movlw	0
 12192  0952  00AB               	movwf	?___fladd+1
 12193  0953  3000               	movlw	0
 12194  0954  00AA               	movwf	?___fladd
 12195  0955  2AC1               	goto	i1l819
 12196  0956                     i1l2847:
 12197  0956  082E               	movf	___fladd@a,w
 12198  0957  07AA               	addwf	___fladd@b,f
 12199  0958  082F               	movf	___fladd@a+1,w
 12200  0959  1103               	clrz
 12201  095A  1803               	skipnc
 12202  095B  3E01               	addlw	1
 12203  095C  1903               	skipnz
 12204  095D  295F               	goto	u296_21
 12205  095E  07AB               	addwf	___fladd@b+1,f
 12206  095F                     u296_21:
 12207  095F  0830               	movf	___fladd@a+2,w
 12208  0960  1103               	clrz
 12209  0961  1803               	skipnc
 12210  0962  3E01               	addlw	1
 12211  0963  1903               	skipnz
 12212  0964  2966               	goto	u296_22
 12213  0965  07AC               	addwf	___fladd@b+2,f
 12214  0966                     u296_22:
 12215  0966  0831               	movf	___fladd@a+3,w
 12216  0967  1103               	clrz
 12217  0968  1803               	skipnc
 12218  0969  3E01               	addlw	1
 12219  096A  1903               	skipnz
 12220  096B  296D               	goto	u296_23
 12221  096C  07AD               	addwf	___fladd@b+3,f
 12222  096D                     u296_23:
 12223  096D                     i1l2849:
 12224  096D  1C2D               	btfss	___fladd@b+3,0
 12225  096E  2970               	goto	u297_21
 12226  096F  2971               	goto	u297_20
 12227  0970                     u297_21:
 12228  0970  2A47               	goto	i1l2899
 12229  0971                     u297_20:
 12230  0971                     i1l2851:
 12231  0971  1C3D               	btfss	___fladd@grs,0
 12232  0972  2974               	goto	u298_21
 12233  0973  2975               	goto	u298_20
 12234  0974                     u298_21:
 12235  0974  297E               	goto	i1l2855
 12236  0975                     u298_20:
 12237  0975                     i1l2853:
 12238  0975  083D               	movf	___fladd@grs,w
 12239  0976  00B2               	movwf	??___fladd
 12240  0977  1003               	clrc
 12241  0978  0C32               	rrf	??___fladd,w
 12242  0979  3801               	iorlw	1
 12243  097A  00B3               	movwf	??___fladd+1
 12244  097B  0833               	movf	??___fladd+1,w
 12245  097C  00BD               	movwf	___fladd@grs
 12246  097D  2980               	goto	i1l2857
 12247  097E                     i1l2855:
 12248  097E  1003               	clrc
 12249  097F  0CBD               	rrf	___fladd@grs,f
 12250  0980                     i1l2857:
 12251  0980  1C2A               	btfss	___fladd@b,0
 12252  0981  2983               	goto	u299_21
 12253  0982  2984               	goto	u299_20
 12254  0983                     u299_21:
 12255  0983  2985               	goto	i1l2861
 12256  0984                     u299_20:
 12257  0984                     i1l2859:
 12258  0984  17BD               	bsf	___fladd@grs,7
 12259  0985                     i1l2861:
 12260  0985  3001               	movlw	1
 12261  0986  00B2               	movwf	??___fladd
 12262  0987                     u300_25:
 12263  0987  0D2D               	rlf	___fladd@b+3,w
 12264  0988  0CAD               	rrf	___fladd@b+3,f
 12265  0989  0CAC               	rrf	___fladd@b+2,f
 12266  098A  0CAB               	rrf	___fladd@b+1,f
 12267  098B  0CAA               	rrf	___fladd@b,f
 12268  098C  0BB2               	decfsz	??___fladd& (0+127),f
 12269  098D  2987               	goto	u300_25
 12270  098E                     i1l2863:
 12271  098E  3001               	movlw	1
 12272  098F  00B2               	movwf	??___fladd
 12273  0990  0832               	movf	??___fladd,w
 12274  0991  07BC               	addwf	___fladd@bexp,f
 12275  0992  2A47               	goto	i1l2899
 12276  0993                     i1l2865:
 12277  0993  082D               	movf	___fladd@b+3,w
 12278  0994  3A80               	xorlw	128
 12279  0995  00FF               	movwf	btemp+1
 12280  0996  0831               	movf	___fladd@a+3,w
 12281  0997  3A80               	xorlw	128
 12282  0998  027F               	subwf	btemp+1,w
 12283  0999  1D03               	skipz
 12284  099A  29A5               	goto	u301_23
 12285  099B  0830               	movf	___fladd@a+2,w
 12286  099C  022C               	subwf	___fladd@b+2,w
 12287  099D  1D03               	skipz
 12288  099E  29A5               	goto	u301_23
 12289  099F  082F               	movf	___fladd@a+1,w
 12290  09A0  022B               	subwf	___fladd@b+1,w
 12291  09A1  1D03               	skipz
 12292  09A2  29A5               	goto	u301_23
 12293  09A3  082E               	movf	___fladd@a,w
 12294  09A4  022A               	subwf	___fladd@b,w
 12295  09A5                     u301_23:
 12296  09A5  1803               	skipnc
 12297  09A6  29A8               	goto	u301_21
 12298  09A7  29A9               	goto	u301_20
 12299  09A8                     u301_21:
 12300  09A8  2A01               	goto	i1l2875
 12301  09A9                     u301_20:
 12302  09A9                     i1l2867:
 12303  09A9  30FF               	movlw	255
 12304  09AA  00B2               	movwf	??___fladd
 12305  09AB  30FF               	movlw	255
 12306  09AC  00B3               	movwf	??___fladd+1
 12307  09AD  30FF               	movlw	255
 12308  09AE  00B4               	movwf	??___fladd+2
 12309  09AF  30FF               	movlw	255
 12310  09B0  00B5               	movwf	??___fladd+3
 12311  09B1  082E               	movf	___fladd@a,w
 12312  09B2  00B6               	movwf	??___fladd+4
 12313  09B3  082F               	movf	___fladd@a+1,w
 12314  09B4  00B7               	movwf	??___fladd+5
 12315  09B5  0830               	movf	___fladd@a+2,w
 12316  09B6  00B8               	movwf	??___fladd+6
 12317  09B7  0831               	movf	___fladd@a+3,w
 12318  09B8  00B9               	movwf	??___fladd+7
 12319  09B9  082A               	movf	___fladd@b,w
 12320  09BA  02B6               	subwf	??___fladd+4,f
 12321  09BB  082B               	movf	___fladd@b+1,w
 12322  09BC  1C03               	skipc
 12323  09BD  0F2B               	incfsz	___fladd@b+1,w
 12324  09BE  29C0               	goto	u302_21
 12325  09BF  29C1               	goto	u302_22
 12326  09C0                     u302_21:
 12327  09C0  02B7               	subwf	??___fladd+5,f
 12328  09C1                     u302_22:
 12329  09C1  082C               	movf	___fladd@b+2,w
 12330  09C2  1C03               	skipc
 12331  09C3  0F2C               	incfsz	___fladd@b+2,w
 12332  09C4  29C6               	goto	u302_23
 12333  09C5  29C7               	goto	u302_24
 12334  09C6                     u302_23:
 12335  09C6  02B8               	subwf	??___fladd+6,f
 12336  09C7                     u302_24:
 12337  09C7  082D               	movf	___fladd@b+3,w
 12338  09C8  1C03               	skipc
 12339  09C9  0F2D               	incfsz	___fladd@b+3,w
 12340  09CA  29CC               	goto	u302_25
 12341  09CB  29CD               	goto	u302_26
 12342  09CC                     u302_25:
 12343  09CC  02B9               	subwf	??___fladd+7,f
 12344  09CD                     u302_26:
 12345  09CD  0836               	movf	??___fladd+4,w
 12346  09CE  07B2               	addwf	??___fladd,f
 12347  09CF  0837               	movf	??___fladd+5,w
 12348  09D0  1803               	skipnc
 12349  09D1  0F37               	incfsz	??___fladd+5,w
 12350  09D2  29D4               	goto	u303_20
 12351  09D3  29D5               	goto	u303_21
 12352  09D4                     u303_20:
 12353  09D4  07B3               	addwf	??___fladd+1,f
 12354  09D5                     u303_21:
 12355  09D5  0838               	movf	??___fladd+6,w
 12356  09D6  1803               	skipnc
 12357  09D7  0F38               	incfsz	??___fladd+6,w
 12358  09D8  29DA               	goto	u303_22
 12359  09D9  29DB               	goto	u303_23
 12360  09DA                     u303_22:
 12361  09DA  07B4               	addwf	??___fladd+2,f
 12362  09DB                     u303_23:
 12363  09DB  0839               	movf	??___fladd+7,w
 12364  09DC  1803               	skipnc
 12365  09DD  0A39               	incf	??___fladd+7,w
 12366  09DE  07B5               	addwf	??___fladd+3,f
 12367  09DF  0835               	movf	??___fladd+3,w
 12368  09E0  00AD               	movwf	___fladd@b+3
 12369  09E1  0834               	movf	??___fladd+2,w
 12370  09E2  00AC               	movwf	___fladd@b+2
 12371  09E3  0833               	movf	??___fladd+1,w
 12372  09E4  00AB               	movwf	___fladd@b+1
 12373  09E5  0832               	movf	??___fladd,w
 12374  09E6  00AA               	movwf	___fladd@b
 12375  09E7                     i1l2869:
 12376  09E7  3080               	movlw	128
 12377  09E8  00B2               	movwf	??___fladd
 12378  09E9  0832               	movf	??___fladd,w
 12379  09EA  06BA               	xorwf	___fladd@signs,f
 12380  09EB  09BD               	comf	___fladd@grs,f
 12381  09EC  0ABD               	incf	___fladd@grs,f
 12382  09ED                     i1l2871:
 12383  09ED  083D               	movf	___fladd@grs,w
 12384  09EE  1D03               	btfss	3,2
 12385  09EF  29F1               	goto	u304_21
 12386  09F0  29F2               	goto	u304_20
 12387  09F1                     u304_21:
 12388  09F1  2A0F               	goto	i1l827
 12389  09F2                     u304_20:
 12390  09F2                     i1l2873:
 12391  09F2  3001               	movlw	1
 12392  09F3  07AA               	addwf	___fladd@b,f
 12393  09F4  3000               	movlw	0
 12394  09F5  1803               	skipnc
 12395  09F6  3001               	movlw	1
 12396  09F7  07AB               	addwf	___fladd@b+1,f
 12397  09F8  3000               	movlw	0
 12398  09F9  1803               	skipnc
 12399  09FA  3001               	movlw	1
 12400  09FB  07AC               	addwf	___fladd@b+2,f
 12401  09FC  3000               	movlw	0
 12402  09FD  1803               	skipnc
 12403  09FE  3001               	movlw	1
 12404  09FF  07AD               	addwf	___fladd@b+3,f
 12405  0A00  2A0F               	goto	i1l827
 12406  0A01                     i1l2875:
 12407  0A01  082E               	movf	___fladd@a,w
 12408  0A02  02AA               	subwf	___fladd@b,f
 12409  0A03  082F               	movf	___fladd@a+1,w
 12410  0A04  1C03               	skipc
 12411  0A05  0F2F               	incfsz	___fladd@a+1,w
 12412  0A06  02AB               	subwf	___fladd@b+1,f
 12413  0A07  0830               	movf	___fladd@a+2,w
 12414  0A08  1C03               	skipc
 12415  0A09  0F30               	incfsz	___fladd@a+2,w
 12416  0A0A  02AC               	subwf	___fladd@b+2,f
 12417  0A0B  0831               	movf	___fladd@a+3,w
 12418  0A0C  1C03               	skipc
 12419  0A0D  0F31               	incfsz	___fladd@a+3,w
 12420  0A0E  02AD               	subwf	___fladd@b+3,f
 12421  0A0F                     i1l827:
 12422  0A0F  082D               	movf	___fladd@b+3,w
 12423  0A10  042C               	iorwf	___fladd@b+2,w
 12424  0A11  042B               	iorwf	___fladd@b+1,w
 12425  0A12  042A               	iorwf	___fladd@b,w
 12426  0A13  1D03               	skipz
 12427  0A14  2A16               	goto	u305_21
 12428  0A15  2A17               	goto	u305_20
 12429  0A16                     u305_21:
 12430  0A16  2A43               	goto	i1l2897
 12431  0A17                     u305_20:
 12432  0A17                     i1l2877:
 12433  0A17  083D               	movf	___fladd@grs,w
 12434  0A18  1D03               	btfss	3,2
 12435  0A19  2A1B               	goto	u306_21
 12436  0A1A  2A1C               	goto	u306_20
 12437  0A1B                     u306_21:
 12438  0A1B  2A43               	goto	i1l2897
 12439  0A1C                     u306_20:
 12440  0A1C                     i1l2879:
 12441  0A1C  3000               	movlw	0
 12442  0A1D  00AD               	movwf	?___fladd+3
 12443  0A1E  3000               	movlw	0
 12444  0A1F  00AC               	movwf	?___fladd+2
 12445  0A20  3000               	movlw	0
 12446  0A21  00AB               	movwf	?___fladd+1
 12447  0A22  3000               	movlw	0
 12448  0A23  00AA               	movwf	?___fladd
 12449  0A24  2AC1               	goto	i1l819
 12450  0A25                     i1l2883:
 12451  0A25  3001               	movlw	1
 12452  0A26  00B2               	movwf	??___fladd
 12453  0A27                     u307_25:
 12454  0A27  1003               	clrc
 12455  0A28  0DAA               	rlf	___fladd@b,f
 12456  0A29  0DAB               	rlf	___fladd@b+1,f
 12457  0A2A  0DAC               	rlf	___fladd@b+2,f
 12458  0A2B  0DAD               	rlf	___fladd@b+3,f
 12459  0A2C  0BB2               	decfsz	??___fladd,f
 12460  0A2D  2A27               	goto	u307_25
 12461  0A2E                     i1l2885:
 12462  0A2E  1FBD               	btfss	___fladd@grs,7
 12463  0A2F  2A31               	goto	u308_21
 12464  0A30  2A32               	goto	u308_20
 12465  0A31                     u308_21:
 12466  0A31  2A33               	goto	i1l831
 12467  0A32                     u308_20:
 12468  0A32                     i1l2887:
 12469  0A32  142A               	bsf	___fladd@b,0
 12470  0A33                     i1l831:
 12471  0A33  1C3D               	btfss	___fladd@grs,0
 12472  0A34  2A36               	goto	u309_21
 12473  0A35  2A37               	goto	u309_20
 12474  0A36                     u309_21:
 12475  0A36  2A3A               	goto	i1l2891
 12476  0A37                     u309_20:
 12477  0A37                     i1l2889:
 12478  0A37  1403               	setc
 12479  0A38  0DBD               	rlf	___fladd@grs,f
 12480  0A39  2A3C               	goto	i1l2893
 12481  0A3A                     i1l2891:
 12482  0A3A  1003               	clrc
 12483  0A3B  0DBD               	rlf	___fladd@grs,f
 12484  0A3C                     i1l2893:
 12485  0A3C  083C               	movf	___fladd@bexp,w
 12486  0A3D  1903               	btfsc	3,2
 12487  0A3E  2A40               	goto	u310_21
 12488  0A3F  2A41               	goto	u310_20
 12489  0A40                     u310_21:
 12490  0A40  2A43               	goto	i1l2897
 12491  0A41                     u310_20:
 12492  0A41                     i1l2895:
 12493  0A41  3001               	movlw	1
 12494  0A42  02BC               	subwf	___fladd@bexp,f
 12495  0A43                     i1l2897:
 12496  0A43  1FAC               	btfss	___fladd@b+2,7
 12497  0A44  2A46               	goto	u311_21
 12498  0A45  2A47               	goto	u311_20
 12499  0A46                     u311_21:
 12500  0A46  2A25               	goto	i1l2883
 12501  0A47                     u311_20:
 12502  0A47                     i1l2899:
 12503  0A47  01BB               	clrf	___fladd@aexp
 12504  0A48                     i1l2901:
 12505  0A48  1FBD               	btfss	___fladd@grs,7
 12506  0A49  2A4B               	goto	u312_21
 12507  0A4A  2A4C               	goto	u312_20
 12508  0A4B                     u312_21:
 12509  0A4B  2A5A               	goto	i1l2909
 12510  0A4C                     u312_20:
 12511  0A4C                     i1l2903:
 12512  0A4C  083D               	movf	___fladd@grs,w
 12513  0A4D  397F               	andlw	127
 12514  0A4E  1903               	btfsc	3,2
 12515  0A4F  2A51               	goto	u313_21
 12516  0A50  2A52               	goto	u313_20
 12517  0A51                     u313_21:
 12518  0A51  2A55               	goto	i1l837
 12519  0A52                     u313_20:
 12520  0A52                     i1l2905:
 12521  0A52  01BB               	clrf	___fladd@aexp
 12522  0A53  0ABB               	incf	___fladd@aexp,f
 12523  0A54  2A5A               	goto	i1l2909
 12524  0A55                     i1l837:
 12525  0A55  1C2A               	btfss	___fladd@b,0
 12526  0A56  2A58               	goto	u314_21
 12527  0A57  2A59               	goto	u314_20
 12528  0A58                     u314_21:
 12529  0A58  2A5A               	goto	i1l2909
 12530  0A59                     u314_20:
 12531  0A59  2A52               	goto	i1l2905
 12532  0A5A                     i1l2909:
 12533  0A5A  083B               	movf	___fladd@aexp,w
 12534  0A5B  1903               	btfsc	3,2
 12535  0A5C  2A5E               	goto	u315_21
 12536  0A5D  2A5F               	goto	u315_20
 12537  0A5E                     u315_21:
 12538  0A5E  2A93               	goto	i1l840
 12539  0A5F                     u315_20:
 12540  0A5F                     i1l2911:
 12541  0A5F  3001               	movlw	1
 12542  0A60  07AA               	addwf	___fladd@b,f
 12543  0A61  3000               	movlw	0
 12544  0A62  1803               	skipnc
 12545  0A63  3001               	movlw	1
 12546  0A64  07AB               	addwf	___fladd@b+1,f
 12547  0A65  3000               	movlw	0
 12548  0A66  1803               	skipnc
 12549  0A67  3001               	movlw	1
 12550  0A68  07AC               	addwf	___fladd@b+2,f
 12551  0A69  3000               	movlw	0
 12552  0A6A  1803               	skipnc
 12553  0A6B  3001               	movlw	1
 12554  0A6C  07AD               	addwf	___fladd@b+3,f
 12555  0A6D                     i1l2913:
 12556  0A6D  1C2D               	btfss	___fladd@b+3,0
 12557  0A6E  2A70               	goto	u316_21
 12558  0A6F  2A71               	goto	u316_20
 12559  0A70                     u316_21:
 12560  0A70  2A93               	goto	i1l840
 12561  0A71                     u316_20:
 12562  0A71                     i1l2915:
 12563  0A71  082A               	movf	___fladd@b,w
 12564  0A72  00B2               	movwf	??___fladd
 12565  0A73  082B               	movf	___fladd@b+1,w
 12566  0A74  00B3               	movwf	??___fladd+1
 12567  0A75  082C               	movf	___fladd@b+2,w
 12568  0A76  00B4               	movwf	??___fladd+2
 12569  0A77  082D               	movf	___fladd@b+3,w
 12570  0A78  00B5               	movwf	??___fladd+3
 12571  0A79  3001               	movlw	1
 12572  0A7A  00B6               	movwf	??___fladd+4
 12573  0A7B                     u317_25:
 12574  0A7B  0D35               	rlf	??___fladd+3,w
 12575  0A7C  0CB5               	rrf	??___fladd+3,f
 12576  0A7D  0CB4               	rrf	??___fladd+2,f
 12577  0A7E  0CB3               	rrf	??___fladd+1,f
 12578  0A7F  0CB2               	rrf	??___fladd,f
 12579  0A80                     u317_20:
 12580  0A80  0BB6               	decfsz	??___fladd+4,f
 12581  0A81  2A7B               	goto	u317_25
 12582  0A82  0835               	movf	??___fladd+3,w
 12583  0A83  00AD               	movwf	___fladd@b+3
 12584  0A84  0834               	movf	??___fladd+2,w
 12585  0A85  00AC               	movwf	___fladd@b+2
 12586  0A86  0833               	movf	??___fladd+1,w
 12587  0A87  00AB               	movwf	___fladd@b+1
 12588  0A88  0832               	movf	??___fladd,w
 12589  0A89  00AA               	movwf	___fladd@b
 12590  0A8A  0A3C               	incf	___fladd@bexp,w
 12591  0A8B  1903               	btfsc	3,2
 12592  0A8C  2A8E               	goto	u318_21
 12593  0A8D  2A8F               	goto	u318_20
 12594  0A8E                     u318_21:
 12595  0A8E  2A93               	goto	i1l840
 12596  0A8F                     u318_20:
 12597  0A8F                     i1l2917:
 12598  0A8F  3001               	movlw	1
 12599  0A90  00B2               	movwf	??___fladd
 12600  0A91  0832               	movf	??___fladd,w
 12601  0A92  07BC               	addwf	___fladd@bexp,f
 12602  0A93                     i1l840:
 12603  0A93  0A3C               	incf	___fladd@bexp,w
 12604  0A94  1903               	btfsc	3,2
 12605  0A95  2A97               	goto	u319_21
 12606  0A96  2A98               	goto	u319_20
 12607  0A97                     u319_21:
 12608  0A97  2A9D               	goto	i1l2921
 12609  0A98                     u319_20:
 12610  0A98                     i1l2919:
 12611  0A98  083C               	movf	___fladd@bexp,w
 12612  0A99  1D03               	btfss	3,2
 12613  0A9A  2A9C               	goto	u320_21
 12614  0A9B  2A9D               	goto	u320_20
 12615  0A9C                     u320_21:
 12616  0A9C  2AAB               	goto	i1l2927
 12617  0A9D                     u320_20:
 12618  0A9D                     i1l2921:
 12619  0A9D  3000               	movlw	0
 12620  0A9E  00AD               	movwf	___fladd@b+3
 12621  0A9F  3000               	movlw	0
 12622  0AA0  00AC               	movwf	___fladd@b+2
 12623  0AA1  3000               	movlw	0
 12624  0AA2  00AB               	movwf	___fladd@b+1
 12625  0AA3  3000               	movlw	0
 12626  0AA4  00AA               	movwf	___fladd@b
 12627  0AA5                     i1l2923:
 12628  0AA5  083C               	movf	___fladd@bexp,w
 12629  0AA6  1D03               	btfss	3,2
 12630  0AA7  2AA9               	goto	u321_21
 12631  0AA8  2AAA               	goto	u321_20
 12632  0AA9                     u321_21:
 12633  0AA9  2AAB               	goto	i1l2927
 12634  0AAA                     u321_20:
 12635  0AAA                     i1l2925:
 12636  0AAA  01BA               	clrf	___fladd@signs
 12637  0AAB                     i1l2927:
 12638  0AAB  1C3C               	btfss	___fladd@bexp,0
 12639  0AAC  2AAE               	goto	u322_21
 12640  0AAD  2AAF               	goto	u322_20
 12641  0AAE                     u322_21:
 12642  0AAE  2AB1               	goto	i1l2931
 12643  0AAF                     u322_20:
 12644  0AAF                     i1l2929:
 12645  0AAF  17AC               	bsf	___fladd@b+2,7
 12646  0AB0  2AB5               	goto	i1l848
 12647  0AB1                     i1l2931:
 12648  0AB1  307F               	movlw	127
 12649  0AB2  00B2               	movwf	??___fladd
 12650  0AB3  0832               	movf	??___fladd,w
 12651  0AB4  05AC               	andwf	___fladd@b+2,f
 12652  0AB5                     i1l848:
 12653  0AB5  083C               	movf	___fladd@bexp,w
 12654  0AB6  00B2               	movwf	??___fladd
 12655  0AB7  1003               	clrc
 12656  0AB8  0C32               	rrf	??___fladd,w
 12657  0AB9  00B3               	movwf	??___fladd+1
 12658  0ABA  0833               	movf	??___fladd+1,w
 12659  0ABB  00AD               	movwf	___fladd@b+3
 12660  0ABC                     i1l2933:
 12661  0ABC  1FBA               	btfss	___fladd@signs,7
 12662  0ABD  2ABF               	goto	u323_21
 12663  0ABE  2AC0               	goto	u323_20
 12664  0ABF                     u323_21:
 12665  0ABF  2AC1               	goto	i1l849
 12666  0AC0                     u323_20:
 12667  0AC0                     i1l2935:
 12668  0AC0  17AD               	bsf	___fladd@b+3,7
 12669  0AC1                     i1l849:
 12670  0AC1                     i1l819:
 12671  0AC1  0008               	return
 12672  0AC2                     __end_of___fladd:
 12673  007E                     btemp	set	126	;btemp
 12674  007E                     wtemp0	set	126
 12675                           
 12676                           	psect	idloc
 12677                           
 12678                           ;Config register IDLOC0 @ 0x2000
 12679                           ;	unspecified, using default values
 12680  2000                     	org	8192
 12681  2000  3FFF               	dw	16383
 12682                           
 12683                           ;Config register IDLOC1 @ 0x2001
 12684                           ;	unspecified, using default values
 12685  2001                     	org	8193
 12686  2001  3FFF               	dw	16383
 12687                           
 12688                           ;Config register IDLOC2 @ 0x2002
 12689                           ;	unspecified, using default values
 12690  2002                     	org	8194
 12691  2002  3FFF               	dw	16383
 12692                           
 12693                           ;Config register IDLOC3 @ 0x2003
 12694                           ;	unspecified, using default values
 12695  2003                     	org	8195
 12696  2003  3FFF               	dw	16383
 12697                           
 12698                           	psect	config
 12699                           
 12700                           ;Config register CONFIG1 @ 0x2007
 12701                           ;	Oscillator Selection bits
 12702                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
 12703                           ;	Watchdog Timer Enable bit
 12704                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 12705                           ;	Power-up Timer Enable bit
 12706                           ;	PWRTE = OFF, PWRT disabled
 12707                           ;	RE3/MCLR pin function select bit
 12708                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 12709                           ;	Code Protection bit
 12710                           ;	CP = OFF, Program memory code protection is disabled
 12711                           ;	Data Code Protection bit
 12712                           ;	CPD = OFF, Data memory code protection is disabled
 12713                           ;	Brown Out Reset Selection bits
 12714                           ;	BOREN = OFF, BOR disabled
 12715                           ;	Internal External Switchover bit
 12716                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 12717                           ;	Fail-Safe Clock Monitor Enabled bit
 12718                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 12719                           ;	Low Voltage Programming Enable bit
 12720                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 12721                           ;	In-Circuit Debugger Mode bit
 12722                           ;	DEBUG = 0x1, unprogrammed default
 12723  2007                     	org	8199
 12724  2007  20D4               	dw	8404
 12725                           
 12726                           ;Config register CONFIG2 @ 0x2008
 12727                           ;	Brown-out Reset Selection bit
 12728                           ;	BOR4V = BOR21V, Brown-out Reset set to 2.1V
 12729                           ;	Flash Program Memory Self Write Enable bits
 12730                           ;	WRT = OFF, Write protection off
 12731  2008                     	org	8200
 12732  2008  3EFF               	dw	16127

Data Sizes:
    Strings     0
    Constant    36
    Data        26
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     79      79
    BANK1            80     56      80
    BANK3            96     64      95
    BANK2            96      0       0

Pointer List with Targets:

    frexp@eptr	PTR int  size(1) Largest target is 2
		 -> log@exponent(BANK0[2]), 

    eval_poly@d	PTR const  size(1) Largest target is 36
		 -> log@coeff(CODE[36]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _slave in COMMON

    _log->_frexp
    _frexp->___fleq
    ___flmul->_frexp
    ___xxtofl->__Umul8_16
    ___fladd->_frexp

Critical Paths under _main in BANK0

    None.

Critical Paths under _slave in BANK0

    _slave->_log
    _slave->i1___fltol
    _map->i1___fltol
    i1___fltol->___flsub
    ___fldiv->___flmul
    _log->_eval_poly
    _eval_poly->___flmul
    ___flmul->___fladd
    ___flsub->___fldiv
    ___fladd->___xxtofl

Critical Paths under _main in BANK1

    None.

Critical Paths under _slave in BANK1

    _slave->_map
    _map->i1___fltol
    i1___fltol->___fldiv
    ___flsub->___fldiv

Critical Paths under _main in BANK3

    _main->_LUX_read
    _setup->_USART_set
    _USART_set->___lldiv
    _I2C_Master_Init->___lldiv
    _servo->_pwm_duty_cycle
    _motor_dc->___fltol
    _RTC_read->_bcd_dec
    _bcd_dec->___bmul
    _LUX_read->_calculateLux
    _calculateLux->___lldiv
    _LUX_config->_I2C_Master_Write

Critical Paths under _slave in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _slave in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   10660
                                             60 BANK3      4     4      0
                         _LUX_config
                           _LUX_read
                           _RTC_read
                            ___fltol
                      _adc_ch_switch
                           _motor_dc
                         _pulse_step
                              _servo
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    2086
                    _I2C_Master_Init
                          _USART_set
                           _adc_init
                        _int_osc_MHz
                           _pwm_init
                          _tmr0_init
                        _tmr0_reload
 ---------------------------------------------------------------------------------
 (2) _tmr0_reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _tmr0_init                                            3     3      0      66
                                              0 BANK3      3     3      0
 ---------------------------------------------------------------------------------
 (2) _pwm_init                                             3     3      0      22
                                              0 BANK3      3     3      0
 ---------------------------------------------------------------------------------
 (2) _int_osc_MHz                                          3     3      0      22
                                              0 BANK3      3     3      0
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             5     3      2     218
                                              0 BANK3      5     3      2
 ---------------------------------------------------------------------------------
 (2) _USART_set                                           16    12      4     890
                                             14 BANK3     16    12      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     868
                                             14 BANK3      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _servo                                                2     0      2     382
                                              4 BANK3      2     0      2
                         _USART_send
                     _pwm_duty_cycle
 ---------------------------------------------------------------------------------
 (2) _pwm_duty_cycle                                       4     2      2     196
                                              0 BANK3      4     2      2
 ---------------------------------------------------------------------------------
 (1) _pulse_step                                           4     0      4     240
                                              0 BANK3      4     0      4
 ---------------------------------------------------------------------------------
 (1) _motor_dc                                             2     0      2     186
                                             11 BANK3      2     0      2
                         _USART_send
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (1) _adc_ch_switch                                        3     3      0      22
                                              0 BANK3      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     405
                                              0 BANK3     11     7      4
 ---------------------------------------------------------------------------------
 (1) _RTC_read                                             2     2      0    1745
                                              8 BANK3      2     2      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_send
                            _bcd_dec
 ---------------------------------------------------------------------------------
 (2) _bcd_dec                                              4     4      0     212
                                              4 BANK3      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              0 BANK3      4     3      1
 ---------------------------------------------------------------------------------
 (1) _LUX_read                                             6     6      0    4660
                                             54 BANK3      6     6      0
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                         _USART_send
                            ___lldiv
                       _calculateLux
 ---------------------------------------------------------------------------------
 (2) _calculateLux                                        42    38      4    2334
                                             14 BANK3     40    36      4
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              13     5      8     700
                                              0 BANK3     13     5      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     770
                                              0 BANK3     14     6      8
 ---------------------------------------------------------------------------------
 (2) _USART_send                                           1     1      0      22
                                              0 BANK3      1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2     577
                                              0 BANK3      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _LUX_config                                           0     0      0     934
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     934
                                              0 BANK3      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _slave                                               24    24      0   40733
                                             32 BANK1     24    24      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___lwdiv
                           ___xxtofl
                           _adc_read
                                _log
                                _map
                          i1___fltol
                      i1_tmr0_reload
 ---------------------------------------------------------------------------------
 (5) i1_tmr0_reload                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _map                                                 10     0     10   10053
                                             22 BANK1     10     0     10
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                           _adc_read (ARG)
                          i1___fltol
 ---------------------------------------------------------------------------------
 (5) i1___fltol                                           11     7      4     281
                                             77 BANK0      2     2      0
                                             13 BANK1      9     5      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             26    18      8    1425
                                             56 BANK0     13     5      8
                                              0 BANK1     13    13      0
                            ___fladd (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) _log                                                  7     3      4   17358
                                             72 BANK0      7     3      4
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                           ___xxtofl
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (6) _frexp                                                7     2      5     896
                                             12 COMMON     2     2      0
                                              0 BANK0      5     0      5
                             ___fleq
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     520
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (6) _eval_poly                                           16     9      7    7365
                                             56 BANK0     16     9      7
                            ___fladd
                            ___flmul
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             26    18      8    3759
                                             30 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (7) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4     854
                                              9 COMMON     4     0      4
                                              0 BANK0     10    10      0
                          __Umul8_16 (ARG)
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     460
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (5) _adc_read                                             2     0      2       0
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (5) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    3397
                                             69 BANK0      8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             20    12      8    3200
                                             10 BANK0     20    12      8
                          __Umul8_16 (ARG)
                            ___lwdiv (ARG)
                           ___xxtofl (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LUX_config
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _LUX_read
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _USART_send
     ___lldiv
     _calculateLux
       ___lldiv
       ___lmul
   _RTC_read
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     _USART_send
     _bcd_dec
       ___bmul
   ___fltol
   _adc_ch_switch
   _motor_dc
     _USART_send
     ___fltol (ARG)
   _pulse_step
   _servo
     _USART_send
     _pwm_duty_cycle
   _setup
     _I2C_Master_Init
       ___lldiv
     _USART_set
       ___lldiv
     _adc_init
     _int_osc_MHz
     _pwm_init
     _tmr0_init
     _tmr0_reload

 _slave (ROOT)
   ___fladd
     __Umul8_16 (ARG)
     ___lwdiv (ARG)
     ___xxtofl (ARG)
       __Umul8_16 (ARG)
       ___lwdiv (ARG)
     _frexp (ARG)
       ___fleq
   ___fldiv
     ___fladd (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___fladd (ARG)
       ___lwdiv (ARG)
       ___xxtofl (ARG)
       _frexp (ARG)
     ___xxtofl (ARG)
   ___flmul
   ___flsub
     ___fladd
     ___fldiv (ARG)
     ___flmul (ARG)
     ___xxtofl (ARG)
   ___lwdiv
   ___xxtofl
   _adc_read
   _log
     ___fladd
     ___fleq
     ___flge
     ___flmul
     ___xxtofl
     _eval_poly
       ___fladd
       ___flmul
     _frexp
   _map
     ___fladd
     ___fldiv
     ___flmul
     ___xxtofl
     _adc_read (ARG)
     i1___fltol (ARG)
       ___fladd (ARG)
       ___fldiv (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
       ___xxtofl (ARG)
   i1___fltol
   i1_tmr0_reload

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     40      5F       9       99.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     38      50       7      100.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4F      4F       5       98.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     10C      12        0.0%
ABS                  0      0     10C       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Sat Sep 24 13:08:49 2022

                               _A 00E4                                 _B 00EC                                 _C 01E1  
                    ___fldiv@aexp 00AC                      ___fldiv@bexp 00AB                                 _p 01E0  
                               pc 0002                        _LUX_config 1E6B                      ___fldiv@sign 00A4  
                  ___bmul@product 0192                                _R1 00E8                                _R2 00D8  
                              _TC 01D0                                fsr 0004               __Umul8_16@word_mpld 0076  
                             l202 17FF                               l212 1D4E                               l205 125D  
                             l232 1FFF                               l305 14E6                               l217 1D4F  
                             l401 11DB                               l410 0D5F                               l235 1B95  
                             l331 1D88                               l404 07FE                               _CH0 01D6  
                             l421 0CB6                               l165 1C89                               l181 1C08  
                             l333 1D8C                               _CH1 01D4                               l238 1BA0  
                             l190 1722                               l174 1D12                               l334 1D90  
                             l271 1117                               l327 1D54                               l360 1B83  
                             l168 1CA4                               l272 111B                               l193 1BE6  
                             l337 1C2A                               l329 1D61                               l354 0839  
                             l274 1131                               l363 1B42                               l427 0D30  
                             l179 1C05                               l275 114F                               l372 1B6A  
                             l196 1EC0                               l188 171F                               l292 1447  
                             l276 1135                               l357 1B77                               l277 1139  
                             l269 1113                               l366 1B54                               l278 1159  
                             l375 1CCE                               l527 1E1C                               l391 11D9  
                             l376 1CD1                               l369 1B4B                               l377 1CD8  
                             l297 1483                               l289 1434                               l706 10C4  
                             l539 1BCA                               l549 1F28                               l709 10D9  
                             l699 10D9                               _PR2 0092                               _LUX 01EA  
                             _dir 01EB                               _map 14E7                               _min 01DF  
                             _log 06E9                               _hrs 01DE                               fsr0 0004  
                             indf 0000                      i1___fltol@f1 00AD                      ___flmul@aexp 0050  
                    ___flmul@bexp 0051                      ___flmul@sign 004B                      ___flmul@temp 0056  
                    ___flmul@prod 0052                      ___fltol@exp1 019A                              l3101 1CAA  
                            l3111 1CD2                              l3103 1CB2                              l3121 1B48  
                            l3105 1CBD                              l3201 1D25                              l4001 1F5A  
           adc_ch_switch@channels 0192                              l3107 1CC2                              l3131 0ADF  
                            l3123 0AC2                              l3115 1BCE                              l3203 1D2C  
                            l4003 1F60                              l3109 1CCA                              l3141 0B64  
                            l3133 0AE7                              l3125 0ACD                              l3205 1D31  
                            l3221 1D5A                              l4005 1F7A                              l3119 1B43  
                            l3151 0BE3                              l3143 0B6C                              l3135 0B00  
                            l3127 0AD6                              l3223 1D5C                              l3231 1D6C  
                            l3311 1170                              l3303 115D                              l4007 1F85  
                            l3081 1B95                              l3161 0C33                              l3153 0BF6  
                            l3145 0B9C                              l3137 0B2E                              l3209 1D38  
                            l3225 1D64                              l3233 1D7C                              l3217 1D53  
                            l3321 118C                              l3313 1174                              l3305 1160  
                            l4009 1F8A                              l3091 1B5F                              l3083 1B9A  
                            l3171 0C7C                              l3163 0C3E                              l3155 0C01  
                            l3147 0BC7                              l3139 0B5C                              l3251 1F9C  
                            l3235 1D80                              l3227 1D67                              l3219 1D57  
                            l3331 11AD                              l3323 1193                              l3315 1179  
                            l3307 1167                              l3093 1B64                              l3181 0CD5  
                            l3173 0C90                              l3165 0C52                              l3157 0C14  
                            l3149 0BD8                              l2701 1BC2                              l3085 1C09  
                            l3341 0800                              l3253 1FF7                              l3261 10DD  
                            l3237 1D84                              l4221 1D74                              l3325 119A  
                            l3317 117E                              l3309 116B                              l3077 07F9  
                            l3087 1B3A                              l3095 1B4C                              l2711 1ED6  
                            l3191 0D57                              l3183 0CF2                              l3175 0C9B  
                            l3167 0C5D                              l3159 0C1F                              l2703 1BC9  
                            l4231 14DB                              l3351 0838                              l3343 0804  
                            l3255 1FF8                              l3247 1F93                              l3271 10F6  
                            l3263 10DE                              l4223 1D40                              l3239 1D87  
                            l3327 11A1                              l3319 1185                              l3335 11B2  
                            l3079 07FD                              l3089 1B3F                              l3097 1B51  
                            l2721 1F10                              l2713 1EE3                              l3185 0CFA  
                            l3177 0CAF                              l3169 0C71                              l3345 0807  
                            l3257 1FFB                              l3249 1F99                              l4225 1105  
                            l3265 10E3                              l3329 11A8                              l3099 1CA5  
                            l2723 1F11                              l2715 1EE7                              l2707 1EC1  
                            l3187 0D0C                              l3179 0CB6                              l3347 0836  
                            l3259 1FFE                              l4227 1129                              l3283 113D  
                            l3267 10EA                              l3275 10FD                              l3195 1D16  
                            l4219 11BC                              l2725 1F1A                              l2717 1EF0  
                            l2709 1ED3                              l3189 0D3E                              l3349 0837  
                            l4229 1147                              l3269 10F1                              l3197 1D17  
                            l3701 121B                              l2719 1F02                              l2727 1F20  
                            l3279 111F                              l3199 1D1E                              l3711 1245  
                            l3703 1221                              l2681 1DDF                              l3801 1C8C  
                            l3721 125A                              l3713 1254                              l3705 1230  
                            l2675 1B77                              l2683 1DE3                              l3803 1C98  
                            l3811 1CE1                              l3723 125B                              l3715 1255  
                            l3707 123A                              l2677 1B7D                              l2685 1DFA  
                            l2693 1BB7                              l3901 10C9                              l3741 1433  
                            l3805 1C9C                              l3733 1BE7                              l3813 1CEB  
                            l3725 125C                              l3717 1256                              l3709 1240  
                            l3661 11E6                              ?_map 00B6                              l2687 1E03  
                            l2679 1DD5                              l2695 1BB8                              l3831 16D5  
                            l3823 165C                              l3903 10CE                              l3751 1458  
                            l3743 143A                              l3735 1BEF                              l3815 1CF4  
                            l3719 1257                              l3671 11F1                              l3663 11E7  
                            l3729 1E6B                              l2689 1E14                              l2697 1BBC  
                            l3841 16F5                              l3833 16DD                              l3825 16C3  
                            l3761 1478                              l3753 145E                              l3745 143C  
                            l3737 1BF7                              l3817 1D00                              l3809 1CD9  
                            l3681 1200                              l3673 11F4                              l3665 11EA  
                            l3657 11DC                              l2699 1BC0                              l3851 171B  
                            l3843 16F9                              l3835 16E1                              l3827 16CB  
                            l3771 14A2                              l3763 147F                              l3755 1466  
                            l3747 1443                              l3739 1BFD                              l3819 1D04  
                            l3691 120C                              l3683 1203                              l3675 11F7  
                            l3667 11EB                              l3659 11E2                              l3861 17E6  
                            l3853 1723                              l3845 1708                              l3837 16E8  
                            l3829 16CF                              l3773 14AF                              l3765 1489  
                            l3757 1473                              l3749 144D                              l3693 120F  
                            l3685 1206                              l3677 11FA                              l3669 11EE  
                            l3863 17F0                              l3855 1790                              l3839 16EF  
                            l3847 1713                              l3871 106B                              l3783 14C8  
                            l3767 1494                              l3695 1212                              l3687 1209  
                            l3679 11FD                              l3865 17F7                              l3857 17A0  
                            l3849 1718                              l3881 1092                              l3785 14CF  
                            l3777 14B6                              l3769 149A                              l3697 1215  
                            l3689 120B                              l3859 17E0                              l3891 10A0  
                            l3883 1094                              l3875 1074                              l3779 14C3  
                            l3699 1218                              l3885 1098                              l3893 10B2  
                            l3877 1089                              l3869 105E                              l3789 14D3  
                            l3797 1C76                              ?_log 0068                              l3879 108A  
                            l3799 1C85                              l3993 1F29                              l3899 10B9  
                            l3995 1F2E                              l3997 1F33                              l3999 1F45  
                            u2600 1B83                              u2601 1B82                              u2610 1DE3  
                            u2611 1DE2                              u2700 1EE7                              u2701 1EE6  
                            u2621 1DEC                              u2622 1DF3                              u2623 1DFA  
                            u2720 1F02                              u2721 1F01                              u3610 1B9A  
                            u2650 1E14                              u3611 1B99                              u2715 1EE9  
                            u2651 1E13                              u2635 1DFC                              u3620 1CCA  
                            u2740 1F20                              u3700 0B82                              u2660 1BBC  
                            u3621 1CC9                              u2741 1F1F                              u2725 1EFE  
                            u2645 1E04                              u2661 1BBB                              u5117 1440  
                            u2590 1B7D                              u3710 0BAB                              u2670 1BC9  
                            u2591 1B7C                              u2735 1F12                              u3711 0BAC  
                            u2671 1BC8                              u5127 1462                              u2680 1ED3  
                            u3800 0CAF                              u3720 0BBC                              u3712 0BB1  
                            u3640 0ACD                              u4600 143A                              u2681 1ED2  
                            u3801 0CAE                              u3713 0BB2                              u3705 0B7D  
                            u3641 0ACC                              u5137 147C                              u4601 1439  
                            u3810 0D0C                              u3730 0BD8                              u3650 0AD6  
                            u4610 144D                              u3811 0D0B                              u3803 0CAB  
                            u3731 0BD7                              u3651 0AD5                              u3635 1BD8  
                            u5147 149E                              u4611 144C                              u3740 0BF6  
                            u3660 0AF5                              u4620 1458                              u4700 1CE1  
                            u3900 0817                              u3821 0D1B                              u3741 0BF5  
                            u3733 0BD4                              u3725 0BB7                              u5157 14CC  
                            u4621 1457                              u4701 1CE0                              u3830 0D4C  
                            u3822 0D1C                              u3750 0C14                              u3670 0B23  
                            u4630 1473                              u4710 1D00                              u2695 1ED8  
                            u3823 0D21                              u3815 0D08                              u3751 0C13  
                            u3743 0BF2                              u5167 170E                              u4631 1472  
                            u4711 1CFF                              u3824 0D22                              u3760 0C33  
                            u3680 0B51                              u4800 1718                              u4640 1489  
                            u4720 1D0B                              u3840 1D8C                              u3825 0D27  
                            u3761 0C32                              u3753 0C10                              u3665 0AF0  
                            u4801 1717                              u4641 1488                              u4721 1D09  
                            u3905 0812                              u3841 1D8B                              u3826 0D28  
                            u3770 0C52                              u3690 0B6C                              u4810 17E6  
                            u4650 1494                              u4730 1D0C                              u3850 1FAC  
                            u3835 0D47                              u3771 0C51                              u3763 0C2F  
                            u3691 0B6B                              u3675 0B1E                              u4811 17E5  
                            u4651 1493                              u4715 1CFC                              u3780 0C71  
                            u4820 17F0                              u4740 16CB                              u4660 14AF  
                            u4580 1BEF                              u3860 1FC5                              u3781 0C70  
                            u3773 0C4E                              u3685 0B4C                              u4821 17EF  
                            u4741 16CA                              u4661 14AE                              u4581 1BEE  
                            u3790 0C90                              u4750 16DD                              u4910 10C9  
                            u4830 106B                              u4670 14C3                              u4590 1BFD  
                            u3791 0C8F                              u3783 0C6D                              u4751 16DC  
                            u4911 10C8                              u4831 106A                              u4671 14C2  
                            u4591 1BFC                              u3871 1FD7                              u3855 1FA7  
                            u4760 16EF                              u4920 10CE                              u4840 1082  
                            u4680 1C85                              u3872 1FD8                              u3880 1167  
                            u3793 0C8C                              u4761 16EE                              u4921 10CD  
                            u4905 10BB                              u4681 1C84                              u3873 1FDD  
                            u3865 1FC0                              u3881 1166                              u4770 16F5  
                            u4850 1098                              u4690 1C98                              u3874 1FDE  
                            u3890 1170                              u4771 16F4                              u4851 1097  
                            u4691 1C97                              u3875 1FE3                              u3891 116F  
                            u4780 1705                              u4860 109F                              u3876 1FE4  
                            u4781 1701                              u4861 109E                              u4845 107D  
                            u4685 1C81                              u4695 1C94                              u4880 10B1  
                            u4881 10B0                              u4794 1708                              u4890 10B8  
                            u4891 10B7                              u4875 10A1                              _TMR0 0001  
__end_of_I2C_Master_RepeatedStart 1B55                              _main 1F29                              map@x 00B6  
                            btemp 007E                              log@x 0068                     _LUX_read$1784 01C8  
                            start 0012                   ___fldiv@new_exp 00A5                 ___bmul@multiplier 0193  
                  _pwm_duty_cycle 1C09                             ??_map 007E                             ??_log 006C  
                ?_I2C_Master_Init 019E                  ?_I2C_Master_Read 0190                  ?_I2C_Master_Wait 0070  
                ?_I2C_Master_Stop 0070                     ___fltol@sign1 0199                   __end_of___fladd 0AC2  
                           ?_main 0070                   __end_of___fldiv 1000                   __end_of___flmul 03A8  
                 __end_of___flsub 1C4F                   __end_of___fltol 10DA                             _ANSEL 0188  
                 __end_of___lldiv 1F29                   __end_of_bcd_dec 1BE7                   __end_of___lwdiv 1DD5  
                           i1l151 06DC                             i1l143 03CD                             i1l162 159F  
                           i1l146 03E2                             i1l404 1B31                             i1l285 1B5E  
                           i1l810 0944                             i1l706 12D8                             i1l812 091B  
                           i1l709 12EF                             i1l806 089D                             i1l902 03A7  
                           i1l831 0A33                             i1l840 0A93                             i1l921 1C63  
                           i1l690 1416                             i1l914 039B                             i1l682 1E39  
                           i1l827 0A0F                             i1l819 0AC1                             i1l691 142F  
                           i1l923 1C75                             i1l683 1E55                             i1l852 1C4E  
                           i1l908 0313                             i1l684 1E6A                             i1l837 0A55  
                           i1l862 0DDE                             i1l687 13AA                             i1l848 0AB5  
                           i1l960 1631                             i1l952 1609                             i1l864 0FFF  
                           i1l849 0AC1                             i1l785 1DD4                             i1l946 15C4  
                           i1l699 12EF                             i1l948 165B                             i1l884 0FD3  
                           i1l973 07F8                             i1l886 0FEB                             i1l878 0F53  
                           i1l959 1625                             i1l991 105D                             i1l985 138D  
                           _SPBRG 0099                             _TXREG 0019                adc_init@vref_minus 0191  
             ___lmul@multiplicand 0194                   int_osc_MHz@freq 0192                             _logR2 00DC  
                           _frexp 1002                             _errno 00E0                             _slave 03A8  
                           map@x0 00B8                             map@x1 00BA                             map@y0 00BC  
                           map@y1 00BE                             _servo 1CD9                             _setup 11DC  
                           _pulso 01EC                      ?_int_osc_MHz 0070                  __end_of_LUX_read 1800  
                           pclath 000A                  __end_of_RTC_read 1723                    i1___fltol@exp1 006E  
                           status 0003                             wtemp0 007E            __end_of_pwm_duty_cycle 1C2B  
                 __initialization 0015                       ?_USART_send 0070                       log@exponent 006D  
                    __end_of_main 1F93                       ?_LUX_config 0070                      _switch_servo 01D8  
                          ??_main 01CC                     _adc_ch_switch 1430                 ?_I2C_Master_Start 0070  
               ?_I2C_Master_Write 0190                      ?_tmr0_reload 0070                ??_I2C_Master_Start 0190  
              ??_I2C_Master_Write 0192                            ?_frexp 0020                            _ADRESH 001E  
                          _ADRESL 009E                            _CCPR1L 0015                            ?_slave 0070  
                          ?_servo 0194                            ?_setup 0070                            _ANSELH 0189  
                __end_of_adc_init 115A                  __end_of_adc_read 1B5F                            i1l3001 01A4  
                          i1l3011 0234                            i1l3003 01B4                            i1l3021 02C8  
                          i1l3013 0244                            i1l3005 01D1                            i1l3031 02ED  
                          i1l3023 02D6                            i1l3015 0271                            i1l3007 01EA  
                          i1l3041 0310                            i1l3025 02DF                            i1l3033 02F3  
                          i1l3017 0297                            i1l3009 0207                            i1l3051 032F  
                          i1l3035 02F7                            i1l3027 02E3                            i1l3019 02BF  
                          i1l3061 0375                            i1l3053 0348                            i1l3045 0318  
                          i1l3037 02F8                            i1l3029 02E4                            i1l3071 0394  
                          i1l3063 037F                            i1l3047 031D                            i1l3055 034E  
                          i1l3039 02FC                            i1l3073 039F                            i1l3065 0381  
                          i1l3057 035B                            i1l3049 032B                            i1l3401 0DBA  
                          i1l3067 038F                            i1l3059 0366                            i1l3403 0DC1  
                          i1l3411 0DD4                            i1l3069 0393                            i1l3501 0FC6  
                          i1l3413 0DE6                            i1l3421 0E03                            i1l3405 0DC6  
                          i1l3503 0FD0                            i1l3431 0E4B                            i1l3423 0E0A  
                          i1l3415 0DF2                            i1l3407 0DD0                            i1l2801 08BF  
                          i1l3361 13CA                            i1l3353 138E                            i1l3521 15BC  
                          i1l3505 0FDD                            i1l3441 0E7E                            i1l3433 0E55  
                          i1l3417 0DFA                            i1l3409 0DD2                            i1l3601 129C  
                          i1l2811 08D3                            i1l2803 08C3                            i1l3363 13EE  
                          i1l3355 13A2                            i1l3531 15E7                            i1l3523 15CC  
                          i1l3515 15A3                            i1l2731 1E1D                            i1l3507 0FE1  
                          i1l3451 0EB7                            i1l3443 0E84                            i1l3435 0E5F  
                          i1l3427 0E15                            i1l3611 12AC                            i1l3603 12A0  
                          i1l2901 0A48                            i1l2813 08D7                            i1l2805 08C7  
                          i1l2821 08E7                            i1l3365 13F2                            i1l3357 13BE  
                          i1l3541 161B                            i1l3533 15EE                            i1l3517 15A8  
                          i1l2661 1C50                            i1l2733 1E31                            i1l3509 0FE5  
                          i1l3461 0EF7                            i1l3453 0EDF                            i1l3445 0E87  
                          i1l3437 0E61                            i1l3429 0E33                            i1l3381 0D7C  
                          i1l3373 0D60                            i1l3621 12DD                            i1l3605 12A4  
                          i1l3613 12C2                            i1l2911 0A5F                            i1l2903 0A4C  
                          i1l2831 092A                            i1l2823 08E8                            i1l2815 08DB  
                          i1l2807 08CB                            i1l2751 084C                            i1l2743 083A  
                          i1l3367 142C                            i1l3359 13C6                            i1l3551 164E  
                          i1l3543 161F                            i1l3535 15F2                            i1l3527 15D5  
                          i1l3519 15AC                            i1l2671 1C71                            i1l2663 1C52  
                          i1l2735 1E4D                            i1l3463 0F00                            i1l3471 0F1F  
                          i1l3439 0E66                            i1l3447 0E95                            i1l3455 0EE7  
                          i1l3383 0D83                            i1l3391 0D96                            i1l3375 0D69  
                          i1l3623 12E2                            i1l3631 14E7                            i1l2921 0A9D  
                          i1l2913 0A6D                            i1l2905 0A52                            i1l2841 0948  
                          i1l2833 092E                            i1l2825 08FF                            i1l2817 08DF  
                          i1l2809 08CF                            i1l2753 0851                            i1l2761 0861  
                          i1l2745 0841                            i1l3625 1B55                            i1l3369 142E  
                          i1l3553 1652                            i1l3545 1629                            i1l3537 1600  
                          i1l3529 15DA                            i1l2665 1C59                            i1l2737 1E67  
                          i1l3561 101D                            i1l3641 0715                            i1l3473 0F25  
                          i1l3465 0F06                            i1l3457 0EED                            i1l3449 0EB6  
                          i1l3393 0DA0                            i1l3385 0D88                            i1l3377 0D73  
                          i1l2931 0AB1                            i1l2923 0AA5                            i1l2915 0A71  
                          i1l2851 0971                            i1l2843 094D                            i1l2835 092F  
                          i1l2827 091F                            i1l2819 08E3                            i1l2771 087B  
                          i1l2763 0869                            i1l2755 0856                            i1l2747 0847  
                          i1l3627 1B58                            i1l3555 1653                            i1l3547 1633  
                          i1l3539 1610                            i1l2667 1C5D                            i1l2739 1E69  
                          i1l3571 1058                            i1l3563 1025                            i1l3651 0792  
                          i1l3643 0730                            i1l3635 06E9                            i1l3491 0F8C  
                          i1l3483 0F58                            i1l3475 0F28                            i1l3467 0F09  
                          i1l3459 0EF5                            i1l3395 0DA7                            i1l3387 0D92  
                          i1l3379 0D79                            i1l3619 12C9                            i1l2933 0ABC  
                          i1l2925 0AAA                            i1l2917 0A8F                            i1l2909 0A5A  
                          i1l2861 0985                            i1l2853 0975                            i1l2837 0938  
                          i1l2829 0928                            i1l2781 0892                            i1l2773 087F  
                          i1l2765 086E                            i1l2757 085E                            i1l2749 084B  
                          i1l3549 1649                            i1l2669 1C6C                            i1l2941 0054  
                          i1l3581 131F                            i1l3573 105C                            i1l3653 07B1  
                          i1l3637 0704                            i1l3485 0F5F                            i1l3493 0F94  
                          i1l3477 0F2C                            i1l3469 0F17                            i1l3397 0DB1  
                          i1l3389 0D94                            i1l2935 0AC0                            i1l2927 0AAB  
                          i1l2919 0A98                            i1l2871 09ED                            i1l2863 098E  
                          i1l2855 097E                            i1l2847 0956                            i1l2839 093C  
                          i1l2791 08AB                            i1l2783 0893                            i1l2775 0880  
                          i1l2767 0874                            i1l2759 085F                            i1l3911 1D9C  
                          i1l2951 006B                            i1l2943 0058                            i1l3583 137F  
                          i1l3575 105D                            i1l3567 102E                            i1l3559 1002  
                          i1l3647 0741                            i1l3495 0FA3                            i1l3487 0F6F  
                          i1l3479 0F4E                            i1l3399 0DB7                            i1l3591 126D  
                          i1l2929 0AAF                            i1l2873 09F2                            i1l2857 0980  
                          i1l2849 096D                            i1l2865 0993                            i1l2793 08AF  
                          i1l2777 0885                            i1l2785 0895                            i1l2769 0875  
                          i1l3921 1DC2                            i1l3913 1DA3                            i1l3905 1D91  
                          i1l2961 0084                            i1l2953 006D                            i1l2945 0059  
                          i1l2937 0047                            i1l3585 1385                            i1l3569 104B  
                          i1l3649 078C                            i1l3497 0FB3                            i1l3489 0F73  
                          i1l2891 0A3A                            i1l2883 0A25                            i1l2867 09A9  
                          i1l2875 0A01                            i1l2859 0984                            i1l2795 08B3  
                          i1l2787 08A3                            i1l2779 088A                            i1l3931 1C2B  
                          i1l3923 1DC3                            i1l3915 1DA7                            i1l3907 1D93  
                          i1l2971 0099                            i1l2963 0085                            i1l2955 0075  
                          i1l2947 005E                            i1l2939 004E                            i1l3579 12F0  
                          i1l3499 0FC2                            i1l3595 1278                            i1l2893 0A3C  
                          i1l2885 0A2E                            i1l2877 0A17                            i1l2869 09E7  
                          u300_25 0987                            i1l2797 08B7                            i1l2789 08A7  
                          i1l3933 1C2F                            i1l3925 1DCA                            i1l3917 1DAB  
                          i1l3909 1D99                            i1l2981 00B4                            i1l2973 00A1  
                          i1l2965 008A                            i1l2957 007A                            i1l2949 0063  
                          i1l3597 1291                            i1l3589 125E                            i1l3941 03A8  
                          i1l2895 0A41                            i1l2887 0A32                            i1l2879 0A1C  
                          i1l2799 08BB                            i1l3919 1DBC                            i1l3927 1DD0  
                          i1l2991 0136                            i1l2983 00C4                            i1l2975 00A6  
                          i1l2967 008F                            i1l2959 0080                            i1l3599 1294  
                          i1l3951 03C6                            i1l3943 03AC                            u301_20 09A9  
                          i1l2889 0A37                            i1l2897 0A43                            u301_21 09A8  
                          i1l2993 0152                            i1l2985 00D1                            i1l2977 00AB  
                          i1l2969 0097                            i1l3937 1B2C                            i1l3961 03E9  
                          i1l3953 03D1                            i1l3945 03B7                            u301_23 09A5  
                          i1l2899 0A47                            i1l2995 016E                            i1l2987 00EE  
                          i1l3939 1B30                            i1l3963 03EC                            i1l3955 03D5  
                          i1l3971 03FD                            i1l3947 03BC                            i1l2997 0177  
                          i1l2989 010A                            i1l3981 052C                            i1l3973 0403  
                          i1l3965 03F0                            i1l3957 03DB                            i1l3949 03C0  
                          i1l2999 0187                            i1l3983 0577                            i1l3975 040E  
                          i1l3967 03F4                            i1l3959 03E6                            u310_20 0A41  
                          u310_21 0A40                            u302_21 09C0                            i1l3985 05E9  
                          i1l3977 04AC                            i1l3969 03FC                            u302_22 09C1  
                          u302_23 09C6                            i1l3987 0676                            i1l3979 04DF  
                          u302_24 09C7                            u302_25 09CC                            i1l3989 06D9  
                          u302_26 09CD                            u311_20 0A47                            u303_20 09D4  
                          u311_21 0A46                            u303_21 09D5                            u303_22 09DA  
                          u303_23 09DB                            u320_20 0A9D                            u312_20 0A4C  
                          u304_20 09F2                            u400_20 0D88                            u320_21 0A9C  
                          u312_21 0A4B                            u304_21 09F1                            u400_21 0D87  
                          u321_20 0AAA                            u313_20 0A52                            u305_20 0A17  
                          u401_20 0DB7                            u321_21 0AA9                            u313_21 0A51  
                          u305_21 0A16                            u401_21 0DB6                            u322_20 0AAF  
                          u314_20 0A59                            u306_20 0A1C                            u330_20 00A6  
                          u402_20 0DC1                            u322_21 0AAE                            u314_21 0A58  
                          u306_21 0A1B                            u330_21 00A5                            u402_21 0DC0  
                          u410_25 0E8A                            u323_20 0AC0                            u315_20 0A5F  
                          u331_20 00AB                            u411_20 0EB6                            u403_20 0DC6  
                          u323_21 0ABF                            u315_21 0A5E                            u331_21 00AA  
                          u411_21 0EB5                            u403_21 0DC5                            u307_25 0A27  
                          u411_25 0EB2                            u316_20 0A71                            u308_20 0A32  
                          u324_20 0058                            u420_20 0F4E                            u412_20 0EDB  
                          u404_20 0DE6                            u500_20 03AC                            u316_21 0A70  
                          u308_21 0A31                            u340_21 01F9                            u332_21 00FC  
                          u324_21 0057                            u420_21 0F4D                            u404_21 0DE5  
                          u500_21 03AB                            u340_22 0200                            u332_22 0103  
                          u340_23 0207                            u332_23 010A                            u412_25 0EC4  
                          u412_26 0EC7                            u412_27 0ECE                            u317_20 0A80  
                          u309_20 0A37                            u325_20 005E                            u421_20 0F57  
                          u413_20 0EED                            u412_28 0ED1                            u405_20 0E0A  
                          u501_20 03C0                            u309_21 0A36                            u341_21 0226  
                          u333_21 0118                            u325_21 005D                            u421_21 0F56  
                          u413_21 0EEC                            u412_29 0ED8                            u405_21 0E09  
                          u501_21 03BF                            u341_22 022D                            u333_22 011F  
                          u341_23 0234                            u333_23 0126                            u317_25 0A7B  
                          u318_20 0A8F                            u430_20 15CC                            u326_20 0063  
                          u422_20 0F5F                            u414_20 0EF5                            u406_20 0E66  
                          u502_20 03C6                            u318_21 0A8E                            u430_21 15CB  
                          u342_21 0253                            u334_21 0144                            u326_21 0062  
                          u422_21 0F5E                            u414_21 0EF4                            u406_21 0E65  
                          u502_21 03C5                            u342_22 025A                            u334_22 014B  
                          u342_23 0261                            u334_23 0152                            u350_25 02E6  
                          u319_20 0A98                            u351_20 02F7                            u343_20 027D  
                          u327_20 0084                            u423_20 0F73                            u503_20 03D1  
                          u319_21 0A97                            u351_21 02F6                            u335_21 0160  
                          u327_21 0083                            u423_21 0F72                            u503_21 03D0  
                          u335_22 0167                            u335_23 016E                            u431_25 15DF  
                          u343_25 0278                            u415_25 0EF9                            u407_25 0E6A  
                          u280_20 0856                            u440_20 164E                            u432_20 15ED  
                          u256_20 1C5D                            u360_20 0393                            u352_20 02FC  
                          u328_20 008A                            u424_20 0F82                            u416_20 0F06  
                          u504_20 03DB                            u280_21 0855                            u440_21 164D  
                          u432_21 15EC                            u256_21 1C5C                            u360_21 0392  
                          u352_21 02FB                            u344_21 0289                            u328_21 0089  
                          u416_21 0F05                            u504_21 03DA                            u344_22 0290  
                          u344_23 0297                            u336_25 0170                            u424_25 0F7D  
                          u408_25 0E77                            u281_20 0874                            u441_20 1652  
                          u353_20 0310                            u345_20 02A5                            u329_20 008F  
                          u425_20 0FA3                            u409_20 0E84                            u505_20 03E6  
                          u281_21 0873                            u441_21 1651                            u353_21 030F  
                          u337_21 0196                            u329_21 008E                            u425_21 0FA2  
                          u409_21 0E83                            u505_21 03E5                            u337_22 019D  
                          u337_23 01A4                            u433_25 1601                            u257_25 1C64  
                          u345_25 02A0                            u425_25 0F9F                            u417_25 0F0C  
                          u290_20 091F                            u282_20 087F                            u434_20 160F  
                          u258_20 1C71                            u354_20 0317                            u442_20 101D  
                          u426_20 0FC2                            u418_20 0F25                            u506_20 03F0  
                          u290_21 091E                            u282_21 087E                            u434_21 160E  
                          u258_21 1C70                            u354_21 0316                            u346_21 02B1  
                          u338_21 01C3                            u442_21 101C                            u426_21 0FC1  
                          u418_21 0F24                            u506_21 03EF                            u346_22 02B8  
                          u338_22 01CA                            u346_23 02BF                            u338_23 01D1  
                          u426_25 0FBE                            u450_25 12AD                            u291_20 092E  
                          u283_20 0885                            u355_20 031D                            u275_20 1E31  
                          u427_20 0FE1                            u419_20 0F2C                            u451_20 12C1  
                          u507_20 03F4                            u291_21 092D                            u283_21 0884  
                          u355_21 031C                            u275_21 1E30                            u427_21 0FE0  
                          u419_21 0F2B                            u451_21 12C0                            u507_21 03F3  
                          u435_25 1614                            u347_25 02C1                            u339_25 01D3  
                          u443_25 12F5                            u284_20 088A                            u436_20 161F  
                          u428_20 15A8                            u356_20 032F                            u276_20 1E4D  
                          u452_20 12C8                            u508_20 0403                            u284_21 0889  
                          u436_21 161E                            u428_21 15A7                            u356_21 032E  
                          u276_21 1E4C                            u452_21 12C7                            u508_21 0402  
                          u292_25 0931                            u348_25 02D8                            u444_25 1328  
                          u293_20 0944                            u285_20 08A3                            u437_20 1625  
                          u429_20 15AC                            u357_20 033E                            u349_20 02E3  
                          u445_20 1385                            u277_20 1E67                            u509_20 040E  
                          u293_21 0943                            u285_21 08A2                            u437_21 1624  
                          u429_21 15AB                            u349_21 02E2                            u445_21 1384  
                          u277_21 1E66                            u509_21 040D                            u357_25 0339  
                          u277_25 1E63                            u453_25 12CD                            u294_20 0948  
                          u286_20 08A7                            u278_20 084B                            u438_20 1629  
                          u358_20 035B                            u454_20 12DD                            u446_20 126D  
                          u294_21 0947                            u286_21 08A6                            u278_21 084A  
                          u438_21 1628                            u358_21 035A                            u454_21 12DC  
                          u446_21 126C                            u358_25 0357                            u295_20 094D  
                          u287_20 08FF                            u279_20 0851                            u391_20 13A2  
                          u439_20 163E                            u359_20 0375                            u455_20 12E2  
                          u447_20 1288                            u295_21 094C                            u287_21 08FE  
                          u279_21 0850                            u391_21 13A1                            u359_21 0374  
                          u455_21 12E1                            u287_25 08FB                            u439_25 1639  
                          u359_25 0371                            u447_25 1283                            u288_20 090A  
                          u392_20 13BE                            u456_20 0704                            u448_20 12A4  
                          u296_21 095F                            u288_21 0908                            u392_21 13BD  
                          u456_21 0703                            u448_21 12A3                            u296_22 0966  
                          u296_23 096D                            u297_20 0971                            u289_20 090B  
                          u393_20 13CA                            u457_20 0730                            u449_20 12AB  
                          u297_21 0970                            u393_21 13C9                            u457_21 072F  
                          u449_21 12AA                            u298_20 0975                            u298_21 0974  
                          u394_21 13D9                            u394_22 13DA                            u394_23 13DF  
                          u394_24 13E0                            u394_25 13E5                            u394_26 13E6  
                          u299_20 0984                            u395_20 13F2                            u299_21 0983  
                          u395_21 13F1                            u396_21 1401                            u396_22 1402  
                          u396_23 1407                            u396_24 1408                            u396_25 140D  
                          u396_26 140E                            u493_20 1D99                            u397_20 142C  
                          u493_21 1D98                            u397_21 142B                            u397_25 1428  
                          u398_20 0D79                            u398_21 0D78                            u494_25 1D9D  
                          u495_20 1DAB                            u399_20 0D83                            u495_21 1DAA  
                          u399_21 0D82                            u496_25 1DAC                            u497_20 1DBC  
                          u497_21 1DBB                            u497_25 1DB8                            u498_25 1DC4  
                          u499_20 1DD0                            u499_21 1DCF                     calculateLux@b 01B2  
                   calculateLux@m 01B4                            _SPBRGH 009A                            _SSPADD 0093  
                          _SSPCON 0014                            _SSPBUF 0013                  __end_of___xxtofl 165C  
                 ?_pwm_duty_cycle 0190          _I2C_Master_RepeatedStart 1B4C                            ___flge 138E  
                          ___bmul 1BB4                            ___fleq 1E1D                            ___lmul 1DD5  
                       ??___fladd 0032                         ??___fldiv 0060                         ??___flmul 0046  
                       ??___flsub 007E                         ??___fltol 0194                         ??___lldiv 0198  
                       ??_bcd_dec 0194                         ??___lwdiv 0074                      pulse_step@bt 0190  
                          _lowCH0 01DD                            _lowCH1 01DB                    ?_adc_ch_switch 0070  
               __end_of_USART_set 2000                 __end_ofi1___fltol 12F0                      _calculateLux 0AC2  
                __end_of_motor_dc 1CA5             calculateLux@broadband 019E                            saved_w 007E  
                 i1___fltol@sign1 006D                  __end_of_pwm_init 1D91                   pwm_init@channel 0192  
                      ___flge@ff1 0070                        ___flge@ff2 0074                      ___xxtofl@arg 0026  
                    ___xxtofl@exp 0025                      ___xxtofl@val 0079                        ___fleq@ff1 0070  
                      ___fleq@ff2 0074                  __end_oflog@coeff 182A           __end_of__initialization 0043  
                    eval_poly@res 0064                        ___fltol@f1 0190               ___bmul@multiplicand 0190  
                  __pcstackCOMMON 0070                      __pidataBANK1 1B6B                      __pidataBANK3 1B84  
                   __end_of_frexp 105E                     __end_of_slave 06E9                     __end_of_servo 1D13  
                   __end_of_setup 125E                         ?_LUX_read 0070                         ?_RTC_read 0070  
                  _OPTION_REGbits 0081                    adc_init@adc_cs 0194                           ??_frexp 007C  
                         ??_slave 00C0                           ??_servo 0196                           ??_setup 01AE  
                      __pbssBANK1 00D8                        __pbssBANK3 01D0                 __end_of__Umul8_16 1C76  
                      __pmaintext 1F29                           ?___flge 0070                           ?___bmul 0190  
                         ?___fleq 0070                           ?___lmul 0190                        __pintentry 0004  
                         _CCP1CON 0017                           _CCP2CON 001D                   ??_adc_ch_switch 0190  
                  ___lmul@product 0199                         ?_adc_init 0190                         ?_adc_read 0070  
                      ??_LUX_read 01C6                        ??_RTC_read 0198                         ?___xxtofl 0079  
                  calculateLux@ir 01A0                  pulse_step@signal 0192                           _SSPCON2 0091  
                         _SSPSTAT 0094                        __stringtab 1800                      ??_USART_send 0190  
                       ?_motor_dc 019B                           ___fladd 083A                      ??_LUX_config 0192  
                         ___fldiv 0D60                           ___flmul 0047                           ___flsub 1C2B  
                         ___fltol 105E                           ___lldiv 1EC1                         ?_pwm_init 0070  
                         _bcd_dec 1BCB                           ___lwdiv 1D91                 __end_of_eval_poly 138E  
                         _highCH0 01DC                           _highCH1 01DA                        ??_adc_init 0192  
                      ??_adc_read 0072                           __ptext1 11DC                           __ptext2 07F9  
                         __ptext3 115A                           __ptext4 1D50                           __ptext5 1D13  
                         __ptext6 10DA                           __ptext7 1F93                           __ptext8 0800  
                         __ptext9 1CD9                         _T2CONbits 0012                        ??___xxtofl 0020  
                   i1_tmr0_reload 1B2C                           clrloop0 1B33                __end_of_USART_send 1BA1  
            end_of_initialization 0043                 __end_of_tmr0_init 11DC                        _slave$1780 00C8  
                      _slave$1781 00CC                        _slave$1782 00D0                        _slave$1783 00D4  
      ??_I2C_Master_RepeatedStart 0190                __end_of_LUX_config 1EC1                  ??_pwm_duty_cycle 0192  
                 ___lldiv@divisor 0190                   ___lldiv@counter 019D                        ??_motor_dc 019D  
                       _RCSTAbits 0018                  I2C_Master_Init@c 019E                  I2C_Master_Read@a 0190  
                      ??_pwm_init 0190                  calculateLux@temp 01AE                         _PORTAbits 0005  
                       _PORTBbits 0006                         _PORTDbits 0008                       ___fladd@grs 003D  
                   ___xxtofl@sign 0024                         _TRISAbits 0085                         _TRISBbits 0086  
                       _TRISCbits 0087                         _TRISDbits 0088                         _USART_set 1F93  
                  ?i1_tmr0_reload 0070                       ___fldiv@grs 00A7                         i1___fltol 125E  
                     ___fldiv@rem 00A0                        _pulse_step 1BE7                       ___flmul@grs 004C  
                     _CCP1CONbits 0017                       _CCP2CONbits 001D                         _TXSTAbits 0098  
                  __end_of___flge 1430                    __end_of___bmul 1BCB                    __end_of___fleq 1E6B  
                  __end_of___lmul 1E1D                 adc_init@vref_plus 0190                       _BAUDCTLbits 0187  
             start_initialization 0015                        eval_poly@d 005C                        eval_poly@n 005D  
                      eval_poly@x 0058                        ?_USART_set 019E                       __end_of_map 15A0  
                     __end_of_log 07F9                        ?i1___fltol 00AD                    USART_send@data 0190  
                      frexp@value 0020                 ??_I2C_Master_Init 01A2                 ??_I2C_Master_Read 0192  
               ??_I2C_Master_Wait 0190                 ??_I2C_Master_Stop 0190                 USART_set@baudrate 019E  
            calculateLux@channel0 01BE              calculateLux@channel1 01BA                          ??___flge 0078  
                        ??___bmul 0191                          ??___fleq 0078                          ??___lmul 0198  
                      init_fetch0 1BA1                         __Umul8_16 1C4F                       __pdataBANK1 00E4  
                     __pdataBANK3 01E1                         ___fladd@a 002E                         ___fladd@b 002A  
                       ___fldiv@a 0058                         ___fldiv@b 005C                   ??i1_tmr0_reload 0070  
                       ___flmul@a 0042                         ___flmul@b 003E                         ___flsub@a 0065  
                       ___flsub@b 0069                         ___latbits 0002                     __pcstackBANK0 0020  
                   __pcstackBANK1 00A0                     __pcstackBANK3 0190                     ??_int_osc_MHz 0190  
                     ?_pulse_step 0190                  _I2C_Master_Start 1B3A                  _I2C_Master_Write 1B5F  
                       bcd_dec@no 0197                  ___lwdiv@dividend 0072          pwm_duty_cycle@duty_cycle 0190  
                        ?___fladd 002A                          ?___fldiv 0058                          ?___flmul 003E  
                        ?___flsub 0065                          ?___fltol 0190                          ?___lldiv 0190  
                        ?_bcd_dec 0070                        ?__Umul8_16 0070                          ?___lwdiv 0070  
                       __pstrings 1800             __end_of_adc_ch_switch 14E7                         _eval_poly 12F0  
                   ??_tmr0_reload 0190                       ??_USART_set 01A2                       ??i1___fltol 00B1  
                ___lwdiv@quotient 0075                 interrupt_function 0004                          _IOCBbits 0096  
                       clear_ram0 1B32                         _tmr0_init 115A                          _PIE1bits 008C  
             __end_of_int_osc_MHz 1D50                          _OLD_TEMP 01E5                          _PIR1bits 000C  
                        _TEMP_POT 00E2                   calculateLux@lux 01A6                tmr0_init@prescaler 0192  
                      _ADCON0bits 001F                          _LUX_read 1723                       __stringbase 1805  
                      _ADCON1bits 009F                          _RTC_read 165C                     ?_calculateLux 019E  
                        _WPUBbits 0095                        ?_eval_poly 0058               I2C_Master_Read@temp 0194  
               ___lmul@multiplier 0190               __end_of_tmr0_reload 07FF                         frexp@eptr 0024  
                      ?_tmr0_init 0070               calculateLux@chScale 01B6                       ??__Umul8_16 0072  
       ?_I2C_Master_RepeatedStart 0070                __end_of__stringtab 1806                          _adc_init 10DA  
                        _adc_read 1B55                    ??_calculateLux 01A2                   _I2C_Master_Init 0800  
                 _I2C_Master_Read 1CA5                          ___xxtofl 15A0                   _I2C_Master_Wait 1B77  
                 _I2C_Master_Stop 1B43                   ___lwdiv@divisor 0070                   ___lwdiv@counter 0077  
                        __ptext10 1C09                          __ptext11 1BE7                          __ptext20 1DD5  
                        __ptext12 1C76                          __ptext21 1EC1                          __ptext13 1430  
                        __ptext30 03A8                          __ptext22 1B92                          __ptext14 105E  
                        __ptext31 1B2C                          __ptext23 1B4C                          __ptext15 165C  
                        __ptext40 1C4F                          __ptext32 14E7                          __ptext24 1CA5  
                        __ptext16 1BCB                          __ptext41 15A0                          __ptext33 125E  
                        __ptext25 1E6B                          __ptext17 1BB4                          __ptext42 138E  
                        __ptext34 0D60                          __ptext26 1B5F                          __ptext18 1723  
                        __ptext43 1B55                          __ptext35 06E9                          __ptext27 1B43  
                        __ptext19 0AC2                          __ptext44 1D91                          __ptext36 1002  
                        __ptext28 1B3A                          __ptext45 1C2B                          __ptext37 1E1D  
                        __ptext29 1B77                          __ptext46 083A                          __ptext38 12F0  
                        __ptext39 0047                       _int_osc_MHz 1D13                          _last_LUX 01E9  
                        _last_min 01EE                          _last_hrs 01ED                          _last_mov 01E7  
                        _motor_dc 1C76                          _pwm_init 1D50                          log@coeff 1806  
        __end_of_I2C_Master_Start 1B43          __end_of_I2C_Master_Write 1B6B                        _INTCONbits 000B  
                     ??_eval_poly 005F                       _tmr0_reload 07F9                          init_ram0 1BA5  
                    ??_pulse_step 0194                calculateLux@ratio1 01AA                          intlevel1 0000  
                ___lldiv@dividend 0194                       ??_tmr0_init 0190                         stringcode 1800  
                    motor_dc@temp 019B                        _OSCCONbits 008F                          servo@mov 0194  
         __end_of_I2C_Master_Init 083A           __end_of_I2C_Master_Read 1CD9           __end_of_I2C_Master_Wait 1B84  
         __end_of_I2C_Master_Stop 1B4C                __end_of_pulse_step 1C09                 calculateLux@ratio 01C2  
          __Umul8_16@multiplicand 0070                  ___lldiv@quotient 0199                 I2C_Master_Write@d 0190  
                        stringdir 1800                          stringtab 1800             __end_ofi1_tmr0_reload 1B32  
                     _SSPCON2bits 0091                     ___fladd@signs 003A                      ___fladd@aexp 003B  
                    ___fladd@bexp 003C              __Umul8_16@multiplier 0078              __end_of_calculateLux 0D60  
               __Umul8_16@product 0074                        _USART_send 1B92  
